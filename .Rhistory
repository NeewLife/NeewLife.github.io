setwd("C:/Users/Administor/Desktop/blog/source")
install(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
setwd("C:/Users/Administor/Desktop/R_lecture/data")
str(mpg1)
data2 <- mpg1 %>%
select(drv,cty,hwy) %>%
filter(drv == "f")
```{r}
knitr::opts_chunk$set(echo = TRUE)
str(mpg1)
data2 <- mpg1 %>%
select(drv,cty,hwy) %>%
filter(drv == "f")
```{r}
str(mpg1)
data2 <- mpg1 %>%
select(drv,cty,hwy) %>%
filter(drv == "f")
```{r}
str(mpg1)
data2 <- mpg1 %>%
select(drv,cty,hwy) %>%
filter(drv == "f")
-dplyr 라이브러리 불러오기
install.packages("dplyr")
library(dplyr)
-dplyr 라이브러리 불러오기
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
str(mpg1)
data2 <- mpg1 %>%
select(drv,cty,hwy) %>%
filter(drv == "f")
str(mpg1)
data2 <- mpg1 %>%
select(drv,cty,hwy) %>%
filter(drv == "f")
mpg1 <- read(mpg1.csv)
str(mpg1)
data2 <- mpg1 %>%
select(drv,cty,hwy) %>%
filter(drv == "f")
setwd("C:/Users/Administor/Desktop/R_lecture/data")
mpg1 <- read(mpg1.csv)
str(mpg1)
data2 <- mpg1 %>%
select(drv,cty,hwy) %>%
filter(drv == "f")
mpg1 <- read("mpg1.csv")
str(mpg1)
data2 <- mpg1 %>%
select(drv,cty,hwy) %>%
filter(drv == "f")
mpg1 <- read("mpg1.csv")
str(mpg1)
data2 <- mpg1 %>%
select(drv,cty,hwy) %>%
filter(drv == "f")
mpg1 <- read("mpg1.csv")
str(mpg1)
data2 <- mpg1 %>%
select(drv,cty,hwy) %>%
filter(drv == "f")
mpg1 <- read.csv("mpg1.csv")
str(mpg1)
data2 <- mpg1 %>%
select(drv,cty,hwy) %>%
filter(drv == "f")
mpg1 <- read.csv("mpg1.csv")
mpg1 <- read.csv("mpg1.csv")
mpg1 <- read.csv("../R_lecture/mpg1.csv")
mpg1 <- read.csv("C:\Users\Administor\Desktop\R_lecture\data\mpg1.csv")
mpg1 <- read.csv("..\R_lecture\data\mpg1.csv")
mpg1 <- read.csv("../R_lecture/data/mpg1.csv")
knitr::opts_chunk$set(root.dir = )
knitr::opts_chunk$set(echo=TRUE )
```{r}
setwd(gsub(pattern = '/blog/data', replacement = '', x = getwd()))
mpg1 <- read.csv("../R_lecture/data/mpg1.csv")
getwd()
```{r}
setwd(gsub(pattern = '/blog/data', replacement = '', x = getwd()))
mpg1 <- read.csv("../R_lecture/data/mpg1.csv")
str(mpg1)
data2 <- mpg1 %>%
select(drv,cty,hwy) %>%
filter(drv == "f")
```
getwd()
getwd()
setwd(../blog/data)
setwd(/blog/data)
setwd(\blog\data)
setwd(../../blog/data)
setwd(/blog/data)
setwd("/blog/data")
setwd("/blog/data")
setwd("C:/Users/Administor/Desktop")
setwd("/blog/data")
setwd("~/")
mpg1 <- read.csv("../R_lecture/data/mpg1.csv")
setwd("~/blog/data")
opts_knit$set(root.dir = "~/blog/data")
require("knit")
```{r setup, include=FALSE, echo=FALSE}
require("knit")
opts_knit$set(root.dir = "~/blog/data")
```{r setup, include=FALSE, echo=FALSE}
knitr::opts_knit$set(root.dir = "C:/Users/Laura/Documents/RStudio/dsc520")
getwd()
knitr::opts_knit$set(root.dir = "..")
getwd()
knitr::opts_chunk$set(echo=TRUE )
mpg1 <- read.csv("/R_lecture/data/mpg1.csv")
```{r}
mpg1 <- read.csv("/R_lecture/data/mpg1.csv")
str(mpg1)
getwd()
mpg1 <- read.csv("../R_lecture/data/mpg1.csv")
setwd("C:/Users/Administor/Desktop/R_lecture/data")
mpg1 <- read.csv("/R_lecture/data/mpg1.csv")
mpg1 <- read.csv("mpg1.csv")
getwd()
()
getwd()
mpg1 <- read.csv("mpg1.csv")
str(mpg1)
table(mpg1$trans)
class(table(mpg1$trans))
table(mpg1$trans)
iris %>%
filter(Species == "setosa") %>%
select(Sepal.Length, Sepal.Width) %>%
filter(Sepal.Length > 5.0) %>%
mutate(total = Sepal.Length + Sepal.Width) %>% glimpse()
knitr::opts_chunk$set(echo = TRUE)
mpg1<- read.csv("mpg1.csv", stringsAsFactors=F)  #문자형 벡터로 출력
str(mpg1)
getwd()
```{r}
mpg1<- read.csv("mpg1.csv", stringsAsFactors=F)  #문자형 벡터로 출력
str(mpg1)
```
getwd()
prop.table(table(mpg1$manufacturer))
prop.table(mpg$manufacturer) #table안에table 안 넣으면 에러
prop.table(mpg1$manufacturer) #table안에table 안 넣으면 에러
knitr::opts_chunk$set(echo = TRUE)
a<-1
a
class(factor_location_vector)
locaiton_vector <- c("서울", "인천", "부산")
factor_location_vector <- factor(locaiton_vector)
factor_location_vector
class(factor_location_vector)
locaiton_vector <- c("서울", "인천", "부산")
factor_location_vector <- factor(locaiton_vector)
factor_location_vector
class(factor_location_vector)
temperature_factor <- c("기온높음",
"기온보통",
"기온낮음",
"기온높음",
"기온보통",
"기온보통")
temperature_factor <- c("기온높음",
"기온보통",
"기온낮음",
"기온높음",
"기온보통",
"기온보통")
temperature_factor
factor_temperature_factor <- factor(temperature_factor,
ordered = TRUE,
levels  = c("기온보통",
"기온낮음",
"기온높음"))
temperature_factor <- c("기온높음",
"기온보통",
"기온낮음",
"기온높음",
"기온보통",
"기온보통")
temperature_factor
factor_temperature_factor <- factor(temperature_factor,
ordered = TRUE,
levels  = c("기온보통",
"기온낮음",
"기온높음"))
temperature_factor <- c("기온높음",
"기온보통",
"기온낮음",
"기온높음",
"기온보통",
"기온보통")
temperature_factor
factor_temperature_factor <- factor(temperature_factor,
ordered = TRUE,
levels  = c("기온보통",
"기온낮음",
"기온높음"))
temperature_factor <- c("기온높음",
"기온보통",
"기온낮음",
"기온높음",
"기온보통",
"기온보통")
temperature_factor
factor_temperature_factor <- factor(temperature_factor,
ordered = TRUE,
levels  = c("기온보통",
"기온낮음",
"기온높음"))
temperature_factor <- c("기온높음",
"기온보통",
"기온낮음",
"기온높음",
"기온보통",
"기온보통")
temperature_factor
factor_temperature_factor <- factor(temperature_factor,
ordered = TRUE,
levels  = c("기온보통",
"기온낮음",
"기온높음"))
temperature_factor
factor_temperature_factor <- factor(temperature_factor,
ordered = TRUE,
levels  = c("기온보통",
"기온낮음",
"기온높음"))
temp = read.csv("exam.csv")
temp = read.csv("exam.csv")
getwd()
temp = read.csv("exam.csv")
getwd()
setwd("C:/Users/Administor/Desktop/R_lecture/data")
getwd()
setwd("C:/Users/Administor/Desktop/R_lecture/data")
getwd()
getwd()
temp = read.csv("exam.csv")
temp = read.csv("Desktop/dataset/exam.csv") #현재 디렉토리 꼭 확인하기
temp = read.csv("C:\Users\Administor\Desktop\R_lecture\data\exam.csv") #현재 디렉토리 꼭 확인하기
temp = read.csv("C:/Users/Administor/Desktop/R_lecture/data/exam.csv") #현재 디렉토리 꼭 확인하기
class(exam$sex)
no = c(1,2,3,4,5)
sex = c("male", "female", "male","male", "female")
korean = c(87,92,95,81,87)
exam = data.frame(no, sex, korean)
exam
exam$no[1]
exam$sex[2]
mean(mtcars$mpg)   #mtcars$mpg의 평균
"+" : 덧셈
prop.table(table(mpg1$manufacturer))   #함수 지정이 귀찮다면 이렇게 바로 써도 된다.
# prop.table(mpg1$manufacturer) <-- 에러
# table안에table 안 넣으면 에러
class(exam$sex)
class(exam$no)
str(exam)
mpg1 %>% filter(cty==max(cty))      #cty의 최댓값 함수를 바로 대입하거나,
max(mpg1$cty)                       #cty의 최댓값을 구한 뒤
mpg1 %>% filter(cty==35)            #cty의 최댓값이 35일 때, cty의 값이 35인 행을 추출한다.
write.csv(x = exam, file = “temp.csv”) :    #exam의 데이터를 temp.csv로 내보내기
write.csv(x = exam, file = "temp.csv") :    #exam의 데이터를 temp.csv로 내보내기
write.csv(x = exam, file = "temp.csv") :    #exam의 데이터를 temp.csv로 내보내기
write.csv(x = exam, file = "temp.csv")     #exam의 데이터를 temp.csv로 내보내기
write.csv(x = exam, file = "temp.csv")     #exam의 데이터를 temp.csv로 내보내기
---
title: "2022-06-20 메모(3장, 4장)"
output:
html_document:
keep_md: true
date: '2022-06-20'
---
getwd()
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r setup, include=FALSE}
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
getwd()
# 3장
## 벡터의 종류
- 숫자형, 정수형, 문자형, 범주형, 논리형 벡터가 존재한다.
- 범주형 벡터 : 행렬과 비슷한 형태, 연산은 안된다.
ex) 성별:남자, 여자 / 연령대:청년, 중년, 고령 의 범주를 만들어서 남자청년, 여자중년 등의 값을 만들어내는 벡터
- 논리형 벡터 : 참(TRUE), 거짓(FALSE)이라는 논리값으로 구성된 데이터. 논리값은 '," 없이 대문자로 쓴다.
setwd("C:/Users/Administor/Desktop/R_lecture/source/rmd/rmd_0620")
getwd()  #현재 디렉토리 꼭 확인하기
getwd()  #현재 디렉토리 꼭 확인하기
getwd()  #현재 디렉토리 꼭 확인하기
getwd()  #현재 디렉토리 꼭 확인하기
setwd("C:/Users/Administor/Desktop/R_lecture/data")
- stringsAsFactors -> 범주형 벡터로 바꿀것인가?
```{r}
mpg1<- read.csv("mpg1.csv", stringsAsFactors=F)  #문자형 벡터로 출력, T이면 범주형 벡터로 출력
str(mpg1)
```
getwd()
knitr::opts_chunk$set(echo = TRUE)
mpg1<- read.csv("mpg1.csv", stringsAsFactors=F)  #문자형 벡터로 출력, T이면 범주형 벡터로 출력
- stringsAsFactors -> 범주형 벡터로 바꿀것인가?
```{r}
mpg1<- read.csv("mpg1.csv", stringsAsFactors=F)  #문자형 벡터로 출력, T이면 범주형 벡터로 출력
str(mpg1)
```
getwd()
