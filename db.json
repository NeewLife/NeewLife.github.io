{"meta":{"version":1,"warehouse":"4.0.1"},"models":{"Asset":[{"_id":"source/day01.R","path":"day01.R","modified":0,"renderable":0},{"_id":"source/day01.Rmd","path":"day01.Rmd","modified":0,"renderable":0},{"_id":"source/images/0620/Untitled 1.png","path":"images/0620/Untitled 1.png","modified":0,"renderable":0},{"_id":"source/images/0620/Untitled 10.png","path":"images/0620/Untitled 10.png","modified":0,"renderable":0},{"_id":"source/images/0620/Untitled 11.png","path":"images/0620/Untitled 11.png","modified":0,"renderable":0},{"_id":"source/images/0620/Untitled 12.png","path":"images/0620/Untitled 12.png","modified":0,"renderable":0},{"_id":"source/images/0620/Untitled 13.png","path":"images/0620/Untitled 13.png","modified":0,"renderable":0},{"_id":"source/images/0620/Untitled 14.png","path":"images/0620/Untitled 14.png","modified":0,"renderable":0},{"_id":"source/images/0620/Untitled 16.png","path":"images/0620/Untitled 16.png","modified":0,"renderable":0},{"_id":"source/images/0620/Untitled 15.png","path":"images/0620/Untitled 15.png","modified":0,"renderable":0},{"_id":"source/images/0620/Untitled 17.png","path":"images/0620/Untitled 17.png","modified":0,"renderable":0},{"_id":"source/images/0620/Untitled 18.png","path":"images/0620/Untitled 18.png","modified":0,"renderable":0},{"_id":"source/images/0620/Untitled 19.png","path":"images/0620/Untitled 19.png","modified":0,"renderable":0},{"_id":"source/images/0620/Untitled 2.png","path":"images/0620/Untitled 2.png","modified":0,"renderable":0},{"_id":"source/images/0620/Untitled 20.png","path":"images/0620/Untitled 20.png","modified":0,"renderable":0},{"_id":"source/images/0620/Untitled 21.png","path":"images/0620/Untitled 21.png","modified":0,"renderable":0},{"_id":"source/images/0620/Untitled 23.png","path":"images/0620/Untitled 23.png","modified":0,"renderable":0},{"_id":"source/images/0620/Untitled 22.png","path":"images/0620/Untitled 22.png","modified":0,"renderable":0},{"_id":"source/images/0620/Untitled 24.png","path":"images/0620/Untitled 24.png","modified":0,"renderable":0},{"_id":"source/images/0620/Untitled 25.png","path":"images/0620/Untitled 25.png","modified":0,"renderable":0},{"_id":"source/images/0620/Untitled 3.png","path":"images/0620/Untitled 3.png","modified":0,"renderable":0},{"_id":"source/images/0620/Untitled 4.png","path":"images/0620/Untitled 4.png","modified":0,"renderable":0},{"_id":"source/images/0620/Untitled 5.png","path":"images/0620/Untitled 5.png","modified":0,"renderable":0},{"_id":"source/images/0620/Untitled 6.png","path":"images/0620/Untitled 6.png","modified":0,"renderable":0},{"_id":"source/images/0620/Untitled 7.png","path":"images/0620/Untitled 7.png","modified":0,"renderable":0},{"_id":"source/images/0620/Untitled 8.png","path":"images/0620/Untitled 8.png","modified":0,"renderable":0},{"_id":"source/images/0620/Untitled 9.png","path":"images/0620/Untitled 9.png","modified":0,"renderable":0},{"_id":"source/images/0620/Untitled.png","path":"images/0620/Untitled.png","modified":0,"renderable":0},{"_id":"source/images/0622/unnamed-chunk-21-1.png","path":"images/0622/unnamed-chunk-21-1.png","modified":0,"renderable":0},{"_id":"source/images/0622/unnamed-chunk-22-1.png","path":"images/0622/unnamed-chunk-22-1.png","modified":0,"renderable":0},{"_id":"source/images/0622/unnamed-chunk-23-1.png","path":"images/0622/unnamed-chunk-23-1.png","modified":0,"renderable":0},{"_id":"source/images/0622/unnamed-chunk-24-1.png","path":"images/0622/unnamed-chunk-24-1.png","modified":0,"renderable":0},{"_id":"source/images/0622/unnamed-chunk-25-1.png","path":"images/0622/unnamed-chunk-25-1.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 1.png","path":"images/0617/Untitled 1.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 10.png","path":"images/0617/Untitled 10.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 11.png","path":"images/0617/Untitled 11.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 12.png","path":"images/0617/Untitled 12.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 13.png","path":"images/0617/Untitled 13.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 14.png","path":"images/0617/Untitled 14.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 15.png","path":"images/0617/Untitled 15.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 16.png","path":"images/0617/Untitled 16.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 17.png","path":"images/0617/Untitled 17.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 18.png","path":"images/0617/Untitled 18.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 19.png","path":"images/0617/Untitled 19.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 2.png","path":"images/0617/Untitled 2.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 20.png","path":"images/0617/Untitled 20.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 21.png","path":"images/0617/Untitled 21.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 22.png","path":"images/0617/Untitled 22.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 23.png","path":"images/0617/Untitled 23.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 24.png","path":"images/0617/Untitled 24.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 25.png","path":"images/0617/Untitled 25.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 26.png","path":"images/0617/Untitled 26.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 27.png","path":"images/0617/Untitled 27.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 28.png","path":"images/0617/Untitled 28.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 29.png","path":"images/0617/Untitled 29.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 3.png","path":"images/0617/Untitled 3.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 30.png","path":"images/0617/Untitled 30.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 31.png","path":"images/0617/Untitled 31.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 32.png","path":"images/0617/Untitled 32.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 34.png","path":"images/0617/Untitled 34.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 36.png","path":"images/0617/Untitled 36.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 33.png","path":"images/0617/Untitled 33.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 37.png","path":"images/0617/Untitled 37.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 35.png","path":"images/0617/Untitled 35.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 38.png","path":"images/0617/Untitled 38.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 39.png","path":"images/0617/Untitled 39.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 4.png","path":"images/0617/Untitled 4.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 40.png","path":"images/0617/Untitled 40.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 41.png","path":"images/0617/Untitled 41.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 5.png","path":"images/0617/Untitled 5.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 42.png","path":"images/0617/Untitled 42.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 6.png","path":"images/0617/Untitled 6.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 8.png","path":"images/0617/Untitled 8.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 9.png","path":"images/0617/Untitled 9.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled.png","path":"images/0617/Untitled.png","modified":0,"renderable":0},{"_id":"source/images/0622_1/unnamed-chunk-10-1.png","path":"images/0622_1/unnamed-chunk-10-1.png","modified":0,"renderable":0},{"_id":"source/images/0617/Untitled 7.png","path":"images/0617/Untitled 7.png","modified":0,"renderable":0},{"_id":"source/images/0622_1/unnamed-chunk-11-1.png","path":"images/0622_1/unnamed-chunk-11-1.png","modified":0,"renderable":0},{"_id":"source/images/0622_1/unnamed-chunk-12-1.png","path":"images/0622_1/unnamed-chunk-12-1.png","modified":0,"renderable":0},{"_id":"source/images/0622_1/unnamed-chunk-13-1.png","path":"images/0622_1/unnamed-chunk-13-1.png","modified":0,"renderable":0},{"_id":"source/images/0622_1/unnamed-chunk-16-1.png","path":"images/0622_1/unnamed-chunk-16-1.png","modified":0,"renderable":0},{"_id":"source/images/0622_1/unnamed-chunk-15-1.png","path":"images/0622_1/unnamed-chunk-15-1.png","modified":0,"renderable":0},{"_id":"source/images/0622_1/unnamed-chunk-17-1.png","path":"images/0622_1/unnamed-chunk-17-1.png","modified":0,"renderable":0},{"_id":"source/images/0622_1/unnamed-chunk-18-1.png","path":"images/0622_1/unnamed-chunk-18-1.png","modified":0,"renderable":0},{"_id":"source/images/0622_1/unnamed-chunk-19-1.png","path":"images/0622_1/unnamed-chunk-19-1.png","modified":0,"renderable":0},{"_id":"source/images/0622_1/unnamed-chunk-20-1.png","path":"images/0622_1/unnamed-chunk-20-1.png","modified":0,"renderable":0},{"_id":"source/images/0622_1/unnamed-chunk-2-1.png","path":"images/0622_1/unnamed-chunk-2-1.png","modified":0,"renderable":0},{"_id":"source/images/0622_1/unnamed-chunk-24-1.png","path":"images/0622_1/unnamed-chunk-24-1.png","modified":0,"renderable":0},{"_id":"source/images/0622_1/unnamed-chunk-22-1.png","path":"images/0622_1/unnamed-chunk-22-1.png","modified":0,"renderable":0},{"_id":"source/images/0622_1/unnamed-chunk-24-2.png","path":"images/0622_1/unnamed-chunk-24-2.png","modified":0,"renderable":0},{"_id":"source/images/0622_1/unnamed-chunk-24-3.png","path":"images/0622_1/unnamed-chunk-24-3.png","modified":0,"renderable":0},{"_id":"source/images/0622_1/unnamed-chunk-4-1.png","path":"images/0622_1/unnamed-chunk-4-1.png","modified":0,"renderable":0},{"_id":"source/images/0622_1/unnamed-chunk-3-1.png","path":"images/0622_1/unnamed-chunk-3-1.png","modified":0,"renderable":0},{"_id":"source/images/0622_1/unnamed-chunk-5-1.png","path":"images/0622_1/unnamed-chunk-5-1.png","modified":0,"renderable":0},{"_id":"source/images/0622_1/unnamed-chunk-6-1.png","path":"images/0622_1/unnamed-chunk-6-1.png","modified":0,"renderable":0},{"_id":"source/images/0622_1/unnamed-chunk-7-1.png","path":"images/0622_1/unnamed-chunk-7-1.png","modified":0,"renderable":0},{"_id":"source/images/0622_1/unnamed-chunk-8-1.png","path":"images/0622_1/unnamed-chunk-8-1.png","modified":0,"renderable":0},{"_id":"source/images/0622_1/unnamed-chunk-9-1.png","path":"images/0622_1/unnamed-chunk-9-1.png","modified":0,"renderable":0},{"_id":"source/images/0629/output_11_0.png","path":"images/0629/output_11_0.png","modified":0,"renderable":0},{"_id":"source/images/0624/unnamed-chunk-22-1.png","path":"images/0624/unnamed-chunk-22-1.png","modified":0,"renderable":0},{"_id":"source/images/0629/Untitled.png","path":"images/0629/Untitled.png","modified":0,"renderable":0},{"_id":"source/images/0629/output_15_0.png","path":"images/0629/output_15_0.png","modified":0,"renderable":0},{"_id":"source/images/0629/output_9_0.png","path":"images/0629/output_9_0.png","modified":0,"renderable":0},{"_id":"source/images/0630/output_11_0.png","path":"images/0630/output_11_0.png","modified":0,"renderable":0},{"_id":"source/images/0630/output_15_0.png","path":"images/0630/output_15_0.png","modified":0,"renderable":0},{"_id":"source/images/0630/output_45_0.png","path":"images/0630/output_45_0.png","modified":0,"renderable":0},{"_id":"source/images/0630/output_4_0.png","path":"images/0630/output_4_0.png","modified":0,"renderable":0},{"_id":"source/images/0630/output_69_0.png","path":"images/0630/output_69_0.png","modified":0,"renderable":0},{"_id":"source/images/0630/output_71_0.png","path":"images/0630/output_71_0.png","modified":0,"renderable":0},{"_id":"source/images/0630/output_77_0.png","path":"images/0630/output_77_0.png","modified":0,"renderable":0},{"_id":"source/images/0630/output_83_1.png","path":"images/0630/output_83_1.png","modified":0,"renderable":0},{"_id":"source/images/0630/output_9_0.png","path":"images/0630/output_9_0.png","modified":0,"renderable":0},{"_id":"source/images/0701/logic.png","path":"images/0701/logic.png","modified":0,"renderable":0},{"_id":"source/images/0701/output_12_1.png","path":"images/0701/output_12_1.png","modified":0,"renderable":0},{"_id":"source/images/0705/output_17_0.png","path":"images/0705/output_17_0.png","modified":0,"renderable":0},{"_id":"source/images/0704/output_18_0.png","path":"images/0704/output_18_0.png","modified":0,"renderable":0},{"_id":"source/images/0705/output_19_0.png","path":"images/0705/output_19_0.png","modified":0,"renderable":0},{"_id":"source/images/0704/output_27_1.png","path":"images/0704/output_27_1.png","modified":0,"renderable":0},{"_id":"source/images/0623/unnamed-chunk-2-1.png","path":"images/0623/unnamed-chunk-2-1.png","modified":0,"renderable":0},{"_id":"source/images/0623/unnamed-chunk-5-1.png","path":"images/0623/unnamed-chunk-5-1.png","modified":0,"renderable":0},{"_id":"source/images/0706/output_11_1.png","path":"images/0706/output_11_1.png","modified":0,"renderable":0},{"_id":"source/images/0706/output_12_1.png","path":"images/0706/output_12_1.png","modified":0,"renderable":0},{"_id":"source/images/0706/output_13_1.png","path":"images/0706/output_13_1.png","modified":0,"renderable":0},{"_id":"source/images/0706/output_15_1.png","path":"images/0706/output_15_1.png","modified":0,"renderable":0},{"_id":"source/images/0706/output_17_1.png","path":"images/0706/output_17_1.png","modified":0,"renderable":0},{"_id":"source/images/0706/output_23_1.png","path":"images/0706/output_23_1.png","modified":0,"renderable":0},{"_id":"source/images/0706/output_24_1.png","path":"images/0706/output_24_1.png","modified":0,"renderable":0},{"_id":"source/images/0706/output_27_1.png","path":"images/0706/output_27_1.png","modified":0,"renderable":0},{"_id":"source/images/0706/output_28_1.png","path":"images/0706/output_28_1.png","modified":0,"renderable":0},{"_id":"source/images/0706/output_32_1.png","path":"images/0706/output_32_1.png","modified":0,"renderable":0},{"_id":"source/images/0706/output_33_1.png","path":"images/0706/output_33_1.png","modified":0,"renderable":0},{"_id":"source/images/0706/output_36_0.png","path":"images/0706/output_36_0.png","modified":0,"renderable":0},{"_id":"source/images/0706/output_38_0.png","path":"images/0706/output_38_0.png","modified":0,"renderable":0},{"_id":"source/images/0706/output_42_0.png","path":"images/0706/output_42_0.png","modified":0,"renderable":0},{"_id":"source/images/0706/output_44_0.png","path":"images/0706/output_44_0.png","modified":0,"renderable":0},{"_id":"source/images/0706/output_4_1.png","path":"images/0706/output_4_1.png","modified":0,"renderable":0},{"_id":"source/images/0706/output_6_1.png","path":"images/0706/output_6_1.png","modified":0,"renderable":0},{"_id":"source/images/0706/output_8_1.png","path":"images/0706/output_8_1.png","modified":0,"renderable":0},{"_id":"source/images/0706/output_9_1.png","path":"images/0706/output_9_1.png","modified":0,"renderable":0},{"_id":"source/images/day0623/unnamed-chunk-1-1.png","path":"images/day0623/unnamed-chunk-1-1.png","modified":0,"renderable":0},{"_id":"source/images/day0623/unnamed-chunk-2-1.png","path":"images/day0623/unnamed-chunk-2-1.png","modified":0,"renderable":0},{"_id":"source/images/day0623/unnamed-chunk-3-1.png","path":"images/day0623/unnamed-chunk-3-1.png","modified":0,"renderable":0},{"_id":"source/images/day0623/unnamed-chunk-5-1.png","path":"images/day0623/unnamed-chunk-5-1.png","modified":0,"renderable":0},{"_id":"source/images/day0623/unnamed-chunk-6-1.png","path":"images/day0623/unnamed-chunk-6-1.png","modified":0,"renderable":0},{"_id":"source/images/rmd_0620/unnamed-chunk-2-1.png","path":"images/rmd_0620/unnamed-chunk-2-1.png","modified":0,"renderable":0},{"_id":"themes/tranquilpeak/source/assets/css/all.css","path":"assets/css/all.css","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/css/gitalk.css","path":"assets/css/gitalk.css","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/css/gitment.css","path":"assets/css/gitment.css","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/css/jquery.fancybox.css","path":"assets/css/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/css/style-3nkouozwe8vtu8c81mdnm03zdusg8chppv647kiomisiliyaela9skwqht91.min.css","path":"assets/css/style-3nkouozwe8vtu8c81mdnm03zdusg8chppv647kiomisiliyaela9skwqht91.min.css","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/css/thumbs.css","path":"assets/css/thumbs.css","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/css/tranquilpeak.css","path":"assets/css/tranquilpeak.css","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/css/style.css","path":"assets/css/style.css","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-brands-400.eot","path":"assets/fonts/fa-brands-400.eot","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-brands-400.svg","path":"assets/fonts/fa-brands-400.svg","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-brands-400.ttf","path":"assets/fonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-brands-400.woff2","path":"assets/fonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-brands-400.woff","path":"assets/fonts/fa-brands-400.woff","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-regular-400.eot","path":"assets/fonts/fa-regular-400.eot","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-regular-400.svg","path":"assets/fonts/fa-regular-400.svg","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-regular-400.ttf","path":"assets/fonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-regular-400.woff2","path":"assets/fonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-regular-400.woff","path":"assets/fonts/fa-regular-400.woff","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-solid-900.eot","path":"assets/fonts/fa-solid-900.eot","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-solid-900.svg","path":"assets/fonts/fa-solid-900.svg","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-solid-900.ttf","path":"assets/fonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-solid-900.woff2","path":"assets/fonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/merriweather-bold-italic.ttf","path":"assets/fonts/merriweather-bold-italic.ttf","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-solid-900.woff","path":"assets/fonts/fa-solid-900.woff","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/merriweather-bold.ttf","path":"assets/fonts/merriweather-bold.ttf","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/merriweather-light.ttf","path":"assets/fonts/merriweather-light.ttf","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/merriweather-light-italic.ttf","path":"assets/fonts/merriweather-light-italic.ttf","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/open-sans-bold.ttf","path":"assets/fonts/open-sans-bold.ttf","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/open-sans.ttf","path":"assets/fonts/open-sans.ttf","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/js/algoliasearch.js","path":"assets/js/algoliasearch.js","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/fonts/merriweather.ttf","path":"assets/fonts/merriweather.ttf","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/js/gitalk.js","path":"assets/js/gitalk.js","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/js/gitment.js","path":"assets/js/gitment.js","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/js/jquery.fancybox.js","path":"assets/js/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/js/moment-with-locales.js","path":"assets/js/moment-with-locales.js","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/js/jquery.js","path":"assets/js/jquery.js","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/js/script-h2jfxkdpi3i16rf1rss8upq5l4k20wtukjvlixsznqxrpqwnsevgbqric0qi.min.js","path":"assets/js/script-h2jfxkdpi3i16rf1rss8upq5l4k20wtukjvlixsznqxrpqwnsevgbqric0qi.min.js","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/js/script.js","path":"assets/js/script.js","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/js/thumbs.js","path":"assets/js/thumbs.js","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/images/cover-v1.2.0.jpg","path":"assets/images/cover-v1.2.0.jpg","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/js/tranquilpeak.js","path":"assets/js/tranquilpeak.js","modified":0,"renderable":1},{"_id":"themes/tranquilpeak/source/assets/images/logo-algolia-nebula-blue-full.svg","path":"assets/images/logo-algolia-nebula-blue-full.svg","modified":0,"renderable":1},{"_id":"source/images/0707/output_10_1.png","path":"images/0707/output_10_1.png","modified":0,"renderable":0},{"_id":"source/images/0707/output_13_1.png","path":"images/0707/output_13_1.png","modified":0,"renderable":0},{"_id":"source/images/0707/output_39_0.png","path":"images/0707/output_39_0.png","modified":0,"renderable":0},{"_id":"source/images/0707/output_41_0.png","path":"images/0707/output_41_0.png","modified":0,"renderable":0},{"_id":"themes/tranquilpeak/source/assets/images/cover.jpg","path":"assets/images/cover.jpg","modified":0,"renderable":1},{"_id":"source/images/PyQt5 Tutorial Basics/2_10_stylesheets_8r6WeZv.png","path":"images/PyQt5 Tutorial Basics/2_10_stylesheets_8r6WeZv.png","modified":0,"renderable":0},{"_id":"source/images/PyQt5 Tutorial Basics/2_1_opening.png","path":"images/PyQt5 Tutorial Basics/2_1_opening.png","modified":0,"renderable":0},{"_id":"source/images/PyQt5 Tutorial Basics/2_2_icon.png","path":"images/PyQt5 Tutorial Basics/2_2_icon.png","modified":0,"renderable":0},{"_id":"source/images/PyQt5 Tutorial Basics/2_3_closing.png","path":"images/PyQt5 Tutorial Basics/2_3_closing.png","modified":0,"renderable":0},{"_id":"source/images/PyQt5 Tutorial Basics/2_4_tooltip.png","path":"images/PyQt5 Tutorial Basics/2_4_tooltip.png","modified":0,"renderable":0},{"_id":"source/images/PyQt5 Tutorial Basics/2_5_statusbar.png","path":"images/PyQt5 Tutorial Basics/2_5_statusbar.png","modified":0,"renderable":0},{"_id":"source/images/PyQt5 Tutorial Basics/2_6_menubar.png","path":"images/PyQt5 Tutorial Basics/2_6_menubar.png","modified":0,"renderable":0},{"_id":"source/images/PyQt5 Tutorial Basics/2_7_toolbar.png","path":"images/PyQt5 Tutorial Basics/2_7_toolbar.png","modified":0,"renderable":0},{"_id":"source/images/PyQt5 Tutorial Basics/2_8_centering.png","path":"images/PyQt5 Tutorial Basics/2_8_centering.png","modified":0,"renderable":0},{"_id":"source/images/PyQt5 Tutorial Basics/2_9_showing_date.png","path":"images/PyQt5 Tutorial Basics/2_9_showing_date.png","modified":0,"renderable":0},{"_id":"source/images/PyQt5 Tutorial Basics/edit.png","path":"images/PyQt5 Tutorial Basics/edit.png","modified":0,"renderable":0},{"_id":"source/images/PyQt5 Tutorial Basics/exit 1.png","path":"images/PyQt5 Tutorial Basics/exit 1.png","modified":0,"renderable":0},{"_id":"source/images/PyQt5 Tutorial Basics/exit.png","path":"images/PyQt5 Tutorial Basics/exit.png","modified":0,"renderable":0},{"_id":"source/images/PyQt5 Tutorial Basics/mainwindowlayout.png","path":"images/PyQt5 Tutorial Basics/mainwindowlayout.png","modified":0,"renderable":0},{"_id":"source/images/PyQt5 Tutorial Basics/print.png","path":"images/PyQt5 Tutorial Basics/print.png","modified":0,"renderable":0},{"_id":"source/images/PyQt5 Tutorial Basics/save.png","path":"images/PyQt5 Tutorial Basics/save.png","modified":0,"renderable":0},{"_id":"source/images/PyQt5 Tutorial Basics/web.png","path":"images/PyQt5 Tutorial Basics/web.png","modified":0,"renderable":0},{"_id":"source/images/0707/1.png","path":"images/0707/1.png","modified":0,"renderable":0},{"_id":"source/images/0707/2.png","path":"images/0707/2.png","modified":0,"renderable":0},{"_id":"source/images/0707/3.png","path":"images/0707/3.png","modified":0,"renderable":0},{"_id":"source/images/0707/4.png","path":"images/0707/4.png","modified":0,"renderable":0},{"_id":"source/images/0719/Employment.png","path":"images/0719/Employment.png","modified":0,"renderable":0},{"_id":"source/images/Linux/Untitled 1.png","path":"images/Linux/Untitled 1.png","modified":0,"renderable":0},{"_id":"source/images/Linux/Untitled 10.png","path":"images/Linux/Untitled 10.png","modified":0,"renderable":0},{"_id":"source/images/Linux/Untitled 11.png","path":"images/Linux/Untitled 11.png","modified":0,"renderable":0},{"_id":"source/images/Linux/Untitled 13.png","path":"images/Linux/Untitled 13.png","modified":0,"renderable":0},{"_id":"source/images/Linux/Untitled 12.png","path":"images/Linux/Untitled 12.png","modified":0,"renderable":0},{"_id":"source/images/Linux/Untitled 14.png","path":"images/Linux/Untitled 14.png","modified":0,"renderable":0},{"_id":"source/images/Linux/Untitled 15.png","path":"images/Linux/Untitled 15.png","modified":0,"renderable":0},{"_id":"source/images/Linux/Untitled 17.png","path":"images/Linux/Untitled 17.png","modified":0,"renderable":0},{"_id":"source/images/Linux/Untitled 18.png","path":"images/Linux/Untitled 18.png","modified":0,"renderable":0},{"_id":"source/images/Linux/Untitled 16.png","path":"images/Linux/Untitled 16.png","modified":0,"renderable":0},{"_id":"source/images/Linux/Untitled 19.png","path":"images/Linux/Untitled 19.png","modified":0,"renderable":0},{"_id":"source/images/Linux/Untitled 2.png","path":"images/Linux/Untitled 2.png","modified":0,"renderable":0},{"_id":"source/images/Linux/Untitled 20.png","path":"images/Linux/Untitled 20.png","modified":0,"renderable":0},{"_id":"source/images/Linux/Untitled 21.png","path":"images/Linux/Untitled 21.png","modified":0,"renderable":0},{"_id":"source/images/Linux/Untitled 22.png","path":"images/Linux/Untitled 22.png","modified":0,"renderable":0},{"_id":"source/images/Linux/Untitled 23.png","path":"images/Linux/Untitled 23.png","modified":0,"renderable":0},{"_id":"source/images/Linux/Untitled 24.png","path":"images/Linux/Untitled 24.png","modified":0,"renderable":0},{"_id":"source/images/Linux/Untitled 25.png","path":"images/Linux/Untitled 25.png","modified":0,"renderable":0},{"_id":"source/images/Linux/Untitled 3.png","path":"images/Linux/Untitled 3.png","modified":0,"renderable":0},{"_id":"source/images/Linux/Untitled 5.png","path":"images/Linux/Untitled 5.png","modified":0,"renderable":0},{"_id":"source/images/Linux/Untitled 4.png","path":"images/Linux/Untitled 4.png","modified":0,"renderable":0},{"_id":"source/images/Linux/Untitled 7.png","path":"images/Linux/Untitled 7.png","modified":0,"renderable":0},{"_id":"source/images/Linux/Untitled 6.png","path":"images/Linux/Untitled 6.png","modified":0,"renderable":0},{"_id":"source/images/Linux/Untitled 8.png","path":"images/Linux/Untitled 8.png","modified":0,"renderable":0},{"_id":"source/images/Linux/Untitled 9.png","path":"images/Linux/Untitled 9.png","modified":0,"renderable":0},{"_id":"source/images/Linux/Untitled.png","path":"images/Linux/Untitled.png","modified":0,"renderable":0},{"_id":"source/images/Python_venv/Untitled 1.png","path":"images/Python_venv/Untitled 1.png","modified":0,"renderable":0},{"_id":"source/images/Python_venv/Untitled 3.png","path":"images/Python_venv/Untitled 3.png","modified":0,"renderable":0},{"_id":"source/images/Python_venv/Untitled 2.png","path":"images/Python_venv/Untitled 2.png","modified":0,"renderable":0},{"_id":"source/images/Python_venv/Untitled.png","path":"images/Python_venv/Untitled.png","modified":0,"renderable":0},{"_id":"source/images/Python_venv/Untitled 4.png","path":"images/Python_venv/Untitled 4.png","modified":0,"renderable":0},{"_id":"source/images/Crawling_Practice/Untitled 2.png","path":"images/Crawling_Practice/Untitled 2.png","modified":0,"renderable":0},{"_id":"source/images/Crawling_Practice/Untitled 1.png","path":"images/Crawling_Practice/Untitled 1.png","modified":0,"renderable":0},{"_id":"source/images/Crawling_Practice/Untitled 3.png","path":"images/Crawling_Practice/Untitled 3.png","modified":0,"renderable":0},{"_id":"source/images/Crawling_Practice/Untitled 4.png","path":"images/Crawling_Practice/Untitled 4.png","modified":0,"renderable":0},{"_id":"source/images/Crawling_Practice/Untitled 6.png","path":"images/Crawling_Practice/Untitled 6.png","modified":0,"renderable":0},{"_id":"source/images/Crawling_Practice/Untitled 5.png","path":"images/Crawling_Practice/Untitled 5.png","modified":0,"renderable":0},{"_id":"source/images/Crawling_Practice/Untitled.png","path":"images/Crawling_Practice/Untitled.png","modified":0,"renderable":0},{"_id":"source/images/Crawling_Practice/Untitled 8.png","path":"images/Crawling_Practice/Untitled 8.png","modified":0,"renderable":0},{"_id":"source/images/Crawling_Practice/Untitled 7.png","path":"images/Crawling_Practice/Untitled 7.png","modified":0,"renderable":0},{"_id":"source/images/Spark_install/Untitled 10.png","path":"images/Spark_install/Untitled 10.png","modified":0,"renderable":0},{"_id":"source/images/Spark_install/Untitled 1.png","path":"images/Spark_install/Untitled 1.png","modified":0,"renderable":0},{"_id":"source/images/Spark_install/Untitled 11.png","path":"images/Spark_install/Untitled 11.png","modified":0,"renderable":0},{"_id":"source/images/Spark_install/Untitled 12.png","path":"images/Spark_install/Untitled 12.png","modified":0,"renderable":0},{"_id":"source/images/Spark_install/Untitled 13.png","path":"images/Spark_install/Untitled 13.png","modified":0,"renderable":0},{"_id":"source/images/Spark_install/Untitled 14.png","path":"images/Spark_install/Untitled 14.png","modified":0,"renderable":0},{"_id":"source/images/Spark_install/Untitled 15.png","path":"images/Spark_install/Untitled 15.png","modified":0,"renderable":0},{"_id":"source/images/Spark_install/Untitled 16.png","path":"images/Spark_install/Untitled 16.png","modified":0,"renderable":0},{"_id":"source/images/Spark_install/Untitled 18.png","path":"images/Spark_install/Untitled 18.png","modified":0,"renderable":0},{"_id":"source/images/Spark_install/Untitled 17.png","path":"images/Spark_install/Untitled 17.png","modified":0,"renderable":0},{"_id":"source/images/Spark_install/Untitled 2.png","path":"images/Spark_install/Untitled 2.png","modified":0,"renderable":0},{"_id":"source/images/Spark_install/Untitled 5.png","path":"images/Spark_install/Untitled 5.png","modified":0,"renderable":0},{"_id":"source/images/Spark_install/Untitled 4.png","path":"images/Spark_install/Untitled 4.png","modified":0,"renderable":0},{"_id":"source/images/Spark_install/Untitled 3.png","path":"images/Spark_install/Untitled 3.png","modified":0,"renderable":0},{"_id":"source/images/Spark_install/Untitled 6.png","path":"images/Spark_install/Untitled 6.png","modified":0,"renderable":0},{"_id":"source/images/Spark_install/Untitled 8.png","path":"images/Spark_install/Untitled 8.png","modified":0,"renderable":0},{"_id":"source/images/Spark_install/Untitled 7.png","path":"images/Spark_install/Untitled 7.png","modified":0,"renderable":0},{"_id":"source/images/Spark_install/Untitled 9.png","path":"images/Spark_install/Untitled 9.png","modified":0,"renderable":0},{"_id":"source/images/Spark_install/Untitled.png","path":"images/Spark_install/Untitled.png","modified":0,"renderable":0},{"_id":"source/images/0729/Untitled 1.png","path":"images/0729/Untitled 1.png","modified":0,"renderable":0},{"_id":"source/images/0729/Untitled 10.png","path":"images/0729/Untitled 10.png","modified":0,"renderable":0},{"_id":"source/images/0729/Untitled 11.png","path":"images/0729/Untitled 11.png","modified":0,"renderable":0},{"_id":"source/images/0729/Untitled 12.png","path":"images/0729/Untitled 12.png","modified":0,"renderable":0},{"_id":"source/images/0729/Untitled 13.png","path":"images/0729/Untitled 13.png","modified":0,"renderable":0},{"_id":"source/images/0729/Untitled 15.png","path":"images/0729/Untitled 15.png","modified":0,"renderable":0},{"_id":"source/images/0729/Untitled 16.png","path":"images/0729/Untitled 16.png","modified":0,"renderable":0},{"_id":"source/images/0729/Untitled 17.png","path":"images/0729/Untitled 17.png","modified":0,"renderable":0},{"_id":"source/images/0729/Untitled 18.png","path":"images/0729/Untitled 18.png","modified":0,"renderable":0},{"_id":"source/images/0729/Untitled 19.png","path":"images/0729/Untitled 19.png","modified":0,"renderable":0},{"_id":"source/images/0729/Untitled 2.png","path":"images/0729/Untitled 2.png","modified":0,"renderable":0},{"_id":"source/images/0729/Untitled 20.png","path":"images/0729/Untitled 20.png","modified":0,"renderable":0},{"_id":"source/images/0729/Untitled 21.png","path":"images/0729/Untitled 21.png","modified":0,"renderable":0},{"_id":"source/images/0729/Untitled 22.png","path":"images/0729/Untitled 22.png","modified":0,"renderable":0},{"_id":"source/images/0729/Untitled 3.png","path":"images/0729/Untitled 3.png","modified":0,"renderable":0},{"_id":"source/images/0729/Untitled 4.png","path":"images/0729/Untitled 4.png","modified":0,"renderable":0},{"_id":"source/images/0729/Untitled 5.png","path":"images/0729/Untitled 5.png","modified":0,"renderable":0},{"_id":"source/images/0729/Untitled 6.png","path":"images/0729/Untitled 6.png","modified":0,"renderable":0},{"_id":"source/images/0729/Untitled 7.png","path":"images/0729/Untitled 7.png","modified":0,"renderable":0},{"_id":"source/images/0729/Untitled 8.png","path":"images/0729/Untitled 8.png","modified":0,"renderable":0},{"_id":"source/images/0729/Untitled 9.png","path":"images/0729/Untitled 9.png","modified":0,"renderable":0},{"_id":"source/images/0729/Untitled.png","path":"images/0729/Untitled.png","modified":0,"renderable":0},{"_id":"source/images/0731_Spark/Untitled 1.png","path":"images/0731_Spark/Untitled 1.png","modified":0,"renderable":0},{"_id":"source/images/0729/Untitled 14.png","path":"images/0729/Untitled 14.png","modified":0,"renderable":0},{"_id":"source/images/0731_Spark/Untitled 10.png","path":"images/0731_Spark/Untitled 10.png","modified":0,"renderable":0},{"_id":"source/images/0731_Spark/Untitled 11.png","path":"images/0731_Spark/Untitled 11.png","modified":0,"renderable":0},{"_id":"source/images/0731_Spark/Untitled 12.png","path":"images/0731_Spark/Untitled 12.png","modified":0,"renderable":0},{"_id":"source/images/0731_Spark/Untitled 13.png","path":"images/0731_Spark/Untitled 13.png","modified":0,"renderable":0},{"_id":"source/images/0731_Spark/Untitled 14.png","path":"images/0731_Spark/Untitled 14.png","modified":0,"renderable":0},{"_id":"source/images/0731_Spark/Untitled 15.png","path":"images/0731_Spark/Untitled 15.png","modified":0,"renderable":0},{"_id":"source/images/0731_Spark/Untitled 16.png","path":"images/0731_Spark/Untitled 16.png","modified":0,"renderable":0},{"_id":"source/images/0731_Spark/Untitled 17.png","path":"images/0731_Spark/Untitled 17.png","modified":0,"renderable":0},{"_id":"source/images/0731_Spark/Untitled 2.png","path":"images/0731_Spark/Untitled 2.png","modified":0,"renderable":0},{"_id":"source/images/0731_Spark/Untitled 3.png","path":"images/0731_Spark/Untitled 3.png","modified":0,"renderable":0},{"_id":"source/images/0731_Spark/Untitled 4.png","path":"images/0731_Spark/Untitled 4.png","modified":0,"renderable":0},{"_id":"source/images/0731_Spark/Untitled 5.png","path":"images/0731_Spark/Untitled 5.png","modified":0,"renderable":0},{"_id":"source/images/0731_Spark/Untitled 6.png","path":"images/0731_Spark/Untitled 6.png","modified":0,"renderable":0},{"_id":"source/images/0731_Spark/Untitled 7.png","path":"images/0731_Spark/Untitled 7.png","modified":0,"renderable":0},{"_id":"source/images/0731_Spark/Untitled 8.png","path":"images/0731_Spark/Untitled 8.png","modified":0,"renderable":0},{"_id":"source/images/0731_Spark/Untitled 9.png","path":"images/0731_Spark/Untitled 9.png","modified":0,"renderable":0},{"_id":"source/images/0731_Spark/Untitled.png","path":"images/0731_Spark/Untitled.png","modified":0,"renderable":0},{"_id":"source/images/0731_Spark/Untitled 18.png","path":"images/0731_Spark/Untitled 18.png","modified":0,"renderable":0},{"_id":"source/images/Heroku/Untitled 1.png","path":"images/Heroku/Untitled 1.png","modified":0,"renderable":0},{"_id":"source/images/Heroku/Untitled 10.png","path":"images/Heroku/Untitled 10.png","modified":0,"renderable":0},{"_id":"source/images/Heroku/Untitled 11.png","path":"images/Heroku/Untitled 11.png","modified":0,"renderable":0},{"_id":"source/images/Heroku/Untitled 12.png","path":"images/Heroku/Untitled 12.png","modified":0,"renderable":0},{"_id":"source/images/Heroku/Untitled 13.png","path":"images/Heroku/Untitled 13.png","modified":0,"renderable":0},{"_id":"source/images/Heroku/Untitled 14.png","path":"images/Heroku/Untitled 14.png","modified":0,"renderable":0},{"_id":"source/images/Heroku/Untitled 15.png","path":"images/Heroku/Untitled 15.png","modified":0,"renderable":0},{"_id":"source/images/Heroku/Untitled 16.png","path":"images/Heroku/Untitled 16.png","modified":0,"renderable":0},{"_id":"source/images/Heroku/Untitled 17.png","path":"images/Heroku/Untitled 17.png","modified":0,"renderable":0},{"_id":"source/images/Heroku/Untitled 18.png","path":"images/Heroku/Untitled 18.png","modified":0,"renderable":0},{"_id":"source/images/Heroku/Untitled 19.png","path":"images/Heroku/Untitled 19.png","modified":0,"renderable":0},{"_id":"source/images/Heroku/Untitled 2.png","path":"images/Heroku/Untitled 2.png","modified":0,"renderable":0},{"_id":"source/images/Heroku/Untitled 20.png","path":"images/Heroku/Untitled 20.png","modified":0,"renderable":0},{"_id":"source/images/Heroku/Untitled 22.png","path":"images/Heroku/Untitled 22.png","modified":0,"renderable":0},{"_id":"source/images/Heroku/Untitled 21.png","path":"images/Heroku/Untitled 21.png","modified":0,"renderable":0},{"_id":"source/images/Heroku/Untitled 23.png","path":"images/Heroku/Untitled 23.png","modified":0,"renderable":0},{"_id":"source/images/Heroku/Untitled 24.png","path":"images/Heroku/Untitled 24.png","modified":0,"renderable":0},{"_id":"source/images/Heroku/Untitled 27.png","path":"images/Heroku/Untitled 27.png","modified":0,"renderable":0},{"_id":"source/images/Heroku/Untitled 25.png","path":"images/Heroku/Untitled 25.png","modified":0,"renderable":0},{"_id":"source/images/Heroku/Untitled 26.png","path":"images/Heroku/Untitled 26.png","modified":0,"renderable":0},{"_id":"source/images/Heroku/Untitled 28.png","path":"images/Heroku/Untitled 28.png","modified":0,"renderable":0},{"_id":"source/images/Heroku/Untitled 3.png","path":"images/Heroku/Untitled 3.png","modified":0,"renderable":0},{"_id":"source/images/Heroku/Untitled 4.png","path":"images/Heroku/Untitled 4.png","modified":0,"renderable":0},{"_id":"source/images/Heroku/Untitled 5.png","path":"images/Heroku/Untitled 5.png","modified":0,"renderable":0},{"_id":"source/images/Heroku/Untitled 6.png","path":"images/Heroku/Untitled 6.png","modified":0,"renderable":0},{"_id":"source/images/Heroku/Untitled 8.png","path":"images/Heroku/Untitled 8.png","modified":0,"renderable":0},{"_id":"source/images/Heroku/Untitled 7.png","path":"images/Heroku/Untitled 7.png","modified":0,"renderable":0},{"_id":"source/images/Heroku/Untitled 9.png","path":"images/Heroku/Untitled 9.png","modified":0,"renderable":0},{"_id":"source/images/Heroku/Untitled.png","path":"images/Heroku/Untitled.png","modified":0,"renderable":0},{"_id":"source/images/0805/Untitled 1.png","path":"images/0805/Untitled 1.png","modified":0,"renderable":0},{"_id":"source/images/0805/Untitled 10.png","path":"images/0805/Untitled 10.png","modified":0,"renderable":0},{"_id":"source/images/0805/Untitled 11.png","path":"images/0805/Untitled 11.png","modified":0,"renderable":0},{"_id":"source/images/0805/Untitled 12.png","path":"images/0805/Untitled 12.png","modified":0,"renderable":0},{"_id":"source/images/0805/Untitled 13.png","path":"images/0805/Untitled 13.png","modified":0,"renderable":0},{"_id":"source/images/0805/Untitled 14.png","path":"images/0805/Untitled 14.png","modified":0,"renderable":0},{"_id":"source/images/0805/Untitled 15.png","path":"images/0805/Untitled 15.png","modified":0,"renderable":0},{"_id":"source/images/0805/Untitled 16.png","path":"images/0805/Untitled 16.png","modified":0,"renderable":0},{"_id":"source/images/0805/Untitled 17.png","path":"images/0805/Untitled 17.png","modified":0,"renderable":0},{"_id":"source/images/0805/Untitled 18.png","path":"images/0805/Untitled 18.png","modified":0,"renderable":0},{"_id":"source/images/0805/Untitled 19.png","path":"images/0805/Untitled 19.png","modified":0,"renderable":0},{"_id":"source/images/0805/Untitled 2.png","path":"images/0805/Untitled 2.png","modified":0,"renderable":0},{"_id":"source/images/0805/Untitled 20.png","path":"images/0805/Untitled 20.png","modified":0,"renderable":0},{"_id":"source/images/0805/Untitled 3.png","path":"images/0805/Untitled 3.png","modified":0,"renderable":0},{"_id":"source/images/0805/Untitled 4.png","path":"images/0805/Untitled 4.png","modified":0,"renderable":0},{"_id":"source/images/0805/Untitled 5.png","path":"images/0805/Untitled 5.png","modified":0,"renderable":0},{"_id":"source/images/0805/Untitled 6.png","path":"images/0805/Untitled 6.png","modified":0,"renderable":0},{"_id":"source/images/0805/Untitled 7.png","path":"images/0805/Untitled 7.png","modified":0,"renderable":0},{"_id":"source/images/0805/Untitled 8.png","path":"images/0805/Untitled 8.png","modified":0,"renderable":0},{"_id":"source/images/0805/Untitled 9.png","path":"images/0805/Untitled 9.png","modified":0,"renderable":0},{"_id":"source/images/0805/Untitled.png","path":"images/0805/Untitled.png","modified":0,"renderable":0},{"_id":"source/images/curriculum/img.png","path":"images/curriculum/img.png","modified":0,"renderable":0},{"_id":"source/images/0805_1/output_30_2.png","path":"images/0805_1/output_30_2.png","modified":0,"renderable":0},{"_id":"source/images/0805_1/output_28_0.png","path":"images/0805_1/output_28_0.png","modified":0,"renderable":0},{"_id":"source/images/0805_1/output_9_0.png","path":"images/0805_1/output_9_0.png","modified":0,"renderable":0},{"_id":"source/images/0805_1/output_31_0.png","path":"images/0805_1/output_31_0.png","modified":0,"renderable":0},{"_id":"source/images/0806/Untitled 1.png","path":"images/0806/Untitled 1.png","modified":0,"renderable":0},{"_id":"source/images/0806/Untitled 2.png","path":"images/0806/Untitled 2.png","modified":0,"renderable":0},{"_id":"source/images/0806/Untitled 3.png","path":"images/0806/Untitled 3.png","modified":0,"renderable":0},{"_id":"source/images/0806/Untitled 4.png","path":"images/0806/Untitled 4.png","modified":0,"renderable":0},{"_id":"source/images/0806/Untitled.png","path":"images/0806/Untitled.png","modified":0,"renderable":0},{"_id":"source/images/대시보드/Untitled 1.png","path":"images/대시보드/Untitled 1.png","modified":0,"renderable":0},{"_id":"source/images/대시보드/Untitled 2.png","path":"images/대시보드/Untitled 2.png","modified":0,"renderable":0},{"_id":"source/images/대시보드/Untitled 4.png","path":"images/대시보드/Untitled 4.png","modified":0,"renderable":0},{"_id":"source/images/대시보드/Untitled 3.png","path":"images/대시보드/Untitled 3.png","modified":0,"renderable":0},{"_id":"source/images/대시보드/Untitled 5.png","path":"images/대시보드/Untitled 5.png","modified":0,"renderable":0},{"_id":"source/images/대시보드/Untitled.png","path":"images/대시보드/Untitled.png","modified":0,"renderable":0},{"_id":"source/images/day0903/Untitled 1.png","path":"images/day0903/Untitled 1.png","modified":0,"renderable":0},{"_id":"source/images/day0903/Untitled 10.png","path":"images/day0903/Untitled 10.png","modified":0,"renderable":0},{"_id":"source/images/day0903/Untitled 2.png","path":"images/day0903/Untitled 2.png","modified":0,"renderable":0},{"_id":"source/images/day0903/Untitled 3.png","path":"images/day0903/Untitled 3.png","modified":0,"renderable":0},{"_id":"source/images/day0903/Untitled 4.png","path":"images/day0903/Untitled 4.png","modified":0,"renderable":0},{"_id":"source/images/day0903/Untitled 5.png","path":"images/day0903/Untitled 5.png","modified":0,"renderable":0},{"_id":"source/images/day0903/Untitled 6.png","path":"images/day0903/Untitled 6.png","modified":0,"renderable":0},{"_id":"source/images/day0903/Untitled 7.png","path":"images/day0903/Untitled 7.png","modified":0,"renderable":0},{"_id":"source/images/day0903/Untitled 8.png","path":"images/day0903/Untitled 8.png","modified":0,"renderable":0},{"_id":"source/images/day0903/Untitled 9.png","path":"images/day0903/Untitled 9.png","modified":0,"renderable":0},{"_id":"source/images/day0903/Untitled.png","path":"images/day0903/Untitled.png","modified":0,"renderable":0},{"_id":"source/images/day0916/Untitled 1.png","path":"images/day0916/Untitled 1.png","modified":0,"renderable":0},{"_id":"source/images/day0916/Untitled 11.png","path":"images/day0916/Untitled 11.png","modified":0,"renderable":0},{"_id":"source/images/day0916/Untitled 10.png","path":"images/day0916/Untitled 10.png","modified":0,"renderable":0},{"_id":"source/images/day0916/Untitled 12.png","path":"images/day0916/Untitled 12.png","modified":0,"renderable":0},{"_id":"source/images/day0916/Untitled 14.png","path":"images/day0916/Untitled 14.png","modified":0,"renderable":0},{"_id":"source/images/day0916/Untitled 13.png","path":"images/day0916/Untitled 13.png","modified":0,"renderable":0},{"_id":"source/images/day0916/Untitled 15.png","path":"images/day0916/Untitled 15.png","modified":0,"renderable":0},{"_id":"source/images/day0916/Untitled 18.png","path":"images/day0916/Untitled 18.png","modified":0,"renderable":0},{"_id":"source/images/day0916/Untitled 17.png","path":"images/day0916/Untitled 17.png","modified":0,"renderable":0},{"_id":"source/images/day0916/Untitled 16.png","path":"images/day0916/Untitled 16.png","modified":0,"renderable":0},{"_id":"source/images/day0916/Untitled 2.png","path":"images/day0916/Untitled 2.png","modified":0,"renderable":0},{"_id":"source/images/day0916/Untitled 20.png","path":"images/day0916/Untitled 20.png","modified":0,"renderable":0},{"_id":"source/images/day0916/Untitled 19.png","path":"images/day0916/Untitled 19.png","modified":0,"renderable":0},{"_id":"source/images/day0916/Untitled 21.png","path":"images/day0916/Untitled 21.png","modified":0,"renderable":0},{"_id":"source/images/day0916/Untitled 22.png","path":"images/day0916/Untitled 22.png","modified":0,"renderable":0},{"_id":"source/images/day0916/Untitled 23.png","path":"images/day0916/Untitled 23.png","modified":0,"renderable":0},{"_id":"source/images/day0916/Untitled 3.png","path":"images/day0916/Untitled 3.png","modified":0,"renderable":0},{"_id":"source/images/day0916/Untitled 4.png","path":"images/day0916/Untitled 4.png","modified":0,"renderable":0},{"_id":"source/images/day0916/Untitled 6.png","path":"images/day0916/Untitled 6.png","modified":0,"renderable":0},{"_id":"source/images/day0916/Untitled 5.png","path":"images/day0916/Untitled 5.png","modified":0,"renderable":0},{"_id":"source/images/day0916/Untitled 7.png","path":"images/day0916/Untitled 7.png","modified":0,"renderable":0},{"_id":"source/images/day0916/Untitled 8.png","path":"images/day0916/Untitled 8.png","modified":0,"renderable":0},{"_id":"source/images/day0916/Untitled 9.png","path":"images/day0916/Untitled 9.png","modified":0,"renderable":0},{"_id":"source/images/day0916/Untitled.png","path":"images/day0916/Untitled.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 1.png","path":"images/STS3_Github/Untitled 1.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 10.png","path":"images/STS3_Github/Untitled 10.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 11.png","path":"images/STS3_Github/Untitled 11.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 12.png","path":"images/STS3_Github/Untitled 12.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 13.png","path":"images/STS3_Github/Untitled 13.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 14.png","path":"images/STS3_Github/Untitled 14.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 15.png","path":"images/STS3_Github/Untitled 15.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 16.png","path":"images/STS3_Github/Untitled 16.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 17.png","path":"images/STS3_Github/Untitled 17.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 18.png","path":"images/STS3_Github/Untitled 18.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 19.png","path":"images/STS3_Github/Untitled 19.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 2.png","path":"images/STS3_Github/Untitled 2.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 20.png","path":"images/STS3_Github/Untitled 20.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 21.png","path":"images/STS3_Github/Untitled 21.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 22.png","path":"images/STS3_Github/Untitled 22.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 23.png","path":"images/STS3_Github/Untitled 23.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 24.png","path":"images/STS3_Github/Untitled 24.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 25.png","path":"images/STS3_Github/Untitled 25.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 26.png","path":"images/STS3_Github/Untitled 26.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 27.png","path":"images/STS3_Github/Untitled 27.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 28.png","path":"images/STS3_Github/Untitled 28.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 29.png","path":"images/STS3_Github/Untitled 29.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 3.png","path":"images/STS3_Github/Untitled 3.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 30.png","path":"images/STS3_Github/Untitled 30.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 31.png","path":"images/STS3_Github/Untitled 31.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 32.png","path":"images/STS3_Github/Untitled 32.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 33.png","path":"images/STS3_Github/Untitled 33.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 34.png","path":"images/STS3_Github/Untitled 34.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 35.png","path":"images/STS3_Github/Untitled 35.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 36.png","path":"images/STS3_Github/Untitled 36.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 37.png","path":"images/STS3_Github/Untitled 37.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 4.png","path":"images/STS3_Github/Untitled 4.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 5.png","path":"images/STS3_Github/Untitled 5.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 6.png","path":"images/STS3_Github/Untitled 6.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 7.png","path":"images/STS3_Github/Untitled 7.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 8.png","path":"images/STS3_Github/Untitled 8.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled 9.png","path":"images/STS3_Github/Untitled 9.png","modified":0,"renderable":0},{"_id":"source/images/STS3_Github/Untitled.png","path":"images/STS3_Github/Untitled.png","modified":0,"renderable":0},{"_id":"source/images/1017/Untitled.png","path":"images/1017/Untitled.png","modified":0,"renderable":0},{"_id":"source/assets/images/00.png","path":"assets/images/00.png","modified":0,"renderable":0},{"_id":"themes/tranquilpeak/source/assets/images/00.png","path":"assets/images/00.png","modified":0,"renderable":1},{"_id":"source/assets/images/cover.jpg","path":"assets/images/cover.jpg","modified":0,"renderable":0}],"Cache":[{"_id":"source/day01.R","hash":"74e3f4b0d921e7126218f0a2263016949291fcfe","modified":1657451980619},{"_id":"source/day01.Rmd","hash":"8e4d698e7e3316aacbb23a8c59957d81fe37505d","modified":1657451980619},{"_id":"source/all-archives/index.md","hash":"1f6d77b0ec3da022ee2354868c76485a4d415845","modified":1657451980617},{"_id":"source/_posts/curriculum.md","hash":"6f03cfa6e21101d1d2313e7c5d4cecbb6ff42479","modified":1659399674355},{"_id":"source/_posts/day0617.md","hash":"c3e0a0bc3fc91ff273dd8f07cb2154bfd4006229","modified":1657467052654},{"_id":"source/_posts/0620.md","hash":"45ef60aae4cb2f569b24e30ea42058639832bc3a","modified":1657467052644},{"_id":"source/_posts/0617 f76ecd14aebf4b66a1bf966d7061b068.md","hash":"979e3370aea92bc935da385e35562e809571e8dd","modified":1662545995596},{"_id":"source/_posts/PyCaret_Sample (1).md","hash":"b6d5ed7f39b9b50e141bc5bf67f70705ec1e9fe5","modified":1659790952787},{"_id":"source/_posts/day0621.md","hash":"f1896ea4c30111bb0004b78a3eef03e2341e19d1","modified":1657467052651},{"_id":"source/_posts/XGBoost_&_LightGBM.md","hash":"69a6f3e84839dc24b08af202d53b44e059000c93","modified":1659790971812},{"_id":"source/_posts/day0620.md","hash":"58a004249fc75695338fed14a92cee48efef72d0","modified":1657467052658},{"_id":"source/_posts/day0621_dplyr.md","hash":"9f6632971843392afb1ce264110c4f7ff0157511","modified":1657467052648},{"_id":"source/_posts/day0622_1.md","hash":"430e47fe9bc29a6c25f9d76248f14b53306b761e","modified":1657467052666},{"_id":"source/_posts/day0622.md","hash":"0cbfecb7488d984552d0e920c5f3882df0e60939","modified":1657467052661},{"_id":"source/_posts/day0623.md","hash":"fe0f2a11b413a468a2c5c3415a3470db3f3d723f","modified":1657466900470},{"_id":"source/_posts/day0627.md","hash":"e04b800c8a90c56441d5ea78750773fb149fc432","modified":1659792739078},{"_id":"source/_posts/day0628.md","hash":"c39129de3ad241be6d7de423c4f888dfe514e4c6","modified":1659793789687},{"_id":"source/_posts/day0629_ml.md","hash":"51c3f53343b42e5e11ac1da58573dde972cbd790","modified":1658407799647},{"_id":"source/_posts/day0629.md","hash":"c2705c64d26d0eff4674cf515c7f6a0f19cf835d","modified":1658407799635},{"_id":"source/_posts/day0630_ml.md","hash":"d30a42b7164ba2041e8ef26c707ba6fc7abfe9e2","modified":1658407799668},{"_id":"source/_posts/day0630_ch3.md","hash":"4ec6e5527c8b5660dd178929f30e924152b5f956","modified":1658407799660},{"_id":"source/_posts/day0701_ch04.md","hash":"ff07b3fc146a945eaa172994b82fc7683c097d73","modified":1658407782118},{"_id":"source/_posts/day0701_ch03.md","hash":"b91aec6b44394e7c1db6569fb5685ed6fcc2d53f","modified":1658407799622},{"_id":"source/_posts/day0706_1.md","hash":"9c7b2d59ff6c167a431e1275931c0743d52aa4f7","modified":1657463201663},{"_id":"source/_posts/mental.md","hash":"5e61f3dd1c7a286661a5e710a14fa6f15243761c","modified":1657468379252},{"_id":"source/_posts/remind.md","hash":"3a0d0a22c2cbb7ad20002d867297c116985e7891","modified":1657460689890},{"_id":"source/_posts/test.md","hash":"c08b8f20cdaa41e578537a5134f0ad20f35115c6","modified":1657466792903},{"_id":"source/_posts/블로그 설정.md","hash":"d5771e99697eba88a8f7508ebe73af55105f5a11","modified":1657461205882},{"_id":"source/all-categories/hello-world.md","hash":"f2f91768269861bec8d346c2273327f306cd1e82","modified":1657451980617},{"_id":"source/_posts/day0704.md","hash":"1b3bf1dc094f15e20824aa52b4b3763a36b86931","modified":1658407755569},{"_id":"source/all-categories/index.md","hash":"5793b201db91f4a5c48ef8c6ee72bfe9c15f7096","modified":1657451980618},{"_id":"source/_posts/lecture-in-humanedu (1)/kaggle_logo.png","hash":"854522b06c9180f71fda4485c0f542dae9174a78","modified":1657454068878},{"_id":"source/images/0620/Untitled 1.png","hash":"2554dee1d93e6146b38d5fadc5d26071db4ae79f","modified":1657451980645},{"_id":"source/images/0620/Untitled 10.png","hash":"c72f140cb368c912cad2ac012fc136f2b8c0a105","modified":1657451980645},{"_id":"source/images/0620/Untitled 11.png","hash":"a48124a4ae4751a0ff8e92bfce36678af8c14309","modified":1657451980646},{"_id":"source/_posts/1장_파이썬_프로그래밍의_기초_자료형.md","hash":"f27eee1fe4ff88b1dd51f88fa4089ea22c2643ea","modified":1658407835105},{"_id":"source/images/0620/Untitled 12.png","hash":"20b3d089a4d5cbd1faa7f1deacebd539c568f7d4","modified":1657451980646},{"_id":"source/images/0620/Untitled 13.png","hash":"b450ef3742fb7777e828e89e4041a2da4b4561e9","modified":1657451980647},{"_id":"source/images/0620/Untitled 14.png","hash":"6c0a310c5648d9ff62f501bea64280928b5a5387","modified":1657451980647},{"_id":"source/images/0620/Untitled 16.png","hash":"3cc03fa2de9561ce9cda32522852c0c0284443a0","modified":1657451980648},{"_id":"source/images/0620/Untitled 15.png","hash":"34853d45439451be0b703120873b21b3fe8f63ac","modified":1657451980648},{"_id":"source/images/0620/Untitled 17.png","hash":"62bf6bbf202b69898b5d9b9a24f5d1565f8fe662","modified":1657451980648},{"_id":"source/images/0620/Untitled 18.png","hash":"6fefcc288ee202e03f355c60175f8ac812b043fb","modified":1657451980649},{"_id":"source/images/0620/Untitled 2.png","hash":"036729246ed5e2c8b5fb1c73a01c4b332cb89589","modified":1657451980650},{"_id":"source/images/0620/Untitled 19.png","hash":"91844baff2ac409571efa5224987d5c82cba872a","modified":1657451980649},{"_id":"source/images/0620/Untitled 20.png","hash":"7a935fcce94b00e1ce160272b28fffd94fcdb36c","modified":1657451980650},{"_id":"source/images/0620/Untitled 23.png","hash":"b9b256c59ad6e8001b4780fe73eee738b3568753","modified":1657451980652},{"_id":"source/images/0620/Untitled 22.png","hash":"d3f4a80443c84776b169f4b9bfe1701fe64470dd","modified":1657451980651},{"_id":"source/images/0620/Untitled 24.png","hash":"4f68a865839b2bb19786555bae822157f2f5a797","modified":1657451980652},{"_id":"source/images/0620/Untitled 25.png","hash":"fdd69b0a925d0c2e1e8ad2ac6bcb4da8370aa742","modified":1657451980653},{"_id":"source/images/0620/Untitled 5.png","hash":"1d2e95b8538876dc651a1b6a994c494c850bd7c6","modified":1657451980655},{"_id":"source/images/0620/Untitled 6.png","hash":"6a9cc9b2144e6413ceb51ad19e5ad504c699da66","modified":1657451980656},{"_id":"source/images/0620/Untitled 7.png","hash":"0efff9aee7aff6902ec5fdf86d1d8801b6bfcb6c","modified":1657451980656},{"_id":"source/images/0620/Untitled 8.png","hash":"d62cb116251b4e372ba271733d1f9288ff5f1348","modified":1657451980656},{"_id":"source/images/0620/Untitled 3.png","hash":"704e46fddd1a31d5a2f0cc23ef6ad2fdb9fff17e","modified":1657451980653},{"_id":"source/images/0620/Untitled 9.png","hash":"af3a2589f13444ee5d01ed498988fa2582103f45","modified":1657451980657},{"_id":"source/images/0620/Untitled.png","hash":"2f941afff6a14df27a2e7410eec7f3d885bfe295","modified":1657451980657},{"_id":"source/images/0622/unnamed-chunk-21-1.png","hash":"a0a7abdc8836a40c283e60f7316bc652bd4a004f","modified":1657451980658},{"_id":"source/images/0622/unnamed-chunk-22-1.png","hash":"a0a7abdc8836a40c283e60f7316bc652bd4a004f","modified":1657451980658},{"_id":"source/images/0622/unnamed-chunk-23-1.png","hash":"c20af3f0c5e59e3a419d5df5db5e6d5d9d246cbf","modified":1657451980659},{"_id":"source/images/0622/unnamed-chunk-24-1.png","hash":"a33ad8312acf144f1d1c404b7388ff551668b3f8","modified":1657451980659},{"_id":"source/images/0617/Untitled 1.png","hash":"6e16a0acf424713beeaed538d9fbd605db408a79","modified":1657451980620},{"_id":"source/images/0622/unnamed-chunk-25-1.png","hash":"a0a7abdc8836a40c283e60f7316bc652bd4a004f","modified":1657451980659},{"_id":"source/images/0617/Untitled 11.png","hash":"b099359c5600c9fa5a26024d4583caf03e83919e","modified":1657451980621},{"_id":"source/images/0617/Untitled 13.png","hash":"7622074eee76f06efee26f9ebabe18721ebe06b0","modified":1657451980622},{"_id":"source/images/0617/Untitled 12.png","hash":"4212eb0c7a17d87658ad67ecd9a1d3b7872f4ff3","modified":1657451980621},{"_id":"source/all-tags/index.md","hash":"b0c2a250994e82a8c6dbe36fc0ae5a4685c4f4f7","modified":1657451980618},{"_id":"source/images/0617/Untitled 14.png","hash":"b53eb22c749a55f82722ca6bbc9d840d05225682","modified":1657451980622},{"_id":"source/images/0617/Untitled 17.png","hash":"f209cba544ad9e6c23ba5f3be6d0f35e5e960fe0","modified":1657451980625},{"_id":"source/images/0617/Untitled 18.png","hash":"b8c8e5fb65ebf13b8eea2ea2413c6bc2ca7115b6","modified":1657451980626},{"_id":"source/images/0617/Untitled 2.png","hash":"e78adf00c0bdd912ffc6bc0c6f3e4e143548e2e8","modified":1657451980627},{"_id":"source/images/0617/Untitled 20.png","hash":"a0b42bff949a5314056f61e8f5740c149d24cdd7","modified":1657451980627},{"_id":"source/images/0617/Untitled 21.png","hash":"7e805b0efd253b5fd029d1a8948e23800dab071e","modified":1657451980628},{"_id":"source/images/0617/Untitled 22.png","hash":"b4c0b72b55c4008567bc0a5f07e1f5cc1320d70b","modified":1657451980628},{"_id":"source/images/0617/Untitled 24.png","hash":"7175070d525b3da4408014b3b86cf9c434595dfc","modified":1657451980629},{"_id":"source/images/0617/Untitled 25.png","hash":"00c70cd2b9a47b9bca96afab1cab7412aeb8022a","modified":1657451980630},{"_id":"source/images/0617/Untitled 23.png","hash":"0f23dd6c7c3bc7190ade58da36af6383f3c11fe6","modified":1657451980629},{"_id":"source/images/0617/Untitled 26.png","hash":"e8b4cd8f001c279c5a1c2a00c4daad20bcef3328","modified":1657451980630},{"_id":"source/images/0617/Untitled 28.png","hash":"21d5fce5ba84dac526fd534ba66d4ef5fb71098c","modified":1657451980631},{"_id":"source/images/0617/Untitled 27.png","hash":"59fd27ba4c94e35b1150299dc954373acb256fc5","modified":1657451980631},{"_id":"source/images/0617/Untitled 3.png","hash":"e496262bcd40f0fbf21f0b83b02bf290dc10e64b","modified":1657451980633},{"_id":"source/images/0617/Untitled 30.png","hash":"744f23b22e9021d86ef7b8d9e90480ea5f5dc739","modified":1657451980633},{"_id":"source/images/0617/Untitled 34.png","hash":"a59ddffb9bf26efef0abaedcdb02e6e0fb248dab","modified":1657451980636},{"_id":"source/images/0617/Untitled 36.png","hash":"74c21e03a65ca90cdfd9eda0b31598395e0c332e","modified":1657451980637},{"_id":"source/images/0617/Untitled 37.png","hash":"8ac2ace9c3d9bc9e26116ed4ece462ed39d3d9e3","modified":1657451980638},{"_id":"source/images/0617/Untitled 35.png","hash":"5cacdcbbe3238192ecaeae0b65788fe49e3af7d7","modified":1657451980637},{"_id":"source/images/0617/Untitled 38.png","hash":"d3c8081f49e1d1afd58c60406f025e152e47f4c4","modified":1657451980638},{"_id":"source/images/0617/Untitled 39.png","hash":"ad3cf0253878c9e2fb0822184777244e3e27cd38","modified":1657451980639},{"_id":"source/images/0617/Untitled 40.png","hash":"2eb820896fab58cc613abedb916fce06a0d525c3","modified":1657451980640},{"_id":"source/images/0617/Untitled 4.png","hash":"b6f51ccf2b32c7bde67cc13fce33133bb1ca7fe8","modified":1657451980639},{"_id":"source/images/0617/Untitled 41.png","hash":"40b5c72aed36c283dc86f9cb0cc1bd3e6d69f520","modified":1657451980641},{"_id":"source/images/0617/Untitled 5.png","hash":"4535224fee6bf80041a9e483d036c6c1e6846d08","modified":1657451980642},{"_id":"source/images/0617/Untitled 6.png","hash":"4f4433c01553f5da0726f978890520a4c26bea20","modified":1657451980643},{"_id":"source/images/0617/Untitled 8.png","hash":"55c60f7a4e4607ba2bc0ea4f2216b65b92247292","modified":1657451980643},{"_id":"source/images/0617/Untitled 9.png","hash":"4b55b5e7428d6835d0d66c96f56da4e7c1e0bc79","modified":1657451980644},{"_id":"source/images/0617/Untitled.png","hash":"b5bbbb952d4d03337ee9aa2b592558391860028e","modified":1657451980644},{"_id":"source/images/0617/Untitled 7.png","hash":"cc29dcd5140cfdda74d37757bf15ade010856c59","modified":1657451980643},{"_id":"source/images/0622_1/unnamed-chunk-10-1.png","hash":"990277200270ea1c54733fa9b0f2c9f0289ad32a","modified":1657451980660},{"_id":"source/images/0622_1/unnamed-chunk-11-1.png","hash":"d50f02ab8cf8469bc9c060ee6d5abf549152949b","modified":1657451980660},{"_id":"source/images/0622_1/unnamed-chunk-12-1.png","hash":"cd9d48eacac1a1977c89eba9234ab5baef5f9bcc","modified":1657451980661},{"_id":"source/images/0622_1/unnamed-chunk-16-1.png","hash":"e469a07bd184fa306514b33a5061e7940062445f","modified":1657451980662},{"_id":"source/images/0622_1/unnamed-chunk-13-1.png","hash":"cf900acfd44d87e457354bdffae1d3a5deb76c7f","modified":1657451980661},{"_id":"source/images/0622_1/unnamed-chunk-15-1.png","hash":"166bbf44e560fe93e2a64378f7ad6fe1c1b8124a","modified":1657451980661},{"_id":"source/images/0622_1/unnamed-chunk-17-1.png","hash":"370880ab20e3b80d4ccc462210ae255a9817a53e","modified":1657451980662},{"_id":"source/images/0622_1/unnamed-chunk-20-1.png","hash":"e6d093c8a9b34948b3338a4639f6f180d63e31fe","modified":1657451980664},{"_id":"source/images/0622_1/unnamed-chunk-18-1.png","hash":"ec9dfcfb193ab9528616b6818b4a0744c487542d","modified":1657451980663},{"_id":"source/images/0622_1/unnamed-chunk-19-1.png","hash":"5b4d3883de614d46ea4927a93c156b221e14097e","modified":1657451980663},{"_id":"source/images/0622_1/unnamed-chunk-2-1.png","hash":"c5a04bca153312daa8f253129dcbe7636bb95cdb","modified":1657451980663},{"_id":"source/images/0622_1/unnamed-chunk-24-1.png","hash":"1889d763dbe3a5aadb0c6258673e9cfa9e7c0f60","modified":1657451980664},{"_id":"source/images/0622_1/unnamed-chunk-24-2.png","hash":"5208d342bb279ea45f6783023495ed851754d661","modified":1657451980664},{"_id":"source/images/0622_1/unnamed-chunk-22-1.png","hash":"9f30fefed711db7ef9db2f36be7db350561cf08d","modified":1657451980664},{"_id":"source/images/0622_1/unnamed-chunk-24-3.png","hash":"c42a4c4ef36ec3272bd94060eae2cfe04a7b0e10","modified":1657451980664},{"_id":"source/images/0622_1/unnamed-chunk-4-1.png","hash":"0df0a43b16f8dd4f025c9eebdf6152c0cecad332","modified":1657451980665},{"_id":"source/images/0622_1/unnamed-chunk-5-1.png","hash":"48f83ed6123d4a85ee8bddb987b86a09414899f4","modified":1657451980665},{"_id":"source/images/0622_1/unnamed-chunk-6-1.png","hash":"30db26a5fc0b80241fdaef62eb8cf9f420346930","modified":1657451980666},{"_id":"source/images/0622_1/unnamed-chunk-3-1.png","hash":"30db26a5fc0b80241fdaef62eb8cf9f420346930","modified":1657451980664},{"_id":"source/images/0622_1/unnamed-chunk-7-1.png","hash":"8e70bd5943e8f5fae82bced47e1b73b10c14d036","modified":1657451980666},{"_id":"source/images/0622_1/unnamed-chunk-9-1.png","hash":"3ee10844c9ab92e5455ee2bd88a38ba193d5c762","modified":1657451980667},{"_id":"source/images/0622_1/unnamed-chunk-8-1.png","hash":"95372d2872a5e4cf8ee4d05e3ef5b206bed54c42","modified":1657451980666},{"_id":"source/images/0629/output_11_0.png","hash":"cfab855f6dcd4be7755c47d47e19e17508abde74","modified":1657451980670},{"_id":"source/images/0624/unnamed-chunk-22-1.png","hash":"08dfde7e7b2234d35f244e7517ac7a4a985cd711","modified":1657451980668},{"_id":"source/images/0629/output_15_0.png","hash":"d2a7e342c9bec955510b61ed95b97bbb33d22310","modified":1657451980671},{"_id":"source/images/0629/output_9_0.png","hash":"cfab855f6dcd4be7755c47d47e19e17508abde74","modified":1657451980671},{"_id":"source/images/0630/output_11_0.png","hash":"cfab855f6dcd4be7755c47d47e19e17508abde74","modified":1657451980672},{"_id":"source/images/0630/output_15_0.png","hash":"d2a7e342c9bec955510b61ed95b97bbb33d22310","modified":1657451980672},{"_id":"source/images/0630/output_69_0.png","hash":"92a02ad0697d27450e8d079a66a65ac193602ceb","modified":1657451980674},{"_id":"source/images/0630/output_45_0.png","hash":"09b54a28749f7b4cf46237bbeb397c4982e966e4","modified":1657451980673},{"_id":"source/images/0630/output_4_0.png","hash":"57034fdad07adb55f2ea67be6b63175f5a73356e","modified":1657451980674},{"_id":"source/images/0630/output_83_1.png","hash":"faf4888a1b09c35a7e253c45cd97bc89234949de","modified":1657451980675},{"_id":"source/images/0630/output_71_0.png","hash":"75d103ec5d4e31bc1bf2e9110f1cf048e852e601","modified":1657451980674},{"_id":"source/images/0630/output_77_0.png","hash":"af7fbd14a29e8af831a6c09bac03919edf05d3d0","modified":1657451980675},{"_id":"source/images/0630/output_9_0.png","hash":"cfab855f6dcd4be7755c47d47e19e17508abde74","modified":1657451980675},{"_id":"source/images/0701/output_12_1.png","hash":"ee96bce33c045c1d75749288d52259da9f7faec8","modified":1657451980677},{"_id":"source/images/0705/output_17_0.png","hash":"6cae4aaebff3b38067303eaf0232e1526ccefbce","modified":1657451980679},{"_id":"source/images/0704/output_18_0.png","hash":"1162bfacbb781010fa17acb294c33b7b7bf4174a","modified":1657451980678},{"_id":"source/images/0623/unnamed-chunk-2-1.png","hash":"59aba65ec280a1594eec8907876b49f7726d0cfc","modified":1657451980667},{"_id":"source/images/0704/output_27_1.png","hash":"f07615cd30dbc38e16c94f9eeefc4d64c4590152","modified":1657451980678},{"_id":"source/images/0705/output_19_0.png","hash":"d8a9ed44c38ade8c2b88cd874e2ba5da03c423fb","modified":1657451980679},{"_id":"source/images/0706/output_11_1.png","hash":"3c65025771b0b21ce6080192091e5730b9b708b9","modified":1657451980680},{"_id":"source/images/0623/unnamed-chunk-5-1.png","hash":"033fc0b1792be7a70e8abf65c08f85b140cbd470","modified":1657451980668},{"_id":"source/images/0706/output_13_1.png","hash":"ebcb12ab8aff62ae04a7365a6e810ac593b4a7de","modified":1657451980681},{"_id":"source/images/0706/output_15_1.png","hash":"932612e0482f9d2a5f344840516b8dc89dd8c3f1","modified":1657451980681},{"_id":"source/images/0706/output_12_1.png","hash":"b5817db54e61468b27f150ab6b45e19a7468ec24","modified":1657451980680},{"_id":"source/images/0706/output_17_1.png","hash":"682ca7df70165fc2ab9a1006f4c1d1c5c47776d7","modified":1657451980682},{"_id":"source/images/0706/output_23_1.png","hash":"cb77a6e96687c0e2fc6f95256a671602859887ef","modified":1657451980682},{"_id":"source/images/0706/output_27_1.png","hash":"c9bf38c292c527926ae6a2a41c7b6ebcda94e9ad","modified":1657451980683},{"_id":"source/images/0706/output_32_1.png","hash":"de44fd6edc770f8b06f60936a46b7b29d8516f6f","modified":1657451980684},{"_id":"source/images/0706/output_28_1.png","hash":"ca3677d0af07f07537f4643101c64195be9ebc25","modified":1657451980683},{"_id":"source/images/0706/output_24_1.png","hash":"31241aa13e72bbb5af433adf417cb0ff017e3f09","modified":1657451980682},{"_id":"source/images/0706/output_33_1.png","hash":"f2e8b8efe028c2d3ac8f4ea67b88e03d58362016","modified":1657451980684},{"_id":"source/images/0706/output_36_0.png","hash":"7c1752deb2cf042dbb0704034b434914e2da025f","modified":1657451980685},{"_id":"source/images/0706/output_42_0.png","hash":"654324a761fe2a991eb976a7e684108f9e5bb156","modified":1657451980686},{"_id":"source/images/0706/output_8_1.png","hash":"351f103a2c40e98bf16534b7c95b569bd5e39b82","modified":1657451980687},{"_id":"source/images/0706/output_9_1.png","hash":"7b8166611d0122fb09c2ea446fca06f9372d066f","modified":1657451980688},{"_id":"source/images/0706/output_44_0.png","hash":"00f255e02e0178e2e07d2ad3fa3f8962485c1630","modified":1657451980686},{"_id":"source/images/0706/output_4_1.png","hash":"9672079e5d3fa96f89f6309f4ccbdc337602e863","modified":1657451980686},{"_id":"source/images/0706/output_38_0.png","hash":"ac348b0783c70000041d8c35197797c4b7baaa1d","modified":1657451980685},{"_id":"source/images/0706/output_6_1.png","hash":"4b27b5a773dc77a73ba161b21d28d35d2faad6d7","modified":1657451980687},{"_id":"source/images/day0623/unnamed-chunk-1-1.png","hash":"7d41544c2abfab8fbe0bc4ab8de07bbb1e5f91e2","modified":1657451980691},{"_id":"source/images/day0623/unnamed-chunk-2-1.png","hash":"59aba65ec280a1594eec8907876b49f7726d0cfc","modified":1657451980692},{"_id":"source/images/day0623/unnamed-chunk-5-1.png","hash":"033fc0b1792be7a70e8abf65c08f85b140cbd470","modified":1657451980692},{"_id":"source/images/day0623/unnamed-chunk-3-1.png","hash":"59aba65ec280a1594eec8907876b49f7726d0cfc","modified":1657451980692},{"_id":"source/images/day0623/unnamed-chunk-6-1.png","hash":"033fc0b1792be7a70e8abf65c08f85b140cbd470","modified":1657451980692},{"_id":"source/images/0707/1.png","hash":"413f45ccbaa8f514cedb4de5337428ef4488ef1c","modified":1657451980688},{"_id":"source/images/0707/2.png","hash":"b8875c206223dd6468ce6359b47a93d00b634c8e","modified":1657451980689},{"_id":"source/images/0707/4.png","hash":"7e98bb607abc9680281abf470470c1d03ca1a8c4","modified":1657451980691},{"_id":"source/images/rmd_0620/unnamed-chunk-2-1.png","hash":"33f55337a555c883c9a885fb06303beb93784d9b","modified":1657451980693},{"_id":"source/_posts/day0628_1.md","hash":"c4b4e71066a00aac799217a8f5faf9637bcb2cc1","modified":1662545995601},{"_id":"source/_posts/seoul.jpg","hash":"7ba0ed340f5f967cf34da0ba54bc414e1e6d8dfa","modified":1657451980615},{"_id":"source/images/seoul.jpg","hash":"7ba0ed340f5f967cf34da0ba54bc414e1e6d8dfa","modified":1657451980693},{"_id":"source/images/0620/Untitled 21.png","hash":"c7bf5a6eb00c34284da09f1b70915190fc90ae98","modified":1657451980651},{"_id":"source/images/0617/Untitled 10.png","hash":"0571abc01308169b481a996462630de45a92fe2f","modified":1657451980621},{"_id":"source/images/0617/Untitled 15.png","hash":"88ac18f1c4660bbcd8fc4939b587d0b411355418","modified":1657451980623},{"_id":"source/images/0617/Untitled 16.png","hash":"23d5851ec70ae9e3dba23e2df76e4b3eb91052be","modified":1657451980624},{"_id":"source/images/0617/Untitled 19.png","hash":"f7e1103d45c57f686aec60fedada01b877435db7","modified":1657451980626},{"_id":"source/images/0617/Untitled 29.png","hash":"8b8195d7cdaba9c6e0bda3ec24455472aef1562d","modified":1657451980632},{"_id":"source/images/0617/Untitled 31.png","hash":"3a05cfed95e59f74beb354abfcc5c6350c866cde","modified":1657451980634},{"_id":"source/images/0617/Untitled 32.png","hash":"8d040511e35ed8130820e3ed43dcf9c7b4509c76","modified":1657451980635},{"_id":"source/images/0617/Untitled 33.png","hash":"2c49b62c40916e90a3cc180946d0aac6d105d0f8","modified":1657451980636},{"_id":"source/images/0701/logic.png","hash":"904d340a4e14983800c3e14a7508f9f9caae65bb","modified":1657451980677},{"_id":"source/images/0707/3.png","hash":"897333c4e431ce33bbeae058fe988517d3b9945e","modified":1657451980690},{"_id":"source/_posts/image.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658314029225},{"_id":"source/_posts/PyCaret_Sample (1)/pycaret.png","hash":"23fc9da2151a43d264aa1567138e58cb53c2e5e6","modified":1657459383550},{"_id":"source/images/0620/Untitled 4.png","hash":"5e12d63c0503dd2074a9b510b63b8c256397514b","modified":1657451980655},{"_id":"source/images/0617/Untitled 42.png","hash":"fb243832d8b782edb585148f650ac819ff6773df","modified":1657451980642},{"_id":"source/images/0629/Untitled.png","hash":"90a4b12183eb6441bfceb11865f239ca769e53f1","modified":1657451980670},{"_id":"source/_posts/20211211070332_pkknkybf.jpg","hash":"3a44c2a8e6f13c8fc602d680718750c5c0286220","modified":1657451980602},{"_id":"source/_posts/1장_파이썬_프로그래밍의_기초_자료형/python.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658126921089},{"_id":"source/_posts/day0706_1/image.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658126921089},{"_id":"themes/tranquilpeak/.eslintignore","hash":"b58a409db37839e821fcfb67341f09a4110a1abe","modified":1656038486000},{"_id":"themes/tranquilpeak/.eslintrc","hash":"6b4eb0104229bfa76b2787a2fd6af5500a16b1ca","modified":1656038486000},{"_id":"themes/tranquilpeak/.gitignore","hash":"95a5fbfabbef5e4a81481150dc718bc0a507d027","modified":1656038486000},{"_id":"themes/tranquilpeak/README.md","hash":"59759c6370594f4540ca76833f28773d7c95e2ab","modified":1656038486000},{"_id":"themes/tranquilpeak/LICENSE","hash":"b93ea24b0ab23d669a5d2ad5f43e5a59189ead78","modified":1656038486000},{"_id":"themes/tranquilpeak/_config.yml","hash":"11ba5aa8f205f00026ca839a3dc1796dc2ed6d2c","modified":1681593468821},{"_id":"themes/tranquilpeak/Gruntfile.js","hash":"7310a3704e7890326f8ea1d24e4b0e969e18306e","modified":1656038486000},{"_id":"themes/tranquilpeak/package.json","hash":"1de48bb417a507f96d17071f238402fec1abf061","modified":1656038486000},{"_id":"themes/tranquilpeak/DOCUMENTATION.md","hash":"1c61dcb0b88336641ace720d8bce85830761a2e5","modified":1656038486000},{"_id":"themes/tranquilpeak/renovate.json","hash":"389385c722fccadcac232ebf89ebee766903abb0","modified":1656038486000},{"_id":"themes/tranquilpeak/.github/CONTRIBUTING.md","hash":"c7a7fbe24c483687b1698fbc48dd01c9a9b00861","modified":1656038486000},{"_id":"themes/tranquilpeak/.github/ISSUE_TEMPLATE.md","hash":"f00b5c3dc447f4bfc4eab6f93232394cb100ddc9","modified":1656038486000},{"_id":"themes/tranquilpeak/.github/PULL_REQUEST_TEMPLATE.md","hash":"693db4460131f90e53bfb9bac817117d5a71fbb5","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/all-categories.ejs","hash":"81d9e4bb6b3fc2ac0cc2a1258ac08b61aca96991","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/all-tags.ejs","hash":"51e9861778fb04b400651e54ac76b3a400b8167e","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/all-archives.ejs","hash":"906af6fc218fa12c41f243b8878c34507b00a216","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/archive.ejs","hash":"eaf8d7e5595daa728199434dc7fe5b50c2f7ee80","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/index.ejs","hash":"3486384a86ad4fcc1b192f57cdb1d78d751ed93d","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/category.ejs","hash":"1590069ffd66497ee1e9f854fab8ea9eeae47333","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/page.ejs","hash":"aacb3c66f4e8a6d49c77fe821b14ed5fc8fbacfe","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/layout.ejs","hash":"d5446823651e83242007715f650f8dc8c0c4d882","modified":1656038486000},{"_id":"themes/tranquilpeak/languages/de-DE.yml","hash":"04267335f86bf58d0a1efb3abeeaa05ce54fb1d4","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/post.ejs","hash":"aacb3c66f4e8a6d49c77fe821b14ed5fc8fbacfe","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/tag.ejs","hash":"72bff1ae241fbe2ddca0537e8ed77c791a7d1766","modified":1656038486000},{"_id":"themes/tranquilpeak/languages/fa.yml","hash":"39c49486be424ce636cc05f9231cbeff43145890","modified":1656038486000},{"_id":"themes/tranquilpeak/languages/es.yml","hash":"1d90c5525bca54ff88ea24be1caa9649242797b4","modified":1656038486000},{"_id":"themes/tranquilpeak/languages/fr-FR.yml","hash":"0a609179a6a1b08400399852f16f36188529c7b3","modified":1656038486000},{"_id":"themes/tranquilpeak/languages/en.yml","hash":"400b1fbaaf49b469f7f46b073305b14862230046","modified":1656038486000},{"_id":"themes/tranquilpeak/languages/ja.yml","hash":"1e99f3f9f9e66cf27a672b6467f55900a976382a","modified":1656038486000},{"_id":"themes/tranquilpeak/languages/it-IT.yml","hash":"a6c2cbee0bc797d1a38485a1dee5c2cfdeaaf2d5","modified":1656038486000},{"_id":"themes/tranquilpeak/languages/pt-br.yml","hash":"c02beacbc330beb07aa4c19c550d0ffe4c91eb83","modified":1656038486000},{"_id":"themes/tranquilpeak/languages/ru.yml","hash":"94d5135fb18cfa816ac1b0cb18afbb0cc79a7bdd","modified":1656038486000},{"_id":"themes/tranquilpeak/languages/ko.yml","hash":"dfd1da2aad8d7d9afed26495656245d33d61002f","modified":1681594899104},{"_id":"themes/tranquilpeak/languages/zh-cn.yml","hash":"99c3a7c9afa83ea7965473cbc7579d882a449c3c","modified":1656038486000},{"_id":"themes/tranquilpeak/languages/zh-tw.yml","hash":"5b1b42a955162d36313c839ef0d81137be23162d","modified":1656038486000},{"_id":"themes/tranquilpeak/.github/ISSUE_TEMPLATE/question.md","hash":"09ff758aa13fe66e881d9bc26fd8cecf3e4ae876","modified":1656038486000},{"_id":"themes/tranquilpeak/scripts/.eslintrc.json","hash":"d7a206835ece0e7311c73242eb1208699fecd805","modified":1656038486000},{"_id":"themes/tranquilpeak/.github/ISSUE_TEMPLATE/bug-report.md","hash":"b5df9cd9cd1e4a1208462e7d4044deaa954d4323","modified":1656038486000},{"_id":"themes/tranquilpeak/tasks/pipeline.js","hash":"12c4231a983230fe512a9834ed512439d43f4a37","modified":1656038486000},{"_id":"themes/tranquilpeak/.github/ISSUE_TEMPLATE/feature-request---improvement.md","hash":"0d05e7f78a827aba06ae24889ba2972581725fca","modified":1656038486000},{"_id":"themes/tranquilpeak/.github/workflows/nodejs.yml","hash":"8e01795ad8e159721db7e0433b1ca3610e7961f1","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/_partial/archive.ejs","hash":"bfba8f72c46c54582ba58722ccde8e55801f29f2","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/_partial/about.ejs","hash":"13e25607c08ae6971ab4b9815e13c4b12dc320cc","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/_partial/baidu-analytics.ejs","hash":"871040d068ddcd31558095ea1c5893f8adc5435a","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/_partial/archive-post.ejs","hash":"9f9d0b50dbb093f6d41d48cf15f31c1e1df909bf","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/_partial/cover.ejs","hash":"e574e5c0798f183626eec49a85b3ecc58d54c9e6","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/_partial/google-analytics.ejs","hash":"d008e9101a6d5bb5a9888abb3d50caee737af9ef","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/_partial/footer.ejs","hash":"ee47c57a9c682212e1a5a367fa83e9b5dc54919f","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/_partial/header.ejs","hash":"60233dad83a81f11db590bda1c16ebdb0c3f7ee5","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/_partial/pagination.ejs","hash":"646dcab0febb5aeaebb654af9012fc6aa5afae75","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/_partial/index.ejs","hash":"c4f2e6deb0be86a397a0c3b7c42da73b577b283f","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/_partial/head.ejs","hash":"e2b70df0dcaa15156ab33ce12baacc52ed188fe4","modified":1656038718000},{"_id":"themes/tranquilpeak/layout/_partial/post.ejs","hash":"aaeada776ef8818a8e806f7576c71af8a2ea613c","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/_partial/search.ejs","hash":"006d608d38e8e3326b0bf6b3b1cc5e899955e816","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/_partial/script.ejs","hash":"d09b7c26f628651172f5e064d466c70ad1a70c14","modified":1656038718000},{"_id":"themes/tranquilpeak/scripts/filters/thumbnail_image_url.js","hash":"9a0cb80f2d069af85c0cca00edce2ef184b3eba3","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/_partial/sidebar.ejs","hash":"55f976c44a92afa6218aab5d18c26d4938cc50e8","modified":1656038486000},{"_id":"themes/tranquilpeak/scripts/filters/excerpt.js","hash":"8a7ddc62811c9dc6d86c5ad04e1a61d83ff2639a","modified":1656038486000},{"_id":"themes/tranquilpeak/scripts/helpers/is_remote_url.js","hash":"b89fec5dbdbc9adc9846fdd9f832d7ca49171b8c","modified":1656038486000},{"_id":"themes/tranquilpeak/scripts/helpers/generate_sharing_link.js","hash":"bc986984c45815be9a958ec0b53c3ccdec08a01c","modified":1656038486000},{"_id":"themes/tranquilpeak/scripts/helpers/absolute_url.js","hash":"496fefd84e23eddb85a6644fdcf0dce4509e9dfe","modified":1656038486000},{"_id":"themes/tranquilpeak/scripts/helpers/resolve_asset_url.js","hash":"0b5ecf5dba85f4ea69d7ca366d3cbd65f35cd63e","modified":1656038486000},{"_id":"themes/tranquilpeak/scripts/helpers/json_ld.js","hash":"b04b41be6eb1687cd2a49f312cd0b49bddba89a6","modified":1656038486000},{"_id":"themes/tranquilpeak/scripts/tags/alert.js","hash":"bdf7c5e7bdc9a1f68fb3e6c90fecf8f286c3e620","modified":1656038486000},{"_id":"themes/tranquilpeak/scripts/tags/fancybox.js","hash":"cc66a0600b0e5c7dffe0901b133420814bc97003","modified":1656038486000},{"_id":"themes/tranquilpeak/scripts/tags/highlight_text.js","hash":"f35c0cd8233c991ac815b704b29fb7a0f3676c54","modified":1656038486000},{"_id":"themes/tranquilpeak/scripts/tags/image.js","hash":"febac317ea3f21463552cae57b0b7ec2c74fc1c2","modified":1656038486000},{"_id":"themes/tranquilpeak/scripts/tags/tabbed_codeblock.js","hash":"1e02fdf09e9d4415b54edd5ba3c0578d36c8dae6","modified":1656038486000},{"_id":"themes/tranquilpeak/scripts/tags/video.js","hash":"6424a09449e30e0fba0d22fcea727ed120ed8b55","modified":1656038486000},{"_id":"themes/tranquilpeak/scripts/tags/wide_image.js","hash":"54f9993d946691a547655465d474ea722f30c9db","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/tranquilpeak.scss","hash":"f585d7efe1859b655637c009d2f1723f99b9692b","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_fonts/merriweather-bold.ttf","hash":"e6d0ffb2d0348d9e22de97e57214b7db795e9513","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_fonts/merriweather-bold-italic.ttf","hash":"c1b8593dc9ddbf1a1a6268d31e08c4041448ed76","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_fonts/merriweather-light-italic.ttf","hash":"c3835119c62e78a21cfb33e2de6686fb4a5929a0","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_fonts/merriweather.ttf","hash":"d392237948e74246a2fb0d0d886498776a185e54","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_fonts/merriweather-light.ttf","hash":"69bd3f15962cf91348a133d3d38571a5c67eca65","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_fonts/open-sans-bold.ttf","hash":"3823779db9f51a34658809ce66bdd6ed1145ed8e","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_fonts/open-sans.ttf","hash":"618b78a8f6ffe7e1998eab67268859e2ab54be8e","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_js/.eslintrc.json","hash":"7668eb84911a730e01204740a563a9bd1634f22e","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_js/about.js","hash":"257714d1b4f345a5f9115eefe9dfac8defba7f60","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_js/archives-filter.js","hash":"0add1a22fc93ba2553a2834877acd66af2ab702f","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_js/categories-filter.js","hash":"b9566b283fbf8618cd6ec8663c6fb8f28c1874a7","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_images/logo-algolia-nebula-blue-full.svg","hash":"d5e4426b6bd2d8b8c3f477f83d348d8f3b3ec1ca","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_js/codeblock-resizer.js","hash":"ea89298810da769e984f5a37203f965d3899f5bd","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_js/fancybox.js","hash":"27e3a97c88ecb0bff6b05fcbc92d7bd7005d055a","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_js/image-gallery.js","hash":"d915e4f9b0a0c0fcea7c6893ec0b823abde2c344","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_js/post-bottom-bar.js","hash":"f5e3eb000909ce1e47fa954b6e2f5ea256c6cc04","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_js/search-modal.js","hash":"d79d2cb3872b7212ee85bcca2d1dc029160857b7","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_js/header.js","hash":"767b4c69b9bd6f3789b05f871ab56d2e8db436ce","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_js/share-options.js","hash":"fe6da11927cd07ed8b156d071d7f61239fa58367","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_js/tags-filter.js","hash":"62f0bf0fea06e2877f38b8f059b46ef39d143a3d","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_js/sidebar.js","hash":"d2b3345de8ff34e02ddd3ce91e23d7862f89d648","modified":1656059590000},{"_id":"themes/tranquilpeak/source/_js/tabbed-codeblocks.js","hash":"5a69e71e77b8ace6730d1003d7bbe1a7966f8690","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_js/smartresize.js","hash":"c5b82e44bf98305afb897e73f082810faefd85c6","modified":1656038486000},{"_id":"themes/tranquilpeak/tasks/config/clean.js","hash":"3d4d13265c10d036bc0ecac7733327daa9a95b17","modified":1656038486000},{"_id":"themes/tranquilpeak/tasks/config/concat.js","hash":"4e87d31d2d92fcdc64b16e253072d24e5f8a007d","modified":1656038486000},{"_id":"themes/tranquilpeak/tasks/config/cssmin.js","hash":"082ebe087a09f0c7054bea0754ec7e647d432f93","modified":1656038486000},{"_id":"themes/tranquilpeak/tasks/config/replace.js","hash":"18015172ede5943d3507a93ef569cb0d3dcbdf6d","modified":1656038486000},{"_id":"themes/tranquilpeak/tasks/config/copy.js","hash":"334a2d4079671c9f4c06e7f1419e08c7836fe8a4","modified":1656038486000},{"_id":"themes/tranquilpeak/tasks/config/sails-linker.js","hash":"8d723b894b644a8bb863ee25c81b51df1726e7c1","modified":1656038486000},{"_id":"themes/tranquilpeak/tasks/config/sync.js","hash":"1f7b7fcdd346679a693e0a9dee8ad9062d94f2ce","modified":1656038486000},{"_id":"themes/tranquilpeak/tasks/config/sass.js","hash":"50bfbb4368e9ed7a3433184246ad01334b421c7b","modified":1656038486000},{"_id":"themes/tranquilpeak/tasks/config/watch.js","hash":"c9011b289e1201b3192126f8f3b7aff92b0118d2","modified":1656038486000},{"_id":"themes/tranquilpeak/tasks/register/build.js","hash":"a517462ebaf29a4ce1c6664c2d823cc254894c2c","modified":1656038486000},{"_id":"themes/tranquilpeak/tasks/config/uglify.js","hash":"5009aaf01593527962784b39deef505d004e288a","modified":1656038486000},{"_id":"themes/tranquilpeak/tasks/register/compileAssets.js","hash":"931a415c2fcbe2f53854c794fff0eb64f99b2985","modified":1656038486000},{"_id":"themes/tranquilpeak/tasks/register/default.js","hash":"da5f3afd5f8731a2cc25ee979b46a6156d262373","modified":1656038486000},{"_id":"themes/tranquilpeak/tasks/register/buildProd.js","hash":"bf2ff77506eedfd6f424e130367b30c14cf13af2","modified":1656038486000},{"_id":"themes/tranquilpeak/tasks/register/eslint.js","hash":"0fd7f14108a8c757218bdd7001e495ddbe908c1e","modified":1656038486000},{"_id":"themes/tranquilpeak/tasks/register/linkAssetsProd.js","hash":"bc1cf26bfa57ab3045c6115c5ca96451d0f453bb","modified":1656038486000},{"_id":"themes/tranquilpeak/tasks/register/linkAssets.js","hash":"b6bb4521d655f81fb1ae1e15f7a45ce85deb3870","modified":1656038486000},{"_id":"themes/tranquilpeak/tasks/register/syncAssets.js","hash":"66c24fb87b902e2e1e49f20fc256dd092c8cd7bd","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/_partial/post/category.ejs","hash":"5eb3b1f246568724c766163541355d27d4eb8cc5","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/_partial/post/actions.ejs","hash":"80c5406e336b32cb49e7e02b409d96decf4dc58d","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/_partial/post/disqus.ejs","hash":"c72be41780f9c65cab2f278cc23b22b6dbb5bac1","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/_partial/post/gallery.ejs","hash":"b24d69e8863e02b4f688cd04c1e6cb76aa4b841f","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/_partial/post/duoshuo.ejs","hash":"6881233b163a5812eaad64db94ee052040865c6e","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/_partial/post/gitalk.ejs","hash":"51853f5e1b466d876bade6fb1c65a2e25c9df992","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/_partial/post/gitment.ejs","hash":"1dcfdca4d20bab5a43bda44cf37df506ab3a0fb7","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/_partial/post/header-cover.ejs","hash":"0c5586a219481a2370065ffb804dd32a9d6b2752","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/_partial/post/meta.ejs","hash":"72d2a835a31f70a4d39faaa0b3adf5bebf0f632c","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/_partial/post/header.ejs","hash":"5978dbb96f616f90ce71343ee94b4ff9388ccbd0","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/_partial/post/share-options.ejs","hash":"12211764ed21e025258135eae05739a70ba047a7","modified":1656038486000},{"_id":"themes/tranquilpeak/layout/_partial/post/tag.ejs","hash":"602f51f0b83dd6e06d4988425c2d0b27448d8c94","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/components/_archive.scss","hash":"e6da3fbd34e4aa5a786cc9d6dd60d057a4f6e09e","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/components/_box.scss","hash":"806359baf70199bfb930b7bcd46598e982e11e7c","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/components/_alert.scss","hash":"2db9894ed798139cc11df637325237a94fa960a3","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/components/_button.scss","hash":"899e5796853b31e4bdd98d96eef2ed85a926ac0c","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/base/_base.scss","hash":"2b51219cc1ca7986004dbf2ad027a7f119da6379","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/components/_caption.scss","hash":"7d6ee5066304b82ff555e1e4d09bd226db6855d5","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/components/_code.scss","hash":"f52da79a13bc0daf47189f5e305f8a48b3cb8837","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/components/_fancybox.scss","hash":"7e8da9a681478bf55a6dbedacb3876a38043085d","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/components/_figure.scss","hash":"a43a18feb6224cc033a8f7fb3fc40d36e2eeb4d0","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/components/_hide.scss","hash":"c9e5f2e86404243e254103f86485dd3ead6cf985","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/components/_icon.scss","hash":"20e0698a8f0963cbad5beb78bfb5d01257622ced","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/components/_highlight-text.scss","hash":"9bbafdd6d16beb1a4974facf189d5e20e1574c17","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/components/_image-gallery.scss","hash":"cc81bfb41c7646550beb2f63d4ec538fae7c6ef6","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/components/_form.scss","hash":"471d60275c22b11ba6d0560155d0ab9466d718f5","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/components/_link.scss","hash":"51e76a3ce339b2ac13db46afda2fe51d6c295c5c","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/components/_markdown.scss","hash":"d90de4c61310037c8414cfec4f8b0b97acfe9426","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/components/_main-content.scss","hash":"30a5577a001d7af4ee9acb10561939d54284b70b","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/components/_modal.scss","hash":"aab1d74706ee10c0750d5cc043c20d6dec436efa","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/components/_media.scss","hash":"c8dac3ad7cd23d6feef409256b93c743828a2142","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/components/_post-actions.scss","hash":"884dc890848b3f328fb81246ae13665463cb127c","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/components/_pagination.scss","hash":"903f49aa615d78660c93b3fb1db0c55708b94190","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/components/_post-header-cover.scss","hash":"80030d4e3c5d5ef77979e00e8ceec6c175c34e9e","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/components/_postShorten.scss","hash":"7e14316ad11dbf73d9f182099cf2ee203b203632","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/components/_pullquote.scss","hash":"b9d56d3bbf31dab2e647133c9376b9c6aef9b150","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/components/_share-options-bar.scss","hash":"443d06df9be3349b3a354cc62ddcb98a74c236d8","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/components/_post.scss","hash":"15fe756fbe5e6ca1ba79f3db894ad6db589b87f9","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/components/_tag.scss","hash":"17cf385de30a1c2468db05697b1d7d7e64374f1b","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/components/_text.scss","hash":"80285f7820a696c716a3d71bb35658d4c42ff933","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/components/_tooltip.scss","hash":"54745301f0c3d1c46b6822ad7140e3a175e8a426","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/components/_video.scss","hash":"2d65fe9ed477c6680cc7cc0f31584c72d76beb58","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/layouts/_about.scss","hash":"6cb5551b3f1185c8292b3e45a3f15a8bcae5190e","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/layouts/_bottom-bar.scss","hash":"003642701849244ec30bba561ba771ee0f1d1303","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/layouts/_blog.scss","hash":"e390770731ab5b0fea5cbb1866e4efb93e6079c0","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/layouts/_footer.scss","hash":"ffad0f76f9329ea9a902530e2db410d48996851c","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/layouts/_cover.scss","hash":"2095f2c726f324757efffe25a01fe40b48fdb714","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/layouts/_main.scss","hash":"f327f42f787091b4b738bcc3521499ba70c2fe3e","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/layouts/_header.scss","hash":"c2132f256e329c3b6b23a5aeb9072d49a66b0ba8","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/themes/_hljs-tranquilpeak.scss","hash":"d120782c7a4ffa112820ebad906d2c35e7f78822","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/themes/_hljs-custom.scss","hash":"a58578043a982be82e29952f32c96ebd69849974","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/layouts/_sidebar.scss","hash":"60f97f9c0b1afc2ebb09958752639ea5fb731e22","modified":1656059564000},{"_id":"themes/tranquilpeak/source/_css/pages/_search.scss","hash":"96a292b594d3b216dfa319a4f38af9df20afb03c","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/utils/_fonts.scss","hash":"23e59e7378c2bd79aeb45247f1879842e776ab5a","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/utils/_variables.scss","hash":"39d3b40d10e7ebf077c8cf87a7ff80e1859209d9","modified":1656057724000},{"_id":"themes/tranquilpeak/source/assets/css/gitalk.css","hash":"61d71cb30f5f34cbb1f2b5bc469784d6cb908c22","modified":1656038680000},{"_id":"themes/tranquilpeak/source/assets/css/jquery.fancybox.css","hash":"00ce8430edb0a4ca35e08a9813e039d3a4b7868c","modified":1656038712000},{"_id":"themes/tranquilpeak/source/assets/css/gitment.css","hash":"7fbb18b73b44ed11193739c55fce53a6f173cf68","modified":1656038712000},{"_id":"themes/tranquilpeak/source/assets/css/thumbs.css","hash":"133acf84f948218219d3f23eb466fe54aceda97d","modified":1656038682000},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-regular-400.eot","hash":"670fb01e4930ae46fe8d6d2b75ead288f54e8e61","modified":1656038682000},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-regular-400.ttf","hash":"c34acd6818df6db6be41a2e331886765d601f2eb","modified":1656038688000},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-regular-400.woff2","hash":"13517529affa39e2585c591acae6dc336b6aa917","modified":1656038688000},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-regular-400.woff","hash":"3ad4f4e4b1fb3edee3d4ba25e6cdfed2f0b88a54","modified":1656038688000},{"_id":"themes/tranquilpeak/source/assets/fonts/merriweather-bold-italic.ttf","hash":"c1b8593dc9ddbf1a1a6268d31e08c4041448ed76","modified":1656038712000},{"_id":"themes/tranquilpeak/source/assets/fonts/merriweather-bold.ttf","hash":"e6d0ffb2d0348d9e22de97e57214b7db795e9513","modified":1656038712000},{"_id":"themes/tranquilpeak/source/assets/fonts/merriweather-light.ttf","hash":"69bd3f15962cf91348a133d3d38571a5c67eca65","modified":1656038712000},{"_id":"themes/tranquilpeak/source/assets/fonts/open-sans-bold.ttf","hash":"3823779db9f51a34658809ce66bdd6ed1145ed8e","modified":1656038712000},{"_id":"themes/tranquilpeak/source/assets/fonts/merriweather-light-italic.ttf","hash":"c3835119c62e78a21cfb33e2de6686fb4a5929a0","modified":1656038712000},{"_id":"themes/tranquilpeak/source/assets/fonts/open-sans.ttf","hash":"618b78a8f6ffe7e1998eab67268859e2ab54be8e","modified":1656038712000},{"_id":"themes/tranquilpeak/source/assets/js/algoliasearch.js","hash":"09662bcddf4b7bc52d84c13b8a2897ea63226e80","modified":1656038712000},{"_id":"themes/tranquilpeak/source/assets/fonts/merriweather.ttf","hash":"d392237948e74246a2fb0d0d886498776a185e54","modified":1656038712000},{"_id":"themes/tranquilpeak/source/assets/js/thumbs.js","hash":"ee9a65e280178b9525441b751ad7c0e6eb887022","modified":1656038682000},{"_id":"themes/tranquilpeak/source/assets/js/tranquilpeak.js","hash":"d3d5f6f215cdbc416c485473659bc1126f35ac69","modified":1656038712000},{"_id":"themes/tranquilpeak/source/assets/images/logo-algolia-nebula-blue-full.svg","hash":"d5e4426b6bd2d8b8c3f477f83d348d8f3b3ec1ca","modified":1656038712000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_bottom-bar.scss","hash":"742f3a6eeae8581bf1db5c9172aa8c030c8a92e6","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_category.scss","hash":"a058a31159ef24846b108bc87516fe889ff4805d","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_form.scss","hash":"a73ebe20494dd8b3718276ad9810d615f8995f5f","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_header.scss","hash":"dbf40cf0add41713676a8e2e3a343d9bf25447a0","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_button.scss","hash":"aa8f36e0e6e8691251c9468e119f5b27d4a5abc0","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_main.scss","hash":"920ee98db90c7aaa0b7660131189b0aadb5c219a","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_opacity.scss","hash":"38e03eaf1afc7a5a601479e556ca4c8f9abfb464","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_prefix.scss","hash":"6dc39f77c8322a26edf51be9418c60174720cdaa","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_post-header-cover.scss","hash":"4146edd386a91cafe3c13662f3f02ca2b13dbeb9","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_share-options-bar.scss","hash":"bc8e88cdda0f3c184f432ecb51abae8a27bec2f8","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_sidebar.scss","hash":"ad453d8b7a8cc4d8cd6215276e408417d229f9bc","modified":1656058244000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_tag.scss","hash":"1f989247cd8fb95c02f1a12871455f13d01d4678","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_variables.scss","hash":"30745fc41bd0c467c810d4e3d9ae710081cfebc2","modified":1656038486000},{"_id":"themes/tranquilpeak/source/_images/cover.jpg","hash":"088a7ca5ab9c902ed5755fb84a2e85c4144876c9","modified":1657463051543},{"_id":"themes/tranquilpeak/source/assets/css/all.css","hash":"b0913ecc71a5d71d40886bde12c0e86d44f6c845","modified":1656038712000},{"_id":"themes/tranquilpeak/source/assets/css/tranquilpeak.css","hash":"c0b9a842fa9d8e620776fdf865e035216abc1341","modified":1656038712000},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-brands-400.woff2","hash":"0613c7ebba55ee47ef302c0f7766324692f899a7","modified":1656038688000},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-brands-400.woff","hash":"1e1f02bfa89e179fe2dd1383273b8812aa873418","modified":1656038688000},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-solid-900.woff2","hash":"0ccb2c814a7e4ca12c4778821633809cb0361eaa","modified":1656038688000},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-solid-900.woff","hash":"a22acd7697f36e7d4cc31a853c70e776eac54bb1","modified":1656038688000},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-brands-400.eot","hash":"d1ffd6340cdbf72890ccb67f32015eafc5df51a7","modified":1656038682000},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-brands-400.ttf","hash":"8ab907083fecaaa2a9ec93b27f884ad74573705c","modified":1656038688000},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-regular-400.svg","hash":"326e1d8f0b23f6df95cd6784fdf330bc6414ecd0","modified":1656038686000},{"_id":"themes/tranquilpeak/source/assets/js/gitment.js","hash":"376446d9c5930576016f97dd63e5e6616c94d8d4","modified":1656038712000},{"_id":"themes/tranquilpeak/source/assets/js/jquery.fancybox.js","hash":"aea31438e13e5f13a842a8d0c8ee84c3b60ee3ab","modified":1656288064000},{"_id":"themes/tranquilpeak/source/assets/js/script-h2jfxkdpi3i16rf1rss8upq5l4k20wtukjvlixsznqxrpqwnsevgbqric0qi.min.js","hash":"3fbf7421048051b7379ab16fd7c7ecd57b973bc4","modified":1656038718000},{"_id":"themes/tranquilpeak/source/assets/css/style-3nkouozwe8vtu8c81mdnm03zdusg8chppv647kiomisiliyaela9skwqht91.min.css","hash":"37ae02b8749e3a4ae5cbb5bf377b968aed954ef5","modified":1656059932000},{"_id":"themes/tranquilpeak/source/assets/css/style.css","hash":"b937dcab4c4977c27164e5b93782df8c6a42b05c","modified":1656038712000},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-solid-900.ttf","hash":"eb8914f6b1797b45ee0883e6089d92695d9f9441","modified":1656038688000},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-solid-900.eot","hash":"ea845c59bee4a5c6db774b8d8060f5641b789ae9","modified":1656038682000},{"_id":"themes/tranquilpeak/source/assets/js/jquery.js","hash":"af32f706407ab08f800c5e697cce92466e735847","modified":1656038682000},{"_id":"themes/tranquilpeak/source/_images/cover-v1.2.0.jpg","hash":"a98b9bf4d6be3af0156c0b6e781f067e343a682d","modified":1656038486000},{"_id":"themes/tranquilpeak/source/assets/images/cover-v1.2.0.jpg","hash":"a98b9bf4d6be3af0156c0b6e781f067e343a682d","modified":1656038712000},{"_id":"themes/tranquilpeak/package-lock.json","hash":"9c7be9e442af907e876deec0ddae5eb1a45b3c9a","modified":1656038700000},{"_id":"themes/tranquilpeak/source/assets/js/script.js","hash":"c1adfe0b25b7218b0a016f4980b4b23ba23c233a","modified":1656059856000},{"_id":"themes/tranquilpeak/source/assets/js/moment-with-locales.js","hash":"f95b871ec6893f58ff57ef3eefb7eeef73846b4e","modified":1656038684000},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-brands-400.svg","hash":"907bfbbe295332750575900984a00136de0f0e90","modified":1656038686000},{"_id":"themes/tranquilpeak/source/assets/fonts/fa-solid-900.svg","hash":"d92687d30fa0d43f9ae71009398507bf813a6875","modified":1656038686000},{"_id":"themes/tranquilpeak/source/assets/js/gitalk.js","hash":"5211dd454844165949607d4b7410f4b400807d62","modified":1656038682000},{"_id":"themes/tranquilpeak/source/assets/images/cover.jpg","hash":"653b50dc668e51796c13cf98d2bcab834ec685dc","modified":1657463908371},{"_id":"public/all-categories/hello-world.html","hash":"7f28573c4a36900be55a9baf0887c2b01168a4de","modified":1680748325582},{"_id":"public/all-categories/index.html","hash":"73cd1b8124594fbe7151d4639cf685cb5a6d4067","modified":1680748325582},{"_id":"public/all-tags/index.html","hash":"50269983a32fe762739569d9e2427c0875325fab","modified":1680748325582},{"_id":"public/categories/점프-투-파이썬/index.html","hash":"095ae8b83692b9fd5168a835d56158a1351c16f9","modified":1680748325582},{"_id":"public/categories/블로그/index.html","hash":"3fce7a2fcf133ebf6e8748c48e647cbbb77de1b6","modified":1680748325582},{"_id":"public/archives/2022/06/page/3/index.html","hash":"73abe626c787324727f3cb7fcf6828605204078f","modified":1680748325582},{"_id":"public/all-archives/index.html","hash":"9afed44553d09b29b4bd533361a72f7da4b4fb33","modified":1680748325582},{"_id":"public/2022/07/08/블로그 설정/index.html","hash":"803197df68f7a2d01119374c2a0ffa8cee1abb50","modified":1680748325582},{"_id":"public/2022/07/06/day0706_1/index.html","hash":"ff9774fca88e170d7148169c272f6b25e9966296","modified":1680748325582},{"_id":"public/2022/07/05/PyCaret_Sample (1)/index.html","hash":"f25de654b9c15c1603ad4789757d611d403a4269","modified":1680748325582},{"_id":"public/2022/07/04/XGBoost_&_LightGBM/index.html","hash":"b564883abdb1413cfe8393b0f20472ad041969d7","modified":1680748325582},{"_id":"public/2022/07/04/day0704/index.html","hash":"da8863925dc934e92025d5cc4e6d1f2d6dd0934d","modified":1680748325582},{"_id":"public/2022/07/01/day0701_ch04/index.html","hash":"15da693729d134e8ab31f94a2ba647225ed0dc47","modified":1680748325582},{"_id":"public/2022/07/01/day0701_ch03/index.html","hash":"3bf5e1d22640960ba15a1100343a26de2ead2157","modified":1680748325582},{"_id":"public/2022/06/30/day0630_ch3/index.html","hash":"887f2a9d8db541d84907e7fcadf3521b29daba35","modified":1680748325582},{"_id":"public/2022/06/30/day0630_ml/index.html","hash":"f77a712796f917c4619e325486293c7bb66afbde","modified":1680748325582},{"_id":"public/2022/06/29/day0629_ml/index.html","hash":"ec3f2824496c6b78f0619a5f81c9596bbbda780f","modified":1680748325582},{"_id":"public/2022/06/28/day0628/index.html","hash":"d27b8798cb6283576b4efc201295aeeb209ce631","modified":1680748325582},{"_id":"public/2022/06/29/day0629/index.html","hash":"2cd2d39c45e97ffb7d6eb30e9491ebcd03681ac0","modified":1680748325582},{"_id":"public/2022/06/28/day0628_1/index.html","hash":"c275615be6e1b30f7c48e057cd67740ffc30bc1e","modified":1680748325582},{"_id":"public/2022/06/27/1장_파이썬_프로그래밍의_기초_자료형/index.html","hash":"8bb13ee7b79c09bba1b668855d1d7706de87fe6e","modified":1680748325582},{"_id":"public/2022/06/27/day0627/index.html","hash":"a3d114fd7253d4d052ae3a6a8ae5389731c683a5","modified":1680748325582},{"_id":"public/2022/06/24/mental/index.html","hash":"0bf07b65726e738e24f7ac4c937438dc3dead7da","modified":1680748325582},{"_id":"public/2022/06/23/day0623/index.html","hash":"3e108609389cd8b1f40062edaacef305c373184e","modified":1680748325582},{"_id":"public/2022/06/23/remind/index.html","hash":"4d270f5c95fbc6ef3ace240db9d1fae67e4cea53","modified":1680748325582},{"_id":"public/2022/06/23/curriculum/index.html","hash":"fb62f666710c386e57db794e73208ff44f274e15","modified":1680748325582},{"_id":"public/2022/06/22/day0622_1/index.html","hash":"75dfb03b8f296d1f013b4121868b473891e585a6","modified":1680748325582},{"_id":"public/2022/06/22/day0622/index.html","hash":"ab5b83ebcc670149fa8e170ee3a6c6675676b0ca","modified":1680748325582},{"_id":"public/2022/06/21/day0621_dplyr/index.html","hash":"3005cf057cd67e1b44c9b7e68aa74a97bcf30aab","modified":1680748325582},{"_id":"public/2022/06/21/day0621/index.html","hash":"310fc513ae064a717d0506644940d93f9f130ed6","modified":1680748325582},{"_id":"public/2022/06/20/0620/index.html","hash":"7a9c6aa6be1df88c724447a318374cdb407f0ebb","modified":1680748325582},{"_id":"public/2022/06/20/day0620/index.html","hash":"dcd8d35a12a021bd46fb10043046ca985818f353","modified":1680748325582},{"_id":"public/2022/06/20/test/index.html","hash":"3e368b027704eef1a99b5dd271786a136345f988","modified":1680748325582},{"_id":"public/2022/06/17/0617 f76ecd14aebf4b66a1bf966d7061b068/index.html","hash":"f50e28c5fb7f02188511c75f8550f0d42d23f7a6","modified":1680748325582},{"_id":"public/2022/06/17/day0617/index.html","hash":"a12e0ae58546455ca2d7a6e75ff2559a13531d9d","modified":1680748325582},{"_id":"public/categories/XGBoost-LightGBM/index.html","hash":"bdef5351bd3a68b150fc53b37f7f476facc32a2e","modified":1680748325582},{"_id":"public/categories/Python/index.html","hash":"6311644cf4d7592f2339b94a1bcdc775b66d3b52","modified":1680748325582},{"_id":"public/categories/복습할-것들/index.html","hash":"f3655308561e4074c1b4fbb3d35d2a372fb01688","modified":1680748325582},{"_id":"public/index.html","hash":"ba5d7a9720ed7f809fd881844b936ad95e40e443","modified":1680753129699},{"_id":"public/page/2/index.html","hash":"ee0947ec0803a5f7798bd7ccddafd5daa02e1b0b","modified":1680748325582},{"_id":"public/page/3/index.html","hash":"7b40f9aeafb34523008f9063fcc826a197260246","modified":1680748325582},{"_id":"public/archives/index.html","hash":"316da9a9ae188a31af57e83cc0d186718a24b4cc","modified":1680753129699},{"_id":"public/archives/page/2/index.html","hash":"321023247f79a51d515d2a1a1a1781e804dd97da","modified":1680748325582},{"_id":"public/archives/page/3/index.html","hash":"013b7ee4088021c8ed93ddc941390539cf1ca0cc","modified":1680748325582},{"_id":"public/archives/2022/index.html","hash":"1384c1fdee07e1252e78406144aee657c3af2f2e","modified":1680753129699},{"_id":"public/archives/2022/page/2/index.html","hash":"b9e434e3b52046ee4c8555fa786b9f4f9218c450","modified":1680748325582},{"_id":"public/archives/2022/page/3/index.html","hash":"bf01cfbf0b35bc5608ede2e389f26fa4057e2e0f","modified":1680748325582},{"_id":"public/archives/2022/06/index.html","hash":"2651ea907eadb4eb1d1cda5587bb703206906821","modified":1680748325582},{"_id":"public/archives/2022/06/page/2/index.html","hash":"7f8cdeb5419b73ec2bb10b94977ba4817457e973","modified":1680748325582},{"_id":"public/archives/2022/07/index.html","hash":"f14995f53107bb1d1f870969f24e87e097282908","modified":1680748325582},{"_id":"public/day01.Rmd","hash":"8e4d698e7e3316aacbb23a8c59957d81fe37505d","modified":1657459650572},{"_id":"public/images/0620/Untitled 11.png","hash":"a48124a4ae4751a0ff8e92bfce36678af8c14309","modified":1657459650572},{"_id":"public/images/0620/Untitled 10.png","hash":"c72f140cb368c912cad2ac012fc136f2b8c0a105","modified":1657459650572},{"_id":"public/images/0620/Untitled 13.png","hash":"b450ef3742fb7777e828e89e4041a2da4b4561e9","modified":1657459650572},{"_id":"public/day01.R","hash":"74e3f4b0d921e7126218f0a2263016949291fcfe","modified":1657459650572},{"_id":"public/images/0620/Untitled 1.png","hash":"2554dee1d93e6146b38d5fadc5d26071db4ae79f","modified":1657459650572},{"_id":"public/images/0620/Untitled 12.png","hash":"20b3d089a4d5cbd1faa7f1deacebd539c568f7d4","modified":1657459650572},{"_id":"public/images/0620/Untitled 16.png","hash":"3cc03fa2de9561ce9cda32522852c0c0284443a0","modified":1657459650572},{"_id":"public/images/0620/Untitled 14.png","hash":"6c0a310c5648d9ff62f501bea64280928b5a5387","modified":1657459650572},{"_id":"public/images/0620/Untitled 17.png","hash":"62bf6bbf202b69898b5d9b9a24f5d1565f8fe662","modified":1657459650572},{"_id":"public/images/0620/Untitled 15.png","hash":"34853d45439451be0b703120873b21b3fe8f63ac","modified":1657459650572},{"_id":"public/images/0620/Untitled 18.png","hash":"6fefcc288ee202e03f355c60175f8ac812b043fb","modified":1657459650572},{"_id":"public/images/0620/Untitled 19.png","hash":"91844baff2ac409571efa5224987d5c82cba872a","modified":1657459650572},{"_id":"public/images/0620/Untitled 2.png","hash":"036729246ed5e2c8b5fb1c73a01c4b332cb89589","modified":1657459650572},{"_id":"public/images/0620/Untitled 20.png","hash":"7a935fcce94b00e1ce160272b28fffd94fcdb36c","modified":1657459650572},{"_id":"public/images/0620/Untitled 23.png","hash":"b9b256c59ad6e8001b4780fe73eee738b3568753","modified":1657459650572},{"_id":"public/images/0620/Untitled 22.png","hash":"d3f4a80443c84776b169f4b9bfe1701fe64470dd","modified":1657459650572},{"_id":"public/images/0620/Untitled 24.png","hash":"4f68a865839b2bb19786555bae822157f2f5a797","modified":1657459650572},{"_id":"public/images/0620/Untitled 3.png","hash":"704e46fddd1a31d5a2f0cc23ef6ad2fdb9fff17e","modified":1657459650572},{"_id":"public/images/0620/Untitled 25.png","hash":"fdd69b0a925d0c2e1e8ad2ac6bcb4da8370aa742","modified":1657459650572},{"_id":"public/images/0620/Untitled 5.png","hash":"1d2e95b8538876dc651a1b6a994c494c850bd7c6","modified":1657459650572},{"_id":"public/images/0620/Untitled 6.png","hash":"6a9cc9b2144e6413ceb51ad19e5ad504c699da66","modified":1657459650572},{"_id":"public/images/0620/Untitled 7.png","hash":"0efff9aee7aff6902ec5fdf86d1d8801b6bfcb6c","modified":1657459650572},{"_id":"public/images/0620/Untitled 8.png","hash":"d62cb116251b4e372ba271733d1f9288ff5f1348","modified":1657459650572},{"_id":"public/images/0620/Untitled 9.png","hash":"af3a2589f13444ee5d01ed498988fa2582103f45","modified":1657459650572},{"_id":"public/images/0622/unnamed-chunk-21-1.png","hash":"a0a7abdc8836a40c283e60f7316bc652bd4a004f","modified":1657459650572},{"_id":"public/images/0620/Untitled.png","hash":"2f941afff6a14df27a2e7410eec7f3d885bfe295","modified":1657459650572},{"_id":"public/images/0622/unnamed-chunk-24-1.png","hash":"a33ad8312acf144f1d1c404b7388ff551668b3f8","modified":1657459650572},{"_id":"public/images/0622/unnamed-chunk-23-1.png","hash":"c20af3f0c5e59e3a419d5df5db5e6d5d9d246cbf","modified":1657459650572},{"_id":"public/images/0622/unnamed-chunk-22-1.png","hash":"a0a7abdc8836a40c283e60f7316bc652bd4a004f","modified":1657459650572},{"_id":"public/images/0622/unnamed-chunk-25-1.png","hash":"a0a7abdc8836a40c283e60f7316bc652bd4a004f","modified":1657459650572},{"_id":"public/images/0617/Untitled 1.png","hash":"6e16a0acf424713beeaed538d9fbd605db408a79","modified":1657459650572},{"_id":"public/images/0617/Untitled 11.png","hash":"b099359c5600c9fa5a26024d4583caf03e83919e","modified":1657459650572},{"_id":"public/images/0617/Untitled 12.png","hash":"4212eb0c7a17d87658ad67ecd9a1d3b7872f4ff3","modified":1657459650572},{"_id":"public/images/0617/Untitled 13.png","hash":"7622074eee76f06efee26f9ebabe18721ebe06b0","modified":1657459650572},{"_id":"public/images/0617/Untitled 14.png","hash":"b53eb22c749a55f82722ca6bbc9d840d05225682","modified":1657459650572},{"_id":"public/images/0617/Untitled 17.png","hash":"f209cba544ad9e6c23ba5f3be6d0f35e5e960fe0","modified":1657459650572},{"_id":"public/images/0617/Untitled 18.png","hash":"b8c8e5fb65ebf13b8eea2ea2413c6bc2ca7115b6","modified":1657459650572},{"_id":"public/images/0617/Untitled 20.png","hash":"a0b42bff949a5314056f61e8f5740c149d24cdd7","modified":1657459650572},{"_id":"public/images/0617/Untitled 2.png","hash":"e78adf00c0bdd912ffc6bc0c6f3e4e143548e2e8","modified":1657459650572},{"_id":"public/images/0617/Untitled 21.png","hash":"7e805b0efd253b5fd029d1a8948e23800dab071e","modified":1657459650572},{"_id":"public/images/0617/Untitled 24.png","hash":"7175070d525b3da4408014b3b86cf9c434595dfc","modified":1657459650572},{"_id":"public/images/0617/Untitled 25.png","hash":"00c70cd2b9a47b9bca96afab1cab7412aeb8022a","modified":1657459650572},{"_id":"public/images/0617/Untitled 23.png","hash":"0f23dd6c7c3bc7190ade58da36af6383f3c11fe6","modified":1657459650572},{"_id":"public/images/0617/Untitled 22.png","hash":"b4c0b72b55c4008567bc0a5f07e1f5cc1320d70b","modified":1657459650572},{"_id":"public/images/0617/Untitled 26.png","hash":"e8b4cd8f001c279c5a1c2a00c4daad20bcef3328","modified":1657459650572},{"_id":"public/images/0617/Untitled 28.png","hash":"21d5fce5ba84dac526fd534ba66d4ef5fb71098c","modified":1657459650572},{"_id":"public/images/0617/Untitled 3.png","hash":"e496262bcd40f0fbf21f0b83b02bf290dc10e64b","modified":1657459650572},{"_id":"public/images/0617/Untitled 27.png","hash":"59fd27ba4c94e35b1150299dc954373acb256fc5","modified":1657459650572},{"_id":"public/images/0617/Untitled 30.png","hash":"744f23b22e9021d86ef7b8d9e90480ea5f5dc739","modified":1657459650572},{"_id":"public/images/0617/Untitled 34.png","hash":"a59ddffb9bf26efef0abaedcdb02e6e0fb248dab","modified":1657459650572},{"_id":"public/images/0617/Untitled 36.png","hash":"74c21e03a65ca90cdfd9eda0b31598395e0c332e","modified":1657459650572},{"_id":"public/images/0617/Untitled 37.png","hash":"8ac2ace9c3d9bc9e26116ed4ece462ed39d3d9e3","modified":1657459650572},{"_id":"public/images/0617/Untitled 35.png","hash":"5cacdcbbe3238192ecaeae0b65788fe49e3af7d7","modified":1657459650572},{"_id":"public/images/0617/Untitled 38.png","hash":"d3c8081f49e1d1afd58c60406f025e152e47f4c4","modified":1657459650572},{"_id":"public/images/0617/Untitled 39.png","hash":"ad3cf0253878c9e2fb0822184777244e3e27cd38","modified":1657459650572},{"_id":"public/images/0617/Untitled 4.png","hash":"b6f51ccf2b32c7bde67cc13fce33133bb1ca7fe8","modified":1657459650572},{"_id":"public/images/0617/Untitled 40.png","hash":"2eb820896fab58cc613abedb916fce06a0d525c3","modified":1657459650572},{"_id":"public/images/0617/Untitled 41.png","hash":"40b5c72aed36c283dc86f9cb0cc1bd3e6d69f520","modified":1657459650572},{"_id":"public/images/0617/Untitled 5.png","hash":"4535224fee6bf80041a9e483d036c6c1e6846d08","modified":1657459650572},{"_id":"public/images/0617/Untitled 9.png","hash":"4b55b5e7428d6835d0d66c96f56da4e7c1e0bc79","modified":1657459650572},{"_id":"public/images/0617/Untitled 6.png","hash":"4f4433c01553f5da0726f978890520a4c26bea20","modified":1657459650572},{"_id":"public/images/0617/Untitled 8.png","hash":"55c60f7a4e4607ba2bc0ea4f2216b65b92247292","modified":1657459650572},{"_id":"public/images/0617/Untitled.png","hash":"b5bbbb952d4d03337ee9aa2b592558391860028e","modified":1657459650572},{"_id":"public/images/0622_1/unnamed-chunk-10-1.png","hash":"990277200270ea1c54733fa9b0f2c9f0289ad32a","modified":1657459650572},{"_id":"public/images/0622_1/unnamed-chunk-12-1.png","hash":"cd9d48eacac1a1977c89eba9234ab5baef5f9bcc","modified":1657459650572},{"_id":"public/images/0617/Untitled 7.png","hash":"cc29dcd5140cfdda74d37757bf15ade010856c59","modified":1657459650572},{"_id":"public/images/0622_1/unnamed-chunk-11-1.png","hash":"d50f02ab8cf8469bc9c060ee6d5abf549152949b","modified":1657459650572},{"_id":"public/images/0622_1/unnamed-chunk-13-1.png","hash":"cf900acfd44d87e457354bdffae1d3a5deb76c7f","modified":1657459650572},{"_id":"public/images/0622_1/unnamed-chunk-16-1.png","hash":"e469a07bd184fa306514b33a5061e7940062445f","modified":1657459650572},{"_id":"public/images/0622_1/unnamed-chunk-15-1.png","hash":"166bbf44e560fe93e2a64378f7ad6fe1c1b8124a","modified":1657459650572},{"_id":"public/images/0622_1/unnamed-chunk-17-1.png","hash":"370880ab20e3b80d4ccc462210ae255a9817a53e","modified":1657459650572},{"_id":"public/images/0622_1/unnamed-chunk-18-1.png","hash":"ec9dfcfb193ab9528616b6818b4a0744c487542d","modified":1657459650572},{"_id":"public/images/0622_1/unnamed-chunk-19-1.png","hash":"5b4d3883de614d46ea4927a93c156b221e14097e","modified":1657459650572},{"_id":"public/images/0622_1/unnamed-chunk-20-1.png","hash":"e6d093c8a9b34948b3338a4639f6f180d63e31fe","modified":1657459650572},{"_id":"public/images/0622_1/unnamed-chunk-24-1.png","hash":"1889d763dbe3a5aadb0c6258673e9cfa9e7c0f60","modified":1657459650572},{"_id":"public/images/0622_1/unnamed-chunk-2-1.png","hash":"c5a04bca153312daa8f253129dcbe7636bb95cdb","modified":1657459650572},{"_id":"public/images/0622_1/unnamed-chunk-22-1.png","hash":"9f30fefed711db7ef9db2f36be7db350561cf08d","modified":1657459650572},{"_id":"public/images/0622_1/unnamed-chunk-24-2.png","hash":"5208d342bb279ea45f6783023495ed851754d661","modified":1657459650572},{"_id":"public/images/0622_1/unnamed-chunk-4-1.png","hash":"0df0a43b16f8dd4f025c9eebdf6152c0cecad332","modified":1657459650572},{"_id":"public/images/0622_1/unnamed-chunk-3-1.png","hash":"30db26a5fc0b80241fdaef62eb8cf9f420346930","modified":1657459650572},{"_id":"public/images/0622_1/unnamed-chunk-24-3.png","hash":"c42a4c4ef36ec3272bd94060eae2cfe04a7b0e10","modified":1657459650572},{"_id":"public/images/0622_1/unnamed-chunk-5-1.png","hash":"48f83ed6123d4a85ee8bddb987b86a09414899f4","modified":1657459650572},{"_id":"public/images/0622_1/unnamed-chunk-6-1.png","hash":"30db26a5fc0b80241fdaef62eb8cf9f420346930","modified":1657459650572},{"_id":"public/images/0622_1/unnamed-chunk-7-1.png","hash":"8e70bd5943e8f5fae82bced47e1b73b10c14d036","modified":1657459650572},{"_id":"public/images/0622_1/unnamed-chunk-8-1.png","hash":"95372d2872a5e4cf8ee4d05e3ef5b206bed54c42","modified":1657459650572},{"_id":"public/images/0629/output_11_0.png","hash":"cfab855f6dcd4be7755c47d47e19e17508abde74","modified":1658908778414},{"_id":"public/images/0622_1/unnamed-chunk-9-1.png","hash":"3ee10844c9ab92e5455ee2bd88a38ba193d5c762","modified":1657459650572},{"_id":"public/images/0624/unnamed-chunk-22-1.png","hash":"08dfde7e7b2234d35f244e7517ac7a4a985cd711","modified":1657459650572},{"_id":"public/images/0629/output_9_0.png","hash":"cfab855f6dcd4be7755c47d47e19e17508abde74","modified":1658908778414},{"_id":"public/images/0629/output_15_0.png","hash":"d2a7e342c9bec955510b61ed95b97bbb33d22310","modified":1658908778414},{"_id":"public/images/0630/output_11_0.png","hash":"cfab855f6dcd4be7755c47d47e19e17508abde74","modified":1658908778414},{"_id":"public/images/0630/output_45_0.png","hash":"09b54a28749f7b4cf46237bbeb397c4982e966e4","modified":1658908778414},{"_id":"public/images/0630/output_4_0.png","hash":"57034fdad07adb55f2ea67be6b63175f5a73356e","modified":1658908778414},{"_id":"public/images/0630/output_69_0.png","hash":"92a02ad0697d27450e8d079a66a65ac193602ceb","modified":1658908778414},{"_id":"public/images/0630/output_15_0.png","hash":"d2a7e342c9bec955510b61ed95b97bbb33d22310","modified":1658908778414},{"_id":"public/images/0630/output_71_0.png","hash":"75d103ec5d4e31bc1bf2e9110f1cf048e852e601","modified":1658908778414},{"_id":"public/images/0630/output_77_0.png","hash":"af7fbd14a29e8af831a6c09bac03919edf05d3d0","modified":1658908778414},{"_id":"public/images/0630/output_83_1.png","hash":"faf4888a1b09c35a7e253c45cd97bc89234949de","modified":1658908778414},{"_id":"public/images/0630/output_9_0.png","hash":"cfab855f6dcd4be7755c47d47e19e17508abde74","modified":1658908778414},{"_id":"public/images/0701/output_12_1.png","hash":"ee96bce33c045c1d75749288d52259da9f7faec8","modified":1658908778414},{"_id":"public/images/seoul.jpg","hash":"7ba0ed340f5f967cf34da0ba54bc414e1e6d8dfa","modified":1657459650572},{"_id":"public/images/0620/Untitled 21.png","hash":"c7bf5a6eb00c34284da09f1b70915190fc90ae98","modified":1657459650572},{"_id":"public/images/0704/output_18_0.png","hash":"1162bfacbb781010fa17acb294c33b7b7bf4174a","modified":1658908778414},{"_id":"public/images/0705/output_17_0.png","hash":"6cae4aaebff3b38067303eaf0232e1526ccefbce","modified":1658908778414},{"_id":"public/images/0705/output_19_0.png","hash":"d8a9ed44c38ade8c2b88cd874e2ba5da03c423fb","modified":1658908778414},{"_id":"public/images/0704/output_27_1.png","hash":"f07615cd30dbc38e16c94f9eeefc4d64c4590152","modified":1658908778414},{"_id":"public/images/0623/unnamed-chunk-2-1.png","hash":"59aba65ec280a1594eec8907876b49f7726d0cfc","modified":1657459650572},{"_id":"public/images/0623/unnamed-chunk-5-1.png","hash":"033fc0b1792be7a70e8abf65c08f85b140cbd470","modified":1657459650572},{"_id":"public/images/0706/output_11_1.png","hash":"3c65025771b0b21ce6080192091e5730b9b708b9","modified":1658908778414},{"_id":"public/images/0706/output_17_1.png","hash":"682ca7df70165fc2ab9a1006f4c1d1c5c47776d7","modified":1658908778414},{"_id":"public/images/0706/output_12_1.png","hash":"b5817db54e61468b27f150ab6b45e19a7468ec24","modified":1658908778414},{"_id":"public/images/0706/output_15_1.png","hash":"932612e0482f9d2a5f344840516b8dc89dd8c3f1","modified":1658908778414},{"_id":"public/images/0706/output_23_1.png","hash":"cb77a6e96687c0e2fc6f95256a671602859887ef","modified":1658908778414},{"_id":"public/images/0706/output_13_1.png","hash":"ebcb12ab8aff62ae04a7365a6e810ac593b4a7de","modified":1658908778414},{"_id":"public/images/0706/output_24_1.png","hash":"31241aa13e72bbb5af433adf417cb0ff017e3f09","modified":1658908778414},{"_id":"public/images/0706/output_27_1.png","hash":"c9bf38c292c527926ae6a2a41c7b6ebcda94e9ad","modified":1658908778414},{"_id":"public/images/0706/output_28_1.png","hash":"ca3677d0af07f07537f4643101c64195be9ebc25","modified":1658908778414},{"_id":"public/images/0706/output_38_0.png","hash":"ac348b0783c70000041d8c35197797c4b7baaa1d","modified":1658908778414},{"_id":"public/images/0706/output_33_1.png","hash":"f2e8b8efe028c2d3ac8f4ea67b88e03d58362016","modified":1658908778414},{"_id":"public/images/0706/output_32_1.png","hash":"de44fd6edc770f8b06f60936a46b7b29d8516f6f","modified":1658908778414},{"_id":"public/images/0706/output_36_0.png","hash":"7c1752deb2cf042dbb0704034b434914e2da025f","modified":1658908778414},{"_id":"public/images/0706/output_4_1.png","hash":"9672079e5d3fa96f89f6309f4ccbdc337602e863","modified":1658908778414},{"_id":"public/images/0706/output_44_0.png","hash":"00f255e02e0178e2e07d2ad3fa3f8962485c1630","modified":1658908778414},{"_id":"public/images/0706/output_42_0.png","hash":"654324a761fe2a991eb976a7e684108f9e5bb156","modified":1658908778414},{"_id":"public/images/0706/output_6_1.png","hash":"4b27b5a773dc77a73ba161b21d28d35d2faad6d7","modified":1658908778414},{"_id":"public/images/0706/output_8_1.png","hash":"351f103a2c40e98bf16534b7c95b569bd5e39b82","modified":1658908778414},{"_id":"public/images/day0623/unnamed-chunk-1-1.png","hash":"7d41544c2abfab8fbe0bc4ab8de07bbb1e5f91e2","modified":1657459650572},{"_id":"public/images/day0623/unnamed-chunk-2-1.png","hash":"59aba65ec280a1594eec8907876b49f7726d0cfc","modified":1657459650572},{"_id":"public/images/0706/output_9_1.png","hash":"7b8166611d0122fb09c2ea446fca06f9372d066f","modified":1658908778414},{"_id":"public/images/day0623/unnamed-chunk-3-1.png","hash":"59aba65ec280a1594eec8907876b49f7726d0cfc","modified":1657459650572},{"_id":"public/images/day0623/unnamed-chunk-5-1.png","hash":"033fc0b1792be7a70e8abf65c08f85b140cbd470","modified":1657459650572},{"_id":"public/images/day0623/unnamed-chunk-6-1.png","hash":"033fc0b1792be7a70e8abf65c08f85b140cbd470","modified":1657459650572},{"_id":"public/images/0707/1.png","hash":"413f45ccbaa8f514cedb4de5337428ef4488ef1c","modified":1658908778414},{"_id":"public/images/0707/2.png","hash":"b8875c206223dd6468ce6359b47a93d00b634c8e","modified":1658908778414},{"_id":"public/images/rmd_0620/unnamed-chunk-2-1.png","hash":"33f55337a555c883c9a885fb06303beb93784d9b","modified":1657459650572},{"_id":"public/images/0707/4.png","hash":"7e98bb607abc9680281abf470470c1d03ca1a8c4","modified":1658908778414},{"_id":"public/assets/fonts/fa-regular-400.eot","hash":"670fb01e4930ae46fe8d6d2b75ead288f54e8e61","modified":1657459650572},{"_id":"public/assets/fonts/fa-regular-400.ttf","hash":"c34acd6818df6db6be41a2e331886765d601f2eb","modified":1657459650572},{"_id":"public/assets/fonts/fa-regular-400.woff2","hash":"13517529affa39e2585c591acae6dc336b6aa917","modified":1657459650572},{"_id":"public/assets/fonts/fa-regular-400.woff","hash":"3ad4f4e4b1fb3edee3d4ba25e6cdfed2f0b88a54","modified":1657459650572},{"_id":"public/assets/fonts/merriweather-bold-italic.ttf","hash":"c1b8593dc9ddbf1a1a6268d31e08c4041448ed76","modified":1657459650572},{"_id":"public/assets/fonts/merriweather-bold.ttf","hash":"e6d0ffb2d0348d9e22de97e57214b7db795e9513","modified":1657459650572},{"_id":"public/assets/fonts/merriweather-light.ttf","hash":"69bd3f15962cf91348a133d3d38571a5c67eca65","modified":1657459650572},{"_id":"public/assets/fonts/merriweather-light-italic.ttf","hash":"c3835119c62e78a21cfb33e2de6686fb4a5929a0","modified":1657459650572},{"_id":"public/assets/fonts/open-sans.ttf","hash":"618b78a8f6ffe7e1998eab67268859e2ab54be8e","modified":1657459650572},{"_id":"public/assets/fonts/open-sans-bold.ttf","hash":"3823779db9f51a34658809ce66bdd6ed1145ed8e","modified":1657459650572},{"_id":"public/assets/fonts/merriweather.ttf","hash":"d392237948e74246a2fb0d0d886498776a185e54","modified":1657459650572},{"_id":"public/assets/images/logo-algolia-nebula-blue-full.svg","hash":"d5e4426b6bd2d8b8c3f477f83d348d8f3b3ec1ca","modified":1657459650572},{"_id":"public/images/0617/Untitled 10.png","hash":"0571abc01308169b481a996462630de45a92fe2f","modified":1657459650572},{"_id":"public/images/0617/Untitled 15.png","hash":"88ac18f1c4660bbcd8fc4939b587d0b411355418","modified":1657459650572},{"_id":"public/images/0617/Untitled 16.png","hash":"23d5851ec70ae9e3dba23e2df76e4b3eb91052be","modified":1657459650572},{"_id":"public/images/0617/Untitled 19.png","hash":"f7e1103d45c57f686aec60fedada01b877435db7","modified":1657459650572},{"_id":"public/images/0617/Untitled 29.png","hash":"8b8195d7cdaba9c6e0bda3ec24455472aef1562d","modified":1657459650572},{"_id":"public/images/0617/Untitled 31.png","hash":"3a05cfed95e59f74beb354abfcc5c6350c866cde","modified":1657459650572},{"_id":"public/images/0617/Untitled 32.png","hash":"8d040511e35ed8130820e3ed43dcf9c7b4509c76","modified":1657459650572},{"_id":"public/images/0617/Untitled 33.png","hash":"2c49b62c40916e90a3cc180946d0aac6d105d0f8","modified":1657459650572},{"_id":"public/images/0701/logic.png","hash":"904d340a4e14983800c3e14a7508f9f9caae65bb","modified":1658908778414},{"_id":"public/images/0620/Untitled 4.png","hash":"5e12d63c0503dd2074a9b510b63b8c256397514b","modified":1657459650572},{"_id":"public/assets/css/thumbs.css","hash":"3673ba1f616738f588fe887863846a958343b970","modified":1657459650572},{"_id":"public/assets/js/thumbs.js","hash":"1dacca749bad458211a886d3bcbbeb4600aaceac","modified":1657459650572},{"_id":"public/assets/css/gitalk.css","hash":"61d71cb30f5f34cbb1f2b5bc469784d6cb908c22","modified":1657459650572},{"_id":"public/assets/css/jquery.fancybox.css","hash":"e43435fb9eaa918f5b8e35c9e110124b8bd13751","modified":1657459650572},{"_id":"public/assets/css/gitment.css","hash":"7fbb18b73b44ed11193739c55fce53a6f173cf68","modified":1657459650572},{"_id":"public/assets/css/all.css","hash":"b0913ecc71a5d71d40886bde12c0e86d44f6c845","modified":1657459650572},{"_id":"public/assets/js/algoliasearch.js","hash":"09662bcddf4b7bc52d84c13b8a2897ea63226e80","modified":1657459650572},{"_id":"public/assets/css/tranquilpeak.css","hash":"a6c317a8f3222d738f6cad9273729f8a915eb918","modified":1657459650572},{"_id":"public/assets/css/style-3nkouozwe8vtu8c81mdnm03zdusg8chppv647kiomisiliyaela9skwqht91.min.css","hash":"37ae02b8749e3a4ae5cbb5bf377b968aed954ef5","modified":1657459650572},{"_id":"public/assets/js/gitment.js","hash":"376446d9c5930576016f97dd63e5e6616c94d8d4","modified":1657459650572},{"_id":"public/assets/css/style.css","hash":"b4315dc2da78400110f40648c5a8ed7d51b05b28","modified":1657459650572},{"_id":"public/assets/js/jquery.fancybox.js","hash":"b64cad88c2fe629425788be947acd426b9bbb8b4","modified":1657459650572},{"_id":"public/assets/js/jquery.js","hash":"af32f706407ab08f800c5e697cce92466e735847","modified":1657459650572},{"_id":"public/assets/js/tranquilpeak.js","hash":"07414a37851ba5a7327a5d0d7229aa921402ee84","modified":1657459650572},{"_id":"public/assets/js/script-h2jfxkdpi3i16rf1rss8upq5l4k20wtukjvlixsznqxrpqwnsevgbqric0qi.min.js","hash":"3fbf7421048051b7379ab16fd7c7ecd57b973bc4","modified":1657459650572},{"_id":"public/assets/js/script.js","hash":"c1adfe0b25b7218b0a016f4980b4b23ba23c233a","modified":1657459650572},{"_id":"public/images/0707/3.png","hash":"897333c4e431ce33bbeae058fe988517d3b9945e","modified":1658908778414},{"_id":"public/assets/fonts/fa-brands-400.woff2","hash":"0613c7ebba55ee47ef302c0f7766324692f899a7","modified":1657459650572},{"_id":"public/assets/fonts/fa-brands-400.woff","hash":"1e1f02bfa89e179fe2dd1383273b8812aa873418","modified":1657459650572},{"_id":"public/assets/fonts/fa-solid-900.woff2","hash":"0ccb2c814a7e4ca12c4778821633809cb0361eaa","modified":1657459650572},{"_id":"public/assets/fonts/fa-solid-900.woff","hash":"a22acd7697f36e7d4cc31a853c70e776eac54bb1","modified":1657459650572},{"_id":"public/images/0617/Untitled 42.png","hash":"fb243832d8b782edb585148f650ac819ff6773df","modified":1657459650572},{"_id":"public/images/0629/Untitled.png","hash":"90a4b12183eb6441bfceb11865f239ca769e53f1","modified":1658908778414},{"_id":"public/assets/js/moment-with-locales.js","hash":"f95b871ec6893f58ff57ef3eefb7eeef73846b4e","modified":1657459650572},{"_id":"public/assets/fonts/fa-brands-400.eot","hash":"d1ffd6340cdbf72890ccb67f32015eafc5df51a7","modified":1657459650572},{"_id":"public/assets/fonts/fa-brands-400.ttf","hash":"8ab907083fecaaa2a9ec93b27f884ad74573705c","modified":1657459650572},{"_id":"public/assets/fonts/fa-regular-400.svg","hash":"326e1d8f0b23f6df95cd6784fdf330bc6414ecd0","modified":1657459650572},{"_id":"public/2022/07/05/PyCaret_Sample (1)/pycaret.png","hash":"23fc9da2151a43d264aa1567138e58cb53c2e5e6","modified":1658908778414},{"_id":"public/assets/fonts/fa-solid-900.eot","hash":"ea845c59bee4a5c6db774b8d8060f5641b789ae9","modified":1657459650572},{"_id":"public/assets/fonts/fa-solid-900.ttf","hash":"eb8914f6b1797b45ee0883e6089d92695d9f9441","modified":1657459650572},{"_id":"public/2022/06/27/1장_파이썬_프로그래밍의_기초_자료형/python.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658218932982},{"_id":"public/2022/07/06/day0706_1/image.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658908778414},{"_id":"public/assets/js/gitalk.js","hash":"540a80bafeba53826127d556487541332ecd6ed1","modified":1657459650572},{"_id":"public/assets/images/cover-v1.2.0.jpg","hash":"a98b9bf4d6be3af0156c0b6e781f067e343a682d","modified":1657459650572},{"_id":"public/assets/fonts/fa-brands-400.svg","hash":"907bfbbe295332750575900984a00136de0f0e90","modified":1657459650572},{"_id":"public/assets/fonts/fa-solid-900.svg","hash":"d92687d30fa0d43f9ae71009398507bf813a6875","modified":1657459650572},{"_id":"public/assets/images/cover.jpg","hash":"653b50dc668e51796c13cf98d2bcab834ec685dc","modified":1669579757194},{"_id":"source/_posts/lecture-in-humanedu.md","hash":"34e3cadfdeeadf1404b263504d767535575fc810","modified":1657466161902},{"_id":"source/images/0707/output_10_1.png","hash":"9ee3c60729ed0cc25b81037c39dc561df7959245","modified":1657453338000},{"_id":"source/images/0707/output_13_1.png","hash":"65f64dba1edfe1871eb884ce84be80e2304091a3","modified":1657453338000},{"_id":"source/images/0707/output_41_0.png","hash":"9cbfd52d89490b21e1cad307a679634962b862d3","modified":1657453338000},{"_id":"source/images/0707/output_39_0.png","hash":"92332d543d464f0818e68893e281bff5952da12a","modified":1657453338000},{"_id":"source/_posts/day0630_ml/image.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658126921089},{"_id":"source/_posts/XGBoost_&_LightGBM/image.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658126921089},{"_id":"source/_posts/day0701_ch03/image.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658126921089},{"_id":"source/_posts/day0701_ch04/image.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658126921089},{"_id":"source/_posts/day0704/image.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658126921089},{"_id":"source/_posts/python/image.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658126921089},{"_id":"source/_posts/블로그 설정/seoul.jpg","hash":"3a44c2a8e6f13c8fc602d680718750c5c0286220","modified":1657451980602},{"_id":"public/2022/07/07/lecture-in-humanedu/index.html","hash":"cb30a01916e5cdc406a7514d448211cb1beec230","modified":1680748325582},{"_id":"public/images/0707/output_10_1.png","hash":"9ee3c60729ed0cc25b81037c39dc561df7959245","modified":1658908778414},{"_id":"public/images/0707/output_13_1.png","hash":"65f64dba1edfe1871eb884ce84be80e2304091a3","modified":1658908778414},{"_id":"public/images/0707/output_41_0.png","hash":"9cbfd52d89490b21e1cad307a679634962b862d3","modified":1658908778414},{"_id":"public/images/0707/output_39_0.png","hash":"92332d543d464f0818e68893e281bff5952da12a","modified":1658908778414},{"_id":"public/2022/07/08/블로그 설정/seoul.jpg","hash":"3a44c2a8e6f13c8fc602d680718750c5c0286220","modified":1658908778414},{"_id":"public/2022/07/04/XGBoost_&_LightGBM/image.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658908778414},{"_id":"public/2022/06/30/day0630_ml/image.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658218932982},{"_id":"public/2022/07/01/day0701_ch03/image.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658218932982},{"_id":"public/2022/07/01/day0701_ch04/image.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658218932982},{"_id":"public/2022/07/04/day0704/image.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658218932982},{"_id":"source/_posts/lecture-in-humanedu (1)/Kaggle_logo.png","hash":"62de315ff418ee838c316d77af35d24ea320e519","modified":1657462215210},{"_id":"themes/tranquilpeak/source/assets/images/cover.png","hash":"220b5af11248492c80b6e66e4197202d79de46da","modified":1488529108000},{"_id":"public/assets/images/cover.png","hash":"220b5af11248492c80b6e66e4197202d79de46da","modified":1657462921766},{"_id":"source/_posts/lecture-in-humanedu/kaggle-logo.png","hash":"bdd749e09fad6384705a796fef648ee09b351077","modified":1657467618220},{"_id":"public/2022/07/07/lecture-in-humanedu/kaggle-logo.png","hash":"bdd749e09fad6384705a796fef648ee09b351077","modified":1658908778414},{"_id":"source/_posts/day0630_ch3/image.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658126921089},{"_id":"public/2022/06/30/day0630_ch3/image.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658218932982},{"_id":"source/_posts/day0628_1/image.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658126921089},{"_id":"source/_posts/day0629/image.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658126921089},{"_id":"source/_posts/day0629_ml/image.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658126921089},{"_id":"source/_posts/day0628/image.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658126921089},{"_id":"public/2022/06/28/day0628/image.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658218932982},{"_id":"public/2022/06/28/day0628_1/image.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658218932982},{"_id":"public/2022/06/29/day0629_ml/image.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658218932982},{"_id":"public/2022/06/29/day0629/image.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658218932982},{"_id":"source/_posts/day0627/image.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658126921089},{"_id":"public/categories/Python/page/2/index.html","hash":"135dc0e88cb2d0f2c54b1b2855313bf513f95b39","modified":1680748325582},{"_id":"public/2022/06/27/day0627/image.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658218932982},{"_id":"source/_posts/0617.md","hash":"47809327af189b1849c05d3647cdcebc9ee4027b","modified":1657467694124},{"_id":"source/_posts/day0620/R_logo.jpg","hash":"c3300955578d3e992b844cd78e4a8c801a541d61","modified":1657466822600},{"_id":"source/_posts/day0617/R_logo.jpg","hash":"c3300955578d3e992b844cd78e4a8c801a541d61","modified":1657466822600},{"_id":"source/_posts/0620/R_logo.jpg","hash":"c3300955578d3e992b844cd78e4a8c801a541d61","modified":1657466822600},{"_id":"source/_posts/day0621/R_logo.jpg","hash":"c3300955578d3e992b844cd78e4a8c801a541d61","modified":1657466822600},{"_id":"source/_posts/day0621_dplyr/R_logo.jpg","hash":"c3300955578d3e992b844cd78e4a8c801a541d61","modified":1657466822600},{"_id":"source/_posts/day0622/R_logo.jpg","hash":"c3300955578d3e992b844cd78e4a8c801a541d61","modified":1657466822600},{"_id":"source/_posts/day0622_1/R_logo.jpg","hash":"c3300955578d3e992b844cd78e4a8c801a541d61","modified":1657466822600},{"_id":"source/_posts/day0623/R_logo.jpg","hash":"c3300955578d3e992b844cd78e4a8c801a541d61","modified":1657466822600},{"_id":"source/_posts/curriculum/night.jpg","hash":"088a7ca5ab9c902ed5755fb84a2e85c4144876c9","modified":1657463051543},{"_id":"source/_posts/0617/05.png","hash":"220b5af11248492c80b6e66e4197202d79de46da","modified":1488529108000},{"_id":"public/2022/06/17/0617/index.html","hash":"d8d2726a0358c6fff5693df0cd3cac19178628c3","modified":1680748325582},{"_id":"public/categories/blog/index.html","hash":"d59b4f8846066783551ae4e3bdd9f9ff67f89d88","modified":1680748325582},{"_id":"public/categories/R-studio/index.html","hash":"86255421fab92ef6cb73181dbd475b8d076c4f66","modified":1680748325582},{"_id":"public/2022/06/17/day0617/R_logo.jpg","hash":"c3300955578d3e992b844cd78e4a8c801a541d61","modified":1658908778414},{"_id":"public/2022/06/20/day0620/R_logo.jpg","hash":"c3300955578d3e992b844cd78e4a8c801a541d61","modified":1658908778414},{"_id":"public/2022/06/21/day0621/R_logo.jpg","hash":"c3300955578d3e992b844cd78e4a8c801a541d61","modified":1658908778414},{"_id":"public/2022/06/20/0620/R_logo.jpg","hash":"c3300955578d3e992b844cd78e4a8c801a541d61","modified":1658908778414},{"_id":"public/2022/06/22/day0622_1/R_logo.jpg","hash":"c3300955578d3e992b844cd78e4a8c801a541d61","modified":1658908778414},{"_id":"public/2022/06/22/day0622/R_logo.jpg","hash":"c3300955578d3e992b844cd78e4a8c801a541d61","modified":1658908778414},{"_id":"public/2022/06/21/day0621_dplyr/R_logo.jpg","hash":"c3300955578d3e992b844cd78e4a8c801a541d61","modified":1658908778414},{"_id":"public/2022/06/23/day0623/R_logo.jpg","hash":"c3300955578d3e992b844cd78e4a8c801a541d61","modified":1658908778414},{"_id":"public/2022/06/23/curriculum/night.jpg","hash":"088a7ca5ab9c902ed5755fb84a2e85c4144876c9","modified":1658908778414},{"_id":"public/2022/06/17/0617/05.png","hash":"220b5af11248492c80b6e66e4197202d79de46da","modified":1658908778414},{"_id":"source/_posts/Welcome.md","hash":"c795fc823fa420760fbc018c3c7369871d14601b","modified":1662732502602},{"_id":"source/_posts/Welcome/image.png","hash":"220b5af11248492c80b6e66e4197202d79de46da","modified":1488529108000},{"_id":"public/2099/07/04/Welcome/index.html","hash":"b06a10e66e3b41b4410cb143075111b8531a2270","modified":1657467699875},{"_id":"public/archives/2099/index.html","hash":"6b9cfdadb5a8ed2e74a4f4066926afa54a7b41fa","modified":1657467699875},{"_id":"public/archives/2099/07/index.html","hash":"f742dca88c53f38428b51e72eb53f01e062be5c9","modified":1657467699875},{"_id":"public/2099/07/04/Welcome/image.png","hash":"220b5af11248492c80b6e66e4197202d79de46da","modified":1657467391266},{"_id":"source/_posts/mental/R_logo.jpg","hash":"c3300955578d3e992b844cd78e4a8c801a541d61","modified":1657466822600},{"_id":"public/2022/07/11/Welcome/index.html","hash":"556e81e9d8b38786de6b4872cfe0bc2a8adf7ccc","modified":1657468411449},{"_id":"public/2022/06/24/mental/R_logo.jpg","hash":"c3300955578d3e992b844cd78e4a8c801a541d61","modified":1658908778414},{"_id":"public/2022/07/11/Welcome/image.png","hash":"220b5af11248492c80b6e66e4197202d79de46da","modified":1657468411449},{"_id":"public/2123/12/31/Welcome/index.html","hash":"c216e4519ca28676e720af9df51104f1ada1447d","modified":1666013740485},{"_id":"public/archives/2123/index.html","hash":"09d8d82ef80e5728e6359869f301e22767e63abc","modified":1662732525579},{"_id":"public/archives/2123/12/index.html","hash":"f4c208b4e79129b21a9a12994b61d4e7e506cd4c","modified":1662732525579},{"_id":"public/2123/12/31/Welcome/image.png","hash":"220b5af11248492c80b6e66e4197202d79de46da","modified":1658908778414},{"_id":"source/_posts/PyQt5 Tutorial Basics.md","hash":"1dbd1962202f8a002e5ca125fa9d4034af6ca791","modified":1662545995599},{"_id":"source/_posts/PyQt5 Tutorial Layout/PyQt-Logo.wine.png","hash":"b114fbeb5958293d74d6d2fdeb7cf7208de0d250","modified":1657854276000},{"_id":"source/images/PyQt5 Tutorial Basics/2_10_stylesheets_8r6WeZv.png","hash":"799a5fd2d4c71f7e213288665c0d082792b3e79c","modified":1657821480000},{"_id":"source/images/PyQt5 Tutorial Basics/2_1_opening.png","hash":"f103e792f91003fb485feb19639c29cbfffd00e2","modified":1657821478000},{"_id":"source/_posts/PyQt5 Widget/PyQt-Logo.wine.png","hash":"b114fbeb5958293d74d6d2fdeb7cf7208de0d250","modified":1657854276000},{"_id":"source/_posts/PyQt5 Tutorial Basics/PyQt-Logo.wine.png","hash":"b114fbeb5958293d74d6d2fdeb7cf7208de0d250","modified":1657854276000},{"_id":"source/images/PyQt5 Tutorial Basics/2_5_statusbar.png","hash":"4c573b34170dff21200e92328d92939a88986987","modified":1657821480000},{"_id":"source/images/PyQt5 Tutorial Basics/2_3_closing.png","hash":"948ea42b1c4cb49a4cf2c75de2e8cfc21b606e20","modified":1657821480000},{"_id":"source/images/PyQt5 Tutorial Basics/2_4_tooltip.png","hash":"8fde44d8e9d582480fa0a098705ecb983e8075a3","modified":1657821480000},{"_id":"source/images/PyQt5 Tutorial Basics/2_2_icon.png","hash":"992959c3fc8d00aeffbfb1b6d17380d39bd43bd3","modified":1657821480000},{"_id":"source/images/PyQt5 Tutorial Basics/2_6_menubar.png","hash":"af93f9404ed5dc4269da4fcf8a402c7334add1fb","modified":1657821480000},{"_id":"source/images/PyQt5 Tutorial Basics/2_7_toolbar.png","hash":"38d6a10794ebd49c0316ccc3c57dd07143786994","modified":1657821480000},{"_id":"source/images/PyQt5 Tutorial Basics/2_9_showing_date.png","hash":"54740743ba3711c10493ab2caa4f3e09970531d3","modified":1657821480000},{"_id":"source/images/PyQt5 Tutorial Basics/exit 1.png","hash":"48e34a192ba934ce9afe71b43dbb45b75bfefb55","modified":1657821480000},{"_id":"source/images/PyQt5 Tutorial Basics/edit.png","hash":"8a59889a88a70fa62427f714040f3db24001096e","modified":1657821480000},{"_id":"source/images/PyQt5 Tutorial Basics/exit.png","hash":"48e34a192ba934ce9afe71b43dbb45b75bfefb55","modified":1657821480000},{"_id":"source/images/PyQt5 Tutorial Basics/mainwindowlayout.png","hash":"a121bc3f691ab66e898993b27c7313593ce6f52a","modified":1657821480000},{"_id":"source/images/PyQt5 Tutorial Basics/print.png","hash":"a1b2cf8f978d4c3576299136f55dfb029673a5c2","modified":1657821480000},{"_id":"source/images/PyQt5 Tutorial Basics/save.png","hash":"661675cc0c3e9ebcebdd8ad85e54d3840631a5b9","modified":1657821480000},{"_id":"source/images/PyQt5 Tutorial Basics/web.png","hash":"a3c8d93b7c337b76052cb5ab307228b037ed4bbc","modified":1657821478000},{"_id":"source/images/PyQt5 Tutorial Basics/2_8_centering.png","hash":"85398c4540066a733d95f00a2293c828df1ba3b3","modified":1657821480000},{"_id":"public/archives/page/4/index.html","hash":"55207623436635930396f4089f15fd879a24a87e","modified":1680748325582},{"_id":"public/categories/PyQt5/index.html","hash":"2bab6a9e5df52e0012d18f03e1d89e09f03aa05e","modified":1680748325582},{"_id":"public/page/4/index.html","hash":"d5d782a3eec723c642a80a72bd27c3dfb771389e","modified":1680748325582},{"_id":"public/2022/07/16/PyQt5 Tutorial Basics/index.html","hash":"9df98e3e48040705332895c4740ff1aa3afb7631","modified":1680748325582},{"_id":"public/images/PyQt5 Tutorial Basics/2_1_opening.png","hash":"f103e792f91003fb485feb19639c29cbfffd00e2","modified":1658908778414},{"_id":"public/images/PyQt5 Tutorial Basics/2_10_stylesheets_8r6WeZv.png","hash":"799a5fd2d4c71f7e213288665c0d082792b3e79c","modified":1658908778414},{"_id":"public/images/PyQt5 Tutorial Basics/2_5_statusbar.png","hash":"4c573b34170dff21200e92328d92939a88986987","modified":1658908778414},{"_id":"public/images/PyQt5 Tutorial Basics/2_4_tooltip.png","hash":"8fde44d8e9d582480fa0a098705ecb983e8075a3","modified":1658908778414},{"_id":"public/images/PyQt5 Tutorial Basics/2_3_closing.png","hash":"948ea42b1c4cb49a4cf2c75de2e8cfc21b606e20","modified":1658908778414},{"_id":"public/images/PyQt5 Tutorial Basics/2_6_menubar.png","hash":"af93f9404ed5dc4269da4fcf8a402c7334add1fb","modified":1658908778414},{"_id":"public/images/PyQt5 Tutorial Basics/2_7_toolbar.png","hash":"38d6a10794ebd49c0316ccc3c57dd07143786994","modified":1658908778414},{"_id":"public/images/PyQt5 Tutorial Basics/2_9_showing_date.png","hash":"54740743ba3711c10493ab2caa4f3e09970531d3","modified":1658908778414},{"_id":"public/images/PyQt5 Tutorial Basics/2_2_icon.png","hash":"992959c3fc8d00aeffbfb1b6d17380d39bd43bd3","modified":1658908778414},{"_id":"public/images/PyQt5 Tutorial Basics/edit.png","hash":"8a59889a88a70fa62427f714040f3db24001096e","modified":1658908778414},{"_id":"public/images/PyQt5 Tutorial Basics/exit 1.png","hash":"48e34a192ba934ce9afe71b43dbb45b75bfefb55","modified":1658908778414},{"_id":"public/images/PyQt5 Tutorial Basics/exit.png","hash":"48e34a192ba934ce9afe71b43dbb45b75bfefb55","modified":1658908778414},{"_id":"public/images/PyQt5 Tutorial Basics/mainwindowlayout.png","hash":"a121bc3f691ab66e898993b27c7313593ce6f52a","modified":1658908778414},{"_id":"public/images/PyQt5 Tutorial Basics/print.png","hash":"a1b2cf8f978d4c3576299136f55dfb029673a5c2","modified":1658908778414},{"_id":"public/images/PyQt5 Tutorial Basics/2_8_centering.png","hash":"85398c4540066a733d95f00a2293c828df1ba3b3","modified":1658908778414},{"_id":"public/images/PyQt5 Tutorial Basics/web.png","hash":"a3c8d93b7c337b76052cb5ab307228b037ed4bbc","modified":1658908778414},{"_id":"public/images/PyQt5 Tutorial Basics/save.png","hash":"661675cc0c3e9ebcebdd8ad85e54d3840631a5b9","modified":1658908778414},{"_id":"public/2022/07/16/PyQt5 Tutorial Basics/PyQt-Logo.wine.png","hash":"b114fbeb5958293d74d6d2fdeb7cf7208de0d250","modified":1658908778414},{"_id":"source/_posts/Python 가상환경 설정방법.md","hash":"9bb1d9ab9bacc3509f09a3a58ab7d371bba5a84d","modified":1662545995601},{"_id":"source/_posts/blog_theme.md","hash":"78c5ad79f8ab82a546a1a22b45a3f92c44bc3087","modified":1658314029209},{"_id":"source/images/Python 가상환경 설정방법/Untitled 1.png","hash":"8351382c453c04cd6828ed22f1b96f01fd2f4e42","modified":1658093892000},{"_id":"source/images/Python 가상환경 설정방법/Untitled 2.png","hash":"07531f85a4a71bf4e1bcaa5054b098ae6e427418","modified":1658093892000},{"_id":"source/images/Python 가상환경 설정방법/Untitled 3.png","hash":"110727d2d39013168bd1a940840f1491d708e63e","modified":1658093892000},{"_id":"source/images/Python 가상환경 설정방법/Untitled 4.png","hash":"d01dc9dce20aaa0037c266e1209e9073b0df1af1","modified":1658093892000},{"_id":"source/images/Python 가상환경 설정방법/Untitled.png","hash":"e82029c94837db61e0383ca1277a6b912fde4b17","modified":1658093892000},{"_id":"source/_posts/Python 가상환경 설정방법/image.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658126921089},{"_id":"themes/tranquilpeak/source/assets/images/seoul.jpg","hash":"7ba0ed340f5f967cf34da0ba54bc414e1e6d8dfa","modified":1657269438604},{"_id":"themes/tranquilpeak/source/_images/seoul.jpg","hash":"7ba0ed340f5f967cf34da0ba54bc414e1e6d8dfa","modified":1657269438604},{"_id":"public/2022/07/18/Python 가상환경 설정방법/index.html","hash":"9307ff35fb1498eba7b4ccdc1259be8cc26b0215","modified":1680748325582},{"_id":"public/2022/06/24/blog_theme/index.html","hash":"09ba190fc8870099fa96bc33e3263435485cd3be","modified":1680748325582},{"_id":"public/archives/2022/page/4/index.html","hash":"4596504b7ba0790e37a8db39e46a04cd2ba56727","modified":1680748325582},{"_id":"public/images/Python 가상환경 설정방법/Untitled 1.png","hash":"8351382c453c04cd6828ed22f1b96f01fd2f4e42","modified":1658322522713},{"_id":"public/images/Python 가상환경 설정방법/Untitled 2.png","hash":"07531f85a4a71bf4e1bcaa5054b098ae6e427418","modified":1658322522713},{"_id":"public/images/Python 가상환경 설정방법/Untitled 3.png","hash":"110727d2d39013168bd1a940840f1491d708e63e","modified":1658322522713},{"_id":"public/images/Python 가상환경 설정방법/Untitled 4.png","hash":"d01dc9dce20aaa0037c266e1209e9073b0df1af1","modified":1658322522713},{"_id":"public/images/Python 가상환경 설정방법/Untitled.png","hash":"e82029c94837db61e0383ca1277a6b912fde4b17","modified":1658322522713},{"_id":"public/2022/07/18/Python 가상환경 설정방법/image.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658908778414},{"_id":"source/_posts/day0719.md","hash":"f94b4b7e09178471b302c0ed2bb664574ac2db16","modified":1658314029239},{"_id":"source/_posts/day0719/oracle.png","hash":"332d4ed3c96d58c5afa9b8b9a00c8e893959c5ed","modified":1658216960556},{"_id":"source/images/0719/취업.png","hash":"a9eeffec04d594a9f5b0a9fb3d186233ab61c7df","modified":1658215584984},{"_id":"source/images/0719/Employment.png","hash":"a9eeffec04d594a9f5b0a9fb3d186233ab61c7df","modified":1658215584984},{"_id":"public/archives/2022/07/page/2/index.html","hash":"3eb6bbf1a4277685665815ae03886f4b1d1cb5a6","modified":1680748325582},{"_id":"public/categories/Oracle/index.html","hash":"753c40689d6d2cca291bcd497384ac82513cc860","modified":1680748325582},{"_id":"public/2022/07/19/day0719/index.html","hash":"1ddac60ccc6d9798e1eb7e42aeaaad98160fe0aa","modified":1680748325582},{"_id":"public/2022/07/19/day0719/oracle.png","hash":"332d4ed3c96d58c5afa9b8b9a00c8e893959c5ed","modified":1658908778414},{"_id":"public/images/0719/Employment.png","hash":"a9eeffec04d594a9f5b0a9fb3d186233ab61c7df","modified":1658908778414},{"_id":"source/_posts/test2.md","hash":"129a5fc6978c9041c8b7c864cfb736b639798acb","modified":1658407037509},{"_id":"source/_posts/day 0720.md","hash":"1690d685af9986f59ebf9a0a85a4d42117571283","modified":1658362889672},{"_id":"source/_posts/qwer/day 0720/oracle.png","hash":"332d4ed3c96d58c5afa9b8b9a00c8e893959c5ed","modified":1658314029240},{"_id":"public/2022/07/20/day 0720/index.html","hash":"6552ef6b077d0b724cd7a545fa4b7a4f2034c1f5","modified":1658392505592},{"_id":"source/_posts/site.md","hash":"474a9e017397369b1bbdd39c020fbfdd481c223f","modified":1659706607237},{"_id":"source/_posts/day 0720/oracle.png","hash":"332d4ed3c96d58c5afa9b8b9a00c8e893959c5ed","modified":1658362210276},{"_id":"source/_posts/test2/oracle.png","hash":"332d4ed3c96d58c5afa9b8b9a00c8e893959c5ed","modified":1658362210275},{"_id":"public/2022/07/21/site/index.html","hash":"ea8c4b66d3c3994d73ec5d8434bb18c516275e26","modified":1680748325582},{"_id":"public/2022/07/21/test2/index.html","hash":"a91a45a8583cbccb8fc612561c2afcc70da7bb18","modified":1658407976990},{"_id":"public/2022/07/21/test2/oracle.png","hash":"332d4ed3c96d58c5afa9b8b9a00c8e893959c5ed","modified":1658407045151},{"_id":"public/2022/07/20/day 0720/oracle.png","hash":"332d4ed3c96d58c5afa9b8b9a00c8e893959c5ed","modified":1658392505592},{"_id":"source/_posts/day0721/oracle.png","hash":"332d4ed3c96d58c5afa9b8b9a00c8e893959c5ed","modified":1658405711630},{"_id":"source/_posts/day0721.md","hash":"c668e37c0c65b6b32f649158affa3e9b46856e92","modified":1658406245899},{"_id":"source/_posts/day0720.md","hash":"0fba5326c42de5b4ae39f55e6f380422cfb35ab9","modified":1658406100650},{"_id":"source/_posts/test3.md","hash":"8701d4c048c79a669e463c311d1f8ca792e7823a","modified":1658406391470},{"_id":"source/_posts/test3/oracle.png","hash":"332d4ed3c96d58c5afa9b8b9a00c8e893959c5ed","modified":1658405711632},{"_id":"public/2022/07/21/day0721/index.html","hash":"fc7fb22a30e4cc795a765cc9f8e3af8388d3b488","modified":1680748325582},{"_id":"public/2022/07/21/test3/index.html","hash":"b080eb6e210409fa0d4d523f1132ab4b68f6a80f","modified":1658407045151},{"_id":"public/2022/07/20/day0720/index.html","hash":"47ad213d6842fd8881a3952daf08f9122b1b77df","modified":1680748325582},{"_id":"public/2022/07/21/test3/oracle.png","hash":"332d4ed3c96d58c5afa9b8b9a00c8e893959c5ed","modified":1658407045151},{"_id":"public/2022/07/21/day0721/oracle.png","hash":"332d4ed3c96d58c5afa9b8b9a00c8e893959c5ed","modified":1658908778414},{"_id":"source/_posts/day0720/oracle.png","hash":"332d4ed3c96d58c5afa9b8b9a00c8e893959c5ed","modified":1658405711631},{"_id":"source/_posts/day0628/python.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658314029215},{"_id":"source/_posts/day0628_1/python.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658314029218},{"_id":"source/_posts/1장_파이썬_프로그래밍의_기초_자료형/image.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658314029204},{"_id":"source/_posts/day0627/python.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658314029213},{"_id":"source/_posts/day0629_ml/python.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658314029223},{"_id":"source/_posts/day0630_ch3/python.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658314029225},{"_id":"source/_posts/day0629/python.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658314029220},{"_id":"source/_posts/day0701_ch04/python.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658314029233},{"_id":"source/_posts/day0630_ml/python.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658314029228},{"_id":"source/_posts/day0701_ch03/python.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658314029230},{"_id":"source/_posts/day0704/python.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658314029236},{"_id":"public/2022/07/20/day0720/oracle.png","hash":"332d4ed3c96d58c5afa9b8b9a00c8e893959c5ed","modified":1658908778414},{"_id":"public/2022/06/27/1장_파이썬_프로그래밍의_기초_자료형/image.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658908778414},{"_id":"public/2022/06/28/day0628_1/python.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1662546587787},{"_id":"public/2022/06/28/day0628/python.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658908778414},{"_id":"public/2022/06/27/day0627/python.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658908778414},{"_id":"public/2022/06/29/day0629_ml/python.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658908778414},{"_id":"public/2022/06/30/day0630_ch3/python.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658908778414},{"_id":"public/2022/06/29/day0629/python.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658908778414},{"_id":"public/2022/06/30/day0630_ml/python.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658908778414},{"_id":"public/2022/07/04/day0704/python.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658908778414},{"_id":"public/2022/07/01/day0701_ch04/python.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658908778414},{"_id":"public/2022/07/01/day0701_ch03/python.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658908778414},{"_id":"source/_posts/Linux 설치.md","hash":"6a2426291bf0a23789f2308cd6403fd9348a610f","modified":1659066063784},{"_id":"source/images/Linux 설치/Untitled 10.png","hash":"0ad658857a42b213ddb182c94b698d4a31b86eb8","modified":1658875320000},{"_id":"source/images/Linux 설치/Untitled 11.png","hash":"d7c9423bc77bd9b8fe49abfbdad603dddac50ac9","modified":1658875320000},{"_id":"source/images/Linux 설치/Untitled 13.png","hash":"b686962177d436a7f40683dfc595d769ca4d46f9","modified":1658875320000},{"_id":"source/images/Linux 설치/Untitled 12.png","hash":"b78807bc63d483cf14c479bf8a50ca5f85bf9adc","modified":1658875320000},{"_id":"source/images/Linux 설치/Untitled 14.png","hash":"f5108f1841aaa99c85e8439a290ed936d61e53e8","modified":1658875320000},{"_id":"source/images/Linux 설치/Untitled 15.png","hash":"3e8b316e492680a1d8f817e4f1bb92b23a4a0b48","modified":1658875320000},{"_id":"source/images/Linux 설치/Untitled 17.png","hash":"209a20f137fca78559867bc50e5505911bd2aecd","modified":1658875320000},{"_id":"source/images/Linux 설치/Untitled 18.png","hash":"d4ebd188af97034e38dd9f83452ff2ca6d9daf82","modified":1658875320000},{"_id":"source/images/Linux 설치/Untitled 19.png","hash":"fb56561d143ce62bbf4c7cb4626b25bd49a50373","modified":1658875320000},{"_id":"source/images/Linux 설치/Untitled 16.png","hash":"ce6bdc8f235118567b33146cf79796278c9f8908","modified":1658875320000},{"_id":"source/images/Linux 설치/Untitled 20.png","hash":"47e577f8d543c72b1f634cded957057ca2c0b02e","modified":1658875320000},{"_id":"source/images/Linux 설치/Untitled 21.png","hash":"283bfaf5d41bb97733afc9dab6ec730f20cddf90","modified":1658875320000},{"_id":"source/images/Linux 설치/Untitled 2.png","hash":"85397ad525363f24e2002f32f4248afb50209325","modified":1658875318000},{"_id":"source/images/Linux 설치/Untitled 23.png","hash":"689456a07e26a40e359a4d7d1e2197493db4e375","modified":1658875320000},{"_id":"source/images/Linux 설치/Untitled 22.png","hash":"0b4b7899da42a340f7d1102c05a4928fdfd05a34","modified":1658875320000},{"_id":"source/images/Linux 설치/Untitled 24.png","hash":"859143332073b0261007c099ce0502a0a65d340b","modified":1658875320000},{"_id":"source/images/Linux 설치/Untitled 25.png","hash":"517bf27240e037916f6fdd6fddc0fca1ecf9ccad","modified":1658875320000},{"_id":"source/images/Linux 설치/Untitled 3.png","hash":"3042129aa3619ba372e4c13bdf739585f6317ddb","modified":1658875318000},{"_id":"source/images/Linux 설치/Untitled 5.png","hash":"c5cbf916242aa55ad67db7db57a224533faade3a","modified":1658875318000},{"_id":"source/images/Linux 설치/Untitled 6.png","hash":"d6e0ec4463e6090378a77eb2d1da947c92b6c855","modified":1658875318000},{"_id":"source/images/Linux 설치/Untitled 4.png","hash":"72b82659e6bafbe21c8217cf904a93bfeeeb028b","modified":1658875318000},{"_id":"source/images/Linux 설치/Untitled 7.png","hash":"c7d232df51f82545dcde7119bbc63c3c23625ffc","modified":1658875318000},{"_id":"source/images/Linux 설치/Untitled 8.png","hash":"a60111c0cbb47ef34c0b4cd40bfc108918e48062","modified":1658875318000},{"_id":"source/images/Linux 설치/Untitled.png","hash":"8e8d2a248034badd4ba499e716489cba02c53119","modified":1658875318000},{"_id":"source/images/Linux 설치/Untitled 9.png","hash":"3a500fcf87a89515833bd222da2ebc05f28b695e","modified":1658875320000},{"_id":"source/_posts/Linux 설치/Linux.png","hash":"3f3b34fbc88313724eb16e75cef52d4d992fff81","modified":1658908301397},{"_id":"source/images/Linux 설치/Untitled 1.png","hash":"2c1899be9252af8f922b732a34d94d38b82330b0","modified":1658875318000},{"_id":"source/images/Linux/Untitled 10.png","hash":"0ad658857a42b213ddb182c94b698d4a31b86eb8","modified":1658875320000},{"_id":"source/images/Linux/Untitled 11.png","hash":"d7c9423bc77bd9b8fe49abfbdad603dddac50ac9","modified":1658875320000},{"_id":"source/images/Linux/Untitled 13.png","hash":"b686962177d436a7f40683dfc595d769ca4d46f9","modified":1658875320000},{"_id":"source/images/Linux/Untitled 12.png","hash":"b78807bc63d483cf14c479bf8a50ca5f85bf9adc","modified":1658875320000},{"_id":"source/images/Linux/Untitled 14.png","hash":"f5108f1841aaa99c85e8439a290ed936d61e53e8","modified":1658875320000},{"_id":"source/images/Linux/Untitled 15.png","hash":"3e8b316e492680a1d8f817e4f1bb92b23a4a0b48","modified":1658875320000},{"_id":"source/images/Linux/Untitled 17.png","hash":"209a20f137fca78559867bc50e5505911bd2aecd","modified":1658875320000},{"_id":"source/images/Linux/Untitled 18.png","hash":"d4ebd188af97034e38dd9f83452ff2ca6d9daf82","modified":1658875320000},{"_id":"source/images/Linux/Untitled 16.png","hash":"ce6bdc8f235118567b33146cf79796278c9f8908","modified":1658875320000},{"_id":"source/images/Linux/Untitled 19.png","hash":"fb56561d143ce62bbf4c7cb4626b25bd49a50373","modified":1658875320000},{"_id":"source/images/Linux/Untitled 2.png","hash":"85397ad525363f24e2002f32f4248afb50209325","modified":1658875318000},{"_id":"source/images/Linux/Untitled 20.png","hash":"47e577f8d543c72b1f634cded957057ca2c0b02e","modified":1658875320000},{"_id":"source/images/Linux/Untitled 21.png","hash":"283bfaf5d41bb97733afc9dab6ec730f20cddf90","modified":1658875320000},{"_id":"source/images/Linux/Untitled 22.png","hash":"0b4b7899da42a340f7d1102c05a4928fdfd05a34","modified":1658875320000},{"_id":"source/images/Linux/Untitled 23.png","hash":"689456a07e26a40e359a4d7d1e2197493db4e375","modified":1658875320000},{"_id":"source/images/Linux/Untitled 24.png","hash":"859143332073b0261007c099ce0502a0a65d340b","modified":1658875320000},{"_id":"source/images/Linux/Untitled 25.png","hash":"517bf27240e037916f6fdd6fddc0fca1ecf9ccad","modified":1658875320000},{"_id":"source/images/Linux/Untitled 3.png","hash":"3042129aa3619ba372e4c13bdf739585f6317ddb","modified":1658875318000},{"_id":"source/images/Linux/Untitled 5.png","hash":"c5cbf916242aa55ad67db7db57a224533faade3a","modified":1658875318000},{"_id":"source/images/Linux/Untitled 4.png","hash":"72b82659e6bafbe21c8217cf904a93bfeeeb028b","modified":1658875318000},{"_id":"source/images/Linux/Untitled 7.png","hash":"c7d232df51f82545dcde7119bbc63c3c23625ffc","modified":1658875318000},{"_id":"source/images/Linux/Untitled 6.png","hash":"d6e0ec4463e6090378a77eb2d1da947c92b6c855","modified":1658875318000},{"_id":"source/images/Linux/Untitled 8.png","hash":"a60111c0cbb47ef34c0b4cd40bfc108918e48062","modified":1658875318000},{"_id":"source/images/Linux/Untitled 9.png","hash":"3a500fcf87a89515833bd222da2ebc05f28b695e","modified":1658875320000},{"_id":"source/images/Linux/Untitled.png","hash":"8e8d2a248034badd4ba499e716489cba02c53119","modified":1658875318000},{"_id":"source/images/Python_venv/Untitled 1.png","hash":"7fd957ffd0e9e3123070307a5991ce782ebabb1f","modified":1659325497922},{"_id":"source/images/Python_venv/Untitled 3.png","hash":"110727d2d39013168bd1a940840f1491d708e63e","modified":1658907961681},{"_id":"source/images/Python_venv/Untitled 2.png","hash":"cda7e6f5ead97643cb792f3b71b56a3a2c8d5e6f","modified":1659325497922},{"_id":"source/images/Python_venv/Untitled 4.png","hash":"f13bb6ef2ac541aeff2eb64f7a2bb9b6e040de44","modified":1659325497922},{"_id":"source/images/Python_venv/Untitled.png","hash":"d5de6511a13278df827c0acf38e08101f0dfb3db","modified":1659325497922},{"_id":"source/images/Linux/Untitled 1.png","hash":"2c1899be9252af8f922b732a34d94d38b82330b0","modified":1658875318000},{"_id":"public/categories/Linux/index.html","hash":"715e1a0e1935d5c616d06f0ad5510c85c01c6a34","modified":1680748325582},{"_id":"public/2022/07/27/Linux 설치/index.html","hash":"8356a47b21ae901443db4fb8a83f26122f0bc4de","modified":1680748325582},{"_id":"public/images/Linux/Untitled 10.png","hash":"0ad658857a42b213ddb182c94b698d4a31b86eb8","modified":1658908778414},{"_id":"public/images/Linux/Untitled 11.png","hash":"d7c9423bc77bd9b8fe49abfbdad603dddac50ac9","modified":1658908778414},{"_id":"public/images/Linux/Untitled 12.png","hash":"b78807bc63d483cf14c479bf8a50ca5f85bf9adc","modified":1658908778414},{"_id":"public/images/Linux/Untitled 13.png","hash":"b686962177d436a7f40683dfc595d769ca4d46f9","modified":1658908778414},{"_id":"public/images/Linux/Untitled 14.png","hash":"f5108f1841aaa99c85e8439a290ed936d61e53e8","modified":1658908778414},{"_id":"public/images/Linux/Untitled 15.png","hash":"3e8b316e492680a1d8f817e4f1bb92b23a4a0b48","modified":1658908778414},{"_id":"public/images/Linux/Untitled 17.png","hash":"209a20f137fca78559867bc50e5505911bd2aecd","modified":1658908778414},{"_id":"public/images/Linux/Untitled 18.png","hash":"d4ebd188af97034e38dd9f83452ff2ca6d9daf82","modified":1658908778414},{"_id":"public/images/Linux/Untitled 16.png","hash":"ce6bdc8f235118567b33146cf79796278c9f8908","modified":1658908778414},{"_id":"public/images/Linux/Untitled 19.png","hash":"fb56561d143ce62bbf4c7cb4626b25bd49a50373","modified":1658908778414},{"_id":"public/images/Linux/Untitled 20.png","hash":"47e577f8d543c72b1f634cded957057ca2c0b02e","modified":1658908778414},{"_id":"public/images/Linux/Untitled 2.png","hash":"85397ad525363f24e2002f32f4248afb50209325","modified":1658908778414},{"_id":"public/images/Linux/Untitled 21.png","hash":"283bfaf5d41bb97733afc9dab6ec730f20cddf90","modified":1658908778414},{"_id":"public/images/Linux/Untitled 22.png","hash":"0b4b7899da42a340f7d1102c05a4928fdfd05a34","modified":1658908778414},{"_id":"public/images/Linux/Untitled 23.png","hash":"689456a07e26a40e359a4d7d1e2197493db4e375","modified":1658908778414},{"_id":"public/images/Linux/Untitled 24.png","hash":"859143332073b0261007c099ce0502a0a65d340b","modified":1658908778414},{"_id":"public/images/Linux/Untitled 5.png","hash":"c5cbf916242aa55ad67db7db57a224533faade3a","modified":1658908778414},{"_id":"public/images/Linux/Untitled 25.png","hash":"517bf27240e037916f6fdd6fddc0fca1ecf9ccad","modified":1658908778414},{"_id":"public/images/Linux/Untitled 3.png","hash":"3042129aa3619ba372e4c13bdf739585f6317ddb","modified":1658908778414},{"_id":"public/images/Linux/Untitled 7.png","hash":"c7d232df51f82545dcde7119bbc63c3c23625ffc","modified":1658908778414},{"_id":"public/images/Linux/Untitled 4.png","hash":"72b82659e6bafbe21c8217cf904a93bfeeeb028b","modified":1658908778414},{"_id":"public/images/Linux/Untitled 6.png","hash":"d6e0ec4463e6090378a77eb2d1da947c92b6c855","modified":1658908778414},{"_id":"public/images/Linux/Untitled 8.png","hash":"a60111c0cbb47ef34c0b4cd40bfc108918e48062","modified":1658908778414},{"_id":"public/images/Linux/Untitled 9.png","hash":"3a500fcf87a89515833bd222da2ebc05f28b695e","modified":1658908778414},{"_id":"public/images/Linux/Untitled.png","hash":"8e8d2a248034badd4ba499e716489cba02c53119","modified":1658908778414},{"_id":"public/images/Python_venv/Untitled 1.png","hash":"8351382c453c04cd6828ed22f1b96f01fd2f4e42","modified":1658908778414},{"_id":"public/images/Python_venv/Untitled 2.png","hash":"07531f85a4a71bf4e1bcaa5054b098ae6e427418","modified":1658908778414},{"_id":"public/images/Python_venv/Untitled 3.png","hash":"110727d2d39013168bd1a940840f1491d708e63e","modified":1658908778414},{"_id":"public/images/Python_venv/Untitled.png","hash":"e82029c94837db61e0383ca1277a6b912fde4b17","modified":1658908778414},{"_id":"public/images/Python_venv/Untitled 4.png","hash":"d01dc9dce20aaa0037c266e1209e9073b0df1af1","modified":1658908778414},{"_id":"public/images/Linux/Untitled 1.png","hash":"2c1899be9252af8f922b732a34d94d38b82330b0","modified":1658908778414},{"_id":"public/2022/07/27/Linux 설치/Linux.png","hash":"3f3b34fbc88313724eb16e75cef52d4d992fff81","modified":1658908778414},{"_id":"source/_posts/Spark_install.md","hash":"0794f44b87660ec97e2cc311d207c45ba86d5037","modified":1659072261993},{"_id":"source/_posts/Crawling_Practice.md","hash":"1514f54b1ddfaec3d6a447ee08bdbd82acf1ecd8","modified":1659706607232},{"_id":"source/_posts/day0728.md","hash":"31ee48cfe6a482e6e2cdc42a24563ba6356b2fb1","modified":1659072181162},{"_id":"source/images/Crawling_Practice/Untitled 6.png","hash":"aaec86b3404f2d1e0aa4f7f4aa255f869895ddf9","modified":1659034058000},{"_id":"source/images/Crawling_Practice/Untitled 5.png","hash":"88c66ce6f4f673d338d654ca83c1a3405d72e72d","modified":1659034058000},{"_id":"source/images/Crawling_Practice/Untitled 2.png","hash":"dad91c5ab8d095e8b38fa60caf8a9390254ac91d","modified":1659325497922},{"_id":"source/images/Crawling_Practice/Untitled 3.png","hash":"cfc5951fc5e4b0f561dfd9ccb68cec726803c78f","modified":1659325497922},{"_id":"source/images/Crawling_Practice/Untitled 4.png","hash":"c5fd6c728fd521bdd41ec2733116e579f023b61b","modified":1659325497922},{"_id":"source/images/Crawling_Practice/Untitled 1.png","hash":"0a1defa813da0d330999fde2268c9ed71e87da57","modified":1659325497922},{"_id":"source/images/Crawling_Practice/Untitled.png","hash":"4cb16332b2f55fc602b5e975c73bb85333d23e20","modified":1659034052000},{"_id":"source/images/Crawling_Practice/Untitled 7.png","hash":"79a84f20197338d7363124630151a76f1ccc8ae1","modified":1659034058000},{"_id":"source/images/Crawling_Practice/Untitled 8.png","hash":"504658f1bda2ccc5d0375078b93cd5d740a7701a","modified":1659034058000},{"_id":"source/images/Spark_install/Untitled 11.png","hash":"60059b415d1e8bbff3f41d75b7cf4c7a386ebdec","modified":1659035062000},{"_id":"source/images/Spark_install/Untitled 15.png","hash":"180c139b98541c63438132560454c4bfa4640882","modified":1659035064000},{"_id":"source/images/Spark_install/Untitled 10.png","hash":"d9bf0936bd26e2293fc0f63808d877b872d7c468","modified":1659035062000},{"_id":"source/images/Spark_install/Untitled 1.png","hash":"0ec269d1f464bf7094469784ee3f1e299408c408","modified":1659035062000},{"_id":"source/images/Spark_install/Untitled 14.png","hash":"e8c48615172a00619652108d96cfa67d80d8bb80","modified":1659035064000},{"_id":"source/images/Spark_install/Untitled 12.png","hash":"ee40841f3599a2d26eb7f25beeeae851bfa831ea","modified":1659035062000},{"_id":"source/images/Spark_install/Untitled 13.png","hash":"742756b87aecc22fc567148d5abdf11ad720e71f","modified":1659035062000},{"_id":"source/images/Spark_install/Untitled 16.png","hash":"a3ada00b154133f0e2f015563bdb5115b5284cd1","modified":1659035064000},{"_id":"source/images/Spark_install/Untitled 17.png","hash":"aa7fb45e49f64d99b15335ac5dfa09885ebdbb9a","modified":1659035064000},{"_id":"source/images/Spark_install/Untitled 2.png","hash":"6f7c8a74c9064e47259e47a0319ac716cd4b3ca4","modified":1659035062000},{"_id":"source/images/Spark_install/Untitled 5.png","hash":"a015a087ab30bc426d1655bc2f6844f889005241","modified":1659035062000},{"_id":"source/images/Spark_install/Untitled 4.png","hash":"48f4b032b2bf82893a66b1a90e17da1ca43d8b77","modified":1659035062000},{"_id":"source/images/Spark_install/Untitled 6.png","hash":"04f1ebaea2af4ddb59743a56c743fe9ba7c0e8d9","modified":1659035062000},{"_id":"source/images/Spark_install/Untitled 3.png","hash":"28b8129068b1c1d485f2b77e5a75601ddb73c23b","modified":1659035062000},{"_id":"source/images/Spark_install/Untitled 8.png","hash":"b7525b8476d493499feacf05482a3752441362be","modified":1659035062000},{"_id":"source/images/Spark_install/Untitled 7.png","hash":"efb5edfe673c9453c5df2f00df4cea58ac21ad23","modified":1659035062000},{"_id":"source/images/Spark_install/Untitled 9.png","hash":"ff037d08a89a2df13f8045ce91afa0fc68ede39c","modified":1659035062000},{"_id":"source/images/Spark_install/Untitled.png","hash":"c6cc841fbf8a344b816d6dfc6dc628906681e03b","modified":1659035060000},{"_id":"source/_posts/Spark_install/Linux.png","hash":"3f3b34fbc88313724eb16e75cef52d4d992fff81","modified":1658908301396},{"_id":"source/_posts/day0728/Linux.png","hash":"3f3b34fbc88313724eb16e75cef52d4d992fff81","modified":1658908301396},{"_id":"source/images/Spark_install/Untitled 18.png","hash":"f3c6ed51d5c8ea33465764aa1eaa78ebbf4c05a3","modified":1659035064000},{"_id":"public/2022/07/29/Spark_install/index.html","hash":"cc0030aad1ab0258170d9e481b17358d5bd4f3be","modified":1659073533782},{"_id":"public/2022/07/29/Crawling_Practice/index.html","hash":"774cd4607f1c9719cddc9ff6320cc4b659b4f6ba","modified":1680748325582},{"_id":"public/2022/07/28/day0728/index.html","hash":"1583d6d274a958122805b22d2acf291b251ea1d5","modified":1680748325582},{"_id":"public/page/5/index.html","hash":"b27f23ea43100f90caf708aae2ee4058aa690423","modified":1680748325582},{"_id":"public/archives/page/5/index.html","hash":"048281db0924d5b25af76920b0065c494fccd67e","modified":1680748325582},{"_id":"public/archives/2022/page/5/index.html","hash":"31fe4fe8d89d7558cce92ccf2eb6dc36d51c4494","modified":1680748325582},{"_id":"public/images/Crawling_Practice/Untitled 3.png","hash":"64b3be1edba332f77ed8e8c1f780ffce26871388","modified":1659073533782},{"_id":"public/images/Crawling_Practice/Untitled 1.png","hash":"8216801a5fb98ac23432e775a0ec85fce8f2de01","modified":1659073533782},{"_id":"public/images/Crawling_Practice/Untitled 2.png","hash":"b34898c21a854ed1c0e237fc840dffd814bd9913","modified":1659073533782},{"_id":"public/images/Crawling_Practice/Untitled 4.png","hash":"ef62d91e1eaac0d22f66e55da0b00d6086838450","modified":1659073533782},{"_id":"public/images/Crawling_Practice/Untitled 6.png","hash":"aaec86b3404f2d1e0aa4f7f4aa255f869895ddf9","modified":1659073533782},{"_id":"public/images/Crawling_Practice/Untitled 5.png","hash":"88c66ce6f4f673d338d654ca83c1a3405d72e72d","modified":1659073533782},{"_id":"public/images/Crawling_Practice/Untitled.png","hash":"4cb16332b2f55fc602b5e975c73bb85333d23e20","modified":1659073533782},{"_id":"public/images/Crawling_Practice/Untitled 7.png","hash":"79a84f20197338d7363124630151a76f1ccc8ae1","modified":1659073533782},{"_id":"public/images/Spark_install/Untitled 1.png","hash":"0ec269d1f464bf7094469784ee3f1e299408c408","modified":1659793936309},{"_id":"public/images/Crawling_Practice/Untitled 8.png","hash":"504658f1bda2ccc5d0375078b93cd5d740a7701a","modified":1659073533782},{"_id":"public/images/Spark_install/Untitled 10.png","hash":"d9bf0936bd26e2293fc0f63808d877b872d7c468","modified":1659793936309},{"_id":"public/images/Spark_install/Untitled 13.png","hash":"742756b87aecc22fc567148d5abdf11ad720e71f","modified":1659793936309},{"_id":"public/images/Spark_install/Untitled 12.png","hash":"ee40841f3599a2d26eb7f25beeeae851bfa831ea","modified":1659793936309},{"_id":"public/images/Spark_install/Untitled 11.png","hash":"60059b415d1e8bbff3f41d75b7cf4c7a386ebdec","modified":1659793936309},{"_id":"public/images/Spark_install/Untitled 14.png","hash":"e8c48615172a00619652108d96cfa67d80d8bb80","modified":1659793936309},{"_id":"public/images/Spark_install/Untitled 16.png","hash":"a3ada00b154133f0e2f015563bdb5115b5284cd1","modified":1659793936309},{"_id":"public/images/Spark_install/Untitled 15.png","hash":"180c139b98541c63438132560454c4bfa4640882","modified":1659793936309},{"_id":"public/images/Spark_install/Untitled 17.png","hash":"aa7fb45e49f64d99b15335ac5dfa09885ebdbb9a","modified":1659793936309},{"_id":"public/images/Spark_install/Untitled 2.png","hash":"6f7c8a74c9064e47259e47a0319ac716cd4b3ca4","modified":1659793936309},{"_id":"public/images/Spark_install/Untitled 5.png","hash":"a015a087ab30bc426d1655bc2f6844f889005241","modified":1659793936309},{"_id":"public/images/Spark_install/Untitled 4.png","hash":"48f4b032b2bf82893a66b1a90e17da1ca43d8b77","modified":1659793936309},{"_id":"public/images/Spark_install/Untitled 6.png","hash":"04f1ebaea2af4ddb59743a56c743fe9ba7c0e8d9","modified":1659793936309},{"_id":"public/images/Spark_install/Untitled 3.png","hash":"28b8129068b1c1d485f2b77e5a75601ddb73c23b","modified":1659793936309},{"_id":"public/images/Spark_install/Untitled 8.png","hash":"b7525b8476d493499feacf05482a3752441362be","modified":1659793936309},{"_id":"public/images/Spark_install/Untitled 7.png","hash":"efb5edfe673c9453c5df2f00df4cea58ac21ad23","modified":1659793936309},{"_id":"public/images/Spark_install/Untitled.png","hash":"c6cc841fbf8a344b816d6dfc6dc628906681e03b","modified":1659793936309},{"_id":"public/images/Spark_install/Untitled 9.png","hash":"ff037d08a89a2df13f8045ce91afa0fc68ede39c","modified":1659793936309},{"_id":"public/images/Spark_install/Untitled 18.png","hash":"f3c6ed51d5c8ea33465764aa1eaa78ebbf4c05a3","modified":1659793936309},{"_id":"public/2022/07/29/Spark_install/Linux.png","hash":"3f3b34fbc88313724eb16e75cef52d4d992fff81","modified":1659073533782},{"_id":"public/2022/07/28/day0728/Linux.png","hash":"3f3b34fbc88313724eb16e75cef52d4d992fff81","modified":1659073533782},{"_id":"source/_posts/day0729.md","hash":"6b3f88e964c6aaba15567b07f1444c6e0b1c954b","modified":1659242560743},{"_id":"source/_posts/day0731_Spark.md","hash":"67fc9a42decdbb297b54401ba88359a5d3d8e8f3","modified":1659242560739},{"_id":"source/images/0729/Untitled 1.png","hash":"529a7aa53fd2acb2a81ece905667ed72b936ae32","modified":1659325497860},{"_id":"source/images/0729/Untitled 10.png","hash":"2b4abf56d1455a5ea23a5490f0f2813134c67590","modified":1659325497860},{"_id":"source/images/0729/Untitled 11.png","hash":"0acb055909fb29d712532c912a0b4011c9457345","modified":1659325497860},{"_id":"source/images/0729/Untitled 13.png","hash":"ec4a207abdf8a0926288a39fd91a9c8f6380f6c7","modified":1659325497860},{"_id":"source/images/0729/Untitled 12.png","hash":"aa48dec0d5917aa0742608a87b64b87f44c01ae0","modified":1659325497860},{"_id":"source/images/0729/Untitled 15.png","hash":"7448ed1f2c5c1ff8d2bfea2278ca1b6ab62452c7","modified":1659325497860},{"_id":"source/images/0729/Untitled 16.png","hash":"76f371d6d001645a53700fed553647efc8521a2d","modified":1659325497860},{"_id":"source/images/0729/Untitled 17.png","hash":"0d5e2237783aa1f9e3f7e201d69f553d924f4250","modified":1659325497860},{"_id":"source/images/0729/Untitled 18.png","hash":"9d3649308110cbaebd41dacc0ad0742e3d28e1c4","modified":1659325497860},{"_id":"source/images/0729/Untitled 2.png","hash":"8e435018fcb16c1856b52031faf23381382c9845","modified":1659325497875},{"_id":"source/images/0729/Untitled 19.png","hash":"e35b0258f6c3686e350c96ca857859dcf26ae268","modified":1659325497860},{"_id":"source/images/0729/Untitled 20.png","hash":"c5910af99331a2f7cde0ee9737102d48a2208ed8","modified":1659325497875},{"_id":"source/images/0729/Untitled 22.png","hash":"a1275ed8073613a87062c4d0c258ecf22be28eec","modified":1659325497875},{"_id":"source/images/0729/Untitled 21.png","hash":"19e380c8b9c89b542f696f3844c38c8ab0b01eff","modified":1659325497875},{"_id":"source/images/0729/Untitled 3.png","hash":"08d50f447d3ef3a6ec1ea089fd692fbce650e9b4","modified":1659325497875},{"_id":"source/images/0729/Untitled 4.png","hash":"ffaed0bda52fd88e4ab5a8f4e67fc62e2fed48f9","modified":1659325497875},{"_id":"source/images/0729/Untitled 6.png","hash":"997a83d197d80e69b9d71fbe0f3fd95fde07c4b0","modified":1659325497875},{"_id":"source/images/0729/Untitled 7.png","hash":"ec60c532a978bf7c7eedba90a1e7328d2401536e","modified":1659325497875},{"_id":"source/images/0729/Untitled 8.png","hash":"3b6c8f3ede9104d6454f8ab75309368eb06c6289","modified":1659325497875},{"_id":"source/images/0729/Untitled 9.png","hash":"7179864cea85de7e44e441831276f9af1d21d9a2","modified":1659325497875},{"_id":"source/images/0729/Untitled.png","hash":"3ea0a820ddf9653f317d5d87a16785233b5bc0f9","modified":1659325497875},{"_id":"source/images/0731_Spark/Untitled 1.png","hash":"0ec269d1f464bf7094469784ee3f1e299408c408","modified":1659325497875},{"_id":"source/images/0731_Spark/Untitled 10.png","hash":"d9bf0936bd26e2293fc0f63808d877b872d7c468","modified":1659325497891},{"_id":"source/images/0731_Spark/Untitled 11.png","hash":"60059b415d1e8bbff3f41d75b7cf4c7a386ebdec","modified":1659325497891},{"_id":"source/images/0731_Spark/Untitled 12.png","hash":"ee40841f3599a2d26eb7f25beeeae851bfa831ea","modified":1659325497891},{"_id":"source/images/0731_Spark/Untitled 13.png","hash":"742756b87aecc22fc567148d5abdf11ad720e71f","modified":1659325497891},{"_id":"source/images/0729/Untitled 5.png","hash":"a289c89053772a3772ec43c64a0ea5560fc7a8b4","modified":1659325497875},{"_id":"source/images/0731_Spark/Untitled 15.png","hash":"180c139b98541c63438132560454c4bfa4640882","modified":1659325497891},{"_id":"source/images/0731_Spark/Untitled 16.png","hash":"a3ada00b154133f0e2f015563bdb5115b5284cd1","modified":1659325497891},{"_id":"source/images/0731_Spark/Untitled 17.png","hash":"aa7fb45e49f64d99b15335ac5dfa09885ebdbb9a","modified":1659325497891},{"_id":"source/images/0731_Spark/Untitled 2.png","hash":"6f7c8a74c9064e47259e47a0319ac716cd4b3ca4","modified":1659325497906},{"_id":"source/images/0731_Spark/Untitled 3.png","hash":"28b8129068b1c1d485f2b77e5a75601ddb73c23b","modified":1659325497906},{"_id":"source/images/0731_Spark/Untitled 4.png","hash":"48f4b032b2bf82893a66b1a90e17da1ca43d8b77","modified":1659325497906},{"_id":"source/images/0731_Spark/Untitled 5.png","hash":"a015a087ab30bc426d1655bc2f6844f889005241","modified":1659325497906},{"_id":"source/images/0731_Spark/Untitled 6.png","hash":"04f1ebaea2af4ddb59743a56c743fe9ba7c0e8d9","modified":1659325497906},{"_id":"source/images/0731_Spark/Untitled 7.png","hash":"efb5edfe673c9453c5df2f00df4cea58ac21ad23","modified":1659325497906},{"_id":"source/images/0731_Spark/Untitled 9.png","hash":"ff037d08a89a2df13f8045ce91afa0fc68ede39c","modified":1659325497906},{"_id":"source/images/0731_Spark/Untitled 8.png","hash":"b7525b8476d493499feacf05482a3752441362be","modified":1659325497906},{"_id":"source/images/0731_Spark/Untitled.png","hash":"c6cc841fbf8a344b816d6dfc6dc628906681e03b","modified":1659325497906},{"_id":"source/images/0731_Spark/Untitled 14.png","hash":"e8c48615172a00619652108d96cfa67d80d8bb80","modified":1659325497891},{"_id":"source/_posts/day0729/Linux.png","hash":"3f3b34fbc88313724eb16e75cef52d4d992fff81","modified":1659325497844},{"_id":"source/_posts/day0731_Spark/Linux.png","hash":"3f3b34fbc88313724eb16e75cef52d4d992fff81","modified":1659325497844},{"_id":"source/images/0729/Untitled 14.png","hash":"2302ca88fdb22ace5c84a3514fb627be220b4ea5","modified":1659325497860},{"_id":"source/images/0731_Spark/Untitled 18.png","hash":"f3c6ed51d5c8ea33465764aa1eaa78ebbf4c05a3","modified":1659325497906},{"_id":"source/_posts/Crawling_Practice/Linux.png","hash":"3f3b34fbc88313724eb16e75cef52d4d992fff81","modified":1658908301396},{"_id":"public/2022/07/31/day0731_Spark/index.html","hash":"28b520bd58843df4f2f9f9fc1635e7d9f8599d80","modified":1680748325582},{"_id":"public/2022/07/29/day0729/index.html","hash":"5403184c7f399dded9d20148833d6c5f40ae8bbc","modified":1680748325582},{"_id":"public/images/0729/Untitled 1.png","hash":"529a7aa53fd2acb2a81ece905667ed72b936ae32","modified":1659329695459},{"_id":"public/images/0729/Untitled 11.png","hash":"0acb055909fb29d712532c912a0b4011c9457345","modified":1659329695459},{"_id":"public/images/0729/Untitled 12.png","hash":"aa48dec0d5917aa0742608a87b64b87f44c01ae0","modified":1659329695459},{"_id":"public/images/0729/Untitled 10.png","hash":"2b4abf56d1455a5ea23a5490f0f2813134c67590","modified":1659329695459},{"_id":"public/images/0729/Untitled 13.png","hash":"ec4a207abdf8a0926288a39fd91a9c8f6380f6c7","modified":1659329695459},{"_id":"public/images/0729/Untitled 16.png","hash":"76f371d6d001645a53700fed553647efc8521a2d","modified":1659329695459},{"_id":"public/images/0729/Untitled 19.png","hash":"e35b0258f6c3686e350c96ca857859dcf26ae268","modified":1659329695459},{"_id":"public/images/0729/Untitled 2.png","hash":"8e435018fcb16c1856b52031faf23381382c9845","modified":1659329695459},{"_id":"public/images/0729/Untitled 17.png","hash":"0d5e2237783aa1f9e3f7e201d69f553d924f4250","modified":1659329695459},{"_id":"public/images/0729/Untitled 18.png","hash":"9d3649308110cbaebd41dacc0ad0742e3d28e1c4","modified":1659329695459},{"_id":"public/images/0729/Untitled 20.png","hash":"c5910af99331a2f7cde0ee9737102d48a2208ed8","modified":1659329695459},{"_id":"public/images/0729/Untitled 15.png","hash":"7448ed1f2c5c1ff8d2bfea2278ca1b6ab62452c7","modified":1659329695459},{"_id":"public/images/0729/Untitled 21.png","hash":"19e380c8b9c89b542f696f3844c38c8ab0b01eff","modified":1659329695459},{"_id":"public/images/0729/Untitled 3.png","hash":"08d50f447d3ef3a6ec1ea089fd692fbce650e9b4","modified":1659329695459},{"_id":"public/images/0729/Untitled 22.png","hash":"a1275ed8073613a87062c4d0c258ecf22be28eec","modified":1659329695459},{"_id":"public/images/0729/Untitled 4.png","hash":"ffaed0bda52fd88e4ab5a8f4e67fc62e2fed48f9","modified":1659329695459},{"_id":"public/images/0729/Untitled 5.png","hash":"a289c89053772a3772ec43c64a0ea5560fc7a8b4","modified":1659329695459},{"_id":"public/images/0729/Untitled 6.png","hash":"997a83d197d80e69b9d71fbe0f3fd95fde07c4b0","modified":1659329695459},{"_id":"public/images/0729/Untitled 7.png","hash":"ec60c532a978bf7c7eedba90a1e7328d2401536e","modified":1659329695459},{"_id":"public/images/0729/Untitled 8.png","hash":"3b6c8f3ede9104d6454f8ab75309368eb06c6289","modified":1659329695459},{"_id":"public/images/0729/Untitled 9.png","hash":"7179864cea85de7e44e441831276f9af1d21d9a2","modified":1659329695459},{"_id":"public/images/0729/Untitled.png","hash":"3ea0a820ddf9653f317d5d87a16785233b5bc0f9","modified":1659329695459},{"_id":"public/images/0731_Spark/Untitled 1.png","hash":"0ec269d1f464bf7094469784ee3f1e299408c408","modified":1659329695459},{"_id":"public/images/0731_Spark/Untitled 10.png","hash":"d9bf0936bd26e2293fc0f63808d877b872d7c468","modified":1659329695459},{"_id":"public/images/0731_Spark/Untitled 11.png","hash":"60059b415d1e8bbff3f41d75b7cf4c7a386ebdec","modified":1659329695459},{"_id":"public/images/0731_Spark/Untitled 12.png","hash":"ee40841f3599a2d26eb7f25beeeae851bfa831ea","modified":1659329695459},{"_id":"public/images/0731_Spark/Untitled 14.png","hash":"e8c48615172a00619652108d96cfa67d80d8bb80","modified":1659329695459},{"_id":"public/images/0731_Spark/Untitled 13.png","hash":"742756b87aecc22fc567148d5abdf11ad720e71f","modified":1659329695459},{"_id":"public/images/0731_Spark/Untitled 15.png","hash":"180c139b98541c63438132560454c4bfa4640882","modified":1659329695459},{"_id":"public/images/0731_Spark/Untitled 16.png","hash":"a3ada00b154133f0e2f015563bdb5115b5284cd1","modified":1659329695459},{"_id":"public/images/0731_Spark/Untitled 17.png","hash":"aa7fb45e49f64d99b15335ac5dfa09885ebdbb9a","modified":1659329695459},{"_id":"public/images/0731_Spark/Untitled 2.png","hash":"6f7c8a74c9064e47259e47a0319ac716cd4b3ca4","modified":1659329695459},{"_id":"public/images/0731_Spark/Untitled 3.png","hash":"28b8129068b1c1d485f2b77e5a75601ddb73c23b","modified":1659329695459},{"_id":"public/images/0731_Spark/Untitled 4.png","hash":"48f4b032b2bf82893a66b1a90e17da1ca43d8b77","modified":1659329695459},{"_id":"public/images/0729/Untitled 14.png","hash":"2302ca88fdb22ace5c84a3514fb627be220b4ea5","modified":1659329695459},{"_id":"public/images/0731_Spark/Untitled 6.png","hash":"04f1ebaea2af4ddb59743a56c743fe9ba7c0e8d9","modified":1659329695459},{"_id":"public/images/0731_Spark/Untitled 7.png","hash":"efb5edfe673c9453c5df2f00df4cea58ac21ad23","modified":1659329695459},{"_id":"public/images/0731_Spark/Untitled 5.png","hash":"a015a087ab30bc426d1655bc2f6844f889005241","modified":1659329695459},{"_id":"public/images/0731_Spark/Untitled 8.png","hash":"b7525b8476d493499feacf05482a3752441362be","modified":1659329695459},{"_id":"public/images/0731_Spark/Untitled.png","hash":"c6cc841fbf8a344b816d6dfc6dc628906681e03b","modified":1659329695459},{"_id":"public/images/0731_Spark/Untitled 9.png","hash":"ff037d08a89a2df13f8045ce91afa0fc68ede39c","modified":1659329695459},{"_id":"public/2022/07/31/day0731_Spark/Linux.png","hash":"3f3b34fbc88313724eb16e75cef52d4d992fff81","modified":1659329695459},{"_id":"public/images/0731_Spark/Untitled 18.png","hash":"f3c6ed51d5c8ea33465764aa1eaa78ebbf4c05a3","modified":1659329695459},{"_id":"public/2022/07/29/Crawling_Practice/Linux.png","hash":"3f3b34fbc88313724eb16e75cef52d4d992fff81","modified":1659793936309},{"_id":"public/2022/07/29/day0729/Linux.png","hash":"3f3b34fbc88313724eb16e75cef52d4d992fff81","modified":1659329695459},{"_id":"source/_posts/day0801Heroku.md","hash":"dcb78f219f39ea3b9f2bc7cf10e4e25177ecb8f9","modified":1659339299951},{"_id":"source/images/Heroku/Untitled 10.png","hash":"484abc064c6d947e3dd741fc080a946a99976361","modified":1659306606000},{"_id":"source/images/Heroku/Untitled 11.png","hash":"9cf790c7f21e104cdcbc6fb0a135b783c567e8b8","modified":1659306606000},{"_id":"source/images/Heroku/Untitled 12.png","hash":"6760e92230d32193097a839389b3c7c49581c5d1","modified":1659306606000},{"_id":"source/images/Heroku/Untitled 13.png","hash":"f31e2aedfe865a2b63f51b40485e7cc136d87415","modified":1659306606000},{"_id":"source/images/Heroku/Untitled 14.png","hash":"b34276785e324cd92077e85dbdc4c7ad99a2b744","modified":1659306606000},{"_id":"source/images/Heroku/Untitled 16.png","hash":"702c8ba10a1688abe6f3977878f6a2d2ea6aaf08","modified":1659306608000},{"_id":"source/images/Heroku/Untitled 15.png","hash":"92c334af4a6de463b089f604eab3e5f82323fc92","modified":1659306606000},{"_id":"source/images/Heroku/Untitled 17.png","hash":"8c35ed0144733f8e01740c2c3f4d8f677a51697a","modified":1659306608000},{"_id":"source/images/Heroku/Untitled 2.png","hash":"a74e883d61c0ccb3d32070cc0323c7a32ba26c11","modified":1659306606000},{"_id":"source/images/Heroku/Untitled 20.png","hash":"6278c69d06b483957ee91ccf0b1f6f718b6bcca8","modified":1659306608000},{"_id":"source/images/Heroku/Untitled 18.png","hash":"28a2a0660ae1119be775ce80499d6ea1fe775a98","modified":1659306608000},{"_id":"source/images/Heroku/Untitled 19.png","hash":"af13b624301533d6495a8caff3bdc72881cdce3c","modified":1659306608000},{"_id":"source/images/Heroku/Untitled 22.png","hash":"df2815fe1fd06bf5b26ddf46a73b576e798817fa","modified":1659306608000},{"_id":"source/images/Heroku/Untitled 21.png","hash":"1a2aa639700f5197d42cdfc41f7e5250efa2db3d","modified":1659306608000},{"_id":"source/images/Heroku/Untitled 27.png","hash":"b95973a3fcfce219925aad8d03f31b40921ae481","modified":1659306608000},{"_id":"source/images/Heroku/Untitled 28.png","hash":"26bd0df7816e897eb468d9c7e58f97fdeda824e8","modified":1659306610000},{"_id":"source/images/Heroku/Untitled 23.png","hash":"4eab7c89eb6c058342a8a31bba51e20625427282","modified":1659306608000},{"_id":"source/images/Heroku/Untitled 24.png","hash":"514c879e38e095a4a58b4bdc5e09b40a9faf5415","modified":1659306608000},{"_id":"source/images/Heroku/Untitled 25.png","hash":"48f8b88c509d9ca939cbb4e01403746d104fe3d7","modified":1659306608000},{"_id":"source/images/Heroku/Untitled 26.png","hash":"5f1f70b955a6f29141fe055e200129d643a6c1a9","modified":1659306608000},{"_id":"source/images/Heroku/Untitled 3.png","hash":"03060833a747d52b6fabc554f4506b174444ff4f","modified":1659306606000},{"_id":"source/images/Heroku/Untitled 5.png","hash":"403dc289cb31c3ddf47a2b0af37c683056e59d6c","modified":1659306606000},{"_id":"source/images/Heroku/Untitled 4.png","hash":"78e7a9a80ca89bd721311048e64c71307cc87ec6","modified":1659306606000},{"_id":"source/images/Heroku/Untitled 6.png","hash":"88be0151c9227084d455e1a0f075c72290b23239","modified":1659306606000},{"_id":"source/images/Heroku/Untitled 8.png","hash":"8883634442fa914381e0cd76e5ec75f4e663f375","modified":1659306606000},{"_id":"source/images/Heroku/Untitled 7.png","hash":"857f4a290d57a9610d5fa1403bb3aa8b0422c07e","modified":1659306606000},{"_id":"source/images/Heroku/Untitled 9.png","hash":"6e3541e967f9cc0695d3efb4a9b37f2fbced4690","modified":1659306606000},{"_id":"source/images/Heroku/Untitled 1.png","hash":"0870f9dbb5cdc6897ad4ef1d767f426f1f0afccb","modified":1659306606000},{"_id":"source/_posts/day0801Heroku/python.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658907961571},{"_id":"source/images/Heroku/Untitled.png","hash":"3df7dce0c8c92428f4558b64c3855e486678594a","modified":1659306606000},{"_id":"public/archives/2022/08/index.html","hash":"bd3e75c51fbd7999a89963220d5a43976fbcd36b","modified":1680748325582},{"_id":"public/2022/08/01/day0801Heroku/index.html","hash":"96468bb6bb59ef3feea05d4e2b7622ac7d5d77c2","modified":1680748325582},{"_id":"public/images/Heroku/Untitled 12.png","hash":"6760e92230d32193097a839389b3c7c49581c5d1","modified":1659793936309},{"_id":"public/images/Heroku/Untitled 11.png","hash":"9cf790c7f21e104cdcbc6fb0a135b783c567e8b8","modified":1659793936309},{"_id":"public/images/Heroku/Untitled 10.png","hash":"484abc064c6d947e3dd741fc080a946a99976361","modified":1659793936309},{"_id":"public/images/Heroku/Untitled 13.png","hash":"f31e2aedfe865a2b63f51b40485e7cc136d87415","modified":1659793936309},{"_id":"public/images/Heroku/Untitled 15.png","hash":"92c334af4a6de463b089f604eab3e5f82323fc92","modified":1659793936309},{"_id":"public/images/Heroku/Untitled 14.png","hash":"b34276785e324cd92077e85dbdc4c7ad99a2b744","modified":1659793936309},{"_id":"public/images/Heroku/Untitled 19.png","hash":"af13b624301533d6495a8caff3bdc72881cdce3c","modified":1659793936309},{"_id":"public/images/Heroku/Untitled 16.png","hash":"702c8ba10a1688abe6f3977878f6a2d2ea6aaf08","modified":1659793936309},{"_id":"public/images/Heroku/Untitled 18.png","hash":"28a2a0660ae1119be775ce80499d6ea1fe775a98","modified":1659793936309},{"_id":"public/images/Heroku/Untitled 17.png","hash":"8c35ed0144733f8e01740c2c3f4d8f677a51697a","modified":1659793936309},{"_id":"public/images/Heroku/Untitled 20.png","hash":"6278c69d06b483957ee91ccf0b1f6f718b6bcca8","modified":1659793936309},{"_id":"public/images/Heroku/Untitled 22.png","hash":"df2815fe1fd06bf5b26ddf46a73b576e798817fa","modified":1659793936309},{"_id":"public/images/Heroku/Untitled 2.png","hash":"a74e883d61c0ccb3d32070cc0323c7a32ba26c11","modified":1659793936309},{"_id":"public/images/Heroku/Untitled 23.png","hash":"4eab7c89eb6c058342a8a31bba51e20625427282","modified":1659793936309},{"_id":"public/images/Heroku/Untitled 24.png","hash":"514c879e38e095a4a58b4bdc5e09b40a9faf5415","modified":1659793936309},{"_id":"public/images/Heroku/Untitled 27.png","hash":"b95973a3fcfce219925aad8d03f31b40921ae481","modified":1659793936309},{"_id":"public/images/Heroku/Untitled 21.png","hash":"1a2aa639700f5197d42cdfc41f7e5250efa2db3d","modified":1659793936309},{"_id":"public/images/Heroku/Untitled 25.png","hash":"48f8b88c509d9ca939cbb4e01403746d104fe3d7","modified":1659793936309},{"_id":"public/images/Heroku/Untitled 26.png","hash":"5f1f70b955a6f29141fe055e200129d643a6c1a9","modified":1659793936309},{"_id":"public/images/Heroku/Untitled 28.png","hash":"26bd0df7816e897eb468d9c7e58f97fdeda824e8","modified":1659793936309},{"_id":"public/images/Heroku/Untitled 4.png","hash":"78e7a9a80ca89bd721311048e64c71307cc87ec6","modified":1659793936309},{"_id":"public/images/Heroku/Untitled 5.png","hash":"403dc289cb31c3ddf47a2b0af37c683056e59d6c","modified":1659793936309},{"_id":"public/images/Heroku/Untitled 3.png","hash":"03060833a747d52b6fabc554f4506b174444ff4f","modified":1659793936309},{"_id":"public/images/Heroku/Untitled 6.png","hash":"88be0151c9227084d455e1a0f075c72290b23239","modified":1659793936309},{"_id":"public/images/Heroku/Untitled 8.png","hash":"8883634442fa914381e0cd76e5ec75f4e663f375","modified":1659793936309},{"_id":"public/images/Heroku/Untitled 7.png","hash":"857f4a290d57a9610d5fa1403bb3aa8b0422c07e","modified":1659793936309},{"_id":"public/images/Heroku/Untitled 9.png","hash":"6e3541e967f9cc0695d3efb4a9b37f2fbced4690","modified":1659793936309},{"_id":"public/images/Heroku/Untitled 1.png","hash":"0870f9dbb5cdc6897ad4ef1d767f426f1f0afccb","modified":1659793936309},{"_id":"public/images/Heroku/Untitled.png","hash":"3df7dce0c8c92428f4558b64c3855e486678594a","modified":1659793936309},{"_id":"public/2022/08/01/day0801Heroku/python.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1659793936309},{"_id":"source/_posts/머신러닝 해보기.md","hash":"a41bc24a05d2cfa367e520d6f87b6ad88caefed0","modified":1659658214126},{"_id":"source/images/0805/Untitled 1.png","hash":"5a34bed380edaa4c6a6d1813632e16cecfe36461","modified":1659625472000},{"_id":"source/images/0805/Untitled 11.png","hash":"f54608db0c99298a16b712e9b67d8a9a28dec49c","modified":1659625472000},{"_id":"source/images/0805/Untitled 10.png","hash":"3ef54b81066f69e1e71cc20db3dc80a92c87885b","modified":1659625472000},{"_id":"source/images/0805/Untitled 13.png","hash":"c4bb799847d6b481720e0bfea4cedd93c2f2233b","modified":1659625472000},{"_id":"source/images/0805/Untitled 12.png","hash":"0e13eb4786ff32d7dace4857ee672f7a7a575252","modified":1659625472000},{"_id":"source/images/0805/Untitled 14.png","hash":"731f15ed4482801052b72145f7562afbc557b2ff","modified":1659625472000},{"_id":"source/images/0805/Untitled 15.png","hash":"a94df6b2d864567a46b18c6aea9576d7f82dea07","modified":1659625472000},{"_id":"source/images/0805/Untitled 16.png","hash":"362ebbb93e094555be11d0f35fb619863a4a1e86","modified":1659625472000},{"_id":"source/images/0805/Untitled 18.png","hash":"0000dcf530af72e0e69dcf2d4c44cfaf7b2d844a","modified":1659625474000},{"_id":"source/images/0805/Untitled 17.png","hash":"07494521564c73995e2868f10d283427e4d36472","modified":1659625474000},{"_id":"source/images/0805/Untitled 19.png","hash":"fc22df7b6148dc5426e06015f6f115d218b6922b","modified":1659625474000},{"_id":"source/images/0805/Untitled 2.png","hash":"571ac2cc01b48b6d8ff1b9b8afac719348a67912","modified":1659625472000},{"_id":"source/images/0805/Untitled 20.png","hash":"3d7a0e12fb01e9ea27df3f8a7bb17eab45b86e8e","modified":1659625474000},{"_id":"source/images/0805/Untitled 3.png","hash":"e02d3c6c3febb3dad0f918ac54ab0b29a77f00db","modified":1659625472000},{"_id":"source/images/0805/Untitled 4.png","hash":"cca0fb34aba7d1852b19b58a8d26b7a25a75d8e9","modified":1659625472000},{"_id":"source/images/0805/Untitled 5.png","hash":"20de50e5a8e6cb73be7ac9d684b56ecc9d478b68","modified":1659625472000},{"_id":"source/images/0805/Untitled 7.png","hash":"215f80b77fdc822dbcfc85957ae97df44c36c89e","modified":1659625472000},{"_id":"source/images/0805/Untitled 6.png","hash":"3f46abbdc2f61736f09571aea0ac321309f2d8ac","modified":1659625472000},{"_id":"source/images/0805/Untitled 8.png","hash":"a44880033f82b567c78c86b0408b87a152fcf7e0","modified":1659625472000},{"_id":"source/images/0805/Untitled 9.png","hash":"c381386ffe1e55ac7839562a881c2c62f30594e8","modified":1659625472000},{"_id":"source/images/0805/Untitled.png","hash":"84bda8335f05110ae17834ecc50bbc1b62b1d3d6","modified":1659625472000},{"_id":"source/_posts/머신러닝 해보기/python.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1658907961586},{"_id":"source/images/curriculum/img.png","hash":"17364c81f74492b6c680c9a6ffe6e725cc6a0057","modified":1659399522233},{"_id":"public/2022/08/05/머신러닝 해보기/index.html","hash":"11785d7820663e0d28835998fd86bb8dde7daf3f","modified":1680748325582},{"_id":"public/images/0805/Untitled 1.png","hash":"5a34bed380edaa4c6a6d1813632e16cecfe36461","modified":1659793936309},{"_id":"public/images/0805/Untitled 10.png","hash":"3ef54b81066f69e1e71cc20db3dc80a92c87885b","modified":1659793936309},{"_id":"public/images/0805/Untitled 12.png","hash":"0e13eb4786ff32d7dace4857ee672f7a7a575252","modified":1659793936309},{"_id":"public/images/0805/Untitled 11.png","hash":"f54608db0c99298a16b712e9b67d8a9a28dec49c","modified":1659793936309},{"_id":"public/images/0805/Untitled 14.png","hash":"731f15ed4482801052b72145f7562afbc557b2ff","modified":1659793936309},{"_id":"public/images/0805/Untitled 15.png","hash":"a94df6b2d864567a46b18c6aea9576d7f82dea07","modified":1659793936309},{"_id":"public/images/0805/Untitled 13.png","hash":"c4bb799847d6b481720e0bfea4cedd93c2f2233b","modified":1659793936309},{"_id":"public/images/0805/Untitled 16.png","hash":"362ebbb93e094555be11d0f35fb619863a4a1e86","modified":1659793936309},{"_id":"public/images/0805/Untitled 17.png","hash":"07494521564c73995e2868f10d283427e4d36472","modified":1659793936309},{"_id":"public/images/0805/Untitled 18.png","hash":"0000dcf530af72e0e69dcf2d4c44cfaf7b2d844a","modified":1659793936309},{"_id":"public/images/0805/Untitled 19.png","hash":"fc22df7b6148dc5426e06015f6f115d218b6922b","modified":1659793936309},{"_id":"public/images/0805/Untitled 2.png","hash":"571ac2cc01b48b6d8ff1b9b8afac719348a67912","modified":1659793936309},{"_id":"public/images/0805/Untitled 20.png","hash":"3d7a0e12fb01e9ea27df3f8a7bb17eab45b86e8e","modified":1659793936309},{"_id":"public/images/0805/Untitled 4.png","hash":"cca0fb34aba7d1852b19b58a8d26b7a25a75d8e9","modified":1659793936309},{"_id":"public/images/0805/Untitled 3.png","hash":"e02d3c6c3febb3dad0f918ac54ab0b29a77f00db","modified":1659793936309},{"_id":"public/images/0805/Untitled 5.png","hash":"20de50e5a8e6cb73be7ac9d684b56ecc9d478b68","modified":1659793936309},{"_id":"public/images/0805/Untitled 6.png","hash":"3f46abbdc2f61736f09571aea0ac321309f2d8ac","modified":1659793936309},{"_id":"public/images/0805/Untitled 7.png","hash":"215f80b77fdc822dbcfc85957ae97df44c36c89e","modified":1659793936309},{"_id":"public/images/0805/Untitled 9.png","hash":"c381386ffe1e55ac7839562a881c2c62f30594e8","modified":1659793936309},{"_id":"public/images/0805/Untitled 8.png","hash":"a44880033f82b567c78c86b0408b87a152fcf7e0","modified":1659793936309},{"_id":"public/images/0805/Untitled.png","hash":"84bda8335f05110ae17834ecc50bbc1b62b1d3d6","modified":1659793936309},{"_id":"public/images/curriculum/img.png","hash":"17364c81f74492b6c680c9a6ffe6e725cc6a0057","modified":1659793936309},{"_id":"public/2022/08/05/머신러닝 해보기/python.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1659793936309},{"_id":"source/images/0805_1/output_30_2.png","hash":"d49493ff4120d85041e8ac857758e123028f61e8","modified":1659706754000},{"_id":"source/images/0805_1/output_9_0.png","hash":"b34e0434261cdba776e7ae6bacbbb2947295bbb7","modified":1659706754000},{"_id":"source/images/0805_1/output_28_0.png","hash":"516a4b27e2ccbd84fba815a85b01b542ee9948de","modified":1659706754000},{"_id":"source/images/0805_1/output_31_0.png","hash":"1b7578df4bba1c42928449b1ed4bc29f3304a5c1","modified":1659706754000},{"_id":"source/_posts/day0805.md","hash":"1ba8875853b662c0d19820f47f2af478bfaca8fb","modified":1659847568708},{"_id":"source/_posts/day0805/python.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1659706607237},{"_id":"public/2022/08/06/day0805/index.html","hash":"38f810f4dd603e1834be2c64a5072532b030f535","modified":1680748325582},{"_id":"public/images/0805_1/output_30_2.png","hash":"d49493ff4120d85041e8ac857758e123028f61e8","modified":1661493713469},{"_id":"public/images/0805_1/output_28_0.png","hash":"516a4b27e2ccbd84fba815a85b01b542ee9948de","modified":1661493713469},{"_id":"public/images/0805_1/output_31_0.png","hash":"1b7578df4bba1c42928449b1ed4bc29f3304a5c1","modified":1661493713469},{"_id":"public/images/0805_1/output_9_0.png","hash":"b34e0434261cdba776e7ae6bacbbb2947295bbb7","modified":1661493713469},{"_id":"public/2022/08/06/day0805/python.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1661493713469},{"_id":"source/_posts/day0806 Git 잔디심기 오류해결.md","hash":"1bea7d0d2047687150c5337cebbf342bad15c1b4","modified":1667137861006},{"_id":"source/images/0806/Untitled 1.png","hash":"6528ca89d1db454c75c6994969606d02b4b4ca8f","modified":1659763608000},{"_id":"source/images/0806/Untitled 2.png","hash":"221eb6e4060d5c8b73b1a91bec94fd5d6def9c40","modified":1659763608000},{"_id":"source/_posts/day0806 Git 잔디심기 오류해결/Github.png","hash":"9325a0d1351a29b519cc32ee1f4ad9836f991206","modified":1659796335544},{"_id":"source/images/0806/Untitled 3.png","hash":"ca3873444bb70ea9c56257ec4b2a3f4573ced666","modified":1659763608000},{"_id":"source/images/0806/Untitled.png","hash":"8dda5188b9c282e38973426f9d39e93be563139a","modified":1659763608000},{"_id":"source/images/0806/Untitled 4.png","hash":"b4d86af4a602a1bf96279056fa46bb97434f59be","modified":1659763608000},{"_id":"source/_posts/day0808.md","hash":"013bafe06d9d1ae8c36471d1442fa18e44a5ecdb","modified":1662545995605},{"_id":"public/categories/python/index.html","hash":"6b90378cfb504f5be1ecf50689539f8f0cdf850f","modified":1680748325582},{"_id":"public/2022/08/08/day0808/index.html","hash":"f7279046c6e0326ca9731da3623fab51bbdcbf83","modified":1680748325582},{"_id":"public/2022/08/07/day0806 Git 잔디심기 오류해결/index.html","hash":"be1357bd9cfb9b76b0ffbfacc7b1a965c91bbe19","modified":1680748325582},{"_id":"public/images/0806/Untitled 1.png","hash":"6528ca89d1db454c75c6994969606d02b4b4ca8f","modified":1661493713469},{"_id":"public/images/0806/Untitled 4.png","hash":"b4d86af4a602a1bf96279056fa46bb97434f59be","modified":1661493713469},{"_id":"public/images/0806/Untitled 3.png","hash":"ca3873444bb70ea9c56257ec4b2a3f4573ced666","modified":1661493713469},{"_id":"public/images/0806/Untitled 2.png","hash":"221eb6e4060d5c8b73b1a91bec94fd5d6def9c40","modified":1661493713469},{"_id":"public/images/0806/Untitled.png","hash":"8dda5188b9c282e38973426f9d39e93be563139a","modified":1661493713469},{"_id":"public/2022/08/07/day0806 Git 잔디심기 오류해결/Github.png","hash":"9325a0d1351a29b519cc32ee1f4ad9836f991206","modified":1661493713469},{"_id":"source/_posts/day0814.md","hash":"bc651532aa1d698ba285151759ad977868bc9c0a","modified":1661493645191},{"_id":"source/_posts/대시보드.md","hash":"d8d89138fc6c334974ddbb1b2b80dacd9b3aa87c","modified":1662545995610},{"_id":"source/images/대시보드/Untitled 1.png","hash":"a8135b0c6de8985bfb832e8697540851c9d1d59a","modified":1661493645191},{"_id":"source/images/대시보드/Untitled 2.png","hash":"3971a1623a2840a98008ce7e56c11b14a512c5e9","modified":1661493645191},{"_id":"source/images/대시보드/Untitled 4.png","hash":"985b821345a51827f3b8a99571c2b6f022aabdab","modified":1661493645207},{"_id":"source/images/대시보드/Untitled 3.png","hash":"c18bf57689327f9466e65fda73b9d2a328610d23","modified":1661493645191},{"_id":"source/images/대시보드/Untitled 5.png","hash":"86a5075f536810e3e2068247ba11a1b103cf51b3","modified":1661493645207},{"_id":"source/images/대시보드/Untitled.png","hash":"8e5879450fb9d58587766dc87bebb54a3ccdd00e","modified":1661493645207},{"_id":"source/_posts/대시보드/python.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1661493645191},{"_id":"public/2022/08/24/대시보드/index.html","hash":"716f1e02402332028ce1885870681d327dd63522","modified":1680748325582},{"_id":"public/2022/08/14/day0814/index.html","hash":"56ac28d708f0828234f8146d6544df7144f7befd","modified":1680748325582},{"_id":"public/images/대시보드/Untitled 1.png","hash":"a8135b0c6de8985bfb832e8697540851c9d1d59a","modified":1661493713469},{"_id":"public/images/대시보드/Untitled 2.png","hash":"3971a1623a2840a98008ce7e56c11b14a512c5e9","modified":1661493713469},{"_id":"public/images/대시보드/Untitled 4.png","hash":"985b821345a51827f3b8a99571c2b6f022aabdab","modified":1661493713469},{"_id":"public/images/대시보드/Untitled 3.png","hash":"c18bf57689327f9466e65fda73b9d2a328610d23","modified":1661493713469},{"_id":"public/images/대시보드/Untitled 5.png","hash":"86a5075f536810e3e2068247ba11a1b103cf51b3","modified":1661493713469},{"_id":"public/images/대시보드/Untitled.png","hash":"8e5879450fb9d58587766dc87bebb54a3ccdd00e","modified":1661493713469},{"_id":"public/2022/08/24/대시보드/python.png","hash":"c14bd8e9a90b7073806e941c7b8ae11f290f38b6","modified":1661493713469},{"_id":"source/_posts/day0907/heroku.png","hash":"3a66fd736e9fd28dd55626578d2840f75cb2fa84","modified":1662546402760},{"_id":"source/_posts/day0903.md","hash":"db0b55a31d39fc19e18177d735f0233bc7aa3707","modified":1662546490638},{"_id":"source/_posts/day0907.md","hash":"c300a6c31dc59144fc6969b24b22babd8d6a7a01","modified":1681593212100},{"_id":"source/images/day0903/Untitled 1.png","hash":"f0041a9f8edf02b87ea66d755344c0d9f94d65d1","modified":1662177678000},{"_id":"source/images/day0903/Untitled 2.png","hash":"745132502461a00049e64d12b9cba78fb6eb8537","modified":1662177678000},{"_id":"source/images/day0903/Untitled 4.png","hash":"29bf0dea32da58835329e718a5ec45615e651886","modified":1662177680000},{"_id":"source/images/day0903/Untitled 5.png","hash":"59134f2c5543dc5113a79630d43cd1855ad4ca70","modified":1662177680000},{"_id":"source/images/day0903/Untitled 8.png","hash":"dd3568a5ceb37b8c5b72b090c7293ce0e89aedc0","modified":1662177680000},{"_id":"source/images/day0903/Untitled 9.png","hash":"f16c5a85fd8a486963cafd90d47c9872e67616bc","modified":1662177680000},{"_id":"source/images/day0903/Untitled.png","hash":"1ed41c44202c3ae6c6f0164adb45919d8511dd17","modified":1662177678000},{"_id":"source/images/day0903/Untitled 6.png","hash":"6e1a836bfa36186fac67becfff4ed234f1cce056","modified":1662177680000},{"_id":"source/images/day0903/Untitled 7.png","hash":"5198b1fc8ba8fa6aec9b06259852d050a5d41e5d","modified":1662177680000},{"_id":"source/images/day0903/Untitled 10.png","hash":"f79cc6452d8c44d00b74fa93d39cd931a8b1ac73","modified":1662177680000},{"_id":"source/images/day0903/Untitled 3.png","hash":"e0cfa27bcde73a5e4eb2bbd2de7a443b0779ff15","modified":1662177678000},{"_id":"source/_posts/day0903/heroku.png","hash":"3a66fd736e9fd28dd55626578d2840f75cb2fa84","modified":1662546402760},{"_id":"public/archives/2022/09/index.html","hash":"464fa39776788e3669b6c76bd99885863d24c020","modified":1680748325582},{"_id":"public/categories/Java/index.html","hash":"eabed4546b93b665d8e9630a72e08d564bb6e995","modified":1680753129699},{"_id":"public/2022/09/07/day0907/index.html","hash":"0b6cd4197466259cd081982bf568de2dbafeafb3","modified":1680748325582},{"_id":"public/2022/09/03/day0903/index.html","hash":"38437669db710f3062191f5358e8960f343f830e","modified":1680748325582},{"_id":"public/archives/page/6/index.html","hash":"6edf40ea8d7ef2c9bffe7090c666a5096e9a72a7","modified":1680748325582},{"_id":"public/archives/2022/page/6/index.html","hash":"53d5214ddc99f32893b71dd11d2543ef9c59dadb","modified":1680748325582},{"_id":"public/page/6/index.html","hash":"0ec1c92ba641f37c86df15a2dab3f8dd4e18d55b","modified":1680748325582},{"_id":"public/images/day0903/Untitled 1.png","hash":"f0041a9f8edf02b87ea66d755344c0d9f94d65d1","modified":1662546587787},{"_id":"public/images/day0903/Untitled 5.png","hash":"59134f2c5543dc5113a79630d43cd1855ad4ca70","modified":1662546587787},{"_id":"public/images/day0903/Untitled 2.png","hash":"745132502461a00049e64d12b9cba78fb6eb8537","modified":1662546587787},{"_id":"public/images/day0903/Untitled 4.png","hash":"29bf0dea32da58835329e718a5ec45615e651886","modified":1662546587787},{"_id":"public/images/day0903/Untitled 6.png","hash":"6e1a836bfa36186fac67becfff4ed234f1cce056","modified":1662546587787},{"_id":"public/images/day0903/Untitled 8.png","hash":"dd3568a5ceb37b8c5b72b090c7293ce0e89aedc0","modified":1662546587787},{"_id":"public/images/day0903/Untitled.png","hash":"1ed41c44202c3ae6c6f0164adb45919d8511dd17","modified":1662546587787},{"_id":"public/images/day0903/Untitled 9.png","hash":"f16c5a85fd8a486963cafd90d47c9872e67616bc","modified":1662546587787},{"_id":"public/2022/09/03/day0903/heroku.png","hash":"3a66fd736e9fd28dd55626578d2840f75cb2fa84","modified":1662546587787},{"_id":"public/images/day0903/Untitled 7.png","hash":"5198b1fc8ba8fa6aec9b06259852d050a5d41e5d","modified":1662546587787},{"_id":"public/images/day0903/Untitled 10.png","hash":"f79cc6452d8c44d00b74fa93d39cd931a8b1ac73","modified":1662546587787},{"_id":"public/images/day0903/Untitled 3.png","hash":"e0cfa27bcde73a5e4eb2bbd2de7a443b0779ff15","modified":1662546587787},{"_id":"source/_posts/공부방법.md","hash":"416780c9e84996328c9a95b5eca6f3c7dad0b505","modified":1662732009180},{"_id":"source/_posts/Welcome/topgun.png","hash":"67acc1d92b0aca07e79c9ce6ba23e221b271c130","modified":1662732326987},{"_id":"public/2022/09/09/공부방법/index.html","hash":"39b52247aeca70d1e50485fd766036ddec935d76","modified":1680748325582},{"_id":"public/2123/12/31/Welcome/topgun.png","hash":"67acc1d92b0aca07e79c9ce6ba23e221b271c130","modified":1662732525579},{"_id":"source/_posts/day0913.md","hash":"6f7b39507ab9ffe4d47645b96a6ad81038999371","modified":1663078115475},{"_id":"public/categories/JScript/index.html","hash":"3a4f70c9a5c9a762d78573fdd505fc7dfd16e8f8","modified":1680748325582},{"_id":"public/2022/09/13/day0913/index.html","hash":"9e33204ae9f86451022dd74db7ca8574e75b8594","modified":1680748325582},{"_id":"source/_posts/day0915.md","hash":"e383203df14a6e3ab9532312f7dbdf38dcfc4d08","modified":1663248143268},{"_id":"public/2022/09/15/day0915/index.html","hash":"cd7be04d380244aadc394f1ed29a11bbee33355d","modified":1680748325582},{"_id":"source/images/day0916/Untitled 10.png","hash":"ceff90cc7288897a6f856f11ff3fd263cdfc4605","modified":1663303684000},{"_id":"source/_posts/day0916.md","hash":"74d8b08ab31f4d54aa0a9bfd96dce9c160d32a5b","modified":1681592240776},{"_id":"source/images/day0916/Untitled 1.png","hash":"e59df394e6352378e2aa9aa08eddd1b05a57f518","modified":1663303684000},{"_id":"source/images/day0916/Untitled 11.png","hash":"1c7efabd7be0ff4ab082949717a774c6dcef3f03","modified":1663303684000},{"_id":"source/images/day0916/Untitled 12.png","hash":"adeba3ce16477e4ec994969f743e368bd070a46b","modified":1663303684000},{"_id":"source/images/day0916/Untitled 14.png","hash":"b4e23b576b628fb12c5f0a8b4a61e0c4a3858c2d","modified":1663303684000},{"_id":"source/images/day0916/Untitled 13.png","hash":"d445cd4a48e54e452611c1c7d0caa832041bd18c","modified":1663303684000},{"_id":"source/images/day0916/Untitled 18.png","hash":"fa92fff0e1a6b07cbaef6322d0aef9b279cad5eb","modified":1663303684000},{"_id":"source/images/day0916/Untitled 15.png","hash":"1cd30c3f2ff351afbd73fd769a5df47a6c51f172","modified":1663303684000},{"_id":"source/images/day0916/Untitled 16.png","hash":"33366afdabae011670d893a46c5089bf1175486b","modified":1663303684000},{"_id":"source/images/day0916/Untitled 17.png","hash":"c29924843c926262e9d2a3af7f1d42e3f42bd224","modified":1663303684000},{"_id":"source/images/day0916/Untitled 19.png","hash":"7a3f8e344e5d6a98677996796ff2ef6c1321cd6e","modified":1663303684000},{"_id":"source/images/day0916/Untitled 20.png","hash":"4416dc2dcc16516c8b2de58e36fe9e3ed95bca6c","modified":1663303684000},{"_id":"source/images/day0916/Untitled 2.png","hash":"44eda20822d88810c6c030fcd2c9acb4b0aed3d5","modified":1663303684000},{"_id":"source/images/day0916/Untitled 22.png","hash":"5916fd20c7a3ad794d1770947e067027075a9c59","modified":1663303684000},{"_id":"source/images/day0916/Untitled 3.png","hash":"a01ac954d7c6733965944ba935e02ff1ebf4863d","modified":1663303684000},{"_id":"source/images/day0916/Untitled 4.png","hash":"9db8e726cfb8f422646c1d1bfbc4e655866e4725","modified":1663303684000},{"_id":"source/images/day0916/Untitled 23.png","hash":"03fc5d1c60d07349d60d283d1aa77a4b6a905f6e","modified":1663303684000},{"_id":"source/images/day0916/Untitled 6.png","hash":"6c4abf536bde8017b9ddd8b0cd06f8e5647a3216","modified":1663303684000},{"_id":"source/images/day0916/Untitled 7.png","hash":"649a7926f2165cd2bb47c4a6bc34f94fbb22280b","modified":1663303684000},{"_id":"source/images/day0916/Untitled 5.png","hash":"48f6288e8ac2d5abca98c6d8072ef42848457228","modified":1663303684000},{"_id":"source/images/day0916/Untitled 9.png","hash":"6c166e18fd506d952dd5c6f91dbc8f8a0036f640","modified":1663303684000},{"_id":"source/images/day0916/Untitled.png","hash":"f44ee160fba87389f78dbaf2cf7763da210c4df0","modified":1663303684000},{"_id":"source/images/day0916/Untitled 21.png","hash":"62f44b16c343ecd928394c967c1449d2be67a5b1","modified":1663303684000},{"_id":"source/images/day0916/Untitled 8.png","hash":"003b571fb84a559fd45c2db80d39304c8ba3084d","modified":1663303684000},{"_id":"public/2022/09/16/day0916/index.html","hash":"2f0e8402519024efe8bda8119ee99f56131f7bd3","modified":1680748325582},{"_id":"public/images/day0916/Untitled 1.png","hash":"e59df394e6352378e2aa9aa08eddd1b05a57f518","modified":1663336304694},{"_id":"public/images/day0916/Untitled 10.png","hash":"ceff90cc7288897a6f856f11ff3fd263cdfc4605","modified":1663336304694},{"_id":"public/images/day0916/Untitled 11.png","hash":"1c7efabd7be0ff4ab082949717a774c6dcef3f03","modified":1663336304694},{"_id":"public/images/day0916/Untitled 12.png","hash":"adeba3ce16477e4ec994969f743e368bd070a46b","modified":1663336304694},{"_id":"public/images/day0916/Untitled 14.png","hash":"b4e23b576b628fb12c5f0a8b4a61e0c4a3858c2d","modified":1663336304694},{"_id":"public/images/day0916/Untitled 13.png","hash":"d445cd4a48e54e452611c1c7d0caa832041bd18c","modified":1663336304694},{"_id":"public/images/day0916/Untitled 15.png","hash":"1cd30c3f2ff351afbd73fd769a5df47a6c51f172","modified":1663336304694},{"_id":"public/images/day0916/Untitled 18.png","hash":"fa92fff0e1a6b07cbaef6322d0aef9b279cad5eb","modified":1663336304694},{"_id":"public/images/day0916/Untitled 17.png","hash":"c29924843c926262e9d2a3af7f1d42e3f42bd224","modified":1663336304694},{"_id":"public/images/day0916/Untitled 16.png","hash":"33366afdabae011670d893a46c5089bf1175486b","modified":1663336304694},{"_id":"public/images/day0916/Untitled 2.png","hash":"44eda20822d88810c6c030fcd2c9acb4b0aed3d5","modified":1663336304694},{"_id":"public/images/day0916/Untitled 20.png","hash":"4416dc2dcc16516c8b2de58e36fe9e3ed95bca6c","modified":1663336304694},{"_id":"public/images/day0916/Untitled 19.png","hash":"7a3f8e344e5d6a98677996796ff2ef6c1321cd6e","modified":1663336304694},{"_id":"public/images/day0916/Untitled 22.png","hash":"5916fd20c7a3ad794d1770947e067027075a9c59","modified":1663336304694},{"_id":"public/images/day0916/Untitled 23.png","hash":"03fc5d1c60d07349d60d283d1aa77a4b6a905f6e","modified":1663336304694},{"_id":"public/images/day0916/Untitled 3.png","hash":"a01ac954d7c6733965944ba935e02ff1ebf4863d","modified":1663336304694},{"_id":"public/images/day0916/Untitled 4.png","hash":"9db8e726cfb8f422646c1d1bfbc4e655866e4725","modified":1663336304694},{"_id":"public/images/day0916/Untitled 6.png","hash":"6c4abf536bde8017b9ddd8b0cd06f8e5647a3216","modified":1663336304694},{"_id":"public/images/day0916/Untitled 5.png","hash":"48f6288e8ac2d5abca98c6d8072ef42848457228","modified":1663336304694},{"_id":"public/images/day0916/Untitled 7.png","hash":"649a7926f2165cd2bb47c4a6bc34f94fbb22280b","modified":1663336304694},{"_id":"public/images/day0916/Untitled 9.png","hash":"6c166e18fd506d952dd5c6f91dbc8f8a0036f640","modified":1663336304694},{"_id":"public/images/day0916/Untitled.png","hash":"f44ee160fba87389f78dbaf2cf7763da210c4df0","modified":1663336304694},{"_id":"public/images/day0916/Untitled 21.png","hash":"62f44b16c343ecd928394c967c1449d2be67a5b1","modified":1663336304694},{"_id":"public/images/day0916/Untitled 8.png","hash":"003b571fb84a559fd45c2db80d39304c8ba3084d","modified":1663336304694},{"_id":"source/_posts/Java 문법.md","hash":"479e418cfd787761ff980d685d3edd9b4e3a9e53","modified":1665499482516},{"_id":"public/2022/09/18/Java 문법/index.html","hash":"1ea06735f248e2cf56f40e9259201d6cd0570754","modified":1680748325582},{"_id":"source/_posts/day0927.md","hash":"d44886103278d06511130ffc69a393d2a4cb0a55","modified":1680753121066},{"_id":"public/2022/10/12/day0927/index.html","hash":"6d611265b662791d33c0494aa3c62a29c3d1403a","modified":1680753129699},{"_id":"public/archives/2022/10/index.html","hash":"239aafd7372683e7d155799e22b4c33b891e00df","modified":1680753129699},{"_id":"source/images/STS3_Github/Untitled 1.png","hash":"0d05cfa33d662843081a8cbe0e851cff718aaf21","modified":1665893350000},{"_id":"source/images/STS3_Github/Untitled 11.png","hash":"8eba20990de35ea788bf6064e964d6722fa47cfc","modified":1665893352000},{"_id":"source/images/STS3_Github/Untitled 10.png","hash":"d70537debc15e8e41a7e25017e6d2421ffbfef59","modified":1665893352000},{"_id":"source/images/STS3_Github/Untitled 14.png","hash":"9edb1dfe8c1a96a2d56093b62186f319544f3c5b","modified":1665893352000},{"_id":"source/_posts/STS3 이클립스 GitHub 설정.md","hash":"a882e519bfcfc28ba0ee88530cee3286671241b3","modified":1666013764691},{"_id":"source/images/STS3_Github/Untitled 13.png","hash":"93c2e08d25a00bfac0122f2feb9521e65865f708","modified":1665893352000},{"_id":"source/images/STS3_Github/Untitled 12.png","hash":"95b09baf0b3adefdf8d5ea9c98792e460dc6da36","modified":1665893352000},{"_id":"source/images/STS3_Github/Untitled 15.png","hash":"6458cda4de8c7380f31e291dd5312ab0ebafc52e","modified":1665893352000},{"_id":"source/images/STS3_Github/Untitled 16.png","hash":"1927bdb0a742e3c660b9d22673ae03abc726e6e0","modified":1665893352000},{"_id":"source/images/STS3_Github/Untitled 17.png","hash":"e4929208cd33ee74a8720110c56b91f4910f49e9","modified":1665893352000},{"_id":"source/images/STS3_Github/Untitled 18.png","hash":"7c1e78dc11c6f2b57184d58c9d5a84eab347b7ac","modified":1665893352000},{"_id":"source/images/STS3_Github/Untitled 20.png","hash":"fbcff8160ebf887133ec171df529cc7320c0f863","modified":1665893352000},{"_id":"source/images/STS3_Github/Untitled 21.png","hash":"b0c0fe4504e7c953d2ba27de3147c14f5e27c65f","modified":1665893352000},{"_id":"source/images/STS3_Github/Untitled 2.png","hash":"eabd963c71545ed4afb7e00497f49b66dcaed734","modified":1665893350000},{"_id":"source/images/STS3_Github/Untitled 19.png","hash":"28364a2e894238156bc79cc3bad75d919ef94ef3","modified":1665893352000},{"_id":"source/images/STS3_Github/Untitled 22.png","hash":"1263194d34be829d89c199c18fdef9b9aa44fb8f","modified":1665893352000},{"_id":"source/images/STS3_Github/Untitled 24.png","hash":"fdb540770684343505363563ba1771a2ceb9dafb","modified":1665893354000},{"_id":"source/images/STS3_Github/Untitled 25.png","hash":"546770e9f7d9cf72b86b40c335ad8d83239b1bc2","modified":1665893354000},{"_id":"source/images/STS3_Github/Untitled 27.png","hash":"042631e8fa85a27dd44844b0e5b921ad7644bd47","modified":1665893354000},{"_id":"source/images/STS3_Github/Untitled 26.png","hash":"111f7feef9e57f426dd8980ca604edcd782d2ab7","modified":1665893354000},{"_id":"source/images/STS3_Github/Untitled 28.png","hash":"64847abf91d4016a266c7a166da340670bb8094e","modified":1665893354000},{"_id":"source/images/STS3_Github/Untitled 29.png","hash":"0997a04b450a0cf2191c8d2ccb6c6d66ea1f80c0","modified":1665893354000},{"_id":"source/images/STS3_Github/Untitled 3.png","hash":"e549350d64dad4d4cb09b8f3ee158f5c2549ed60","modified":1665893352000},{"_id":"source/images/STS3_Github/Untitled 30.png","hash":"19e9352884a8dcb284fb90aeb99ca8b207552f71","modified":1665893354000},{"_id":"source/images/STS3_Github/Untitled 32.png","hash":"fcc91f990595aefaa7e59e3b05f6b29028392d38","modified":1665893354000},{"_id":"source/images/STS3_Github/Untitled 33.png","hash":"787090bcf4e7e43e2b7277dafc7f4ba6aacd7ec5","modified":1665893354000},{"_id":"source/images/STS3_Github/Untitled 34.png","hash":"2f3f140e9e0d34f0c6dbb6354ee801da755b9dac","modified":1665893356000},{"_id":"source/images/STS3_Github/Untitled 35.png","hash":"1110bb825ab2707ae1fc692bf265d1a93803be55","modified":1665893356000},{"_id":"source/images/STS3_Github/Untitled 37.png","hash":"015966d29e6c2bd10075f2555b23d8c7f7b6fc4a","modified":1665893356000},{"_id":"source/images/STS3_Github/Untitled 5.png","hash":"5bdaa752c35ed1a09659a1fa743af9ae7f4bb5d2","modified":1665893352000},{"_id":"source/images/STS3_Github/Untitled 36.png","hash":"f2a0a80564cace19e9822c828f1ce0c61f1fc5e4","modified":1665893356000},{"_id":"source/images/STS3_Github/Untitled 4.png","hash":"872557d383994b0394ace40d15525124c53a836d","modified":1665893352000},{"_id":"source/images/STS3_Github/Untitled 6.png","hash":"4384ddecfd10a2dc091238741dc310916f013d95","modified":1665893352000},{"_id":"source/images/STS3_Github/Untitled 7.png","hash":"6eda6422ae7b0c6ec3c97456b52458f21223ccb1","modified":1665893352000},{"_id":"source/images/STS3_Github/Untitled 8.png","hash":"ccd81ab020732afcb8cc95ac0537dd8bcfacedbb","modified":1665893352000},{"_id":"source/images/STS3_Github/Untitled 9.png","hash":"cd561a3a84b6768b60dacc0ed2e5f9fca83c452d","modified":1665893352000},{"_id":"source/images/STS3_Github/Untitled.png","hash":"b4cf0fe1a7f153eb76c2ebd5381554286a93cc91","modified":1665893350000},{"_id":"source/images/STS3_Github/Untitled 23.png","hash":"1de4b3e9372e202c5cc67e5c9c0940896e6c7dad","modified":1665893354000},{"_id":"source/images/STS3_Github/Untitled 31.png","hash":"3ac2f35bf3455def0165437ce81527313839e966","modified":1665893354000},{"_id":"public/2022/10/16/STS3 이클립스 GitHub 설정/index.html","hash":"ded95b30898687cd0f1096dd6de651b2db564e90","modified":1680748325582},{"_id":"public/images/STS3_Github/Untitled 1.png","hash":"0d05cfa33d662843081a8cbe0e851cff718aaf21","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 11.png","hash":"8eba20990de35ea788bf6064e964d6722fa47cfc","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 10.png","hash":"d70537debc15e8e41a7e25017e6d2421ffbfef59","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 12.png","hash":"95b09baf0b3adefdf8d5ea9c98792e460dc6da36","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 13.png","hash":"93c2e08d25a00bfac0122f2feb9521e65865f708","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 14.png","hash":"9edb1dfe8c1a96a2d56093b62186f319544f3c5b","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 15.png","hash":"6458cda4de8c7380f31e291dd5312ab0ebafc52e","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 17.png","hash":"e4929208cd33ee74a8720110c56b91f4910f49e9","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 16.png","hash":"1927bdb0a742e3c660b9d22673ae03abc726e6e0","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 18.png","hash":"7c1e78dc11c6f2b57184d58c9d5a84eab347b7ac","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 19.png","hash":"28364a2e894238156bc79cc3bad75d919ef94ef3","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 20.png","hash":"fbcff8160ebf887133ec171df529cc7320c0f863","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 2.png","hash":"eabd963c71545ed4afb7e00497f49b66dcaed734","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 21.png","hash":"b0c0fe4504e7c953d2ba27de3147c14f5e27c65f","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 22.png","hash":"1263194d34be829d89c199c18fdef9b9aa44fb8f","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 24.png","hash":"fdb540770684343505363563ba1771a2ceb9dafb","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 27.png","hash":"042631e8fa85a27dd44844b0e5b921ad7644bd47","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 26.png","hash":"111f7feef9e57f426dd8980ca604edcd782d2ab7","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 25.png","hash":"546770e9f7d9cf72b86b40c335ad8d83239b1bc2","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 28.png","hash":"64847abf91d4016a266c7a166da340670bb8094e","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 3.png","hash":"e549350d64dad4d4cb09b8f3ee158f5c2549ed60","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 29.png","hash":"0997a04b450a0cf2191c8d2ccb6c6d66ea1f80c0","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 30.png","hash":"19e9352884a8dcb284fb90aeb99ca8b207552f71","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 32.png","hash":"fcc91f990595aefaa7e59e3b05f6b29028392d38","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 33.png","hash":"787090bcf4e7e43e2b7277dafc7f4ba6aacd7ec5","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 34.png","hash":"2f3f140e9e0d34f0c6dbb6354ee801da755b9dac","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 35.png","hash":"1110bb825ab2707ae1fc692bf265d1a93803be55","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 36.png","hash":"f2a0a80564cace19e9822c828f1ce0c61f1fc5e4","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 37.png","hash":"015966d29e6c2bd10075f2555b23d8c7f7b6fc4a","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 4.png","hash":"872557d383994b0394ace40d15525124c53a836d","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 6.png","hash":"4384ddecfd10a2dc091238741dc310916f013d95","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 5.png","hash":"5bdaa752c35ed1a09659a1fa743af9ae7f4bb5d2","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 7.png","hash":"6eda6422ae7b0c6ec3c97456b52458f21223ccb1","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 8.png","hash":"ccd81ab020732afcb8cc95ac0537dd8bcfacedbb","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 9.png","hash":"cd561a3a84b6768b60dacc0ed2e5f9fca83c452d","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled.png","hash":"b4cf0fe1a7f153eb76c2ebd5381554286a93cc91","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 23.png","hash":"1de4b3e9372e202c5cc67e5c9c0940896e6c7dad","modified":1665926024855},{"_id":"public/images/STS3_Github/Untitled 31.png","hash":"3ac2f35bf3455def0165437ce81527313839e966","modified":1665926024855},{"_id":"source/images/1017/Untitled.png","hash":"e9f78de574a94985c201fe2df249e08b8268aeea","modified":1665981188000},{"_id":"source/_posts/STS 테마 다운로드 에러 해결.md","hash":"c01d06056017890ac6e6b8bc8e8050a1b0296a60","modified":1666014031896},{"_id":"public/2022/10/17/STS 테마 다운로드 에러 해결/index.html","hash":"b05f38d2438abe614fd16610c33df26fc1193b7a","modified":1680748325582},{"_id":"public/images/1017/Untitled.png","hash":"e9f78de574a94985c201fe2df249e08b8268aeea","modified":1666013740485},{"_id":"source/assets/images/00.png","hash":"f3d513444e97b9b7c4f2419412d0cb70b4d2721e","modified":1488529096000},{"_id":"themes/tranquilpeak/source/assets/images/00.png","hash":"f3d513444e97b9b7c4f2419412d0cb70b4d2721e","modified":1488529096000},{"_id":"public/assets/images/00.png","hash":"f3d513444e97b9b7c4f2419412d0cb70b4d2721e","modified":1669578975272},{"_id":"source/_posts/day0927/Java.png","hash":"8d7639781af80abbd5d34b52dbcea8e1783c52c2","modified":1672001806829},{"_id":"public/2022/10/12/day0927/Java.png","hash":"8d7639781af80abbd5d34b52dbcea8e1783c52c2","modified":1672001893793},{"_id":"source/assets/images/cover.jpg","hash":"653b50dc668e51796c13cf98d2bcab834ec685dc","modified":1657463908371},{"_id":"source/_posts/day0927/java.png","hash":"95e6bb3393f8cd73c27725fc9db9bcba7f1d9320","modified":1681590289602},{"_id":"source/_posts/Java 공부/Java.png","hash":"95e6bb3393f8cd73c27725fc9db9bcba7f1d9320","modified":1681590289602},{"_id":"source/_posts/Java 공부.md","hash":"6b8e5e483aff85fec7a86829fe9e513e591e01dc","modified":1681593127098},{"_id":"source/_posts/Java 공부/wallpaper1.png","hash":"e45e26b4e9639221900bd0f819b86cbd6744ac45","modified":1679086389327}],"Category":[{"name":"점프 투 파이썬","_id":"cl5fcok7k0006jku0hos04gdq"},{"name":"XGBoost & LightGBM","_id":"cl5fcok7n000bjku04u5gdwzo"},{"name":"Python","_id":"cl5fcok7p000gjku0g9su8wpp"},{"name":"복습할 것들","_id":"cl5fcok7t000rjku01hlb3qq5"},{"name":"블로그","_id":"cl5fcok83001ejku0039lcl8e"},{"name":"blog","_id":"cl5fh3s3m0001ywu0d7670xe0"},{"name":"R studio","_id":"cl5fh3s3r0002ywu09ouh5a3m"},{"name":"PyQt5","_id":"cl5ny0ro200012gu0feeacb96"},{"name":"Oracle","_id":"cl5rw18e30001usuo3xx19l33"},{"name":"Linux","_id":"cl63b8xid0001m8uocjel4dri"},{"name":"python","_id":"cl6kt2ldf0001nou07uj24x3y"},{"name":"Java","_id":"cl7rh8gwq0002c0u06x0mde30"},{"name":"JScript","_id":"cl809s1xv0000agu02nuxdul4"}],"Data":[],"Page":[{"title":"all-archives","layout":"all-archives","comments":0,"_content":"","source":"all-archives/index.md","raw":"---\ntitle: \"all-archives\"\nlayout: \"all-archives\"\ncomments: false\n---\n","date":"2022-07-10T11:19:40.617Z","updated":"2022-07-10T11:19:40.617Z","path":"all-archives/index.html","_id":"cl5fcok7e0000jku0diwh4ews","content":"","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":""},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### 수정 후 코드 입력용\n\n``` bash\nnpm install\nnpm install hexo-server --save\nnpm install hexo-deployer-git --save\nhexo server\n\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"all-categories/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### 수정 후 코드 입력용\n\n``` bash\nnpm install\nnpm install hexo-server --save\nnpm install hexo-deployer-git --save\nhexo server\n\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","date":"2022-07-10T11:19:40.617Z","updated":"2022-07-10T11:19:40.617Z","path":"all-categories/hello-world.html","comments":1,"layout":"page","_id":"cl5fcok7h0002jku0hkhd06j6","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"수정-후-코드-입력용\"><a href=\"#수정-후-코드-입력용\" class=\"headerlink\" title=\"수정 후 코드 입력용\"></a>수정 후 코드 입력용</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br><span class=\"line\">npm install hexo-server --save</span><br><span class=\"line\">npm install hexo-deployer-git --save</span><br><span class=\"line\">hexo server</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"수정-후-코드-입력용\"><a href=\"#수정-후-코드-입력용\" class=\"headerlink\" title=\"수정 후 코드 입력용\"></a>수정 후 코드 입력용</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br><span class=\"line\">npm install hexo-server --save</span><br><span class=\"line\">npm install hexo-deployer-git --save</span><br><span class=\"line\">hexo server</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"all-categories","layout":"all-categories","comments":0,"_content":"","source":"all-categories/index.md","raw":"---\ntitle: \"all-categories\"\nlayout: \"all-categories\"\ncomments: false\n---\n","date":"2022-07-10T11:19:40.618Z","updated":"2022-07-10T11:19:40.618Z","path":"all-categories/index.html","_id":"cl5fcok7j0004jku090o6eif5","content":"","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":""},{"title":"all-tags","layout":"all-tags","comments":0,"_content":"","source":"all-tags/index.md","raw":"---\ntitle: \"all-tags\"\nlayout: \"all-tags\"\ncomments: false\n---\n","date":"2022-07-10T11:19:40.618Z","updated":"2022-07-10T11:19:40.618Z","path":"all-tags/index.html","_id":"cl5fcok7l0007jku00iqfge31","content":"","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":""}],"Post":[{"title":"2022-06-20 메모","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"thumbnailImage":"R_logo.jpg","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-06-20T00:00:00.000Z","_content":"\nR Markdown 세팅\n<!-- excerpt -->\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n\n# 0620\n\n- R Script, R Markdown 새로 만들기\n\n![Untitled](/images/0620/Untitled.png)\n\n- 이 정도 남기고 다 삭제\n\n![Untitled](/images/0620/Untitled%201.png)\n\n![Untitled](/images/0620/Untitled%202.png)\n\n- ‘’’{r}   ‘’’ 안에 코드 작성해서 업로드 할 수 있다. (R Markdown 에서 가능)\n\n![Untitled](/images/0620/Untitled%203.png)\n\n![Untitled](/images/0620/Untitled%204.png)\n\n- 서열, 비서열 변수 입력\n\n![Untitled](/images/0620/Untitled%205.png)\n\n서열 변수(ordered = TRUE)\n\n![Untitled](/images/0620/Untitled%206.png)\n\n비서열 변수\n\n![Untitled](/images/0620/Untitled%207.png)\n\n- class(exam$no) : exam이란 데이터에서 no라는 값의 유형을 나타내는 것\n- str(exam) : exam이란 데이터의 전체의 값의 유형을 나타내는 것\n\n![Untitled](/images/0620/Untitled%208.png)\n\n- getwd() : 현재 저장위치 확인\n- write.csv(x = exam, file = “temp.csv”) : exam의 데이터를 temp.csv로 내보내기\n\n![Untitled](/images/0620/Untitled%209.png)\n\n- **“t** 에서 TAB키를 누르면 이렇게 “**현재 Working Directory**” 에서 t를 포함하는 목록들이 뜬다\n\n![Untitled](/images/0620/Untitled%2010.png)\n\n- 이런 식으로 상위 폴더에서 경로 지정해서 긁어 올 수도 있다. (현재 Working Directory 위치 주의!!)\n- [https://drive.google.com/file/d/1zoUx11rNQXLLCQb4R8NeaTgIltHnLJHy/view](https://drive.google.com/file/d/1zoUx11rNQXLLCQb4R8NeaTgIltHnLJHy/view) 에서 파일 다운로드, 압축풀기\n- 데이터 분량이 많은 빅데이터는 read.csv() 보다 fread() 함수가 더 빨리 불러온다.\n- fread() 함수는 data.table 패키지에 있는 함수로,\n\n```r\ninstall.packages(\"data.table\")\nlibrary(data.table)\n```\n\n- 입력 후에 이용하면 된다.\n\n- 엑셀 파일은 read_excel() 함수로 불러오고 마찬가지로,\n\n```r\ninstall.packages(\"readxl\")\nlibrary(readxl)\n```\n\n- 입력 후에 이용하면 된다.\n- 아까 압축 푼 경로로 지정한 후\n\n![Untitled](/images/0620/Untitled%2011.png)\n\n---\n\n- 압축 푼 데이터 폴더에서 “mpg1.csv” 파일 복사 후 R_lecture\\source 폴더에 rmd\\rmd_0620 폴더 생성 후 붙여넣기\n\n![Untitled](/images/0620/Untitled%2012.png)\n\n- 새 R Md 파일을 “test” 로 생성, 저장도 test로 하기\n\n![Untitled](/images/0620/Untitled%2013.png)\n\n- title 옵션 화면과 동일하게 바꾸기(0617에서 했었음)\n\n![Untitled](/images/0620/Untitled%2014.png)\n\n- R 코드 생성 후 입력\n\n```r\n```{r}\nmpg1<-read.csv(\"mpg1.csv\")\nstr(mpg1)\n```\n```\n\n- 한번 더 R 코드 생성 후 입력\n\n```r\n```{r}\nlibrary(ggplot2)\n\nggplot(mpg1, aes(x = cty, y = hwy)) + \n  geom_point()\n```\n\n\n- 그래프가 떴다면 위쪽에 Knit 누른다. 누르면 그래프가 뜨고, 폴더, 파일들이 생성된다.\n\n![Untitled](/images/0620/Untitled%2015.png)\n\n![Untitled](/images/0620/Untitled%2016.png)\n\n- 에러 뜨면 ggplot2 가 설치 되어있는지 체크, 경로 맞게 설정 했는지 체크\n\n# 블로그 이미지 업로드 하기\n\n- 생성된 test_files\\figure-html 에서 사진 복사 후\n\n![Untitled](/images/0620/Untitled%2017.png)\n\n- blog\\source\\image 에 rmd_0620으로 동일 폴더 만든 후 사진 붙여넣기(폴더 이름 상관없음)\n\n![Untitled](/images/0620/Untitled%2018.png)\n\n- 원본 rmd_0620 폴더에서 test R Md 파일 복사해서\n\n![Untitled](/images/0620/Untitled%2019.png)\n\n- blog\\source\\_posts 에 파일 붙여넣기\n\n![Untitled](/images/0620/Untitled%2020.png)\n\n- PyCharm 으로 blog 폴더 열어서 “test.md” 파일 열기\n\n![Untitled](/images/0620/Untitled%2021.png)\n\n- 밑으로 내려가서 images 폴더 안의 사진 우클릭 → 경로/참조복사 → 콘텐츠 루트로부터의 경로 복사\n\n![Untitled](/images/0620/Untitled%2022.png)\n\n![Untitled](/images/0620/Untitled%2023.png)\n\n- 경로 복사 후 빨간색에 붙여넣기 하고 “source” 를 지운다.\n\n![Untitled](/images/0620/Untitled%2024.png)\n\n- 다음과 같이 나와야 됨\n\n![Untitled](/images/0620/Untitled%2025.png)\n\n- 됐으면 저장 후 hexo server로 체크","source":"_posts/0620.md","raw":"---\ntitle: \"2022-06-20 메모\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: R studio\nclearReading: true\nthumbnailImage: R_logo.jpg\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-06-20'\n---\n\nR Markdown 세팅\n<!-- excerpt -->\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n\n# 0620\n\n- R Script, R Markdown 새로 만들기\n\n![Untitled](/images/0620/Untitled.png)\n\n- 이 정도 남기고 다 삭제\n\n![Untitled](/images/0620/Untitled%201.png)\n\n![Untitled](/images/0620/Untitled%202.png)\n\n- ‘’’{r}   ‘’’ 안에 코드 작성해서 업로드 할 수 있다. (R Markdown 에서 가능)\n\n![Untitled](/images/0620/Untitled%203.png)\n\n![Untitled](/images/0620/Untitled%204.png)\n\n- 서열, 비서열 변수 입력\n\n![Untitled](/images/0620/Untitled%205.png)\n\n서열 변수(ordered = TRUE)\n\n![Untitled](/images/0620/Untitled%206.png)\n\n비서열 변수\n\n![Untitled](/images/0620/Untitled%207.png)\n\n- class(exam$no) : exam이란 데이터에서 no라는 값의 유형을 나타내는 것\n- str(exam) : exam이란 데이터의 전체의 값의 유형을 나타내는 것\n\n![Untitled](/images/0620/Untitled%208.png)\n\n- getwd() : 현재 저장위치 확인\n- write.csv(x = exam, file = “temp.csv”) : exam의 데이터를 temp.csv로 내보내기\n\n![Untitled](/images/0620/Untitled%209.png)\n\n- **“t** 에서 TAB키를 누르면 이렇게 “**현재 Working Directory**” 에서 t를 포함하는 목록들이 뜬다\n\n![Untitled](/images/0620/Untitled%2010.png)\n\n- 이런 식으로 상위 폴더에서 경로 지정해서 긁어 올 수도 있다. (현재 Working Directory 위치 주의!!)\n- [https://drive.google.com/file/d/1zoUx11rNQXLLCQb4R8NeaTgIltHnLJHy/view](https://drive.google.com/file/d/1zoUx11rNQXLLCQb4R8NeaTgIltHnLJHy/view) 에서 파일 다운로드, 압축풀기\n- 데이터 분량이 많은 빅데이터는 read.csv() 보다 fread() 함수가 더 빨리 불러온다.\n- fread() 함수는 data.table 패키지에 있는 함수로,\n\n```r\ninstall.packages(\"data.table\")\nlibrary(data.table)\n```\n\n- 입력 후에 이용하면 된다.\n\n- 엑셀 파일은 read_excel() 함수로 불러오고 마찬가지로,\n\n```r\ninstall.packages(\"readxl\")\nlibrary(readxl)\n```\n\n- 입력 후에 이용하면 된다.\n- 아까 압축 푼 경로로 지정한 후\n\n![Untitled](/images/0620/Untitled%2011.png)\n\n---\n\n- 압축 푼 데이터 폴더에서 “mpg1.csv” 파일 복사 후 R_lecture\\source 폴더에 rmd\\rmd_0620 폴더 생성 후 붙여넣기\n\n![Untitled](/images/0620/Untitled%2012.png)\n\n- 새 R Md 파일을 “test” 로 생성, 저장도 test로 하기\n\n![Untitled](/images/0620/Untitled%2013.png)\n\n- title 옵션 화면과 동일하게 바꾸기(0617에서 했었음)\n\n![Untitled](/images/0620/Untitled%2014.png)\n\n- R 코드 생성 후 입력\n\n```r\n```{r}\nmpg1<-read.csv(\"mpg1.csv\")\nstr(mpg1)\n```\n```\n\n- 한번 더 R 코드 생성 후 입력\n\n```r\n```{r}\nlibrary(ggplot2)\n\nggplot(mpg1, aes(x = cty, y = hwy)) + \n  geom_point()\n```\n\n\n- 그래프가 떴다면 위쪽에 Knit 누른다. 누르면 그래프가 뜨고, 폴더, 파일들이 생성된다.\n\n![Untitled](/images/0620/Untitled%2015.png)\n\n![Untitled](/images/0620/Untitled%2016.png)\n\n- 에러 뜨면 ggplot2 가 설치 되어있는지 체크, 경로 맞게 설정 했는지 체크\n\n# 블로그 이미지 업로드 하기\n\n- 생성된 test_files\\figure-html 에서 사진 복사 후\n\n![Untitled](/images/0620/Untitled%2017.png)\n\n- blog\\source\\image 에 rmd_0620으로 동일 폴더 만든 후 사진 붙여넣기(폴더 이름 상관없음)\n\n![Untitled](/images/0620/Untitled%2018.png)\n\n- 원본 rmd_0620 폴더에서 test R Md 파일 복사해서\n\n![Untitled](/images/0620/Untitled%2019.png)\n\n- blog\\source\\_posts 에 파일 붙여넣기\n\n![Untitled](/images/0620/Untitled%2020.png)\n\n- PyCharm 으로 blog 폴더 열어서 “test.md” 파일 열기\n\n![Untitled](/images/0620/Untitled%2021.png)\n\n- 밑으로 내려가서 images 폴더 안의 사진 우클릭 → 경로/참조복사 → 콘텐츠 루트로부터의 경로 복사\n\n![Untitled](/images/0620/Untitled%2022.png)\n\n![Untitled](/images/0620/Untitled%2023.png)\n\n- 경로 복사 후 빨간색에 붙여넣기 하고 “source” 를 지운다.\n\n![Untitled](/images/0620/Untitled%2024.png)\n\n- 다음과 같이 나와야 됨\n\n![Untitled](/images/0620/Untitled%2025.png)\n\n- 됐으면 저장 후 hexo server로 체크","slug":"0620","published":1,"updated":"2022-07-10T15:30:52.644Z","_id":"cl5fcok7f0001jku03841ftlr","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n<figure class=\"highlight plaintext\"><figcaption><span>setup, include</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">knitr::opts_chunk$set(echo = TRUE)</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"0620\"><a href=\"#0620\" class=\"headerlink\" title=\"0620\"></a>0620</h1><ul>\n<li>R Script, R Markdown 새로 만들기</li>\n</ul>\n<p><img src=\"/images/0620/Untitled.png\" alt=\"Untitled\"></p>\n<ul>\n<li>이 정도 남기고 다 삭제</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%201.png\" alt=\"Untitled\"></p>\n<p><img src=\"/images/0620/Untitled%202.png\" alt=\"Untitled\"></p>\n<ul>\n<li>‘’’{r}   ‘’’ 안에 코드 작성해서 업로드 할 수 있다. (R Markdown 에서 가능)</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%203.png\" alt=\"Untitled\"></p>\n<p><img src=\"/images/0620/Untitled%204.png\" alt=\"Untitled\"></p>\n<ul>\n<li>서열, 비서열 변수 입력</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%205.png\" alt=\"Untitled\"></p>\n<p>서열 변수(ordered &#x3D; TRUE)</p>\n<p><img src=\"/images/0620/Untitled%206.png\" alt=\"Untitled\"></p>\n<p>비서열 변수</p>\n<p><img src=\"/images/0620/Untitled%207.png\" alt=\"Untitled\"></p>\n<ul>\n<li>class(exam$no) : exam이란 데이터에서 no라는 값의 유형을 나타내는 것</li>\n<li>str(exam) : exam이란 데이터의 전체의 값의 유형을 나타내는 것</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%208.png\" alt=\"Untitled\"></p>\n<ul>\n<li>getwd() : 현재 저장위치 확인</li>\n<li>write.csv(x &#x3D; exam, file &#x3D; “temp.csv”) : exam의 데이터를 temp.csv로 내보내기</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%209.png\" alt=\"Untitled\"></p>\n<ul>\n<li><strong>“t</strong> 에서 TAB키를 누르면 이렇게 “<strong>현재 Working Directory</strong>” 에서 t를 포함하는 목록들이 뜬다</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%2010.png\" alt=\"Untitled\"></p>\n<ul>\n<li>이런 식으로 상위 폴더에서 경로 지정해서 긁어 올 수도 있다. (현재 Working Directory 위치 주의!!)</li>\n<li><a href=\"https://drive.google.com/file/d/1zoUx11rNQXLLCQb4R8NeaTgIltHnLJHy/view\">https://drive.google.com/file/d/1zoUx11rNQXLLCQb4R8NeaTgIltHnLJHy/view</a> 에서 파일 다운로드, 압축풀기</li>\n<li>데이터 분량이 많은 빅데이터는 read.csv() 보다 fread() 함수가 더 빨리 불러온다.</li>\n<li>fread() 함수는 data.table 패키지에 있는 함수로,</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;data.table&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>data.table<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>입력 후에 이용하면 된다.</p>\n</li>\n<li><p>엑셀 파일은 read_excel() 함수로 불러오고 마찬가지로,</p>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;readxl&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>readxl<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>입력 후에 이용하면 된다.</li>\n<li>아까 압축 푼 경로로 지정한 후</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%2011.png\" alt=\"Untitled\"></p>\n<hr>\n<ul>\n<li>압축 푼 데이터 폴더에서 “mpg1.csv” 파일 복사 후 R_lecture\\source 폴더에 rmd\\rmd_0620 폴더 생성 후 붙여넣기</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%2012.png\" alt=\"Untitled\"></p>\n<ul>\n<li>새 R Md 파일을 “test” 로 생성, 저장도 test로 하기</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%2013.png\" alt=\"Untitled\"></p>\n<ul>\n<li>title 옵션 화면과 동일하게 바꾸기(0617에서 했었음)</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%2014.png\" alt=\"Untitled\"></p>\n<ul>\n<li>R 코드 생성 후 입력</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">```&#123;r&#125;</span><br><span class=\"line\">mpg1&lt;-read.csv(&quot;mpg1.csv&quot;)</span><br><span class=\"line\">str(mpg1)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 한번 더 R 코드 생성 후 입력</span><br><span class=\"line\"></span><br><span class=\"line\">```r</span><br><span class=\"line\">```&#123;r&#125;</span><br><span class=\"line\">library(ggplot2)</span><br><span class=\"line\"></span><br><span class=\"line\">ggplot(mpg1, aes(x = cty, y = hwy)) + </span><br><span class=\"line\">  geom_point()</span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>그래프가 떴다면 위쪽에 Knit 누른다. 누르면 그래프가 뜨고, 폴더, 파일들이 생성된다.</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%2015.png\" alt=\"Untitled\"></p>\n<p><img src=\"/images/0620/Untitled%2016.png\" alt=\"Untitled\"></p>\n<ul>\n<li>에러 뜨면 ggplot2 가 설치 되어있는지 체크, 경로 맞게 설정 했는지 체크</li>\n</ul>\n<h1 id=\"블로그-이미지-업로드-하기\"><a href=\"#블로그-이미지-업로드-하기\" class=\"headerlink\" title=\"블로그 이미지 업로드 하기\"></a>블로그 이미지 업로드 하기</h1><ul>\n<li>생성된 test_files\\figure-html 에서 사진 복사 후</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%2017.png\" alt=\"Untitled\"></p>\n<ul>\n<li>blog\\source\\image 에 rmd_0620으로 동일 폴더 만든 후 사진 붙여넣기(폴더 이름 상관없음)</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%2018.png\" alt=\"Untitled\"></p>\n<ul>\n<li>원본 rmd_0620 폴더에서 test R Md 파일 복사해서</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%2019.png\" alt=\"Untitled\"></p>\n<ul>\n<li>blog\\source_posts 에 파일 붙여넣기</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%2020.png\" alt=\"Untitled\"></p>\n<ul>\n<li>PyCharm 으로 blog 폴더 열어서 “test.md” 파일 열기</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%2021.png\" alt=\"Untitled\"></p>\n<ul>\n<li>밑으로 내려가서 images 폴더 안의 사진 우클릭 → 경로&#x2F;참조복사 → 콘텐츠 루트로부터의 경로 복사</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%2022.png\" alt=\"Untitled\"></p>\n<p><img src=\"/images/0620/Untitled%2023.png\" alt=\"Untitled\"></p>\n<ul>\n<li>경로 복사 후 빨간색에 붙여넣기 하고 “source” 를 지운다.</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%2024.png\" alt=\"Untitled\"></p>\n<ul>\n<li>다음과 같이 나와야 됨</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%2025.png\" alt=\"Untitled\"></p>\n<ul>\n<li>됐으면 저장 후 hexo server로 체크</li>\n</ul>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/06/20/0620/R_logo.jpg","excerpt":"<p>R Markdown 세팅</p>","more":"<p>R Markdown 세팅</p>\n<!-- excerpt -->\n\n<figure class=\"highlight plaintext\"><figcaption><span>setup, include</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">knitr::opts_chunk$set(echo = TRUE)</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"0620\"><a href=\"#0620\" class=\"headerlink\" title=\"0620\"></a>0620</h1><ul>\n<li>R Script, R Markdown 새로 만들기</li>\n</ul>\n<p><img src=\"/images/0620/Untitled.png\" alt=\"Untitled\"></p>\n<ul>\n<li>이 정도 남기고 다 삭제</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%201.png\" alt=\"Untitled\"></p>\n<p><img src=\"/images/0620/Untitled%202.png\" alt=\"Untitled\"></p>\n<ul>\n<li>‘’’{r}   ‘’’ 안에 코드 작성해서 업로드 할 수 있다. (R Markdown 에서 가능)</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%203.png\" alt=\"Untitled\"></p>\n<p><img src=\"/images/0620/Untitled%204.png\" alt=\"Untitled\"></p>\n<ul>\n<li>서열, 비서열 변수 입력</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%205.png\" alt=\"Untitled\"></p>\n<p>서열 변수(ordered &#x3D; TRUE)</p>\n<p><img src=\"/images/0620/Untitled%206.png\" alt=\"Untitled\"></p>\n<p>비서열 변수</p>\n<p><img src=\"/images/0620/Untitled%207.png\" alt=\"Untitled\"></p>\n<ul>\n<li>class(exam$no) : exam이란 데이터에서 no라는 값의 유형을 나타내는 것</li>\n<li>str(exam) : exam이란 데이터의 전체의 값의 유형을 나타내는 것</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%208.png\" alt=\"Untitled\"></p>\n<ul>\n<li>getwd() : 현재 저장위치 확인</li>\n<li>write.csv(x &#x3D; exam, file &#x3D; “temp.csv”) : exam의 데이터를 temp.csv로 내보내기</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%209.png\" alt=\"Untitled\"></p>\n<ul>\n<li><strong>“t</strong> 에서 TAB키를 누르면 이렇게 “<strong>현재 Working Directory</strong>” 에서 t를 포함하는 목록들이 뜬다</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%2010.png\" alt=\"Untitled\"></p>\n<ul>\n<li>이런 식으로 상위 폴더에서 경로 지정해서 긁어 올 수도 있다. (현재 Working Directory 위치 주의!!)</li>\n<li><a href=\"https://drive.google.com/file/d/1zoUx11rNQXLLCQb4R8NeaTgIltHnLJHy/view\">https://drive.google.com/file/d/1zoUx11rNQXLLCQb4R8NeaTgIltHnLJHy/view</a> 에서 파일 다운로드, 압축풀기</li>\n<li>데이터 분량이 많은 빅데이터는 read.csv() 보다 fread() 함수가 더 빨리 불러온다.</li>\n<li>fread() 함수는 data.table 패키지에 있는 함수로,</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;data.table&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>data.table<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>입력 후에 이용하면 된다.</p>\n</li>\n<li><p>엑셀 파일은 read_excel() 함수로 불러오고 마찬가지로,</p>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;readxl&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>readxl<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>입력 후에 이용하면 된다.</li>\n<li>아까 압축 푼 경로로 지정한 후</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%2011.png\" alt=\"Untitled\"></p>\n<hr>\n<ul>\n<li>압축 푼 데이터 폴더에서 “mpg1.csv” 파일 복사 후 R_lecture\\source 폴더에 rmd\\rmd_0620 폴더 생성 후 붙여넣기</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%2012.png\" alt=\"Untitled\"></p>\n<ul>\n<li>새 R Md 파일을 “test” 로 생성, 저장도 test로 하기</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%2013.png\" alt=\"Untitled\"></p>\n<ul>\n<li>title 옵션 화면과 동일하게 바꾸기(0617에서 했었음)</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%2014.png\" alt=\"Untitled\"></p>\n<ul>\n<li>R 코드 생성 후 입력</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">```&#123;r&#125;</span><br><span class=\"line\">mpg1&lt;-read.csv(&quot;mpg1.csv&quot;)</span><br><span class=\"line\">str(mpg1)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 한번 더 R 코드 생성 후 입력</span><br><span class=\"line\"></span><br><span class=\"line\">```r</span><br><span class=\"line\">```&#123;r&#125;</span><br><span class=\"line\">library(ggplot2)</span><br><span class=\"line\"></span><br><span class=\"line\">ggplot(mpg1, aes(x = cty, y = hwy)) + </span><br><span class=\"line\">  geom_point()</span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>그래프가 떴다면 위쪽에 Knit 누른다. 누르면 그래프가 뜨고, 폴더, 파일들이 생성된다.</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%2015.png\" alt=\"Untitled\"></p>\n<p><img src=\"/images/0620/Untitled%2016.png\" alt=\"Untitled\"></p>\n<ul>\n<li>에러 뜨면 ggplot2 가 설치 되어있는지 체크, 경로 맞게 설정 했는지 체크</li>\n</ul>\n<h1 id=\"블로그-이미지-업로드-하기\"><a href=\"#블로그-이미지-업로드-하기\" class=\"headerlink\" title=\"블로그 이미지 업로드 하기\"></a>블로그 이미지 업로드 하기</h1><ul>\n<li>생성된 test_files\\figure-html 에서 사진 복사 후</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%2017.png\" alt=\"Untitled\"></p>\n<ul>\n<li>blog\\source\\image 에 rmd_0620으로 동일 폴더 만든 후 사진 붙여넣기(폴더 이름 상관없음)</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%2018.png\" alt=\"Untitled\"></p>\n<ul>\n<li>원본 rmd_0620 폴더에서 test R Md 파일 복사해서</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%2019.png\" alt=\"Untitled\"></p>\n<ul>\n<li>blog\\source_posts 에 파일 붙여넣기</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%2020.png\" alt=\"Untitled\"></p>\n<ul>\n<li>PyCharm 으로 blog 폴더 열어서 “test.md” 파일 열기</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%2021.png\" alt=\"Untitled\"></p>\n<ul>\n<li>밑으로 내려가서 images 폴더 안의 사진 우클릭 → 경로&#x2F;참조복사 → 콘텐츠 루트로부터의 경로 복사</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%2022.png\" alt=\"Untitled\"></p>\n<p><img src=\"/images/0620/Untitled%2023.png\" alt=\"Untitled\"></p>\n<ul>\n<li>경로 복사 후 빨간색에 붙여넣기 하고 “source” 를 지운다.</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%2024.png\" alt=\"Untitled\"></p>\n<ul>\n<li>다음과 같이 나와야 됨</li>\n</ul>\n<p><img src=\"/images/0620/Untitled%2025.png\" alt=\"Untitled\"></p>\n<ul>\n<li>됐으면 저장 후 hexo server로 체크</li>\n</ul>\n"},{"title":"1장_파이썬_프로그래밍의_기초","output":{"html_document":{"keep_md":true}},"thumbnailImage":"image.png","thumbnailImagePosition":"left","date":"2022-06-27T08:37:30.000Z","_content":"\n- 전설의 시작\n<!-- more -->\n\n# 1-1 숫자형\n### 숫자형이란?\n- 숫자형(Number)이란 숫자 형태로 이루어진 자료형으로, 우리가 이미 잘 알고 있는 것이다.\n우리가 흔히 사용하는 것을 생각해 보자. 123 같은 정수, 12.34 같은 실수, 드물게 사용하긴 하지만 8진수나 16진수 같은 것도 있다.\n\n\n- 다음 표는 파이썬에서 숫자를 어떻게 사용하는지 간략하게 보여 준다.\n  + 정수 : 123, -345, 0\n  + 실수 : 123.45, -1234.5, 3.4e10\n  + 8진수 : 0o34, 0o25\n  + 16진수 : 0x2A, 0xFF\n이제 이런 숫자를 파이썬에서는 어떻게 만들고 사용하는지 자세히 알아보자.\n\n### 숫자형은 어떻게 만들고 사용할까?\n#### 정수형\n- 정수형(Integer)이란 말 그대로 정수를 뜻하는 자료형을 말한다. 다음 예는 양의 정수와 음의 정수, 숫자 0을 변수 a에 대입하는 예이다.\n  + a = 123\n  + a = -178\n  + a = 0\n\n#### 실수형\n- 파이썬에서 실수형(Floationg-point)은 소수점이 포함된 숫자를 말한다. 다음은 실수를 변수a에 대입하는 예이다.\n  + a = 1.2\n  + a =-3.45\n- 위 방식은 우리가 일반적으로 볼 수 있는 실수형의 소수점 표현 방식이다.\n  + a = 4.24E10\n  + a = 4.24e-10\n- 위 방식은 \"컴퓨터식 지수 표현 방식\" 으로 파이썬에서는 4.24e10 또는 4.24E10 처럼 표현한다(e와 E 둘 중 어느 것을 사용해도 무방하다).\n- 여기서 4.24E10은 4.24 x 10의 10승, 4.24e-10은 4.24 x 10의 -10승을 의미한다.\n\n\n#### 8진수와 16진수\n- 8진수(Octal)를 만들기 위해서는 숫자가 0o(숫자 0 + 알파벳 소문자 o 또는 대문자 O)로 시작하면 된다.\n  + a = 0o177\n- 16진수(Hexadecimal)를 만들기 위해서는 0x로 시작하면 된다.\n  + a = 0x8ff\n  + b = 0xABC\n- 8진수나 16진수는 파이썬에서 잘 사용하지 않는 형태의 숫자 자료형이니 간단히 눈으로 익히고 넘어가자.\n\n### 숫자형을 활용하기 위한 연산자\n#### 사칙연산\n- 프로그래밍을 한 번도 해본 적이 없는 독자라도 사칙연산(+, -, *, /)은 알고 있을 것이다. 파이썬 역시 계산기와 마찬가지로 다음처럼 연산자를 사용해 사칙연산을 수행한다.\n  + a = 3\n  + b = 4\n  + a + b = 7\n  + a * b =12\n  + a / b = 0.75\n\n#### x의 y제곱을 나타내는 ** 연산자\n- 다음으로 알아야 할 연산자로 ** 라는 연산자가 있다. 이 연산자는 x ** y 처럼 사용했을 때 x의 y제곱(x의y승) 값을 돌려준다. 다음의 예를 통해 알아보자.\n\n\n\n```python\na = 3\nb = 4\na ** b\n```\n\n\n\n\n    81\n\n\n\n#### 나눗셈 후 나머지를 반환하는 % 연산자\n- 프로그래밍을 처음 접하는 독자라면 % 연산자는 본 적이 없을 것이다. % 는 나눗셈의 나머지 값을 돌려주는 연산자이다. 7을 3으로 나누면 나머지는 1이 될 것이고 3을 7로 나누면 나머지는 3이 될 것이다. 다음 예로 확인해 보자.\n\n\n```python\n7 % 3\n```\n\n\n\n\n    1\n\n\n\n\n```python\n3 % 7\n```\n\n\n\n\n    3\n\n\n\n#### 나눗셈 후 몫을 반환하는 // 연산자\n- / 연산자를 사용하여 7 나누기 4를 하면 그 결과는 예상대로 1.75가 된다.\n\n\n```python\n7/4\n```\n\n\n\n\n    1.75\n\n\n\n- 이번에는 나눗셈 후 몫을 반환하는 // 연산자를 사용한 경우를 보자.\n\n\n```python\n7//4\n```\n\n\n\n\n    1\n\n\n\n1.75에서 몫에 해당되는 정수값 1만 돌려주는 것을 확인할 수 있다.\n\n### 문자열이란?\n- 문자열(String)이란 문자, 단어 등으로 구성된 문자들의 집합을 의미한다. 예를 들어 다음과 같은 것들이 문자열이다.\n\n\n```python\n\"Life is too short, You need Python\"\n\"a\"\n\"123\"\n```\n\n- 위 문자열 예문을 보면 모두 큰따옴표(\"\")로 둘러싸여 있다. \"123은 숫자인데 왜 문자열이지?\"라는 의문이 드는 독자도 있을 것이다. 따옴표로 둘러싸여 있으면 모두 문자열이라고 보면 된다.\n\n### 문자열은 어떻게 만들고 사용할까?\n- 위 예에서는 문자열을 만들 때 큰따옴표(\"\")만을 사용했지만 이 외에도 문자열을 만드는 방법은 3가지가 더 있다. 파이썬에서 문자열을 만드는 방법은 총 4가지이다.\n\n\n```python\n# 1. 큰따옴표(\"\")로 양쪽 둘러싸기\n\"Hello World\"\n# 2. 작은따옴표('')로 양쪽 둘러싸기\n'Python is fun'\n# 3. 큰따옴표 3개를 연속(\"\"\")으로 써서 양쪽 둘러싸기\n\"\"\"Life is too short, You need python\"\"\"\n# 4. 작은따옴표 3개를 연속(''')으로 써서 양쪽 둘러싸기\n'''Life is too short, You need python'''\n```\n\n- 단순함이 자랑인 파이썬이 문자열을 만드는 방법은 왜 4가지나 가지게 되었을까? 그 이유에 대해 알아보자.\n\n### 문자열 안에 작은따옴표나 큰따옴표를 포함시키고 싶을 때\n- 문자열을 만들어주는 주인공은 작은따옴표(')와 큰따옴표(\")이다. 그런데 문자열 안에도 작은따옴표와 큰따옴표가 들어 있어야 할 경우가 있다. 이때는 좀 더 특별한 기술이 필요하다. 예제를 하나씩 살펴보면서 원리를 익혀 보자.\n\n#### 1. 문자열에 작은따옴표(') 포함시키기\nPython's favorite food is perl\n- 위와 같은문자열을 food 변수에 저장하고 싶다고 가정하자. 문자열 중 Python's에 작은따옴표(')가 포함되어 있다.\n- 이럴 때는 다음과 같이 문자열을 큰따옴표(\")로 둘러싸야 한다. 큰따옴표 안에 들어 있는 작은따옴표는 문자열을 나타내기 위한 기호로 인식되지 않는다.\n\n\n```python\nfood = \"Python's favorite food is perl\"\n```\n\n- 프롬포트에 food를 입력해서 결과를 확인하자. 변수에 저장된 문자열이 그대로 출력되는 것을 볼 수 있다.\n\n\n```python\nfood\n```\n\n\n\n\n    \"Python's favorite food is perl\"\n\n\n\n시험삼아 다음과 같이 큰따옴표(\")가 아닌 작은따옴표(')로 문자열을 둘러싼 후 다시 실행해 보자. 'Python'이 문자열로 인식되어 구문 오류(SyntaxError)가 발생할 것이다.\n\n\n```python\nfood = 'Python's favorite food is perl'\n```\n\n\n      File \"<ipython-input-9-336a85538234>\", line 1\n        food = 'Python's favorite food is perl'\n                       ^\n    SyntaxError: invalid syntax\n    \n\n\n#### 2. 문자열에 큰따옴표(\") 포함시키기\n\"Python is very easy.\" he says.\n- 위와 같이 큰따옴표(\")가 포함된 문자열이라면 어떻게 해야 큰따옴표가 제대로 표현될까?\n- 다음과 같이 문자열을 작은따옴표(')로 둘러싸면 된다.\n\n\n```python\nsay = '\"Python is very easy.\" he says.'\n```\n\n- 이렇게 작은따옴표(')안에 사용된 큰따옴표(\")는 문자열을 만드는 기호로 인식되지 않는다.\n\n#### 3. 백슬래시(\\)를 사용해서 작은따옴표(')와 큰따옴표(\")를 문자열에 포함시키기\n\n\n```python\nfood = 'Python\\'s favorite food is perl'\nsay = \"\\\"Python is very easy.\\\" he says.\"\n```\n\n- 작은따옴표(')나 큰 따옴표(\")를 문자열에 포함시키는 또 다른 방법은 백슬래시(\\)를 사용하는 것이다. 즉 백슬래시(\\)를 작은따옴표(')나 큰따옴표(\") 앞에 삽입하면 백슬래시(\\) 뒤의 작은따옴표(')나 큰따옴표(\")는 문자열을 둘러싸는 기호의 의미가 아니라 문자 ('),(\") 그 자체를 뜻하게 된다.\n- 어떤 방법을 사용해서 문자열 안에 작은따옴표(')와 큰따옴표(\")를 포함시킬지는 각자의 선택이다. 대화형 인터프리터를 실행한 후 위 예문을 꼭 직접 작성해 보자.\n\n### 여러 줄인 문자열을 변수에 대입하고 싶을 때\n- 문자열이 항상 한 줄짜리만 있는 것은 아니다. 다음과 같이 여러 줄의 문자열을 변수에 대입하려면 어떻게 처리해야 할까?\n\nLife is too short  \nYou need python\n\n#### 1. 줄을 바꾸기 위한 이스케이프 코드 \\n 삽입하기\n\n\n\n```python\nmultiline = \"Life is too short\\nYou need python\"\n```\n\n위 예처럼 줄바꿈 문자 \\n 을 삽입하는 방법이 있지만 읽기에 불편하고 줄이 길어지는 단점이 있다.\n\n#### 2. 연속된 작은 따옴표 3개(''') 또는 큰따옴표 3개 (\"\"\") 사용하기\n- 위 1번의 단점을 극복하기 위해 파이썬에서는 다음과 같이 작은따옴표 3개(''') 또는 큰따옴표 3개(\"\"\")를 사용한다.\n\n\n```python\nmultiline='''\nLife is too short\nYou need python\n'''\n```\n\n- 작은따옴표 3개를 사용한 경우\n\n\n```python\nmultiline=\"\"\"\nLife is too short\nYou need python\n\"\"\"\n```\n\n- 큰따옴표 3개를 사용한 경우\n\nprint(multiline)을 입력해서 어떻게 출력되는지 확인해보자.\n\n\n```python\nprint(multiline)\n```\n\n    \n    Life is too short\n    You need python\n    \n    \n- 출처 : https://wikidocs.net/12","source":"_posts/1장_파이썬_프로그래밍의_기초_자료형.md","raw":"---\ntitle: \"1장_파이썬_프로그래밍의_기초\"\noutput:\n  html_document:\n    keep_md: true\ncategories: 점프 투 파이썬\nthumbnailImage: image.png\nthumbnailImagePosition: left\ndate: '2022-06-27 17:37:30'\n---\n\n- 전설의 시작\n<!-- more -->\n\n# 1-1 숫자형\n### 숫자형이란?\n- 숫자형(Number)이란 숫자 형태로 이루어진 자료형으로, 우리가 이미 잘 알고 있는 것이다.\n우리가 흔히 사용하는 것을 생각해 보자. 123 같은 정수, 12.34 같은 실수, 드물게 사용하긴 하지만 8진수나 16진수 같은 것도 있다.\n\n\n- 다음 표는 파이썬에서 숫자를 어떻게 사용하는지 간략하게 보여 준다.\n  + 정수 : 123, -345, 0\n  + 실수 : 123.45, -1234.5, 3.4e10\n  + 8진수 : 0o34, 0o25\n  + 16진수 : 0x2A, 0xFF\n이제 이런 숫자를 파이썬에서는 어떻게 만들고 사용하는지 자세히 알아보자.\n\n### 숫자형은 어떻게 만들고 사용할까?\n#### 정수형\n- 정수형(Integer)이란 말 그대로 정수를 뜻하는 자료형을 말한다. 다음 예는 양의 정수와 음의 정수, 숫자 0을 변수 a에 대입하는 예이다.\n  + a = 123\n  + a = -178\n  + a = 0\n\n#### 실수형\n- 파이썬에서 실수형(Floationg-point)은 소수점이 포함된 숫자를 말한다. 다음은 실수를 변수a에 대입하는 예이다.\n  + a = 1.2\n  + a =-3.45\n- 위 방식은 우리가 일반적으로 볼 수 있는 실수형의 소수점 표현 방식이다.\n  + a = 4.24E10\n  + a = 4.24e-10\n- 위 방식은 \"컴퓨터식 지수 표현 방식\" 으로 파이썬에서는 4.24e10 또는 4.24E10 처럼 표현한다(e와 E 둘 중 어느 것을 사용해도 무방하다).\n- 여기서 4.24E10은 4.24 x 10의 10승, 4.24e-10은 4.24 x 10의 -10승을 의미한다.\n\n\n#### 8진수와 16진수\n- 8진수(Octal)를 만들기 위해서는 숫자가 0o(숫자 0 + 알파벳 소문자 o 또는 대문자 O)로 시작하면 된다.\n  + a = 0o177\n- 16진수(Hexadecimal)를 만들기 위해서는 0x로 시작하면 된다.\n  + a = 0x8ff\n  + b = 0xABC\n- 8진수나 16진수는 파이썬에서 잘 사용하지 않는 형태의 숫자 자료형이니 간단히 눈으로 익히고 넘어가자.\n\n### 숫자형을 활용하기 위한 연산자\n#### 사칙연산\n- 프로그래밍을 한 번도 해본 적이 없는 독자라도 사칙연산(+, -, *, /)은 알고 있을 것이다. 파이썬 역시 계산기와 마찬가지로 다음처럼 연산자를 사용해 사칙연산을 수행한다.\n  + a = 3\n  + b = 4\n  + a + b = 7\n  + a * b =12\n  + a / b = 0.75\n\n#### x의 y제곱을 나타내는 ** 연산자\n- 다음으로 알아야 할 연산자로 ** 라는 연산자가 있다. 이 연산자는 x ** y 처럼 사용했을 때 x의 y제곱(x의y승) 값을 돌려준다. 다음의 예를 통해 알아보자.\n\n\n\n```python\na = 3\nb = 4\na ** b\n```\n\n\n\n\n    81\n\n\n\n#### 나눗셈 후 나머지를 반환하는 % 연산자\n- 프로그래밍을 처음 접하는 독자라면 % 연산자는 본 적이 없을 것이다. % 는 나눗셈의 나머지 값을 돌려주는 연산자이다. 7을 3으로 나누면 나머지는 1이 될 것이고 3을 7로 나누면 나머지는 3이 될 것이다. 다음 예로 확인해 보자.\n\n\n```python\n7 % 3\n```\n\n\n\n\n    1\n\n\n\n\n```python\n3 % 7\n```\n\n\n\n\n    3\n\n\n\n#### 나눗셈 후 몫을 반환하는 // 연산자\n- / 연산자를 사용하여 7 나누기 4를 하면 그 결과는 예상대로 1.75가 된다.\n\n\n```python\n7/4\n```\n\n\n\n\n    1.75\n\n\n\n- 이번에는 나눗셈 후 몫을 반환하는 // 연산자를 사용한 경우를 보자.\n\n\n```python\n7//4\n```\n\n\n\n\n    1\n\n\n\n1.75에서 몫에 해당되는 정수값 1만 돌려주는 것을 확인할 수 있다.\n\n### 문자열이란?\n- 문자열(String)이란 문자, 단어 등으로 구성된 문자들의 집합을 의미한다. 예를 들어 다음과 같은 것들이 문자열이다.\n\n\n```python\n\"Life is too short, You need Python\"\n\"a\"\n\"123\"\n```\n\n- 위 문자열 예문을 보면 모두 큰따옴표(\"\")로 둘러싸여 있다. \"123은 숫자인데 왜 문자열이지?\"라는 의문이 드는 독자도 있을 것이다. 따옴표로 둘러싸여 있으면 모두 문자열이라고 보면 된다.\n\n### 문자열은 어떻게 만들고 사용할까?\n- 위 예에서는 문자열을 만들 때 큰따옴표(\"\")만을 사용했지만 이 외에도 문자열을 만드는 방법은 3가지가 더 있다. 파이썬에서 문자열을 만드는 방법은 총 4가지이다.\n\n\n```python\n# 1. 큰따옴표(\"\")로 양쪽 둘러싸기\n\"Hello World\"\n# 2. 작은따옴표('')로 양쪽 둘러싸기\n'Python is fun'\n# 3. 큰따옴표 3개를 연속(\"\"\")으로 써서 양쪽 둘러싸기\n\"\"\"Life is too short, You need python\"\"\"\n# 4. 작은따옴표 3개를 연속(''')으로 써서 양쪽 둘러싸기\n'''Life is too short, You need python'''\n```\n\n- 단순함이 자랑인 파이썬이 문자열을 만드는 방법은 왜 4가지나 가지게 되었을까? 그 이유에 대해 알아보자.\n\n### 문자열 안에 작은따옴표나 큰따옴표를 포함시키고 싶을 때\n- 문자열을 만들어주는 주인공은 작은따옴표(')와 큰따옴표(\")이다. 그런데 문자열 안에도 작은따옴표와 큰따옴표가 들어 있어야 할 경우가 있다. 이때는 좀 더 특별한 기술이 필요하다. 예제를 하나씩 살펴보면서 원리를 익혀 보자.\n\n#### 1. 문자열에 작은따옴표(') 포함시키기\nPython's favorite food is perl\n- 위와 같은문자열을 food 변수에 저장하고 싶다고 가정하자. 문자열 중 Python's에 작은따옴표(')가 포함되어 있다.\n- 이럴 때는 다음과 같이 문자열을 큰따옴표(\")로 둘러싸야 한다. 큰따옴표 안에 들어 있는 작은따옴표는 문자열을 나타내기 위한 기호로 인식되지 않는다.\n\n\n```python\nfood = \"Python's favorite food is perl\"\n```\n\n- 프롬포트에 food를 입력해서 결과를 확인하자. 변수에 저장된 문자열이 그대로 출력되는 것을 볼 수 있다.\n\n\n```python\nfood\n```\n\n\n\n\n    \"Python's favorite food is perl\"\n\n\n\n시험삼아 다음과 같이 큰따옴표(\")가 아닌 작은따옴표(')로 문자열을 둘러싼 후 다시 실행해 보자. 'Python'이 문자열로 인식되어 구문 오류(SyntaxError)가 발생할 것이다.\n\n\n```python\nfood = 'Python's favorite food is perl'\n```\n\n\n      File \"<ipython-input-9-336a85538234>\", line 1\n        food = 'Python's favorite food is perl'\n                       ^\n    SyntaxError: invalid syntax\n    \n\n\n#### 2. 문자열에 큰따옴표(\") 포함시키기\n\"Python is very easy.\" he says.\n- 위와 같이 큰따옴표(\")가 포함된 문자열이라면 어떻게 해야 큰따옴표가 제대로 표현될까?\n- 다음과 같이 문자열을 작은따옴표(')로 둘러싸면 된다.\n\n\n```python\nsay = '\"Python is very easy.\" he says.'\n```\n\n- 이렇게 작은따옴표(')안에 사용된 큰따옴표(\")는 문자열을 만드는 기호로 인식되지 않는다.\n\n#### 3. 백슬래시(\\)를 사용해서 작은따옴표(')와 큰따옴표(\")를 문자열에 포함시키기\n\n\n```python\nfood = 'Python\\'s favorite food is perl'\nsay = \"\\\"Python is very easy.\\\" he says.\"\n```\n\n- 작은따옴표(')나 큰 따옴표(\")를 문자열에 포함시키는 또 다른 방법은 백슬래시(\\)를 사용하는 것이다. 즉 백슬래시(\\)를 작은따옴표(')나 큰따옴표(\") 앞에 삽입하면 백슬래시(\\) 뒤의 작은따옴표(')나 큰따옴표(\")는 문자열을 둘러싸는 기호의 의미가 아니라 문자 ('),(\") 그 자체를 뜻하게 된다.\n- 어떤 방법을 사용해서 문자열 안에 작은따옴표(')와 큰따옴표(\")를 포함시킬지는 각자의 선택이다. 대화형 인터프리터를 실행한 후 위 예문을 꼭 직접 작성해 보자.\n\n### 여러 줄인 문자열을 변수에 대입하고 싶을 때\n- 문자열이 항상 한 줄짜리만 있는 것은 아니다. 다음과 같이 여러 줄의 문자열을 변수에 대입하려면 어떻게 처리해야 할까?\n\nLife is too short  \nYou need python\n\n#### 1. 줄을 바꾸기 위한 이스케이프 코드 \\n 삽입하기\n\n\n\n```python\nmultiline = \"Life is too short\\nYou need python\"\n```\n\n위 예처럼 줄바꿈 문자 \\n 을 삽입하는 방법이 있지만 읽기에 불편하고 줄이 길어지는 단점이 있다.\n\n#### 2. 연속된 작은 따옴표 3개(''') 또는 큰따옴표 3개 (\"\"\") 사용하기\n- 위 1번의 단점을 극복하기 위해 파이썬에서는 다음과 같이 작은따옴표 3개(''') 또는 큰따옴표 3개(\"\"\")를 사용한다.\n\n\n```python\nmultiline='''\nLife is too short\nYou need python\n'''\n```\n\n- 작은따옴표 3개를 사용한 경우\n\n\n```python\nmultiline=\"\"\"\nLife is too short\nYou need python\n\"\"\"\n```\n\n- 큰따옴표 3개를 사용한 경우\n\nprint(multiline)을 입력해서 어떻게 출력되는지 확인해보자.\n\n\n```python\nprint(multiline)\n```\n\n    \n    Life is too short\n    You need python\n    \n    \n- 출처 : https://wikidocs.net/12","slug":"1장_파이썬_프로그래밍의_기초_자료형","published":1,"updated":"2022-07-21T12:50:35.105Z","_id":"cl5fcok7i0003jku04cnu3bym","comments":1,"layout":"post","photos":[],"link":"","content":"<ul>\n<li>전설의 시작<span id=\"more\"></span></li>\n</ul>\n<h1 id=\"1-1-숫자형\"><a href=\"#1-1-숫자형\" class=\"headerlink\" title=\"1-1 숫자형\"></a>1-1 숫자형</h1><h3 id=\"숫자형이란\"><a href=\"#숫자형이란\" class=\"headerlink\" title=\"숫자형이란?\"></a>숫자형이란?</h3><ul>\n<li><p>숫자형(Number)이란 숫자 형태로 이루어진 자료형으로, 우리가 이미 잘 알고 있는 것이다.<br>우리가 흔히 사용하는 것을 생각해 보자. 123 같은 정수, 12.34 같은 실수, 드물게 사용하긴 하지만 8진수나 16진수 같은 것도 있다.</p>\n</li>\n<li><p>다음 표는 파이썬에서 숫자를 어떻게 사용하는지 간략하게 보여 준다.</p>\n<ul>\n<li>정수 : 123, -345, 0</li>\n<li>실수 : 123.45, -1234.5, 3.4e10</li>\n<li>8진수 : 0o34, 0o25</li>\n<li>16진수 : 0x2A, 0xFF<br>이제 이런 숫자를 파이썬에서는 어떻게 만들고 사용하는지 자세히 알아보자.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"숫자형은-어떻게-만들고-사용할까\"><a href=\"#숫자형은-어떻게-만들고-사용할까\" class=\"headerlink\" title=\"숫자형은 어떻게 만들고 사용할까?\"></a>숫자형은 어떻게 만들고 사용할까?</h3><h4 id=\"정수형\"><a href=\"#정수형\" class=\"headerlink\" title=\"정수형\"></a>정수형</h4><ul>\n<li>정수형(Integer)이란 말 그대로 정수를 뜻하는 자료형을 말한다. 다음 예는 양의 정수와 음의 정수, 숫자 0을 변수 a에 대입하는 예이다.<ul>\n<li>a &#x3D; 123</li>\n<li>a &#x3D; -178</li>\n<li>a &#x3D; 0</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"실수형\"><a href=\"#실수형\" class=\"headerlink\" title=\"실수형\"></a>실수형</h4><ul>\n<li>파이썬에서 실수형(Floationg-point)은 소수점이 포함된 숫자를 말한다. 다음은 실수를 변수a에 대입하는 예이다.<ul>\n<li>a &#x3D; 1.2</li>\n<li>a &#x3D;-3.45</li>\n</ul>\n</li>\n<li>위 방식은 우리가 일반적으로 볼 수 있는 실수형의 소수점 표현 방식이다.<ul>\n<li>a &#x3D; 4.24E10</li>\n<li>a &#x3D; 4.24e-10</li>\n</ul>\n</li>\n<li>위 방식은 “컴퓨터식 지수 표현 방식” 으로 파이썬에서는 4.24e10 또는 4.24E10 처럼 표현한다(e와 E 둘 중 어느 것을 사용해도 무방하다).</li>\n<li>여기서 4.24E10은 4.24 x 10의 10승, 4.24e-10은 4.24 x 10의 -10승을 의미한다.</li>\n</ul>\n<h4 id=\"8진수와-16진수\"><a href=\"#8진수와-16진수\" class=\"headerlink\" title=\"8진수와 16진수\"></a>8진수와 16진수</h4><ul>\n<li>8진수(Octal)를 만들기 위해서는 숫자가 0o(숫자 0 + 알파벳 소문자 o 또는 대문자 O)로 시작하면 된다.<ul>\n<li>a &#x3D; 0o177</li>\n</ul>\n</li>\n<li>16진수(Hexadecimal)를 만들기 위해서는 0x로 시작하면 된다.<ul>\n<li>a &#x3D; 0x8ff</li>\n<li>b &#x3D; 0xABC</li>\n</ul>\n</li>\n<li>8진수나 16진수는 파이썬에서 잘 사용하지 않는 형태의 숫자 자료형이니 간단히 눈으로 익히고 넘어가자.</li>\n</ul>\n<h3 id=\"숫자형을-활용하기-위한-연산자\"><a href=\"#숫자형을-활용하기-위한-연산자\" class=\"headerlink\" title=\"숫자형을 활용하기 위한 연산자\"></a>숫자형을 활용하기 위한 연산자</h3><h4 id=\"사칙연산\"><a href=\"#사칙연산\" class=\"headerlink\" title=\"사칙연산\"></a>사칙연산</h4><ul>\n<li>프로그래밍을 한 번도 해본 적이 없는 독자라도 사칙연산(+, -, *, &#x2F;)은 알고 있을 것이다. 파이썬 역시 계산기와 마찬가지로 다음처럼 연산자를 사용해 사칙연산을 수행한다.<ul>\n<li>a &#x3D; 3</li>\n<li>b &#x3D; 4</li>\n<li>a + b &#x3D; 7</li>\n<li>a * b &#x3D;12</li>\n<li>a &#x2F; b &#x3D; 0.75</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"x의-y제곱을-나타내는-연산자\"><a href=\"#x의-y제곱을-나타내는-연산자\" class=\"headerlink\" title=\"x의 y제곱을 나타내는 ** 연산자\"></a>x의 y제곱을 나타내는 ** 연산자</h4><ul>\n<li>다음으로 알아야 할 연산자로 ** 라는 연산자가 있다. 이 연산자는 x ** y 처럼 사용했을 때 x의 y제곱(x의y승) 값을 돌려준다. 다음의 예를 통해 알아보자.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"number\">3</span></span><br><span class=\"line\">b = <span class=\"number\">4</span></span><br><span class=\"line\">a ** b</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>81\n</code></pre>\n<h4 id=\"나눗셈-후-나머지를-반환하는-연산자\"><a href=\"#나눗셈-후-나머지를-반환하는-연산자\" class=\"headerlink\" title=\"나눗셈 후 나머지를 반환하는 % 연산자\"></a>나눗셈 후 나머지를 반환하는 % 연산자</h4><ul>\n<li>프로그래밍을 처음 접하는 독자라면 % 연산자는 본 적이 없을 것이다. % 는 나눗셈의 나머지 값을 돌려주는 연산자이다. 7을 3으로 나누면 나머지는 1이 될 것이고 3을 7로 나누면 나머지는 3이 될 것이다. 다음 예로 확인해 보자.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">7</span> % <span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>1\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">3</span> % <span class=\"number\">7</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>3\n</code></pre>\n<h4 id=\"나눗셈-후-몫을-반환하는-x2F-x2F-연산자\"><a href=\"#나눗셈-후-몫을-반환하는-x2F-x2F-연산자\" class=\"headerlink\" title=\"나눗셈 후 몫을 반환하는 &#x2F;&#x2F; 연산자\"></a>나눗셈 후 몫을 반환하는 &#x2F;&#x2F; 연산자</h4><ul>\n<li>&#x2F; 연산자를 사용하여 7 나누기 4를 하면 그 결과는 예상대로 1.75가 된다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">7</span>/<span class=\"number\">4</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>1.75\n</code></pre>\n<ul>\n<li>이번에는 나눗셈 후 몫을 반환하는 &#x2F;&#x2F; 연산자를 사용한 경우를 보자.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">7</span>//<span class=\"number\">4</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>1\n</code></pre>\n<p>1.75에서 몫에 해당되는 정수값 1만 돌려주는 것을 확인할 수 있다.</p>\n<h3 id=\"문자열이란\"><a href=\"#문자열이란\" class=\"headerlink\" title=\"문자열이란?\"></a>문자열이란?</h3><ul>\n<li>문자열(String)이란 문자, 단어 등으로 구성된 문자들의 집합을 의미한다. 예를 들어 다음과 같은 것들이 문자열이다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;Life is too short, You need Python&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;a&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;123&quot;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>위 문자열 예문을 보면 모두 큰따옴표(“”)로 둘러싸여 있다. “123은 숫자인데 왜 문자열이지?”라는 의문이 드는 독자도 있을 것이다. 따옴표로 둘러싸여 있으면 모두 문자열이라고 보면 된다.</li>\n</ul>\n<h3 id=\"문자열은-어떻게-만들고-사용할까\"><a href=\"#문자열은-어떻게-만들고-사용할까\" class=\"headerlink\" title=\"문자열은 어떻게 만들고 사용할까?\"></a>문자열은 어떻게 만들고 사용할까?</h3><ul>\n<li>위 예에서는 문자열을 만들 때 큰따옴표(“”)만을 사용했지만 이 외에도 문자열을 만드는 방법은 3가지가 더 있다. 파이썬에서 문자열을 만드는 방법은 총 4가지이다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1. 큰따옴표(&quot;&quot;)로 양쪽 둘러싸기</span></span><br><span class=\"line\"><span class=\"string\">&quot;Hello World&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 2. 작은따옴표(&#x27;&#x27;)로 양쪽 둘러싸기</span></span><br><span class=\"line\"><span class=\"string\">&#x27;Python is fun&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># 3. 큰따옴표 3개를 연속(&quot;&quot;&quot;)으로 써서 양쪽 둘러싸기</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;Life is too short, You need python&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 4. 작은따옴표 3개를 연속(&#x27;&#x27;&#x27;)으로 써서 양쪽 둘러싸기</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;Life is too short, You need python&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>단순함이 자랑인 파이썬이 문자열을 만드는 방법은 왜 4가지나 가지게 되었을까? 그 이유에 대해 알아보자.</li>\n</ul>\n<h3 id=\"문자열-안에-작은따옴표나-큰따옴표를-포함시키고-싶을-때\"><a href=\"#문자열-안에-작은따옴표나-큰따옴표를-포함시키고-싶을-때\" class=\"headerlink\" title=\"문자열 안에 작은따옴표나 큰따옴표를 포함시키고 싶을 때\"></a>문자열 안에 작은따옴표나 큰따옴표를 포함시키고 싶을 때</h3><ul>\n<li>문자열을 만들어주는 주인공은 작은따옴표(‘)와 큰따옴표(“)이다. 그런데 문자열 안에도 작은따옴표와 큰따옴표가 들어 있어야 할 경우가 있다. 이때는 좀 더 특별한 기술이 필요하다. 예제를 하나씩 살펴보면서 원리를 익혀 보자.</li>\n</ul>\n<h4 id=\"1-문자열에-작은따옴표-‘-포함시키기\"><a href=\"#1-문자열에-작은따옴표-‘-포함시키기\" class=\"headerlink\" title=\"1. 문자열에 작은따옴표(‘) 포함시키기\"></a>1. 문자열에 작은따옴표(‘) 포함시키기</h4><p>Python’s favorite food is perl</p>\n<ul>\n<li>위와 같은문자열을 food 변수에 저장하고 싶다고 가정하자. 문자열 중 Python’s에 작은따옴표(‘)가 포함되어 있다.</li>\n<li>이럴 때는 다음과 같이 문자열을 큰따옴표(“)로 둘러싸야 한다. 큰따옴표 안에 들어 있는 작은따옴표는 문자열을 나타내기 위한 기호로 인식되지 않는다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">food = <span class=\"string\">&quot;Python&#x27;s favorite food is perl&quot;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>프롬포트에 food를 입력해서 결과를 확인하자. 변수에 저장된 문자열이 그대로 출력되는 것을 볼 수 있다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">food</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&quot;Python&#39;s favorite food is perl&quot;\n</code></pre>\n<p>시험삼아 다음과 같이 큰따옴표(“)가 아닌 작은따옴표(‘)로 문자열을 둘러싼 후 다시 실행해 보자. ‘Python’이 문자열로 인식되어 구문 오류(SyntaxError)가 발생할 것이다.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">food = <span class=\"string\">&#x27;Python&#x27;</span>s favorite food <span class=\"keyword\">is</span> perl<span class=\"string\">&#x27;</span></span><br></pre></td></tr></table></figure>\n\n\n<pre><code>  File &quot;&lt;ipython-input-9-336a85538234&gt;&quot;, line 1\n    food = &#39;Python&#39;s favorite food is perl&#39;\n                   ^\nSyntaxError: invalid syntax\n</code></pre>\n<h4 id=\"2-문자열에-큰따옴표-“-포함시키기\"><a href=\"#2-문자열에-큰따옴표-“-포함시키기\" class=\"headerlink\" title=\"2. 문자열에 큰따옴표(“) 포함시키기\"></a>2. 문자열에 큰따옴표(“) 포함시키기</h4><p>“Python is very easy.” he says.</p>\n<ul>\n<li>위와 같이 큰따옴표(“)가 포함된 문자열이라면 어떻게 해야 큰따옴표가 제대로 표현될까?</li>\n<li>다음과 같이 문자열을 작은따옴표(‘)로 둘러싸면 된다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">say = <span class=\"string\">&#x27;&quot;Python is very easy.&quot; he says.&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>이렇게 작은따옴표(‘)안에 사용된 큰따옴표(“)는 문자열을 만드는 기호로 인식되지 않는다.</li>\n</ul>\n<h4 id=\"3-백슬래시-를-사용해서-작은따옴표-‘-와-큰따옴표-“-를-문자열에-포함시키기\"><a href=\"#3-백슬래시-를-사용해서-작은따옴표-‘-와-큰따옴표-“-를-문자열에-포함시키기\" class=\"headerlink\" title=\"3. 백슬래시()를 사용해서 작은따옴표(‘)와 큰따옴표(“)를 문자열에 포함시키기\"></a>3. 백슬래시()를 사용해서 작은따옴표(‘)와 큰따옴표(“)를 문자열에 포함시키기</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">food = <span class=\"string\">&#x27;Python\\&#x27;s favorite food is perl&#x27;</span></span><br><span class=\"line\">say = <span class=\"string\">&quot;\\&quot;Python is very easy.\\&quot; he says.&quot;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>작은따옴표(‘)나 큰 따옴표(“)를 문자열에 포함시키는 또 다른 방법은 백슬래시()를 사용하는 것이다. 즉 백슬래시()를 작은따옴표(‘)나 큰따옴표(“) 앞에 삽입하면 백슬래시() 뒤의 작은따옴표(‘)나 큰따옴표(“)는 문자열을 둘러싸는 기호의 의미가 아니라 문자 (‘),(“) 그 자체를 뜻하게 된다.</li>\n<li>어떤 방법을 사용해서 문자열 안에 작은따옴표(‘)와 큰따옴표(“)를 포함시킬지는 각자의 선택이다. 대화형 인터프리터를 실행한 후 위 예문을 꼭 직접 작성해 보자.</li>\n</ul>\n<h3 id=\"여러-줄인-문자열을-변수에-대입하고-싶을-때\"><a href=\"#여러-줄인-문자열을-변수에-대입하고-싶을-때\" class=\"headerlink\" title=\"여러 줄인 문자열을 변수에 대입하고 싶을 때\"></a>여러 줄인 문자열을 변수에 대입하고 싶을 때</h3><ul>\n<li>문자열이 항상 한 줄짜리만 있는 것은 아니다. 다음과 같이 여러 줄의 문자열을 변수에 대입하려면 어떻게 처리해야 할까?</li>\n</ul>\n<p>Life is too short<br>You need python</p>\n<h4 id=\"1-줄을-바꾸기-위한-이스케이프-코드-n-삽입하기\"><a href=\"#1-줄을-바꾸기-위한-이스케이프-코드-n-삽입하기\" class=\"headerlink\" title=\"1. 줄을 바꾸기 위한 이스케이프 코드 \\n 삽입하기\"></a>1. 줄을 바꾸기 위한 이스케이프 코드 \\n 삽입하기</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">multiline = <span class=\"string\">&quot;Life is too short\\nYou need python&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>위 예처럼 줄바꿈 문자 \\n 을 삽입하는 방법이 있지만 읽기에 불편하고 줄이 길어지는 단점이 있다.</p>\n<h4 id=\"2-연속된-작은-따옴표-3개-‘’’-또는-큰따옴표-3개-“””-사용하기\"><a href=\"#2-연속된-작은-따옴표-3개-‘’’-또는-큰따옴표-3개-“””-사용하기\" class=\"headerlink\" title=\"2. 연속된 작은 따옴표 3개(‘’’) 또는 큰따옴표 3개 (“””) 사용하기\"></a>2. 연속된 작은 따옴표 3개(‘’’) 또는 큰따옴표 3개 (“””) 사용하기</h4><ul>\n<li>위 1번의 단점을 극복하기 위해 파이썬에서는 다음과 같이 작은따옴표 3개(‘’’) 또는 큰따옴표 3개(“””)를 사용한다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">multiline=<span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">Life is too short</span></span><br><span class=\"line\"><span class=\"string\">You need python</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>작은따옴표 3개를 사용한 경우</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">multiline=<span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">Life is too short</span></span><br><span class=\"line\"><span class=\"string\">You need python</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>큰따옴표 3개를 사용한 경우</li>\n</ul>\n<p>print(multiline)을 입력해서 어떻게 출력되는지 확인해보자.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(multiline)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Life is too short\nYou need python\n</code></pre>\n<ul>\n<li>출처 : <a href=\"https://wikidocs.net/12\">https://wikidocs.net/12</a></li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/06/27/1%EC%9E%A5_%ED%8C%8C%EC%9D%B4%EC%8D%AC_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%98_%EA%B8%B0%EC%B4%88_%EC%9E%90%EB%A3%8C%ED%98%95/image.png","excerpt":"<ul>\n<li>전설의 시작","more":"</li>\n</ul>\n<h1 id=\"1-1-숫자형\"><a href=\"#1-1-숫자형\" class=\"headerlink\" title=\"1-1 숫자형\"></a>1-1 숫자형</h1><h3 id=\"숫자형이란\"><a href=\"#숫자형이란\" class=\"headerlink\" title=\"숫자형이란?\"></a>숫자형이란?</h3><ul>\n<li><p>숫자형(Number)이란 숫자 형태로 이루어진 자료형으로, 우리가 이미 잘 알고 있는 것이다.<br>우리가 흔히 사용하는 것을 생각해 보자. 123 같은 정수, 12.34 같은 실수, 드물게 사용하긴 하지만 8진수나 16진수 같은 것도 있다.</p>\n</li>\n<li><p>다음 표는 파이썬에서 숫자를 어떻게 사용하는지 간략하게 보여 준다.</p>\n<ul>\n<li>정수 : 123, -345, 0</li>\n<li>실수 : 123.45, -1234.5, 3.4e10</li>\n<li>8진수 : 0o34, 0o25</li>\n<li>16진수 : 0x2A, 0xFF<br>이제 이런 숫자를 파이썬에서는 어떻게 만들고 사용하는지 자세히 알아보자.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"숫자형은-어떻게-만들고-사용할까\"><a href=\"#숫자형은-어떻게-만들고-사용할까\" class=\"headerlink\" title=\"숫자형은 어떻게 만들고 사용할까?\"></a>숫자형은 어떻게 만들고 사용할까?</h3><h4 id=\"정수형\"><a href=\"#정수형\" class=\"headerlink\" title=\"정수형\"></a>정수형</h4><ul>\n<li>정수형(Integer)이란 말 그대로 정수를 뜻하는 자료형을 말한다. 다음 예는 양의 정수와 음의 정수, 숫자 0을 변수 a에 대입하는 예이다.<ul>\n<li>a &#x3D; 123</li>\n<li>a &#x3D; -178</li>\n<li>a &#x3D; 0</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"실수형\"><a href=\"#실수형\" class=\"headerlink\" title=\"실수형\"></a>실수형</h4><ul>\n<li>파이썬에서 실수형(Floationg-point)은 소수점이 포함된 숫자를 말한다. 다음은 실수를 변수a에 대입하는 예이다.<ul>\n<li>a &#x3D; 1.2</li>\n<li>a &#x3D;-3.45</li>\n</ul>\n</li>\n<li>위 방식은 우리가 일반적으로 볼 수 있는 실수형의 소수점 표현 방식이다.<ul>\n<li>a &#x3D; 4.24E10</li>\n<li>a &#x3D; 4.24e-10</li>\n</ul>\n</li>\n<li>위 방식은 “컴퓨터식 지수 표현 방식” 으로 파이썬에서는 4.24e10 또는 4.24E10 처럼 표현한다(e와 E 둘 중 어느 것을 사용해도 무방하다).</li>\n<li>여기서 4.24E10은 4.24 x 10의 10승, 4.24e-10은 4.24 x 10의 -10승을 의미한다.</li>\n</ul>\n<h4 id=\"8진수와-16진수\"><a href=\"#8진수와-16진수\" class=\"headerlink\" title=\"8진수와 16진수\"></a>8진수와 16진수</h4><ul>\n<li>8진수(Octal)를 만들기 위해서는 숫자가 0o(숫자 0 + 알파벳 소문자 o 또는 대문자 O)로 시작하면 된다.<ul>\n<li>a &#x3D; 0o177</li>\n</ul>\n</li>\n<li>16진수(Hexadecimal)를 만들기 위해서는 0x로 시작하면 된다.<ul>\n<li>a &#x3D; 0x8ff</li>\n<li>b &#x3D; 0xABC</li>\n</ul>\n</li>\n<li>8진수나 16진수는 파이썬에서 잘 사용하지 않는 형태의 숫자 자료형이니 간단히 눈으로 익히고 넘어가자.</li>\n</ul>\n<h3 id=\"숫자형을-활용하기-위한-연산자\"><a href=\"#숫자형을-활용하기-위한-연산자\" class=\"headerlink\" title=\"숫자형을 활용하기 위한 연산자\"></a>숫자형을 활용하기 위한 연산자</h3><h4 id=\"사칙연산\"><a href=\"#사칙연산\" class=\"headerlink\" title=\"사칙연산\"></a>사칙연산</h4><ul>\n<li>프로그래밍을 한 번도 해본 적이 없는 독자라도 사칙연산(+, -, *, &#x2F;)은 알고 있을 것이다. 파이썬 역시 계산기와 마찬가지로 다음처럼 연산자를 사용해 사칙연산을 수행한다.<ul>\n<li>a &#x3D; 3</li>\n<li>b &#x3D; 4</li>\n<li>a + b &#x3D; 7</li>\n<li>a * b &#x3D;12</li>\n<li>a &#x2F; b &#x3D; 0.75</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"x의-y제곱을-나타내는-연산자\"><a href=\"#x의-y제곱을-나타내는-연산자\" class=\"headerlink\" title=\"x의 y제곱을 나타내는 ** 연산자\"></a>x의 y제곱을 나타내는 ** 연산자</h4><ul>\n<li>다음으로 알아야 할 연산자로 ** 라는 연산자가 있다. 이 연산자는 x ** y 처럼 사용했을 때 x의 y제곱(x의y승) 값을 돌려준다. 다음의 예를 통해 알아보자.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"number\">3</span></span><br><span class=\"line\">b = <span class=\"number\">4</span></span><br><span class=\"line\">a ** b</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>81\n</code></pre>\n<h4 id=\"나눗셈-후-나머지를-반환하는-연산자\"><a href=\"#나눗셈-후-나머지를-반환하는-연산자\" class=\"headerlink\" title=\"나눗셈 후 나머지를 반환하는 % 연산자\"></a>나눗셈 후 나머지를 반환하는 % 연산자</h4><ul>\n<li>프로그래밍을 처음 접하는 독자라면 % 연산자는 본 적이 없을 것이다. % 는 나눗셈의 나머지 값을 돌려주는 연산자이다. 7을 3으로 나누면 나머지는 1이 될 것이고 3을 7로 나누면 나머지는 3이 될 것이다. 다음 예로 확인해 보자.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">7</span> % <span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>1\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">3</span> % <span class=\"number\">7</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>3\n</code></pre>\n<h4 id=\"나눗셈-후-몫을-반환하는-x2F-x2F-연산자\"><a href=\"#나눗셈-후-몫을-반환하는-x2F-x2F-연산자\" class=\"headerlink\" title=\"나눗셈 후 몫을 반환하는 &#x2F;&#x2F; 연산자\"></a>나눗셈 후 몫을 반환하는 &#x2F;&#x2F; 연산자</h4><ul>\n<li>&#x2F; 연산자를 사용하여 7 나누기 4를 하면 그 결과는 예상대로 1.75가 된다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">7</span>/<span class=\"number\">4</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>1.75\n</code></pre>\n<ul>\n<li>이번에는 나눗셈 후 몫을 반환하는 &#x2F;&#x2F; 연산자를 사용한 경우를 보자.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">7</span>//<span class=\"number\">4</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>1\n</code></pre>\n<p>1.75에서 몫에 해당되는 정수값 1만 돌려주는 것을 확인할 수 있다.</p>\n<h3 id=\"문자열이란\"><a href=\"#문자열이란\" class=\"headerlink\" title=\"문자열이란?\"></a>문자열이란?</h3><ul>\n<li>문자열(String)이란 문자, 단어 등으로 구성된 문자들의 집합을 의미한다. 예를 들어 다음과 같은 것들이 문자열이다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;Life is too short, You need Python&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;a&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;123&quot;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>위 문자열 예문을 보면 모두 큰따옴표(“”)로 둘러싸여 있다. “123은 숫자인데 왜 문자열이지?”라는 의문이 드는 독자도 있을 것이다. 따옴표로 둘러싸여 있으면 모두 문자열이라고 보면 된다.</li>\n</ul>\n<h3 id=\"문자열은-어떻게-만들고-사용할까\"><a href=\"#문자열은-어떻게-만들고-사용할까\" class=\"headerlink\" title=\"문자열은 어떻게 만들고 사용할까?\"></a>문자열은 어떻게 만들고 사용할까?</h3><ul>\n<li>위 예에서는 문자열을 만들 때 큰따옴표(“”)만을 사용했지만 이 외에도 문자열을 만드는 방법은 3가지가 더 있다. 파이썬에서 문자열을 만드는 방법은 총 4가지이다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1. 큰따옴표(&quot;&quot;)로 양쪽 둘러싸기</span></span><br><span class=\"line\"><span class=\"string\">&quot;Hello World&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 2. 작은따옴표(&#x27;&#x27;)로 양쪽 둘러싸기</span></span><br><span class=\"line\"><span class=\"string\">&#x27;Python is fun&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># 3. 큰따옴표 3개를 연속(&quot;&quot;&quot;)으로 써서 양쪽 둘러싸기</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;Life is too short, You need python&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 4. 작은따옴표 3개를 연속(&#x27;&#x27;&#x27;)으로 써서 양쪽 둘러싸기</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;Life is too short, You need python&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>단순함이 자랑인 파이썬이 문자열을 만드는 방법은 왜 4가지나 가지게 되었을까? 그 이유에 대해 알아보자.</li>\n</ul>\n<h3 id=\"문자열-안에-작은따옴표나-큰따옴표를-포함시키고-싶을-때\"><a href=\"#문자열-안에-작은따옴표나-큰따옴표를-포함시키고-싶을-때\" class=\"headerlink\" title=\"문자열 안에 작은따옴표나 큰따옴표를 포함시키고 싶을 때\"></a>문자열 안에 작은따옴표나 큰따옴표를 포함시키고 싶을 때</h3><ul>\n<li>문자열을 만들어주는 주인공은 작은따옴표(‘)와 큰따옴표(“)이다. 그런데 문자열 안에도 작은따옴표와 큰따옴표가 들어 있어야 할 경우가 있다. 이때는 좀 더 특별한 기술이 필요하다. 예제를 하나씩 살펴보면서 원리를 익혀 보자.</li>\n</ul>\n<h4 id=\"1-문자열에-작은따옴표-‘-포함시키기\"><a href=\"#1-문자열에-작은따옴표-‘-포함시키기\" class=\"headerlink\" title=\"1. 문자열에 작은따옴표(‘) 포함시키기\"></a>1. 문자열에 작은따옴표(‘) 포함시키기</h4><p>Python’s favorite food is perl</p>\n<ul>\n<li>위와 같은문자열을 food 변수에 저장하고 싶다고 가정하자. 문자열 중 Python’s에 작은따옴표(‘)가 포함되어 있다.</li>\n<li>이럴 때는 다음과 같이 문자열을 큰따옴표(“)로 둘러싸야 한다. 큰따옴표 안에 들어 있는 작은따옴표는 문자열을 나타내기 위한 기호로 인식되지 않는다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">food = <span class=\"string\">&quot;Python&#x27;s favorite food is perl&quot;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>프롬포트에 food를 입력해서 결과를 확인하자. 변수에 저장된 문자열이 그대로 출력되는 것을 볼 수 있다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">food</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&quot;Python&#39;s favorite food is perl&quot;\n</code></pre>\n<p>시험삼아 다음과 같이 큰따옴표(“)가 아닌 작은따옴표(‘)로 문자열을 둘러싼 후 다시 실행해 보자. ‘Python’이 문자열로 인식되어 구문 오류(SyntaxError)가 발생할 것이다.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">food = <span class=\"string\">&#x27;Python&#x27;</span>s favorite food <span class=\"keyword\">is</span> perl<span class=\"string\">&#x27;</span></span><br></pre></td></tr></table></figure>\n\n\n<pre><code>  File &quot;&lt;ipython-input-9-336a85538234&gt;&quot;, line 1\n    food = &#39;Python&#39;s favorite food is perl&#39;\n                   ^\nSyntaxError: invalid syntax\n</code></pre>\n<h4 id=\"2-문자열에-큰따옴표-“-포함시키기\"><a href=\"#2-문자열에-큰따옴표-“-포함시키기\" class=\"headerlink\" title=\"2. 문자열에 큰따옴표(“) 포함시키기\"></a>2. 문자열에 큰따옴표(“) 포함시키기</h4><p>“Python is very easy.” he says.</p>\n<ul>\n<li>위와 같이 큰따옴표(“)가 포함된 문자열이라면 어떻게 해야 큰따옴표가 제대로 표현될까?</li>\n<li>다음과 같이 문자열을 작은따옴표(‘)로 둘러싸면 된다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">say = <span class=\"string\">&#x27;&quot;Python is very easy.&quot; he says.&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>이렇게 작은따옴표(‘)안에 사용된 큰따옴표(“)는 문자열을 만드는 기호로 인식되지 않는다.</li>\n</ul>\n<h4 id=\"3-백슬래시-를-사용해서-작은따옴표-‘-와-큰따옴표-“-를-문자열에-포함시키기\"><a href=\"#3-백슬래시-를-사용해서-작은따옴표-‘-와-큰따옴표-“-를-문자열에-포함시키기\" class=\"headerlink\" title=\"3. 백슬래시()를 사용해서 작은따옴표(‘)와 큰따옴표(“)를 문자열에 포함시키기\"></a>3. 백슬래시()를 사용해서 작은따옴표(‘)와 큰따옴표(“)를 문자열에 포함시키기</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">food = <span class=\"string\">&#x27;Python\\&#x27;s favorite food is perl&#x27;</span></span><br><span class=\"line\">say = <span class=\"string\">&quot;\\&quot;Python is very easy.\\&quot; he says.&quot;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>작은따옴표(‘)나 큰 따옴표(“)를 문자열에 포함시키는 또 다른 방법은 백슬래시()를 사용하는 것이다. 즉 백슬래시()를 작은따옴표(‘)나 큰따옴표(“) 앞에 삽입하면 백슬래시() 뒤의 작은따옴표(‘)나 큰따옴표(“)는 문자열을 둘러싸는 기호의 의미가 아니라 문자 (‘),(“) 그 자체를 뜻하게 된다.</li>\n<li>어떤 방법을 사용해서 문자열 안에 작은따옴표(‘)와 큰따옴표(“)를 포함시킬지는 각자의 선택이다. 대화형 인터프리터를 실행한 후 위 예문을 꼭 직접 작성해 보자.</li>\n</ul>\n<h3 id=\"여러-줄인-문자열을-변수에-대입하고-싶을-때\"><a href=\"#여러-줄인-문자열을-변수에-대입하고-싶을-때\" class=\"headerlink\" title=\"여러 줄인 문자열을 변수에 대입하고 싶을 때\"></a>여러 줄인 문자열을 변수에 대입하고 싶을 때</h3><ul>\n<li>문자열이 항상 한 줄짜리만 있는 것은 아니다. 다음과 같이 여러 줄의 문자열을 변수에 대입하려면 어떻게 처리해야 할까?</li>\n</ul>\n<p>Life is too short<br>You need python</p>\n<h4 id=\"1-줄을-바꾸기-위한-이스케이프-코드-n-삽입하기\"><a href=\"#1-줄을-바꾸기-위한-이스케이프-코드-n-삽입하기\" class=\"headerlink\" title=\"1. 줄을 바꾸기 위한 이스케이프 코드 \\n 삽입하기\"></a>1. 줄을 바꾸기 위한 이스케이프 코드 \\n 삽입하기</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">multiline = <span class=\"string\">&quot;Life is too short\\nYou need python&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>위 예처럼 줄바꿈 문자 \\n 을 삽입하는 방법이 있지만 읽기에 불편하고 줄이 길어지는 단점이 있다.</p>\n<h4 id=\"2-연속된-작은-따옴표-3개-‘’’-또는-큰따옴표-3개-“””-사용하기\"><a href=\"#2-연속된-작은-따옴표-3개-‘’’-또는-큰따옴표-3개-“””-사용하기\" class=\"headerlink\" title=\"2. 연속된 작은 따옴표 3개(‘’’) 또는 큰따옴표 3개 (“””) 사용하기\"></a>2. 연속된 작은 따옴표 3개(‘’’) 또는 큰따옴표 3개 (“””) 사용하기</h4><ul>\n<li>위 1번의 단점을 극복하기 위해 파이썬에서는 다음과 같이 작은따옴표 3개(‘’’) 또는 큰따옴표 3개(“””)를 사용한다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">multiline=<span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">Life is too short</span></span><br><span class=\"line\"><span class=\"string\">You need python</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>작은따옴표 3개를 사용한 경우</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">multiline=<span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">Life is too short</span></span><br><span class=\"line\"><span class=\"string\">You need python</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>큰따옴표 3개를 사용한 경우</li>\n</ul>\n<p>print(multiline)을 입력해서 어떻게 출력되는지 확인해보자.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(multiline)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Life is too short\nYou need python\n</code></pre>\n<ul>\n<li>출처 : <a href=\"https://wikidocs.net/12\">https://wikidocs.net/12</a></li>\n</ul>"},{"title":"XGBoost & LightGBM (2016 ~ 2017)","output":{"html_document":{"keep_md":true}},"clearReading":true,"thumbnailImage":"image.png","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-07-04T03:50:55.000Z","_content":"\nXGBoost & LightGBM 방식 구별\n<!-- excerpt -->\n\n## XGBoost & LightGBM (2016 ~ 2017)\n- 전통적인 머신러닝 알고리즘의 융합\n  + 선형회귀 릿지 라쏘, 과적합 방지 위한 규제\n  + 결정 트리의 핵심적인 알고리즘\n  + 경사 하강법\n  + 부스팅 기법\n- 문제점 : 파라미터의 개수가 너무 많음\n- 근데 왜 많이 쓰느냐\n  + 모델 학습 속도\n  + 성능\n  + 가장 좋은 모델이란, 학습속도 + 성능 (지금까지 나온 알고리즘 보다)이 좋은 것\n- 개발자로 성공하고 싶다?\n- Python으로 시작 하지만\n  + JAVA, C, C++ 을 배워야 함\n  + 이 알고리즘들도 C, C++ 로 만들었음\n- 큰 회사들의 개발\n  + 1. 우리가 자체적으로 배포를 해보자 --> Python Wrapper API\n  + 2. 파이썬 머신러닝 = Scikit-Learn 이 돼버림 --> Scikit-Learn에서 쉽게 쓸 수 있도록 개발하자\n- 시장성은 Scikit-Learn 이 지배\n- 방식구분을 잘 해야됨\n  + 왜? 방식마다 지원하거나 지원 안하는 코드가 다 다름\n\n### Python Wrapper 방식\n- X_train, y_train\n- 각 모듈에 맞도록 행렬을 재변환 해야 함.\n\n\n```python\nimport xgboost as xgb \nfrom sklearn.model_selection import train_test_split\nimport seaborn as sns \n\n# 데이터 분리\ntitanic = sns.load_dataset('titanic')\ntitanic.info()\n\n# X, 독립변수, y 종속변수\nX = titanic[['pclass', 'parch', 'fare']]\ny = titanic['survived']\n\n# 훈련데이터, 테스트 데이터 분리\nX_train, X_test, y_train, y_test = train_test_split(X, \n                                                    y, \n                                                    stratify = y, \n                                                    test_size = 0.3, \n                                                    random_state=42)\n\nX_train.shape, X_test.shape, y_train.shape, y_test.shape\n```\n\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 891 entries, 0 to 890\n    Data columns (total 15 columns):\n     #   Column       Non-Null Count  Dtype   \n    ---  ------       --------------  -----   \n     0   survived     891 non-null    int64   \n     1   pclass       891 non-null    int64   \n     2   sex          891 non-null    object  \n     3   age          714 non-null    float64 \n     4   sibsp        891 non-null    int64   \n     5   parch        891 non-null    int64   \n     6   fare         891 non-null    float64 \n     7   embarked     889 non-null    object  \n     8   class        891 non-null    category\n     9   who          891 non-null    object  \n     10  adult_male   891 non-null    bool    \n     11  deck         203 non-null    category\n     12  embark_town  889 non-null    object  \n     13  alive        891 non-null    object  \n     14  alone        891 non-null    bool    \n    dtypes: bool(2), category(2), float64(2), int64(4), object(5)\n    memory usage: 80.7+ KB\n    \n\n\n\n\n    ((623, 3), (268, 3), (623,), (268,))\n\n\n\n- 여기가 핵심\n\n\n```python\ndtrain = xgb.DMatrix(data = X_train, label = y_train)\ndtest = xgb.DMatrix(data = X_test, label = y_test)\n# 이 코드 형태를 보면 'Python Wrapper API 형태로 코드를 짰구나.' 하고 알아야 한다.\n\nprint(dtrain)\n```\n\n    <xgboost.core.DMatrix object at 0x7f3dfa354610>\n    \n\n- 머신러닝 코드\n\n\n```python\n# from sklearn.tree import Class~~~~ 코드가 없이 바로 xgb.train 으로 간다\nparams = {\n    'max_depth' : 3,\n    'n_estimators' : 100,\n    'eta' : 0.1,\n    'objective' : 'binary:logistic'\n}\nnum_rounds = 400   # 내가 얘를 400번 돌리겠다\n\nw_list = [(dtrain, 'train'), (dtest, 'test')]\nxgb_ml = xgb.train(params = params, \n                   dtrain = dtrain, \n                   num_boost_round = 400,\n                   early_stopping_rounds = 100,    # 의미 없이 돌리지말고 100번만 돌리겠다\n                   evals = w_list)  # dtrain = X_train 쓰면 에러난다. 변환을 해줘야 됨\n```\n\n\n```python\n# 평가\nfrom sklearn.metrics import accuracy_score\npred_probs = xgb_ml.predict(dtest)\ny_pred = [1 if x > 0.5 else 0 for x in pred_probs]\n\n# 예측 라벨과 실제 라벨 사이의 정확도 측정\naccuracy_score(y_pred, y_test)\n```\n\n\n\n\n    0.6865671641791045\n\n\n\n### Scikit-Learn API 방식\n\n\n```python\nfrom sklearn.tree import DecisionTreeClassifier\nfrom xgboost import XGBClassifier # <--- 이 코드가 보이면 Scikit-Learn API 방식을 사용했다\n\n# dt = DecisionTreeClassifier()\nxgb_model = XGBClassifier(objective = 'binary:logistic', \n                          n_estimators=100, \n                          max_depth=3, \n                          learning_rate = 0.1, \n                          num_rounds = 400,\n                          random_state=42)\n\nw_list = [(X_train, y_train), (X_test, y_test)]\n\nxgb_model.fit(X_train, y_train, eval_set = w_list, eval_metric='error', verbose=True)\n\ny_probas = xgb_model.predict_proba(X_test)\ny_pred = [1 if x > 0.5 else 0 for x in pred_probs]\n\n# 예측 라벨과 실제 라벨 사이의 정확도 측정\naccuracy_score(y_pred, y_test)\n```\n\n### LightGBM Python Wrapper 방식\n\n\n```python\nimport lightgbm as lgb \nfrom sklearn.model_selection import train_test_split \nfrom sklearn.metrics import accuracy_score\nimport seaborn as sns \n\n# tips 데이터셋 \ntitanic = sns.load_dataset('titanic')\n\nX = titanic[['pclass', 'parch', 'fare']]\ny = titanic['survived']\n\n# 훈련데이터, 테스트 데이터 분리\nX_train, X_test, y_train, y_test = train_test_split(X, y, stratify = y, test_size = 0.3, random_state=42)\n\n# XGBoost 코드와 유사하다. \ndtrain = lgb.Dataset(data = X_train, label = y_train)\ndtest = lgb.Dataset(data = X_test, label = y_test)\n\nparams = {'max_depth':3,\n          'n_estimators':100,\n          'learning_rate': 0.1,\n          'objective':'binary',\n          'metric' : 'binary_error', \n          'num_boost_round' : 400, \n          'verbose' : 1} \n\nw_list = [dtrain, dtest]\nlgb_ml = lgb.train(params=params, train_set = dtrain,\\\n                  early_stopping_rounds=100, valid_sets= w_list)\n\npred_probs = lgb_ml.predict(X_test)\ny_pred=[1 if x > 0.5 else 0 for x in pred_probs]\n\n# 예측 라벨과 실제 라벨 사이의 정확도 측정\naccuracy_score(y_pred, y_test)\n```\n\n### LightGBM Scikit-Learn API 방식\n\n\n```python\nfrom lightgbm import LGBMClassifier\nfrom sklearn.metrics import accuracy_score\n\n# model \nw_list = [dtrain, dtest]\nmodel = LGBMClassifier(objective = 'binary', \n                       metric = 'binary_error',\n                       n_estimators=100, \n                       learning_rate=0.1, \n                       max_depth=3, \n                       num_boost_round = 400,\n                       random_state = 32)\nmodel.fit(X_train, \n          y_train, \n          eval_set = [(X_train, y_train), (X_test, y_test)], \n          verbose=1,\n          early_stopping_rounds = 100)\ny_probas = model.predict_proba(X_test) \ny_pred=[1 if x > 0.5 else 0 for x in y_probas[:, 1]] # 예측 라벨(0과 1로 예측)\n\n# 예측 라벨과 실제 라벨 사이의 정확도 측정\naccuracy_score(y_pred, y_test)\n```\n","source":"_posts/XGBoost_&_LightGBM.md","raw":"---\ntitle: \"XGBoost & LightGBM (2016 ~ 2017)\"\noutput:\n  html_document:\n    keep_md: true\ncategories: XGBoost & LightGBM\nclearReading: true\nthumbnailImage: image.png\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-07-04 12:50:55'\n---\n\nXGBoost & LightGBM 방식 구별\n<!-- excerpt -->\n\n## XGBoost & LightGBM (2016 ~ 2017)\n- 전통적인 머신러닝 알고리즘의 융합\n  + 선형회귀 릿지 라쏘, 과적합 방지 위한 규제\n  + 결정 트리의 핵심적인 알고리즘\n  + 경사 하강법\n  + 부스팅 기법\n- 문제점 : 파라미터의 개수가 너무 많음\n- 근데 왜 많이 쓰느냐\n  + 모델 학습 속도\n  + 성능\n  + 가장 좋은 모델이란, 학습속도 + 성능 (지금까지 나온 알고리즘 보다)이 좋은 것\n- 개발자로 성공하고 싶다?\n- Python으로 시작 하지만\n  + JAVA, C, C++ 을 배워야 함\n  + 이 알고리즘들도 C, C++ 로 만들었음\n- 큰 회사들의 개발\n  + 1. 우리가 자체적으로 배포를 해보자 --> Python Wrapper API\n  + 2. 파이썬 머신러닝 = Scikit-Learn 이 돼버림 --> Scikit-Learn에서 쉽게 쓸 수 있도록 개발하자\n- 시장성은 Scikit-Learn 이 지배\n- 방식구분을 잘 해야됨\n  + 왜? 방식마다 지원하거나 지원 안하는 코드가 다 다름\n\n### Python Wrapper 방식\n- X_train, y_train\n- 각 모듈에 맞도록 행렬을 재변환 해야 함.\n\n\n```python\nimport xgboost as xgb \nfrom sklearn.model_selection import train_test_split\nimport seaborn as sns \n\n# 데이터 분리\ntitanic = sns.load_dataset('titanic')\ntitanic.info()\n\n# X, 독립변수, y 종속변수\nX = titanic[['pclass', 'parch', 'fare']]\ny = titanic['survived']\n\n# 훈련데이터, 테스트 데이터 분리\nX_train, X_test, y_train, y_test = train_test_split(X, \n                                                    y, \n                                                    stratify = y, \n                                                    test_size = 0.3, \n                                                    random_state=42)\n\nX_train.shape, X_test.shape, y_train.shape, y_test.shape\n```\n\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 891 entries, 0 to 890\n    Data columns (total 15 columns):\n     #   Column       Non-Null Count  Dtype   \n    ---  ------       --------------  -----   \n     0   survived     891 non-null    int64   \n     1   pclass       891 non-null    int64   \n     2   sex          891 non-null    object  \n     3   age          714 non-null    float64 \n     4   sibsp        891 non-null    int64   \n     5   parch        891 non-null    int64   \n     6   fare         891 non-null    float64 \n     7   embarked     889 non-null    object  \n     8   class        891 non-null    category\n     9   who          891 non-null    object  \n     10  adult_male   891 non-null    bool    \n     11  deck         203 non-null    category\n     12  embark_town  889 non-null    object  \n     13  alive        891 non-null    object  \n     14  alone        891 non-null    bool    \n    dtypes: bool(2), category(2), float64(2), int64(4), object(5)\n    memory usage: 80.7+ KB\n    \n\n\n\n\n    ((623, 3), (268, 3), (623,), (268,))\n\n\n\n- 여기가 핵심\n\n\n```python\ndtrain = xgb.DMatrix(data = X_train, label = y_train)\ndtest = xgb.DMatrix(data = X_test, label = y_test)\n# 이 코드 형태를 보면 'Python Wrapper API 형태로 코드를 짰구나.' 하고 알아야 한다.\n\nprint(dtrain)\n```\n\n    <xgboost.core.DMatrix object at 0x7f3dfa354610>\n    \n\n- 머신러닝 코드\n\n\n```python\n# from sklearn.tree import Class~~~~ 코드가 없이 바로 xgb.train 으로 간다\nparams = {\n    'max_depth' : 3,\n    'n_estimators' : 100,\n    'eta' : 0.1,\n    'objective' : 'binary:logistic'\n}\nnum_rounds = 400   # 내가 얘를 400번 돌리겠다\n\nw_list = [(dtrain, 'train'), (dtest, 'test')]\nxgb_ml = xgb.train(params = params, \n                   dtrain = dtrain, \n                   num_boost_round = 400,\n                   early_stopping_rounds = 100,    # 의미 없이 돌리지말고 100번만 돌리겠다\n                   evals = w_list)  # dtrain = X_train 쓰면 에러난다. 변환을 해줘야 됨\n```\n\n\n```python\n# 평가\nfrom sklearn.metrics import accuracy_score\npred_probs = xgb_ml.predict(dtest)\ny_pred = [1 if x > 0.5 else 0 for x in pred_probs]\n\n# 예측 라벨과 실제 라벨 사이의 정확도 측정\naccuracy_score(y_pred, y_test)\n```\n\n\n\n\n    0.6865671641791045\n\n\n\n### Scikit-Learn API 방식\n\n\n```python\nfrom sklearn.tree import DecisionTreeClassifier\nfrom xgboost import XGBClassifier # <--- 이 코드가 보이면 Scikit-Learn API 방식을 사용했다\n\n# dt = DecisionTreeClassifier()\nxgb_model = XGBClassifier(objective = 'binary:logistic', \n                          n_estimators=100, \n                          max_depth=3, \n                          learning_rate = 0.1, \n                          num_rounds = 400,\n                          random_state=42)\n\nw_list = [(X_train, y_train), (X_test, y_test)]\n\nxgb_model.fit(X_train, y_train, eval_set = w_list, eval_metric='error', verbose=True)\n\ny_probas = xgb_model.predict_proba(X_test)\ny_pred = [1 if x > 0.5 else 0 for x in pred_probs]\n\n# 예측 라벨과 실제 라벨 사이의 정확도 측정\naccuracy_score(y_pred, y_test)\n```\n\n### LightGBM Python Wrapper 방식\n\n\n```python\nimport lightgbm as lgb \nfrom sklearn.model_selection import train_test_split \nfrom sklearn.metrics import accuracy_score\nimport seaborn as sns \n\n# tips 데이터셋 \ntitanic = sns.load_dataset('titanic')\n\nX = titanic[['pclass', 'parch', 'fare']]\ny = titanic['survived']\n\n# 훈련데이터, 테스트 데이터 분리\nX_train, X_test, y_train, y_test = train_test_split(X, y, stratify = y, test_size = 0.3, random_state=42)\n\n# XGBoost 코드와 유사하다. \ndtrain = lgb.Dataset(data = X_train, label = y_train)\ndtest = lgb.Dataset(data = X_test, label = y_test)\n\nparams = {'max_depth':3,\n          'n_estimators':100,\n          'learning_rate': 0.1,\n          'objective':'binary',\n          'metric' : 'binary_error', \n          'num_boost_round' : 400, \n          'verbose' : 1} \n\nw_list = [dtrain, dtest]\nlgb_ml = lgb.train(params=params, train_set = dtrain,\\\n                  early_stopping_rounds=100, valid_sets= w_list)\n\npred_probs = lgb_ml.predict(X_test)\ny_pred=[1 if x > 0.5 else 0 for x in pred_probs]\n\n# 예측 라벨과 실제 라벨 사이의 정확도 측정\naccuracy_score(y_pred, y_test)\n```\n\n### LightGBM Scikit-Learn API 방식\n\n\n```python\nfrom lightgbm import LGBMClassifier\nfrom sklearn.metrics import accuracy_score\n\n# model \nw_list = [dtrain, dtest]\nmodel = LGBMClassifier(objective = 'binary', \n                       metric = 'binary_error',\n                       n_estimators=100, \n                       learning_rate=0.1, \n                       max_depth=3, \n                       num_boost_round = 400,\n                       random_state = 32)\nmodel.fit(X_train, \n          y_train, \n          eval_set = [(X_train, y_train), (X_test, y_test)], \n          verbose=1,\n          early_stopping_rounds = 100)\ny_probas = model.predict_proba(X_test) \ny_pred=[1 if x > 0.5 else 0 for x in y_probas[:, 1]] # 예측 라벨(0과 1로 예측)\n\n# 예측 라벨과 실제 라벨 사이의 정확도 측정\naccuracy_score(y_pred, y_test)\n```\n","slug":"XGBoost_&_LightGBM","published":1,"updated":"2022-08-06T13:02:51.812Z","_id":"cl5fcok7l0008jku0h7yu2j4v","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n<h2 id=\"XGBoost-amp-LightGBM-2016-2017\"><a href=\"#XGBoost-amp-LightGBM-2016-2017\" class=\"headerlink\" title=\"XGBoost &amp; LightGBM (2016 ~ 2017)\"></a>XGBoost &amp; LightGBM (2016 ~ 2017)</h2><ul>\n<li>전통적인 머신러닝 알고리즘의 융합<ul>\n<li>선형회귀 릿지 라쏘, 과적합 방지 위한 규제</li>\n<li>결정 트리의 핵심적인 알고리즘</li>\n<li>경사 하강법</li>\n<li>부스팅 기법</li>\n</ul>\n</li>\n<li>문제점 : 파라미터의 개수가 너무 많음</li>\n<li>근데 왜 많이 쓰느냐<ul>\n<li>모델 학습 속도</li>\n<li>성능</li>\n<li>가장 좋은 모델이란, 학습속도 + 성능 (지금까지 나온 알고리즘 보다)이 좋은 것</li>\n</ul>\n</li>\n<li>개발자로 성공하고 싶다?</li>\n<li>Python으로 시작 하지만<ul>\n<li>JAVA, C, C++ 을 배워야 함</li>\n<li>이 알고리즘들도 C, C++ 로 만들었음</li>\n</ul>\n</li>\n<li>큰 회사들의 개발<ul>\n<li><ol>\n<li>우리가 자체적으로 배포를 해보자 –&gt; Python Wrapper API</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>파이썬 머신러닝 &#x3D; Scikit-Learn 이 돼버림 –&gt; Scikit-Learn에서 쉽게 쓸 수 있도록 개발하자</li>\n</ol>\n</li>\n</ul>\n</li>\n<li>시장성은 Scikit-Learn 이 지배</li>\n<li>방식구분을 잘 해야됨<ul>\n<li>왜? 방식마다 지원하거나 지원 안하는 코드가 다 다름</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Python-Wrapper-방식\"><a href=\"#Python-Wrapper-방식\" class=\"headerlink\" title=\"Python Wrapper 방식\"></a>Python Wrapper 방식</h3><ul>\n<li>X_train, y_train</li>\n<li>각 모듈에 맞도록 행렬을 재변환 해야 함.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> xgboost <span class=\"keyword\">as</span> xgb </span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 데이터 분리</span></span><br><span class=\"line\">titanic = sns.load_dataset(<span class=\"string\">&#x27;titanic&#x27;</span>)</span><br><span class=\"line\">titanic.info()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># X, 독립변수, y 종속변수</span></span><br><span class=\"line\">X = titanic[[<span class=\"string\">&#x27;pclass&#x27;</span>, <span class=\"string\">&#x27;parch&#x27;</span>, <span class=\"string\">&#x27;fare&#x27;</span>]]</span><br><span class=\"line\">y = titanic[<span class=\"string\">&#x27;survived&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 훈련데이터, 테스트 데이터 분리</span></span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(X, </span><br><span class=\"line\">                                                    y, </span><br><span class=\"line\">                                                    stratify = y, </span><br><span class=\"line\">                                                    test_size = <span class=\"number\">0.3</span>, </span><br><span class=\"line\">                                                    random_state=<span class=\"number\">42</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">X_train.shape, X_test.shape, y_train.shape, y_test.shape</span><br></pre></td></tr></table></figure>\n\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 891 entries, 0 to 890\nData columns (total 15 columns):\n #   Column       Non-Null Count  Dtype   \n---  ------       --------------  -----   \n 0   survived     891 non-null    int64   \n 1   pclass       891 non-null    int64   \n 2   sex          891 non-null    object  \n 3   age          714 non-null    float64 \n 4   sibsp        891 non-null    int64   \n 5   parch        891 non-null    int64   \n 6   fare         891 non-null    float64 \n 7   embarked     889 non-null    object  \n 8   class        891 non-null    category\n 9   who          891 non-null    object  \n 10  adult_male   891 non-null    bool    \n 11  deck         203 non-null    category\n 12  embark_town  889 non-null    object  \n 13  alive        891 non-null    object  \n 14  alone        891 non-null    bool    \ndtypes: bool(2), category(2), float64(2), int64(4), object(5)\nmemory usage: 80.7+ KB\n\n\n\n\n\n((623, 3), (268, 3), (623,), (268,))\n</code></pre>\n<ul>\n<li>여기가 핵심</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dtrain = xgb.DMatrix(data = X_train, label = y_train)</span><br><span class=\"line\">dtest = xgb.DMatrix(data = X_test, label = y_test)</span><br><span class=\"line\"><span class=\"comment\"># 이 코드 형태를 보면 &#x27;Python Wrapper API 형태로 코드를 짰구나.&#x27; 하고 알아야 한다.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dtrain)</span><br></pre></td></tr></table></figure>\n\n<pre><code>&lt;xgboost.core.DMatrix object at 0x7f3dfa354610&gt;\n</code></pre>\n<ul>\n<li>머신러닝 코드</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># from sklearn.tree import Class~~~~ 코드가 없이 바로 xgb.train 으로 간다</span></span><br><span class=\"line\">params = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;max_depth&#x27;</span> : <span class=\"number\">3</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;n_estimators&#x27;</span> : <span class=\"number\">100</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;eta&#x27;</span> : <span class=\"number\">0.1</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;objective&#x27;</span> : <span class=\"string\">&#x27;binary:logistic&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">num_rounds = <span class=\"number\">400</span>   <span class=\"comment\"># 내가 얘를 400번 돌리겠다</span></span><br><span class=\"line\"></span><br><span class=\"line\">w_list = [(dtrain, <span class=\"string\">&#x27;train&#x27;</span>), (dtest, <span class=\"string\">&#x27;test&#x27;</span>)]</span><br><span class=\"line\">xgb_ml = xgb.train(params = params, </span><br><span class=\"line\">                   dtrain = dtrain, </span><br><span class=\"line\">                   num_boost_round = <span class=\"number\">400</span>,</span><br><span class=\"line\">                   early_stopping_rounds = <span class=\"number\">100</span>,    <span class=\"comment\"># 의미 없이 돌리지말고 100번만 돌리겠다</span></span><br><span class=\"line\">                   evals = w_list)  <span class=\"comment\"># dtrain = X_train 쓰면 에러난다. 변환을 해줘야 됨</span></span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 평가</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> accuracy_score</span><br><span class=\"line\">pred_probs = xgb_ml.predict(dtest)</span><br><span class=\"line\">y_pred = [<span class=\"number\">1</span> <span class=\"keyword\">if</span> x &gt; <span class=\"number\">0.5</span> <span class=\"keyword\">else</span> <span class=\"number\">0</span> <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> pred_probs]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 예측 라벨과 실제 라벨 사이의 정확도 측정</span></span><br><span class=\"line\">accuracy_score(y_pred, y_test)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>0.6865671641791045\n</code></pre>\n<h3 id=\"Scikit-Learn-API-방식\"><a href=\"#Scikit-Learn-API-방식\" class=\"headerlink\" title=\"Scikit-Learn API 방식\"></a>Scikit-Learn API 방식</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> DecisionTreeClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> xgboost <span class=\"keyword\">import</span> XGBClassifier <span class=\"comment\"># &lt;--- 이 코드가 보이면 Scikit-Learn API 방식을 사용했다</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># dt = DecisionTreeClassifier()</span></span><br><span class=\"line\">xgb_model = XGBClassifier(objective = <span class=\"string\">&#x27;binary:logistic&#x27;</span>, </span><br><span class=\"line\">                          n_estimators=<span class=\"number\">100</span>, </span><br><span class=\"line\">                          max_depth=<span class=\"number\">3</span>, </span><br><span class=\"line\">                          learning_rate = <span class=\"number\">0.1</span>, </span><br><span class=\"line\">                          num_rounds = <span class=\"number\">400</span>,</span><br><span class=\"line\">                          random_state=<span class=\"number\">42</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">w_list = [(X_train, y_train), (X_test, y_test)]</span><br><span class=\"line\"></span><br><span class=\"line\">xgb_model.fit(X_train, y_train, eval_set = w_list, eval_metric=<span class=\"string\">&#x27;error&#x27;</span>, verbose=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">y_probas = xgb_model.predict_proba(X_test)</span><br><span class=\"line\">y_pred = [<span class=\"number\">1</span> <span class=\"keyword\">if</span> x &gt; <span class=\"number\">0.5</span> <span class=\"keyword\">else</span> <span class=\"number\">0</span> <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> pred_probs]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 예측 라벨과 실제 라벨 사이의 정확도 측정</span></span><br><span class=\"line\">accuracy_score(y_pred, y_test)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"LightGBM-Python-Wrapper-방식\"><a href=\"#LightGBM-Python-Wrapper-방식\" class=\"headerlink\" title=\"LightGBM Python Wrapper 방식\"></a>LightGBM Python Wrapper 방식</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> lightgbm <span class=\"keyword\">as</span> lgb </span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split </span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> accuracy_score</span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># tips 데이터셋 </span></span><br><span class=\"line\">titanic = sns.load_dataset(<span class=\"string\">&#x27;titanic&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">X = titanic[[<span class=\"string\">&#x27;pclass&#x27;</span>, <span class=\"string\">&#x27;parch&#x27;</span>, <span class=\"string\">&#x27;fare&#x27;</span>]]</span><br><span class=\"line\">y = titanic[<span class=\"string\">&#x27;survived&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 훈련데이터, 테스트 데이터 분리</span></span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(X, y, stratify = y, test_size = <span class=\"number\">0.3</span>, random_state=<span class=\"number\">42</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># XGBoost 코드와 유사하다. </span></span><br><span class=\"line\">dtrain = lgb.Dataset(data = X_train, label = y_train)</span><br><span class=\"line\">dtest = lgb.Dataset(data = X_test, label = y_test)</span><br><span class=\"line\"></span><br><span class=\"line\">params = &#123;<span class=\"string\">&#x27;max_depth&#x27;</span>:<span class=\"number\">3</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;n_estimators&#x27;</span>:<span class=\"number\">100</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;learning_rate&#x27;</span>: <span class=\"number\">0.1</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;objective&#x27;</span>:<span class=\"string\">&#x27;binary&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;metric&#x27;</span> : <span class=\"string\">&#x27;binary_error&#x27;</span>, </span><br><span class=\"line\">          <span class=\"string\">&#x27;num_boost_round&#x27;</span> : <span class=\"number\">400</span>, </span><br><span class=\"line\">          <span class=\"string\">&#x27;verbose&#x27;</span> : <span class=\"number\">1</span>&#125; </span><br><span class=\"line\"></span><br><span class=\"line\">w_list = [dtrain, dtest]</span><br><span class=\"line\">lgb_ml = lgb.train(params=params, train_set = dtrain,\\</span><br><span class=\"line\">                  early_stopping_rounds=<span class=\"number\">100</span>, valid_sets= w_list)</span><br><span class=\"line\"></span><br><span class=\"line\">pred_probs = lgb_ml.predict(X_test)</span><br><span class=\"line\">y_pred=[<span class=\"number\">1</span> <span class=\"keyword\">if</span> x &gt; <span class=\"number\">0.5</span> <span class=\"keyword\">else</span> <span class=\"number\">0</span> <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> pred_probs]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 예측 라벨과 실제 라벨 사이의 정확도 측정</span></span><br><span class=\"line\">accuracy_score(y_pred, y_test)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"LightGBM-Scikit-Learn-API-방식\"><a href=\"#LightGBM-Scikit-Learn-API-방식\" class=\"headerlink\" title=\"LightGBM Scikit-Learn API 방식\"></a>LightGBM Scikit-Learn API 방식</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> lightgbm <span class=\"keyword\">import</span> LGBMClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> accuracy_score</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># model </span></span><br><span class=\"line\">w_list = [dtrain, dtest]</span><br><span class=\"line\">model = LGBMClassifier(objective = <span class=\"string\">&#x27;binary&#x27;</span>, </span><br><span class=\"line\">                       metric = <span class=\"string\">&#x27;binary_error&#x27;</span>,</span><br><span class=\"line\">                       n_estimators=<span class=\"number\">100</span>, </span><br><span class=\"line\">                       learning_rate=<span class=\"number\">0.1</span>, </span><br><span class=\"line\">                       max_depth=<span class=\"number\">3</span>, </span><br><span class=\"line\">                       num_boost_round = <span class=\"number\">400</span>,</span><br><span class=\"line\">                       random_state = <span class=\"number\">32</span>)</span><br><span class=\"line\">model.fit(X_train, </span><br><span class=\"line\">          y_train, </span><br><span class=\"line\">          eval_set = [(X_train, y_train), (X_test, y_test)], </span><br><span class=\"line\">          verbose=<span class=\"number\">1</span>,</span><br><span class=\"line\">          early_stopping_rounds = <span class=\"number\">100</span>)</span><br><span class=\"line\">y_probas = model.predict_proba(X_test) </span><br><span class=\"line\">y_pred=[<span class=\"number\">1</span> <span class=\"keyword\">if</span> x &gt; <span class=\"number\">0.5</span> <span class=\"keyword\">else</span> <span class=\"number\">0</span> <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> y_probas[:, <span class=\"number\">1</span>]] <span class=\"comment\"># 예측 라벨(0과 1로 예측)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 예측 라벨과 실제 라벨 사이의 정확도 측정</span></span><br><span class=\"line\">accuracy_score(y_pred, y_test)</span><br></pre></td></tr></table></figure>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/07/04/XGBoost_&_LightGBM/image.png","excerpt":"<p>XGBoost &amp; LightGBM 방식 구별</p>","more":"<p>XGBoost &amp; LightGBM 방식 구별</p>\n<!-- excerpt -->\n\n<h2 id=\"XGBoost-amp-LightGBM-2016-2017\"><a href=\"#XGBoost-amp-LightGBM-2016-2017\" class=\"headerlink\" title=\"XGBoost &amp; LightGBM (2016 ~ 2017)\"></a>XGBoost &amp; LightGBM (2016 ~ 2017)</h2><ul>\n<li>전통적인 머신러닝 알고리즘의 융합<ul>\n<li>선형회귀 릿지 라쏘, 과적합 방지 위한 규제</li>\n<li>결정 트리의 핵심적인 알고리즘</li>\n<li>경사 하강법</li>\n<li>부스팅 기법</li>\n</ul>\n</li>\n<li>문제점 : 파라미터의 개수가 너무 많음</li>\n<li>근데 왜 많이 쓰느냐<ul>\n<li>모델 학습 속도</li>\n<li>성능</li>\n<li>가장 좋은 모델이란, 학습속도 + 성능 (지금까지 나온 알고리즘 보다)이 좋은 것</li>\n</ul>\n</li>\n<li>개발자로 성공하고 싶다?</li>\n<li>Python으로 시작 하지만<ul>\n<li>JAVA, C, C++ 을 배워야 함</li>\n<li>이 알고리즘들도 C, C++ 로 만들었음</li>\n</ul>\n</li>\n<li>큰 회사들의 개발<ul>\n<li><ol>\n<li>우리가 자체적으로 배포를 해보자 –&gt; Python Wrapper API</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>파이썬 머신러닝 &#x3D; Scikit-Learn 이 돼버림 –&gt; Scikit-Learn에서 쉽게 쓸 수 있도록 개발하자</li>\n</ol>\n</li>\n</ul>\n</li>\n<li>시장성은 Scikit-Learn 이 지배</li>\n<li>방식구분을 잘 해야됨<ul>\n<li>왜? 방식마다 지원하거나 지원 안하는 코드가 다 다름</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Python-Wrapper-방식\"><a href=\"#Python-Wrapper-방식\" class=\"headerlink\" title=\"Python Wrapper 방식\"></a>Python Wrapper 방식</h3><ul>\n<li>X_train, y_train</li>\n<li>각 모듈에 맞도록 행렬을 재변환 해야 함.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> xgboost <span class=\"keyword\">as</span> xgb </span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 데이터 분리</span></span><br><span class=\"line\">titanic = sns.load_dataset(<span class=\"string\">&#x27;titanic&#x27;</span>)</span><br><span class=\"line\">titanic.info()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># X, 독립변수, y 종속변수</span></span><br><span class=\"line\">X = titanic[[<span class=\"string\">&#x27;pclass&#x27;</span>, <span class=\"string\">&#x27;parch&#x27;</span>, <span class=\"string\">&#x27;fare&#x27;</span>]]</span><br><span class=\"line\">y = titanic[<span class=\"string\">&#x27;survived&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 훈련데이터, 테스트 데이터 분리</span></span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(X, </span><br><span class=\"line\">                                                    y, </span><br><span class=\"line\">                                                    stratify = y, </span><br><span class=\"line\">                                                    test_size = <span class=\"number\">0.3</span>, </span><br><span class=\"line\">                                                    random_state=<span class=\"number\">42</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">X_train.shape, X_test.shape, y_train.shape, y_test.shape</span><br></pre></td></tr></table></figure>\n\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 891 entries, 0 to 890\nData columns (total 15 columns):\n #   Column       Non-Null Count  Dtype   \n---  ------       --------------  -----   \n 0   survived     891 non-null    int64   \n 1   pclass       891 non-null    int64   \n 2   sex          891 non-null    object  \n 3   age          714 non-null    float64 \n 4   sibsp        891 non-null    int64   \n 5   parch        891 non-null    int64   \n 6   fare         891 non-null    float64 \n 7   embarked     889 non-null    object  \n 8   class        891 non-null    category\n 9   who          891 non-null    object  \n 10  adult_male   891 non-null    bool    \n 11  deck         203 non-null    category\n 12  embark_town  889 non-null    object  \n 13  alive        891 non-null    object  \n 14  alone        891 non-null    bool    \ndtypes: bool(2), category(2), float64(2), int64(4), object(5)\nmemory usage: 80.7+ KB\n\n\n\n\n\n((623, 3), (268, 3), (623,), (268,))\n</code></pre>\n<ul>\n<li>여기가 핵심</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dtrain = xgb.DMatrix(data = X_train, label = y_train)</span><br><span class=\"line\">dtest = xgb.DMatrix(data = X_test, label = y_test)</span><br><span class=\"line\"><span class=\"comment\"># 이 코드 형태를 보면 &#x27;Python Wrapper API 형태로 코드를 짰구나.&#x27; 하고 알아야 한다.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dtrain)</span><br></pre></td></tr></table></figure>\n\n<pre><code>&lt;xgboost.core.DMatrix object at 0x7f3dfa354610&gt;\n</code></pre>\n<ul>\n<li>머신러닝 코드</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># from sklearn.tree import Class~~~~ 코드가 없이 바로 xgb.train 으로 간다</span></span><br><span class=\"line\">params = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;max_depth&#x27;</span> : <span class=\"number\">3</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;n_estimators&#x27;</span> : <span class=\"number\">100</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;eta&#x27;</span> : <span class=\"number\">0.1</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;objective&#x27;</span> : <span class=\"string\">&#x27;binary:logistic&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">num_rounds = <span class=\"number\">400</span>   <span class=\"comment\"># 내가 얘를 400번 돌리겠다</span></span><br><span class=\"line\"></span><br><span class=\"line\">w_list = [(dtrain, <span class=\"string\">&#x27;train&#x27;</span>), (dtest, <span class=\"string\">&#x27;test&#x27;</span>)]</span><br><span class=\"line\">xgb_ml = xgb.train(params = params, </span><br><span class=\"line\">                   dtrain = dtrain, </span><br><span class=\"line\">                   num_boost_round = <span class=\"number\">400</span>,</span><br><span class=\"line\">                   early_stopping_rounds = <span class=\"number\">100</span>,    <span class=\"comment\"># 의미 없이 돌리지말고 100번만 돌리겠다</span></span><br><span class=\"line\">                   evals = w_list)  <span class=\"comment\"># dtrain = X_train 쓰면 에러난다. 변환을 해줘야 됨</span></span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 평가</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> accuracy_score</span><br><span class=\"line\">pred_probs = xgb_ml.predict(dtest)</span><br><span class=\"line\">y_pred = [<span class=\"number\">1</span> <span class=\"keyword\">if</span> x &gt; <span class=\"number\">0.5</span> <span class=\"keyword\">else</span> <span class=\"number\">0</span> <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> pred_probs]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 예측 라벨과 실제 라벨 사이의 정확도 측정</span></span><br><span class=\"line\">accuracy_score(y_pred, y_test)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>0.6865671641791045\n</code></pre>\n<h3 id=\"Scikit-Learn-API-방식\"><a href=\"#Scikit-Learn-API-방식\" class=\"headerlink\" title=\"Scikit-Learn API 방식\"></a>Scikit-Learn API 방식</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> DecisionTreeClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> xgboost <span class=\"keyword\">import</span> XGBClassifier <span class=\"comment\"># &lt;--- 이 코드가 보이면 Scikit-Learn API 방식을 사용했다</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># dt = DecisionTreeClassifier()</span></span><br><span class=\"line\">xgb_model = XGBClassifier(objective = <span class=\"string\">&#x27;binary:logistic&#x27;</span>, </span><br><span class=\"line\">                          n_estimators=<span class=\"number\">100</span>, </span><br><span class=\"line\">                          max_depth=<span class=\"number\">3</span>, </span><br><span class=\"line\">                          learning_rate = <span class=\"number\">0.1</span>, </span><br><span class=\"line\">                          num_rounds = <span class=\"number\">400</span>,</span><br><span class=\"line\">                          random_state=<span class=\"number\">42</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">w_list = [(X_train, y_train), (X_test, y_test)]</span><br><span class=\"line\"></span><br><span class=\"line\">xgb_model.fit(X_train, y_train, eval_set = w_list, eval_metric=<span class=\"string\">&#x27;error&#x27;</span>, verbose=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">y_probas = xgb_model.predict_proba(X_test)</span><br><span class=\"line\">y_pred = [<span class=\"number\">1</span> <span class=\"keyword\">if</span> x &gt; <span class=\"number\">0.5</span> <span class=\"keyword\">else</span> <span class=\"number\">0</span> <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> pred_probs]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 예측 라벨과 실제 라벨 사이의 정확도 측정</span></span><br><span class=\"line\">accuracy_score(y_pred, y_test)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"LightGBM-Python-Wrapper-방식\"><a href=\"#LightGBM-Python-Wrapper-방식\" class=\"headerlink\" title=\"LightGBM Python Wrapper 방식\"></a>LightGBM Python Wrapper 방식</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> lightgbm <span class=\"keyword\">as</span> lgb </span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split </span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> accuracy_score</span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># tips 데이터셋 </span></span><br><span class=\"line\">titanic = sns.load_dataset(<span class=\"string\">&#x27;titanic&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">X = titanic[[<span class=\"string\">&#x27;pclass&#x27;</span>, <span class=\"string\">&#x27;parch&#x27;</span>, <span class=\"string\">&#x27;fare&#x27;</span>]]</span><br><span class=\"line\">y = titanic[<span class=\"string\">&#x27;survived&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 훈련데이터, 테스트 데이터 분리</span></span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(X, y, stratify = y, test_size = <span class=\"number\">0.3</span>, random_state=<span class=\"number\">42</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># XGBoost 코드와 유사하다. </span></span><br><span class=\"line\">dtrain = lgb.Dataset(data = X_train, label = y_train)</span><br><span class=\"line\">dtest = lgb.Dataset(data = X_test, label = y_test)</span><br><span class=\"line\"></span><br><span class=\"line\">params = &#123;<span class=\"string\">&#x27;max_depth&#x27;</span>:<span class=\"number\">3</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;n_estimators&#x27;</span>:<span class=\"number\">100</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;learning_rate&#x27;</span>: <span class=\"number\">0.1</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;objective&#x27;</span>:<span class=\"string\">&#x27;binary&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;metric&#x27;</span> : <span class=\"string\">&#x27;binary_error&#x27;</span>, </span><br><span class=\"line\">          <span class=\"string\">&#x27;num_boost_round&#x27;</span> : <span class=\"number\">400</span>, </span><br><span class=\"line\">          <span class=\"string\">&#x27;verbose&#x27;</span> : <span class=\"number\">1</span>&#125; </span><br><span class=\"line\"></span><br><span class=\"line\">w_list = [dtrain, dtest]</span><br><span class=\"line\">lgb_ml = lgb.train(params=params, train_set = dtrain,\\</span><br><span class=\"line\">                  early_stopping_rounds=<span class=\"number\">100</span>, valid_sets= w_list)</span><br><span class=\"line\"></span><br><span class=\"line\">pred_probs = lgb_ml.predict(X_test)</span><br><span class=\"line\">y_pred=[<span class=\"number\">1</span> <span class=\"keyword\">if</span> x &gt; <span class=\"number\">0.5</span> <span class=\"keyword\">else</span> <span class=\"number\">0</span> <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> pred_probs]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 예측 라벨과 실제 라벨 사이의 정확도 측정</span></span><br><span class=\"line\">accuracy_score(y_pred, y_test)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"LightGBM-Scikit-Learn-API-방식\"><a href=\"#LightGBM-Scikit-Learn-API-방식\" class=\"headerlink\" title=\"LightGBM Scikit-Learn API 방식\"></a>LightGBM Scikit-Learn API 방식</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> lightgbm <span class=\"keyword\">import</span> LGBMClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> accuracy_score</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># model </span></span><br><span class=\"line\">w_list = [dtrain, dtest]</span><br><span class=\"line\">model = LGBMClassifier(objective = <span class=\"string\">&#x27;binary&#x27;</span>, </span><br><span class=\"line\">                       metric = <span class=\"string\">&#x27;binary_error&#x27;</span>,</span><br><span class=\"line\">                       n_estimators=<span class=\"number\">100</span>, </span><br><span class=\"line\">                       learning_rate=<span class=\"number\">0.1</span>, </span><br><span class=\"line\">                       max_depth=<span class=\"number\">3</span>, </span><br><span class=\"line\">                       num_boost_round = <span class=\"number\">400</span>,</span><br><span class=\"line\">                       random_state = <span class=\"number\">32</span>)</span><br><span class=\"line\">model.fit(X_train, </span><br><span class=\"line\">          y_train, </span><br><span class=\"line\">          eval_set = [(X_train, y_train), (X_test, y_test)], </span><br><span class=\"line\">          verbose=<span class=\"number\">1</span>,</span><br><span class=\"line\">          early_stopping_rounds = <span class=\"number\">100</span>)</span><br><span class=\"line\">y_probas = model.predict_proba(X_test) </span><br><span class=\"line\">y_pred=[<span class=\"number\">1</span> <span class=\"keyword\">if</span> x &gt; <span class=\"number\">0.5</span> <span class=\"keyword\">else</span> <span class=\"number\">0</span> <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> y_probas[:, <span class=\"number\">1</span>]] <span class=\"comment\"># 예측 라벨(0과 1로 예측)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 예측 라벨과 실제 라벨 사이의 정확도 측정</span></span><br><span class=\"line\">accuracy_score(y_pred, y_test)</span><br></pre></td></tr></table></figure>\n"},{"title":"Day-1 Visualization","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"thumbnailImage":"R_logo.jpg","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-06-17T00:00:00.000Z","_content":"\nggplot2 시각화\n<!-- excerpt -->\n\n## ggplot2 시각화\n- 다음과 같이 시각화를 작성한다. \n\n\n```r\nlibrary(ggplot2)\nggplot(data = iris, aes(x = Sepal.Length, \n                        y = Sepal.Width)) + \n  geom_point()\n```\n\n![](/images/rmd_0620/unnamed-chunk-2-1.png)<!-- -->\n","source":"_posts/day0617.md","raw":"---\ntitle: \"Day-1 Visualization\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: R studio\nclearReading: true\nthumbnailImage: R_logo.jpg\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-06-17'\n---\n\nggplot2 시각화\n<!-- excerpt -->\n\n## ggplot2 시각화\n- 다음과 같이 시각화를 작성한다. \n\n\n```r\nlibrary(ggplot2)\nggplot(data = iris, aes(x = Sepal.Length, \n                        y = Sepal.Width)) + \n  geom_point()\n```\n\n![](/images/rmd_0620/unnamed-chunk-2-1.png)<!-- -->\n","slug":"day0617","published":1,"updated":"2022-07-10T15:30:52.654Z","_id":"cl5fcok7m0009jku08i7ia4ml","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n<h2 id=\"ggplot2-시각화\"><a href=\"#ggplot2-시각화\" class=\"headerlink\" title=\"ggplot2 시각화\"></a>ggplot2 시각화</h2><ul>\n<li>다음과 같이 시각화를 작성한다.</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>ggplot2<span class=\"punctuation\">)</span></span><br><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data <span class=\"operator\">=</span> iris<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> Sepal.Length<span class=\"punctuation\">,</span> </span><br><span class=\"line\">                        y <span class=\"operator\">=</span> Sepal.Width<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> </span><br><span class=\"line\">  geom_point<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/rmd_0620/unnamed-chunk-2-1.png\"><!-- --></p>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/06/17/day0617/R_logo.jpg","excerpt":"<p>ggplot2 시각화</p>","more":"<p>ggplot2 시각화</p>\n<!-- excerpt -->\n\n<h2 id=\"ggplot2-시각화\"><a href=\"#ggplot2-시각화\" class=\"headerlink\" title=\"ggplot2 시각화\"></a>ggplot2 시각화</h2><ul>\n<li>다음과 같이 시각화를 작성한다.</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>ggplot2<span class=\"punctuation\">)</span></span><br><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data <span class=\"operator\">=</span> iris<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> Sepal.Length<span class=\"punctuation\">,</span> </span><br><span class=\"line\">                        y <span class=\"operator\">=</span> Sepal.Width<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> </span><br><span class=\"line\">  geom_point<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/rmd_0620/unnamed-chunk-2-1.png\"><!-- --></p>\n"},{"title":"일정","output":{"html_document":{"toc":true,"toc_float":true,"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"thumbnailImage":"night.jpg","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-06-23T00:00:00.000Z","_content":"\n\n인공지능 프로그래밍 7월 4일 ~ 7월 19일(4)  \n 7월 12일 ~ 19일 (캐글 대회, 개인별 실습)  \n-- 분석가 희망  \n-- 사이드 프로젝트 (팀 구성) / 8월 10일경 즈음 마무리  \n(제안) 8월 11일 이후 ~ 9월 2일 챗봇 프로젝트  \n(기존) 8월 19일 5교시 ~ 9월 2일 4교시  \n   + 챗봇 & 발표자료 ( --> 면접자료)  \n-- 시스템 구축 / 플랫폼 개발 (강의 일정 일부 단축)  \n\n![](/images/curriculum/img.png)\n\n<!-- more -->","source":"_posts/curriculum.md","raw":"---\ntitle: \"일정\"  \noutput:  \n  html_document:  \n    toc: true  \n    toc_float: true  \n    keep_md: true  \ndisqusIdentifier: fdsF34ff34\ncategories: Python\nclearReading: true\nthumbnailImage: night.jpg\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-06-23 09:00:00' \n---\n\n\n인공지능 프로그래밍 7월 4일 ~ 7월 19일(4)  \n 7월 12일 ~ 19일 (캐글 대회, 개인별 실습)  \n-- 분석가 희망  \n-- 사이드 프로젝트 (팀 구성) / 8월 10일경 즈음 마무리  \n(제안) 8월 11일 이후 ~ 9월 2일 챗봇 프로젝트  \n(기존) 8월 19일 5교시 ~ 9월 2일 4교시  \n   + 챗봇 & 발표자료 ( --> 면접자료)  \n-- 시스템 구축 / 플랫폼 개발 (강의 일정 일부 단축)  \n\n![](/images/curriculum/img.png)\n\n<!-- more -->","slug":"curriculum","published":1,"updated":"2022-08-02T00:21:14.355Z","_id":"cl5fcok7m000ajku023r4gfv0","comments":1,"layout":"post","photos":[],"link":"","content":"<p>인공지능 프로그래밍 7월 4일 ~ 7월 19일(4)<br> 7월 12일 ~ 19일 (캐글 대회, 개인별 실습)<br>– 분석가 희망<br>– 사이드 프로젝트 (팀 구성) &#x2F; 8월 10일경 즈음 마무리<br>(제안) 8월 11일 이후 ~ 9월 2일 챗봇 프로젝트<br>(기존) 8월 19일 5교시 ~ 9월 2일 4교시  </p>\n<ul>\n<li>챗봇 &amp; 발표자료 ( –&gt; 면접자료)<br>– 시스템 구축 &#x2F; 플랫폼 개발 (강의 일정 일부 단축)</li>\n</ul>\n<p><img src=\"/images/curriculum/img.png\"></p>\n<span id=\"more\"></span>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/06/23/curriculum/night.jpg","excerpt":"<p>인공지능 프로그래밍 7월 4일 ~ 7월 19일(4)<br> 7월 12일 ~ 19일 (캐글 대회, 개인별 실습)<br>– 분석가 희망<br>– 사이드 프로젝트 (팀 구성) &#x2F; 8월 10일경 즈음 마무리<br>(제안) 8월 11일 이후 ~ 9월 2일 챗봇 프로젝트<br>(기존) 8월 19일 5교시 ~ 9월 2일 4교시  </p>\n<ul>\n<li>챗봇 &amp; 발표자료 ( –&gt; 면접자료)<br>– 시스템 구축 &#x2F; 플랫폼 개발 (강의 일정 일부 단축)</li>\n</ul>\n<p><img src=\"/images/curriculum/img.png\"></p>","more":""},{"title":"5장","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"thumbnailImage":"R_logo.jpg","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-06-21T00:00:00.000Z","_content":"\n각종 연산자 및 평균, 분산, 표준편차\n<!-- excerpt -->\n\n# 5장\n### 산술연산자\n\n```r\n# \"+\" : 덧셈\n# \"-\" : 뺄셈\n# \"*\" : 곱셈\n# \"/\" : 나누기\n# \"%/%\" : 몫\n# \"%%\" : 나머지\n# \"^\" : 제곱\n```\n\n\n\n- 숫자형, 정수형 벡터에도 연산이 가능하다\n\n```r\na<-c(1,3,4)\na*3\n```\n\n```\n## [1]  3  9 12\n```\n\n```r\na^2\n```\n\n```\n## [1]  1  9 16\n```\n\n### 비교연산자\n\n```r\n# == : 같다\n# != : 다르다\n# > : 크다\n# >= : 크거나 같다\n# < : 작다\n# <= :작거나 같다\n```\n\n- a:z : a부터 z까지를 의미\n- seq(a,z,by=2) : a부터 z까지 2씩 증가\n\n```r\nseq(1,9,by=2)\n```\n\n```\n## [1] 1 3 5 7 9\n```\n- 3씩 감소\n\n```r\nseq(9,1,by=-3)\n```\n\n```\n## [1] 9 6 3\n```\n\n- rep(x,each=2,times=3) : x를 각각 2번 반복하고, 그  결과를 3번 반복출력\n\n```r\nrep(c(1,2),each=2,times=2)\n```\n\n```\n## [1] 1 1 2 2 1 1 2 2\n```\n\n### 논리 연산자\n\n```r\n# | : (엔키 위에 원화표시)합집합 \"or\"의 개념\n# & : 교집합 \"and\"의 개념\n# ! : 제외할 때, \"not\"의 개념\n```\n\n\n\n### 데이터세트 구조 함수\n- head(,2) : 앞에서 2개 행만 출력\n\n```r\nhead(iris,2)\n```\n\n```\n##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n## 1          5.1         3.5          1.4         0.2  setosa\n## 2          4.9         3.0          1.4         0.2  setosa\n```\n- tail(,2) : 뒤에서 2개 행만 출력\n\n```r\ntail(iris,2)\n```\n\n```\n##     Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\n## 149          6.2         3.4          5.4         2.3 virginica\n## 150          5.9         3.0          5.1         1.8 virginica\n```\n- str() : 데이터 전체 구조 및 유형 출력\n\n```r\nstr(iris)\n```\n\n```\n## 'data.frame':\t150 obs. of  5 variables:\n##  $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n##  $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...\n##  $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...\n##  $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...\n##  $ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ...\n```\n- View() : 엑셀 형식으로 출력\n\n```r\nView(iris)\n```\n- dim() : 행과 열의 갯수 출력\n\n```r\ndim(iris)\n```\n\n```\n## [1] 150   5\n```\n- length() : 열의 개수 출력\n\n```r\nlength(iris)\n```\n\n```\n## [1] 5\n```\n- class() : 유형 출력\n\n```r\nclass(iris)\n```\n\n```\n## [1] \"data.frame\"\n```\n- ls() : 벡터 이름을 출력\n\n```r\nls(iris)\n```\n\n```\n## [1] \"Petal.Length\" \"Petal.Width\"  \"Sepal.Length\" \"Sepal.Width\"  \"Species\"\n```\n\n# 데이터 불러오기\n# 경로 설정이 매우 중요\n- getwd() 현재 경로 설정된 곳 보기\n- setwd(\"C:/\") 이 경로로 설정\n\n\n# p.91\n\n- stringsAsFactors -> 범주형 벡터로 바꿀것인가?\n\n```r\nmpg1<- read.csv(\"mpg1.csv\", stringsAsFactors=F)  #문자형 벡터로 출력, T이면 범주형 벡터로 출력\nstr(mpg1)\n```\n\n```\n## 'data.frame':\t234 obs. of  5 variables:\n##  $ manufacturer: chr  \"audi\" \"audi\" \"audi\" \"audi\" ...\n##  $ trans       : chr  \"auto\" \"manual\" \"manual\" \"auto\" ...\n##  $ drv         : chr  \"f\" \"f\" \"f\" \"f\" ...\n##  $ cty         : int  18 21 20 21 16 18 18 18 16 20 ...\n##  $ hwy         : int  29 29 31 30 26 26 27 26 25 28 ...\n```\n\n\n## 평균\n-  평균\n\n```r\nmean(mtcars$mpg)   #mtcars$mpg의 평균\n```\n\n```\n## [1] 20.09062\n```\n- 분산\n\n```r\nvar(mtcars$mpg)   #mtcars$mpg의 분산\n```\n\n```\n## [1] 36.3241\n```\n- 표준편차\n\n```r\nsd(mtcars$mpg)   #mtcars$mpg의 표준편차\n```\n\n```\n## [1] 6.026948\n```\n\n\n- 수리통계 --> 증명(대학원 가라)\n- 일반인 / 비전공자 --> 활용 / 의미 정도 파악\n\n\n- summary() : 데이터를 요약해서 보여주는 함수\n\n```r\nsummary(iris)   #iris 데이터의 5개 범주별 통계량\n```\n\n```\n##   Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   \n##  Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100  \n##  1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300  \n##  Median :5.800   Median :3.000   Median :4.350   Median :1.300  \n##  Mean   :5.843   Mean   :3.057   Mean   :3.758   Mean   :1.199  \n##  3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800  \n##  Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500  \n##        Species  \n##  setosa    :50  \n##  versicolor:50  \n##  virginica :50  \n##                 \n##                 \n## \n```\n- iris 데이터의 Sepal.Length 항목의 통계량\n\n```r\nsummary(iris$Sepal.Length)\n```\n\n```\n##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n##   4.300   5.100   5.800   5.843   6.400   7.900\n```\n\n\n### 범주별 빈도 분석\n\n- trans 항목의 범주별 '빈도' 분석\n\n```r\ntable(mpg1$trans)\n```\n\n```\n## \n##   auto manual \n##    157     77\n```\n- manufacturer 항목의 범주별 '빈도' 분석\n\n```r\ntable(mpg1$manufacturer)\n```\n\n```\n## \n##       audi  chevrolet      dodge       ford      honda    hyundai       jeep \n##         18         19         37         25          9         14          8 \n## land rover    lincoln    mercury     nissan    pontiac     subaru     toyota \n##          4          3          4         13          5         14         34 \n## volkswagen \n##         27\n```\n\n- trans와 manufacturer 항목을 합쳐 '빈도' 만들기\n\n```r\ntable(mpg1$trans, mpg1$manufacturer)\n```\n\n```\n##         \n##          audi chevrolet dodge ford honda hyundai jeep land rover lincoln\n##   auto     11        16    30   17     4       7    8          4       3\n##   manual    7         3     7    8     5       7    0          0       0\n##         \n##          mercury nissan pontiac subaru toyota volkswagen\n##   auto         4      8       5      7     20         13\n##   manual       0      5       0      7     14         14\n```\n\n### 빈도의 비율 구하기\n- trans 항목의 '비율'구하기(a라는 변수에 입력해야함)\n\n```r\na <- table(mpg1$trans)\nprop.table(a)\n```\n\n```\n## \n##      auto    manual \n## 0.6709402 0.3290598\n```\n- 백분율로 나타내고 싶다면 100을 곱해준다\n\n```r\nprop.table(a)*100\n```\n\n```\n## \n##     auto   manual \n## 67.09402 32.90598\n```\n- trans와 drv 항목을 합쳐 '비율' 구하기\n\n```r\nb <- table(mpg1$trans, mpg1$drv)   \nprop.table(b)\n```\n\n```\n##         \n##                   4          f          r\n##   auto   0.32051282 0.27777778 0.07264957\n##   manual 0.11965812 0.17521368 0.03418803\n```\n \n\n```r\nprop.table(table(mpg1$manufacturer))   #함수 지정이 귀찮다면 이렇게 바로 써도 된다.\n```\n\n```\n## \n##       audi  chevrolet      dodge       ford      honda    hyundai       jeep \n## 0.07692308 0.08119658 0.15811966 0.10683761 0.03846154 0.05982906 0.03418803 \n## land rover    lincoln    mercury     nissan    pontiac     subaru     toyota \n## 0.01709402 0.01282051 0.01709402 0.05555556 0.02136752 0.05982906 0.14529915 \n## volkswagen \n## 0.11538462\n```\n\n```r\n# prop.table(mpg1$manufacturer) <-- 에러\n# table안에table 안 넣으면 에러\n```\n\n### 행과 열의 비율 형식 맞춘다\n- 가로 합을 1로 두고 계산한 비율\n\n```r\nprop.table(b, margin = 1)\n```\n\n```\n##         \n##                  4         f         r\n##   auto   0.4777070 0.4140127 0.1082803\n##   manual 0.3636364 0.5324675 0.1038961\n```\n- 세로 합을 1로 두고 계산한 비율\n\n```r\nprop.table(b, margin = 2)\n```\n\n```\n##         \n##                  4         f         r\n##   auto   0.7281553 0.6132075 0.6800000\n##   manual 0.2718447 0.3867925 0.3200000\n```\n\n#### 소수점 아래 자리 지정\n- round는 반올림\n\n```r\nround(0.32123141,2)  #(,뒤는 자릿수)\n```\n\n```\n## [1] 0.32\n```\n\n```r\nround(prop.table(table(mpg1$trans)),3) #이렇게 써도 가능\n```\n\n```\n## \n##   auto manual \n##  0.671  0.329\n```\n","source":"_posts/day0621.md","raw":"---\ntitle: \"5장\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: R studio\nclearReading: true\nthumbnailImage: R_logo.jpg\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-06-21 09:00:00'\n---\n\n각종 연산자 및 평균, 분산, 표준편차\n<!-- excerpt -->\n\n# 5장\n### 산술연산자\n\n```r\n# \"+\" : 덧셈\n# \"-\" : 뺄셈\n# \"*\" : 곱셈\n# \"/\" : 나누기\n# \"%/%\" : 몫\n# \"%%\" : 나머지\n# \"^\" : 제곱\n```\n\n\n\n- 숫자형, 정수형 벡터에도 연산이 가능하다\n\n```r\na<-c(1,3,4)\na*3\n```\n\n```\n## [1]  3  9 12\n```\n\n```r\na^2\n```\n\n```\n## [1]  1  9 16\n```\n\n### 비교연산자\n\n```r\n# == : 같다\n# != : 다르다\n# > : 크다\n# >= : 크거나 같다\n# < : 작다\n# <= :작거나 같다\n```\n\n- a:z : a부터 z까지를 의미\n- seq(a,z,by=2) : a부터 z까지 2씩 증가\n\n```r\nseq(1,9,by=2)\n```\n\n```\n## [1] 1 3 5 7 9\n```\n- 3씩 감소\n\n```r\nseq(9,1,by=-3)\n```\n\n```\n## [1] 9 6 3\n```\n\n- rep(x,each=2,times=3) : x를 각각 2번 반복하고, 그  결과를 3번 반복출력\n\n```r\nrep(c(1,2),each=2,times=2)\n```\n\n```\n## [1] 1 1 2 2 1 1 2 2\n```\n\n### 논리 연산자\n\n```r\n# | : (엔키 위에 원화표시)합집합 \"or\"의 개념\n# & : 교집합 \"and\"의 개념\n# ! : 제외할 때, \"not\"의 개념\n```\n\n\n\n### 데이터세트 구조 함수\n- head(,2) : 앞에서 2개 행만 출력\n\n```r\nhead(iris,2)\n```\n\n```\n##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n## 1          5.1         3.5          1.4         0.2  setosa\n## 2          4.9         3.0          1.4         0.2  setosa\n```\n- tail(,2) : 뒤에서 2개 행만 출력\n\n```r\ntail(iris,2)\n```\n\n```\n##     Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\n## 149          6.2         3.4          5.4         2.3 virginica\n## 150          5.9         3.0          5.1         1.8 virginica\n```\n- str() : 데이터 전체 구조 및 유형 출력\n\n```r\nstr(iris)\n```\n\n```\n## 'data.frame':\t150 obs. of  5 variables:\n##  $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n##  $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...\n##  $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...\n##  $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...\n##  $ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ...\n```\n- View() : 엑셀 형식으로 출력\n\n```r\nView(iris)\n```\n- dim() : 행과 열의 갯수 출력\n\n```r\ndim(iris)\n```\n\n```\n## [1] 150   5\n```\n- length() : 열의 개수 출력\n\n```r\nlength(iris)\n```\n\n```\n## [1] 5\n```\n- class() : 유형 출력\n\n```r\nclass(iris)\n```\n\n```\n## [1] \"data.frame\"\n```\n- ls() : 벡터 이름을 출력\n\n```r\nls(iris)\n```\n\n```\n## [1] \"Petal.Length\" \"Petal.Width\"  \"Sepal.Length\" \"Sepal.Width\"  \"Species\"\n```\n\n# 데이터 불러오기\n# 경로 설정이 매우 중요\n- getwd() 현재 경로 설정된 곳 보기\n- setwd(\"C:/\") 이 경로로 설정\n\n\n# p.91\n\n- stringsAsFactors -> 범주형 벡터로 바꿀것인가?\n\n```r\nmpg1<- read.csv(\"mpg1.csv\", stringsAsFactors=F)  #문자형 벡터로 출력, T이면 범주형 벡터로 출력\nstr(mpg1)\n```\n\n```\n## 'data.frame':\t234 obs. of  5 variables:\n##  $ manufacturer: chr  \"audi\" \"audi\" \"audi\" \"audi\" ...\n##  $ trans       : chr  \"auto\" \"manual\" \"manual\" \"auto\" ...\n##  $ drv         : chr  \"f\" \"f\" \"f\" \"f\" ...\n##  $ cty         : int  18 21 20 21 16 18 18 18 16 20 ...\n##  $ hwy         : int  29 29 31 30 26 26 27 26 25 28 ...\n```\n\n\n## 평균\n-  평균\n\n```r\nmean(mtcars$mpg)   #mtcars$mpg의 평균\n```\n\n```\n## [1] 20.09062\n```\n- 분산\n\n```r\nvar(mtcars$mpg)   #mtcars$mpg의 분산\n```\n\n```\n## [1] 36.3241\n```\n- 표준편차\n\n```r\nsd(mtcars$mpg)   #mtcars$mpg의 표준편차\n```\n\n```\n## [1] 6.026948\n```\n\n\n- 수리통계 --> 증명(대학원 가라)\n- 일반인 / 비전공자 --> 활용 / 의미 정도 파악\n\n\n- summary() : 데이터를 요약해서 보여주는 함수\n\n```r\nsummary(iris)   #iris 데이터의 5개 범주별 통계량\n```\n\n```\n##   Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   \n##  Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100  \n##  1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300  \n##  Median :5.800   Median :3.000   Median :4.350   Median :1.300  \n##  Mean   :5.843   Mean   :3.057   Mean   :3.758   Mean   :1.199  \n##  3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800  \n##  Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500  \n##        Species  \n##  setosa    :50  \n##  versicolor:50  \n##  virginica :50  \n##                 \n##                 \n## \n```\n- iris 데이터의 Sepal.Length 항목의 통계량\n\n```r\nsummary(iris$Sepal.Length)\n```\n\n```\n##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n##   4.300   5.100   5.800   5.843   6.400   7.900\n```\n\n\n### 범주별 빈도 분석\n\n- trans 항목의 범주별 '빈도' 분석\n\n```r\ntable(mpg1$trans)\n```\n\n```\n## \n##   auto manual \n##    157     77\n```\n- manufacturer 항목의 범주별 '빈도' 분석\n\n```r\ntable(mpg1$manufacturer)\n```\n\n```\n## \n##       audi  chevrolet      dodge       ford      honda    hyundai       jeep \n##         18         19         37         25          9         14          8 \n## land rover    lincoln    mercury     nissan    pontiac     subaru     toyota \n##          4          3          4         13          5         14         34 \n## volkswagen \n##         27\n```\n\n- trans와 manufacturer 항목을 합쳐 '빈도' 만들기\n\n```r\ntable(mpg1$trans, mpg1$manufacturer)\n```\n\n```\n##         \n##          audi chevrolet dodge ford honda hyundai jeep land rover lincoln\n##   auto     11        16    30   17     4       7    8          4       3\n##   manual    7         3     7    8     5       7    0          0       0\n##         \n##          mercury nissan pontiac subaru toyota volkswagen\n##   auto         4      8       5      7     20         13\n##   manual       0      5       0      7     14         14\n```\n\n### 빈도의 비율 구하기\n- trans 항목의 '비율'구하기(a라는 변수에 입력해야함)\n\n```r\na <- table(mpg1$trans)\nprop.table(a)\n```\n\n```\n## \n##      auto    manual \n## 0.6709402 0.3290598\n```\n- 백분율로 나타내고 싶다면 100을 곱해준다\n\n```r\nprop.table(a)*100\n```\n\n```\n## \n##     auto   manual \n## 67.09402 32.90598\n```\n- trans와 drv 항목을 합쳐 '비율' 구하기\n\n```r\nb <- table(mpg1$trans, mpg1$drv)   \nprop.table(b)\n```\n\n```\n##         \n##                   4          f          r\n##   auto   0.32051282 0.27777778 0.07264957\n##   manual 0.11965812 0.17521368 0.03418803\n```\n \n\n```r\nprop.table(table(mpg1$manufacturer))   #함수 지정이 귀찮다면 이렇게 바로 써도 된다.\n```\n\n```\n## \n##       audi  chevrolet      dodge       ford      honda    hyundai       jeep \n## 0.07692308 0.08119658 0.15811966 0.10683761 0.03846154 0.05982906 0.03418803 \n## land rover    lincoln    mercury     nissan    pontiac     subaru     toyota \n## 0.01709402 0.01282051 0.01709402 0.05555556 0.02136752 0.05982906 0.14529915 \n## volkswagen \n## 0.11538462\n```\n\n```r\n# prop.table(mpg1$manufacturer) <-- 에러\n# table안에table 안 넣으면 에러\n```\n\n### 행과 열의 비율 형식 맞춘다\n- 가로 합을 1로 두고 계산한 비율\n\n```r\nprop.table(b, margin = 1)\n```\n\n```\n##         \n##                  4         f         r\n##   auto   0.4777070 0.4140127 0.1082803\n##   manual 0.3636364 0.5324675 0.1038961\n```\n- 세로 합을 1로 두고 계산한 비율\n\n```r\nprop.table(b, margin = 2)\n```\n\n```\n##         \n##                  4         f         r\n##   auto   0.7281553 0.6132075 0.6800000\n##   manual 0.2718447 0.3867925 0.3200000\n```\n\n#### 소수점 아래 자리 지정\n- round는 반올림\n\n```r\nround(0.32123141,2)  #(,뒤는 자릿수)\n```\n\n```\n## [1] 0.32\n```\n\n```r\nround(prop.table(table(mpg1$trans)),3) #이렇게 써도 가능\n```\n\n```\n## \n##   auto manual \n##  0.671  0.329\n```\n","slug":"day0621","published":1,"updated":"2022-07-10T15:30:52.651Z","_id":"cl5fcok7n000cjku04wh0fug7","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n<h1 id=\"5장\"><a href=\"#5장\" class=\"headerlink\" title=\"5장\"></a>5장</h1><h3 id=\"산술연산자\"><a href=\"#산술연산자\" class=\"headerlink\" title=\"산술연산자\"></a>산술연산자</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># &quot;+&quot; : 덧셈</span></span><br><span class=\"line\"><span class=\"comment\"># &quot;-&quot; : 뺄셈</span></span><br><span class=\"line\"><span class=\"comment\"># &quot;*&quot; : 곱셈</span></span><br><span class=\"line\"><span class=\"comment\"># &quot;/&quot; : 나누기</span></span><br><span class=\"line\"><span class=\"comment\"># &quot;%/%&quot; : 몫</span></span><br><span class=\"line\"><span class=\"comment\"># &quot;%%&quot; : 나머지</span></span><br><span class=\"line\"><span class=\"comment\"># &quot;^&quot; : 제곱</span></span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>숫자형, 정수형 벡터에도 연산이 가능하다</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a<span class=\"operator\">&lt;-</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"number\">3</span><span class=\"punctuation\">,</span><span class=\"number\">4</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">a<span class=\"operator\">*</span><span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1]  3  9 12</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a<span class=\"operator\">^</span><span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1]  1  9 16</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"비교연산자\"><a href=\"#비교연산자\" class=\"headerlink\" title=\"비교연산자\"></a>비교연산자</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># == : 같다</span></span><br><span class=\"line\"><span class=\"comment\"># != : 다르다</span></span><br><span class=\"line\"><span class=\"comment\"># &gt; : 크다</span></span><br><span class=\"line\"><span class=\"comment\"># &gt;= : 크거나 같다</span></span><br><span class=\"line\"><span class=\"comment\"># &lt; : 작다</span></span><br><span class=\"line\"><span class=\"comment\"># &lt;= :작거나 같다</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>a:z : a부터 z까지를 의미</li>\n<li>seq(a,z,by&#x3D;2) : a부터 z까지 2씩 증가</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">seq<span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"number\">9</span><span class=\"punctuation\">,</span>by<span class=\"operator\">=</span><span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 1 3 5 7 9</span><br></pre></td></tr></table></figure>\n<ul>\n<li>3씩 감소</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">seq<span class=\"punctuation\">(</span><span class=\"number\">9</span><span class=\"punctuation\">,</span><span class=\"number\">1</span><span class=\"punctuation\">,</span>by<span class=\"operator\">=</span><span class=\"operator\">-</span><span class=\"number\">3</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 9 6 3</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>rep(x,each&#x3D;2,times&#x3D;3) : x를 각각 2번 반복하고, 그  결과를 3번 반복출력</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">rep</span><span class=\"punctuation\">(</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span>each<span class=\"operator\">=</span><span class=\"number\">2</span><span class=\"punctuation\">,</span>times<span class=\"operator\">=</span><span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 1 1 2 2 1 1 2 2</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"논리-연산자\"><a href=\"#논리-연산자\" class=\"headerlink\" title=\"논리 연산자\"></a>논리 연산자</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># | : (엔키 위에 원화표시)합집합 &quot;or&quot;의 개념</span></span><br><span class=\"line\"><span class=\"comment\"># &amp; : 교집합 &quot;and&quot;의 개념</span></span><br><span class=\"line\"><span class=\"comment\"># ! : 제외할 때, &quot;not&quot;의 개념</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"데이터세트-구조-함수\"><a href=\"#데이터세트-구조-함수\" class=\"headerlink\" title=\"데이터세트 구조 함수\"></a>데이터세트 구조 함수</h3><ul>\n<li>head(,2) : 앞에서 2개 행만 출력</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">head<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species</span><br><span class=\"line\">## 1          5.1         3.5          1.4         0.2  setosa</span><br><span class=\"line\">## 2          4.9         3.0          1.4         0.2  setosa</span><br></pre></td></tr></table></figure>\n<ul>\n<li>tail(,2) : 뒤에서 2개 행만 출력</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tail<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##     Sepal.Length Sepal.Width Petal.Length Petal.Width   Species</span><br><span class=\"line\">## 149          6.2         3.4          5.4         2.3 virginica</span><br><span class=\"line\">## 150          5.9         3.0          5.1         1.8 virginica</span><br></pre></td></tr></table></figure>\n<ul>\n<li>str() : 데이터 전체 구조 및 유형 출력</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## &#x27;data.frame&#x27;:\t150 obs. of  5 variables:</span><br><span class=\"line\">##  $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...</span><br><span class=\"line\">##  $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...</span><br><span class=\"line\">##  $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...</span><br><span class=\"line\">##  $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...</span><br><span class=\"line\">##  $ Species     : Factor w/ 3 levels &quot;setosa&quot;,&quot;versicolor&quot;,..: 1 1 1 1 1 1 1 1 1 1 ...</span><br></pre></td></tr></table></figure>\n<ul>\n<li>View() : 엑셀 형식으로 출력</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">View<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>dim() : 행과 열의 갯수 출력</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">dim</span><span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 150   5</span><br></pre></td></tr></table></figure>\n<ul>\n<li>length() : 열의 개수 출력</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">length</span><span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 5</span><br></pre></td></tr></table></figure>\n<ul>\n<li>class() : 유형 출력</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">class</span><span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;data.frame&quot;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>ls() : 벡터 이름을 출력</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;Petal.Length&quot; &quot;Petal.Width&quot;  &quot;Sepal.Length&quot; &quot;Sepal.Width&quot;  &quot;Species&quot;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"데이터-불러오기\"><a href=\"#데이터-불러오기\" class=\"headerlink\" title=\"데이터 불러오기\"></a>데이터 불러오기</h1><h1 id=\"경로-설정이-매우-중요\"><a href=\"#경로-설정이-매우-중요\" class=\"headerlink\" title=\"경로 설정이 매우 중요\"></a>경로 설정이 매우 중요</h1><ul>\n<li>getwd() 현재 경로 설정된 곳 보기</li>\n<li>setwd(“C:&#x2F;“) 이 경로로 설정</li>\n</ul>\n<h1 id=\"p-91\"><a href=\"#p-91\" class=\"headerlink\" title=\"p.91\"></a>p.91</h1><ul>\n<li>stringsAsFactors -&gt; 범주형 벡터로 바꿀것인가?</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1<span class=\"operator\">&lt;-</span> read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;mpg1.csv&quot;</span><span class=\"punctuation\">,</span> stringsAsFactors<span class=\"operator\">=</span><span class=\"built_in\">F</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#문자형 벡터로 출력, T이면 범주형 벡터로 출력</span></span><br><span class=\"line\">str<span class=\"punctuation\">(</span>mpg1<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## &#x27;data.frame&#x27;:\t234 obs. of  5 variables:</span><br><span class=\"line\">##  $ manufacturer: chr  &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; ...</span><br><span class=\"line\">##  $ trans       : chr  &quot;auto&quot; &quot;manual&quot; &quot;manual&quot; &quot;auto&quot; ...</span><br><span class=\"line\">##  $ drv         : chr  &quot;f&quot; &quot;f&quot; &quot;f&quot; &quot;f&quot; ...</span><br><span class=\"line\">##  $ cty         : int  18 21 20 21 16 18 18 18 16 20 ...</span><br><span class=\"line\">##  $ hwy         : int  29 29 31 30 26 26 27 26 25 28 ...</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"평균\"><a href=\"#평균\" class=\"headerlink\" title=\"평균\"></a>평균</h2><ul>\n<li>평균</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mean<span class=\"punctuation\">(</span>mtcars<span class=\"operator\">$</span>mpg<span class=\"punctuation\">)</span>   <span class=\"comment\">#mtcars$mpg의 평균</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 20.09062</span><br></pre></td></tr></table></figure>\n<ul>\n<li>분산</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var<span class=\"punctuation\">(</span>mtcars<span class=\"operator\">$</span>mpg<span class=\"punctuation\">)</span>   <span class=\"comment\">#mtcars$mpg의 분산</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 36.3241</span><br></pre></td></tr></table></figure>\n<ul>\n<li>표준편차</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sd<span class=\"punctuation\">(</span>mtcars<span class=\"operator\">$</span>mpg<span class=\"punctuation\">)</span>   <span class=\"comment\">#mtcars$mpg의 표준편차</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 6.026948</span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li><p>수리통계 –&gt; 증명(대학원 가라)</p>\n</li>\n<li><p>일반인 &#x2F; 비전공자 –&gt; 활용 &#x2F; 의미 정도 파악</p>\n</li>\n<li><p>summary() : 데이터를 요약해서 보여주는 함수</p>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">summary<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span>   <span class=\"comment\">#iris 데이터의 5개 범주별 통계량</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   </span><br><span class=\"line\">##  Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100  </span><br><span class=\"line\">##  1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300  </span><br><span class=\"line\">##  Median :5.800   Median :3.000   Median :4.350   Median :1.300  </span><br><span class=\"line\">##  Mean   :5.843   Mean   :3.057   Mean   :3.758   Mean   :1.199  </span><br><span class=\"line\">##  3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800  </span><br><span class=\"line\">##  Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500  </span><br><span class=\"line\">##        Species  </span><br><span class=\"line\">##  setosa    :50  </span><br><span class=\"line\">##  versicolor:50  </span><br><span class=\"line\">##  virginica :50  </span><br><span class=\"line\">##                 </span><br><span class=\"line\">##                 </span><br><span class=\"line\">## </span><br></pre></td></tr></table></figure>\n<ul>\n<li>iris 데이터의 Sepal.Length 항목의 통계량</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">summary<span class=\"punctuation\">(</span>iris<span class=\"operator\">$</span>Sepal.Length<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. </span><br><span class=\"line\">##   4.300   5.100   5.800   5.843   6.400   7.900</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"범주별-빈도-분석\"><a href=\"#범주별-빈도-분석\" class=\"headerlink\" title=\"범주별 빈도 분석\"></a>범주별 빈도 분석</h3><ul>\n<li>trans 항목의 범주별 ‘빈도’ 분석</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>trans<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">##   auto manual </span><br><span class=\"line\">##    157     77</span><br></pre></td></tr></table></figure>\n<ul>\n<li>manufacturer 항목의 범주별 ‘빈도’ 분석</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>manufacturer<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">##       audi  chevrolet      dodge       ford      honda    hyundai       jeep </span><br><span class=\"line\">##         18         19         37         25          9         14          8 </span><br><span class=\"line\">## land rover    lincoln    mercury     nissan    pontiac     subaru     toyota </span><br><span class=\"line\">##          4          3          4         13          5         14         34 </span><br><span class=\"line\">## volkswagen </span><br><span class=\"line\">##         27</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>trans와 manufacturer 항목을 합쳐 ‘빈도’ 만들기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>trans<span class=\"punctuation\">,</span> mpg1<span class=\"operator\">$</span>manufacturer<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##         </span><br><span class=\"line\">##          audi chevrolet dodge ford honda hyundai jeep land rover lincoln</span><br><span class=\"line\">##   auto     11        16    30   17     4       7    8          4       3</span><br><span class=\"line\">##   manual    7         3     7    8     5       7    0          0       0</span><br><span class=\"line\">##         </span><br><span class=\"line\">##          mercury nissan pontiac subaru toyota volkswagen</span><br><span class=\"line\">##   auto         4      8       5      7     20         13</span><br><span class=\"line\">##   manual       0      5       0      7     14         14</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"빈도의-비율-구하기\"><a href=\"#빈도의-비율-구하기\" class=\"headerlink\" title=\"빈도의 비율 구하기\"></a>빈도의 비율 구하기</h3><ul>\n<li>trans 항목의 ‘비율’구하기(a라는 변수에 입력해야함)</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a <span class=\"operator\">&lt;-</span> table<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>trans<span class=\"punctuation\">)</span></span><br><span class=\"line\">prop.table<span class=\"punctuation\">(</span>a<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">##      auto    manual </span><br><span class=\"line\">## 0.6709402 0.3290598</span><br></pre></td></tr></table></figure>\n<ul>\n<li>백분율로 나타내고 싶다면 100을 곱해준다</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">prop.table<span class=\"punctuation\">(</span>a<span class=\"punctuation\">)</span><span class=\"operator\">*</span><span class=\"number\">100</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">##     auto   manual </span><br><span class=\"line\">## 67.09402 32.90598</span><br></pre></td></tr></table></figure>\n<ul>\n<li>trans와 drv 항목을 합쳐 ‘비율’ 구하기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">b <span class=\"operator\">&lt;-</span> table<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>trans<span class=\"punctuation\">,</span> mpg1<span class=\"operator\">$</span>drv<span class=\"punctuation\">)</span>   </span><br><span class=\"line\">prop.table<span class=\"punctuation\">(</span>b<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##         </span><br><span class=\"line\">##                   4          f          r</span><br><span class=\"line\">##   auto   0.32051282 0.27777778 0.07264957</span><br><span class=\"line\">##   manual 0.11965812 0.17521368 0.03418803</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">prop.table<span class=\"punctuation\">(</span>table<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>manufacturer<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>   <span class=\"comment\">#함수 지정이 귀찮다면 이렇게 바로 써도 된다.</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">##       audi  chevrolet      dodge       ford      honda    hyundai       jeep </span><br><span class=\"line\">## 0.07692308 0.08119658 0.15811966 0.10683761 0.03846154 0.05982906 0.03418803 </span><br><span class=\"line\">## land rover    lincoln    mercury     nissan    pontiac     subaru     toyota </span><br><span class=\"line\">## 0.01709402 0.01282051 0.01709402 0.05555556 0.02136752 0.05982906 0.14529915 </span><br><span class=\"line\">## volkswagen </span><br><span class=\"line\">## 0.11538462</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># prop.table(mpg1$manufacturer) &lt;-- 에러</span></span><br><span class=\"line\"><span class=\"comment\"># table안에table 안 넣으면 에러</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"행과-열의-비율-형식-맞춘다\"><a href=\"#행과-열의-비율-형식-맞춘다\" class=\"headerlink\" title=\"행과 열의 비율 형식 맞춘다\"></a>행과 열의 비율 형식 맞춘다</h3><ul>\n<li>가로 합을 1로 두고 계산한 비율</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">prop.table<span class=\"punctuation\">(</span>b<span class=\"punctuation\">,</span> margin <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##         </span><br><span class=\"line\">##                  4         f         r</span><br><span class=\"line\">##   auto   0.4777070 0.4140127 0.1082803</span><br><span class=\"line\">##   manual 0.3636364 0.5324675 0.1038961</span><br></pre></td></tr></table></figure>\n<ul>\n<li>세로 합을 1로 두고 계산한 비율</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">prop.table<span class=\"punctuation\">(</span>b<span class=\"punctuation\">,</span> margin <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##         </span><br><span class=\"line\">##                  4         f         r</span><br><span class=\"line\">##   auto   0.7281553 0.6132075 0.6800000</span><br><span class=\"line\">##   manual 0.2718447 0.3867925 0.3200000</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"소수점-아래-자리-지정\"><a href=\"#소수점-아래-자리-지정\" class=\"headerlink\" title=\"소수점 아래 자리 지정\"></a>소수점 아래 자리 지정</h4><ul>\n<li>round는 반올림</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">round</span><span class=\"punctuation\">(</span><span class=\"number\">0.32123141</span><span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#(,뒤는 자릿수)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 0.32</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">round</span><span class=\"punctuation\">(</span>prop.table<span class=\"punctuation\">(</span>table<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>trans<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"number\">3</span><span class=\"punctuation\">)</span> <span class=\"comment\">#이렇게 써도 가능</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">##   auto manual </span><br><span class=\"line\">##  0.671  0.329</span><br></pre></td></tr></table></figure>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/06/21/day0621/R_logo.jpg","excerpt":"<p>각종 연산자 및 평균, 분산, 표준편차</p>","more":"<p>각종 연산자 및 평균, 분산, 표준편차</p>\n<!-- excerpt -->\n\n<h1 id=\"5장\"><a href=\"#5장\" class=\"headerlink\" title=\"5장\"></a>5장</h1><h3 id=\"산술연산자\"><a href=\"#산술연산자\" class=\"headerlink\" title=\"산술연산자\"></a>산술연산자</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># &quot;+&quot; : 덧셈</span></span><br><span class=\"line\"><span class=\"comment\"># &quot;-&quot; : 뺄셈</span></span><br><span class=\"line\"><span class=\"comment\"># &quot;*&quot; : 곱셈</span></span><br><span class=\"line\"><span class=\"comment\"># &quot;/&quot; : 나누기</span></span><br><span class=\"line\"><span class=\"comment\"># &quot;%/%&quot; : 몫</span></span><br><span class=\"line\"><span class=\"comment\"># &quot;%%&quot; : 나머지</span></span><br><span class=\"line\"><span class=\"comment\"># &quot;^&quot; : 제곱</span></span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>숫자형, 정수형 벡터에도 연산이 가능하다</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a<span class=\"operator\">&lt;-</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"number\">3</span><span class=\"punctuation\">,</span><span class=\"number\">4</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">a<span class=\"operator\">*</span><span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1]  3  9 12</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a<span class=\"operator\">^</span><span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1]  1  9 16</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"비교연산자\"><a href=\"#비교연산자\" class=\"headerlink\" title=\"비교연산자\"></a>비교연산자</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># == : 같다</span></span><br><span class=\"line\"><span class=\"comment\"># != : 다르다</span></span><br><span class=\"line\"><span class=\"comment\"># &gt; : 크다</span></span><br><span class=\"line\"><span class=\"comment\"># &gt;= : 크거나 같다</span></span><br><span class=\"line\"><span class=\"comment\"># &lt; : 작다</span></span><br><span class=\"line\"><span class=\"comment\"># &lt;= :작거나 같다</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>a:z : a부터 z까지를 의미</li>\n<li>seq(a,z,by&#x3D;2) : a부터 z까지 2씩 증가</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">seq<span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"number\">9</span><span class=\"punctuation\">,</span>by<span class=\"operator\">=</span><span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 1 3 5 7 9</span><br></pre></td></tr></table></figure>\n<ul>\n<li>3씩 감소</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">seq<span class=\"punctuation\">(</span><span class=\"number\">9</span><span class=\"punctuation\">,</span><span class=\"number\">1</span><span class=\"punctuation\">,</span>by<span class=\"operator\">=</span><span class=\"operator\">-</span><span class=\"number\">3</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 9 6 3</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>rep(x,each&#x3D;2,times&#x3D;3) : x를 각각 2번 반복하고, 그  결과를 3번 반복출력</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">rep</span><span class=\"punctuation\">(</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span>each<span class=\"operator\">=</span><span class=\"number\">2</span><span class=\"punctuation\">,</span>times<span class=\"operator\">=</span><span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 1 1 2 2 1 1 2 2</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"논리-연산자\"><a href=\"#논리-연산자\" class=\"headerlink\" title=\"논리 연산자\"></a>논리 연산자</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># | : (엔키 위에 원화표시)합집합 &quot;or&quot;의 개념</span></span><br><span class=\"line\"><span class=\"comment\"># &amp; : 교집합 &quot;and&quot;의 개념</span></span><br><span class=\"line\"><span class=\"comment\"># ! : 제외할 때, &quot;not&quot;의 개념</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"데이터세트-구조-함수\"><a href=\"#데이터세트-구조-함수\" class=\"headerlink\" title=\"데이터세트 구조 함수\"></a>데이터세트 구조 함수</h3><ul>\n<li>head(,2) : 앞에서 2개 행만 출력</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">head<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species</span><br><span class=\"line\">## 1          5.1         3.5          1.4         0.2  setosa</span><br><span class=\"line\">## 2          4.9         3.0          1.4         0.2  setosa</span><br></pre></td></tr></table></figure>\n<ul>\n<li>tail(,2) : 뒤에서 2개 행만 출력</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tail<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##     Sepal.Length Sepal.Width Petal.Length Petal.Width   Species</span><br><span class=\"line\">## 149          6.2         3.4          5.4         2.3 virginica</span><br><span class=\"line\">## 150          5.9         3.0          5.1         1.8 virginica</span><br></pre></td></tr></table></figure>\n<ul>\n<li>str() : 데이터 전체 구조 및 유형 출력</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## &#x27;data.frame&#x27;:\t150 obs. of  5 variables:</span><br><span class=\"line\">##  $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...</span><br><span class=\"line\">##  $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...</span><br><span class=\"line\">##  $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...</span><br><span class=\"line\">##  $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...</span><br><span class=\"line\">##  $ Species     : Factor w/ 3 levels &quot;setosa&quot;,&quot;versicolor&quot;,..: 1 1 1 1 1 1 1 1 1 1 ...</span><br></pre></td></tr></table></figure>\n<ul>\n<li>View() : 엑셀 형식으로 출력</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">View<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>dim() : 행과 열의 갯수 출력</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">dim</span><span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 150   5</span><br></pre></td></tr></table></figure>\n<ul>\n<li>length() : 열의 개수 출력</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">length</span><span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 5</span><br></pre></td></tr></table></figure>\n<ul>\n<li>class() : 유형 출력</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">class</span><span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;data.frame&quot;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>ls() : 벡터 이름을 출력</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;Petal.Length&quot; &quot;Petal.Width&quot;  &quot;Sepal.Length&quot; &quot;Sepal.Width&quot;  &quot;Species&quot;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"데이터-불러오기\"><a href=\"#데이터-불러오기\" class=\"headerlink\" title=\"데이터 불러오기\"></a>데이터 불러오기</h1><h1 id=\"경로-설정이-매우-중요\"><a href=\"#경로-설정이-매우-중요\" class=\"headerlink\" title=\"경로 설정이 매우 중요\"></a>경로 설정이 매우 중요</h1><ul>\n<li>getwd() 현재 경로 설정된 곳 보기</li>\n<li>setwd(“C:&#x2F;“) 이 경로로 설정</li>\n</ul>\n<h1 id=\"p-91\"><a href=\"#p-91\" class=\"headerlink\" title=\"p.91\"></a>p.91</h1><ul>\n<li>stringsAsFactors -&gt; 범주형 벡터로 바꿀것인가?</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1<span class=\"operator\">&lt;-</span> read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;mpg1.csv&quot;</span><span class=\"punctuation\">,</span> stringsAsFactors<span class=\"operator\">=</span><span class=\"built_in\">F</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#문자형 벡터로 출력, T이면 범주형 벡터로 출력</span></span><br><span class=\"line\">str<span class=\"punctuation\">(</span>mpg1<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## &#x27;data.frame&#x27;:\t234 obs. of  5 variables:</span><br><span class=\"line\">##  $ manufacturer: chr  &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; ...</span><br><span class=\"line\">##  $ trans       : chr  &quot;auto&quot; &quot;manual&quot; &quot;manual&quot; &quot;auto&quot; ...</span><br><span class=\"line\">##  $ drv         : chr  &quot;f&quot; &quot;f&quot; &quot;f&quot; &quot;f&quot; ...</span><br><span class=\"line\">##  $ cty         : int  18 21 20 21 16 18 18 18 16 20 ...</span><br><span class=\"line\">##  $ hwy         : int  29 29 31 30 26 26 27 26 25 28 ...</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"평균\"><a href=\"#평균\" class=\"headerlink\" title=\"평균\"></a>평균</h2><ul>\n<li>평균</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mean<span class=\"punctuation\">(</span>mtcars<span class=\"operator\">$</span>mpg<span class=\"punctuation\">)</span>   <span class=\"comment\">#mtcars$mpg의 평균</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 20.09062</span><br></pre></td></tr></table></figure>\n<ul>\n<li>분산</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var<span class=\"punctuation\">(</span>mtcars<span class=\"operator\">$</span>mpg<span class=\"punctuation\">)</span>   <span class=\"comment\">#mtcars$mpg의 분산</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 36.3241</span><br></pre></td></tr></table></figure>\n<ul>\n<li>표준편차</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sd<span class=\"punctuation\">(</span>mtcars<span class=\"operator\">$</span>mpg<span class=\"punctuation\">)</span>   <span class=\"comment\">#mtcars$mpg의 표준편차</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 6.026948</span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li><p>수리통계 –&gt; 증명(대학원 가라)</p>\n</li>\n<li><p>일반인 &#x2F; 비전공자 –&gt; 활용 &#x2F; 의미 정도 파악</p>\n</li>\n<li><p>summary() : 데이터를 요약해서 보여주는 함수</p>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">summary<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span>   <span class=\"comment\">#iris 데이터의 5개 범주별 통계량</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   </span><br><span class=\"line\">##  Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100  </span><br><span class=\"line\">##  1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300  </span><br><span class=\"line\">##  Median :5.800   Median :3.000   Median :4.350   Median :1.300  </span><br><span class=\"line\">##  Mean   :5.843   Mean   :3.057   Mean   :3.758   Mean   :1.199  </span><br><span class=\"line\">##  3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800  </span><br><span class=\"line\">##  Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500  </span><br><span class=\"line\">##        Species  </span><br><span class=\"line\">##  setosa    :50  </span><br><span class=\"line\">##  versicolor:50  </span><br><span class=\"line\">##  virginica :50  </span><br><span class=\"line\">##                 </span><br><span class=\"line\">##                 </span><br><span class=\"line\">## </span><br></pre></td></tr></table></figure>\n<ul>\n<li>iris 데이터의 Sepal.Length 항목의 통계량</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">summary<span class=\"punctuation\">(</span>iris<span class=\"operator\">$</span>Sepal.Length<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. </span><br><span class=\"line\">##   4.300   5.100   5.800   5.843   6.400   7.900</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"범주별-빈도-분석\"><a href=\"#범주별-빈도-분석\" class=\"headerlink\" title=\"범주별 빈도 분석\"></a>범주별 빈도 분석</h3><ul>\n<li>trans 항목의 범주별 ‘빈도’ 분석</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>trans<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">##   auto manual </span><br><span class=\"line\">##    157     77</span><br></pre></td></tr></table></figure>\n<ul>\n<li>manufacturer 항목의 범주별 ‘빈도’ 분석</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>manufacturer<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">##       audi  chevrolet      dodge       ford      honda    hyundai       jeep </span><br><span class=\"line\">##         18         19         37         25          9         14          8 </span><br><span class=\"line\">## land rover    lincoln    mercury     nissan    pontiac     subaru     toyota </span><br><span class=\"line\">##          4          3          4         13          5         14         34 </span><br><span class=\"line\">## volkswagen </span><br><span class=\"line\">##         27</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>trans와 manufacturer 항목을 합쳐 ‘빈도’ 만들기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>trans<span class=\"punctuation\">,</span> mpg1<span class=\"operator\">$</span>manufacturer<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##         </span><br><span class=\"line\">##          audi chevrolet dodge ford honda hyundai jeep land rover lincoln</span><br><span class=\"line\">##   auto     11        16    30   17     4       7    8          4       3</span><br><span class=\"line\">##   manual    7         3     7    8     5       7    0          0       0</span><br><span class=\"line\">##         </span><br><span class=\"line\">##          mercury nissan pontiac subaru toyota volkswagen</span><br><span class=\"line\">##   auto         4      8       5      7     20         13</span><br><span class=\"line\">##   manual       0      5       0      7     14         14</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"빈도의-비율-구하기\"><a href=\"#빈도의-비율-구하기\" class=\"headerlink\" title=\"빈도의 비율 구하기\"></a>빈도의 비율 구하기</h3><ul>\n<li>trans 항목의 ‘비율’구하기(a라는 변수에 입력해야함)</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a <span class=\"operator\">&lt;-</span> table<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>trans<span class=\"punctuation\">)</span></span><br><span class=\"line\">prop.table<span class=\"punctuation\">(</span>a<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">##      auto    manual </span><br><span class=\"line\">## 0.6709402 0.3290598</span><br></pre></td></tr></table></figure>\n<ul>\n<li>백분율로 나타내고 싶다면 100을 곱해준다</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">prop.table<span class=\"punctuation\">(</span>a<span class=\"punctuation\">)</span><span class=\"operator\">*</span><span class=\"number\">100</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">##     auto   manual </span><br><span class=\"line\">## 67.09402 32.90598</span><br></pre></td></tr></table></figure>\n<ul>\n<li>trans와 drv 항목을 합쳐 ‘비율’ 구하기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">b <span class=\"operator\">&lt;-</span> table<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>trans<span class=\"punctuation\">,</span> mpg1<span class=\"operator\">$</span>drv<span class=\"punctuation\">)</span>   </span><br><span class=\"line\">prop.table<span class=\"punctuation\">(</span>b<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##         </span><br><span class=\"line\">##                   4          f          r</span><br><span class=\"line\">##   auto   0.32051282 0.27777778 0.07264957</span><br><span class=\"line\">##   manual 0.11965812 0.17521368 0.03418803</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">prop.table<span class=\"punctuation\">(</span>table<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>manufacturer<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>   <span class=\"comment\">#함수 지정이 귀찮다면 이렇게 바로 써도 된다.</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">##       audi  chevrolet      dodge       ford      honda    hyundai       jeep </span><br><span class=\"line\">## 0.07692308 0.08119658 0.15811966 0.10683761 0.03846154 0.05982906 0.03418803 </span><br><span class=\"line\">## land rover    lincoln    mercury     nissan    pontiac     subaru     toyota </span><br><span class=\"line\">## 0.01709402 0.01282051 0.01709402 0.05555556 0.02136752 0.05982906 0.14529915 </span><br><span class=\"line\">## volkswagen </span><br><span class=\"line\">## 0.11538462</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># prop.table(mpg1$manufacturer) &lt;-- 에러</span></span><br><span class=\"line\"><span class=\"comment\"># table안에table 안 넣으면 에러</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"행과-열의-비율-형식-맞춘다\"><a href=\"#행과-열의-비율-형식-맞춘다\" class=\"headerlink\" title=\"행과 열의 비율 형식 맞춘다\"></a>행과 열의 비율 형식 맞춘다</h3><ul>\n<li>가로 합을 1로 두고 계산한 비율</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">prop.table<span class=\"punctuation\">(</span>b<span class=\"punctuation\">,</span> margin <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##         </span><br><span class=\"line\">##                  4         f         r</span><br><span class=\"line\">##   auto   0.4777070 0.4140127 0.1082803</span><br><span class=\"line\">##   manual 0.3636364 0.5324675 0.1038961</span><br></pre></td></tr></table></figure>\n<ul>\n<li>세로 합을 1로 두고 계산한 비율</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">prop.table<span class=\"punctuation\">(</span>b<span class=\"punctuation\">,</span> margin <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##         </span><br><span class=\"line\">##                  4         f         r</span><br><span class=\"line\">##   auto   0.7281553 0.6132075 0.6800000</span><br><span class=\"line\">##   manual 0.2718447 0.3867925 0.3200000</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"소수점-아래-자리-지정\"><a href=\"#소수점-아래-자리-지정\" class=\"headerlink\" title=\"소수점 아래 자리 지정\"></a>소수점 아래 자리 지정</h4><ul>\n<li>round는 반올림</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">round</span><span class=\"punctuation\">(</span><span class=\"number\">0.32123141</span><span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#(,뒤는 자릿수)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 0.32</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">round</span><span class=\"punctuation\">(</span>prop.table<span class=\"punctuation\">(</span>table<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>trans<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"number\">3</span><span class=\"punctuation\">)</span> <span class=\"comment\">#이렇게 써도 가능</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">##   auto manual </span><br><span class=\"line\">##  0.671  0.329</span><br></pre></td></tr></table></figure>\n"},{"title":"PyCaret(함수자동생성기 세팅)","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"thumbnailImage":"pycaret.png","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-07-05T07:50:55.000Z","_content":"\n- PyCaret 설치 및 세팅\n<!-- excerpt -->\n\n\n- PyCaret 설치\n- https://github.com/pycaret/pycaret  에서 requirement.txt에 있는 목록 다 버전 맞춰서 깐다.\n\n\n```python\n!pip uninstall sklearn -y\n!pip install --upgrade sklearn\n!pip install scikit-learn==0.23.2 --user\n!pip install pycaret\n!pip install markupsafe==2.0.1\n# 밑에 \"RESTART RUMTIME\" 을 클릭한다. (파란글씨 X)\n```\n\n- PyCaret을 구글 코랩에서 활성화\n\n\n```python\nfrom pycaret.utils import enable_colab\nenable_colab()\n```\n\n    Colab mode enabled.\n    \n\n### 데이터 불러오기\n\n\n```python\nfrom pycaret.datasets import get_data\ndataset = get_data('credit')\n# credit 데이터 = 신용카드 연체 데이터, PyCaret 의 샘플 데이터이다.\n```\n\n\n\n<script src=\"/static/components/requirejs/require.js\"></script>\n<script>\n  requirejs.config({\n    paths: {\n      base: '/static/base',\n      plotly: 'https://cdn.plot.ly/plotly-latest.min.js?noext',\n    },\n  });\n</script>\n\n\n\n\n\n  <div id=\"df-c4307632-6e01-480c-9107-02c1c7afdd50\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>LIMIT_BAL</th>\n      <th>SEX</th>\n      <th>EDUCATION</th>\n      <th>MARRIAGE</th>\n      <th>AGE</th>\n      <th>PAY_1</th>\n      <th>PAY_2</th>\n      <th>PAY_3</th>\n      <th>PAY_4</th>\n      <th>PAY_5</th>\n      <th>...</th>\n      <th>BILL_AMT4</th>\n      <th>BILL_AMT5</th>\n      <th>BILL_AMT6</th>\n      <th>PAY_AMT1</th>\n      <th>PAY_AMT2</th>\n      <th>PAY_AMT3</th>\n      <th>PAY_AMT4</th>\n      <th>PAY_AMT5</th>\n      <th>PAY_AMT6</th>\n      <th>default</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>20000</td>\n      <td>2</td>\n      <td>2</td>\n      <td>1</td>\n      <td>24</td>\n      <td>2</td>\n      <td>2</td>\n      <td>-1</td>\n      <td>-1</td>\n      <td>-2</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>689.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>90000</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>34</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>14331.0</td>\n      <td>14948.0</td>\n      <td>15549.0</td>\n      <td>1518.0</td>\n      <td>1500.0</td>\n      <td>1000.0</td>\n      <td>1000.0</td>\n      <td>1000.0</td>\n      <td>5000.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>50000</td>\n      <td>2</td>\n      <td>2</td>\n      <td>1</td>\n      <td>37</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>28314.0</td>\n      <td>28959.0</td>\n      <td>29547.0</td>\n      <td>2000.0</td>\n      <td>2019.0</td>\n      <td>1200.0</td>\n      <td>1100.0</td>\n      <td>1069.0</td>\n      <td>1000.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>50000</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>57</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>20940.0</td>\n      <td>19146.0</td>\n      <td>19131.0</td>\n      <td>2000.0</td>\n      <td>36681.0</td>\n      <td>10000.0</td>\n      <td>9000.0</td>\n      <td>689.0</td>\n      <td>679.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>50000</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>37</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>19394.0</td>\n      <td>19619.0</td>\n      <td>20024.0</td>\n      <td>2500.0</td>\n      <td>1815.0</td>\n      <td>657.0</td>\n      <td>1000.0</td>\n      <td>1000.0</td>\n      <td>800.0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 24 columns</p>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c4307632-6e01-480c-9107-02c1c7afdd50')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n       width=\"24px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n  </svg>\n      </button>\n\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n      <script>\n        const buttonEl =\n          document.querySelector('#df-c4307632-6e01-480c-9107-02c1c7afdd50 button.colab-df-convert');\n        buttonEl.style.display =\n          google.colab.kernel.accessAllowed ? 'block' : 'none';\n\n        async function convertToInteractive(key) {\n          const element = document.querySelector('#df-c4307632-6e01-480c-9107-02c1c7afdd50');\n          const dataTable =\n            await google.colab.kernel.invokeFunction('convertToInteractive',\n                                                     [key], {});\n          if (!dataTable) return;\n\n          const docLinkHtml = 'Like what you see? Visit the ' +\n            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n            + ' to learn more about interactive tables.';\n          element.innerHTML = '';\n          dataTable['output_type'] = 'display_data';\n          await google.colab.output.renderOutput(dataTable, element);\n          const docLink = document.createElement('div');\n          docLink.innerHTML = docLinkHtml;\n          element.appendChild(docLink);\n        }\n      </script>\n    </div>\n  </div>\n\n\n\n\n```python\ndataset.info()\n```\n\n\n\n<script src=\"/static/components/requirejs/require.js\"></script>\n<script>\n  requirejs.config({\n    paths: {\n      base: '/static/base',\n      plotly: 'https://cdn.plot.ly/plotly-latest.min.js?noext',\n    },\n  });\n</script>\n\n\n\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 24000 entries, 0 to 23999\n    Data columns (total 24 columns):\n     #   Column     Non-Null Count  Dtype  \n    ---  ------     --------------  -----  \n     0   LIMIT_BAL  24000 non-null  int64  \n     1   SEX        24000 non-null  int64  \n     2   EDUCATION  24000 non-null  int64  \n     3   MARRIAGE   24000 non-null  int64  \n     4   AGE        24000 non-null  int64  \n     5   PAY_1      24000 non-null  int64  \n     6   PAY_2      24000 non-null  int64  \n     7   PAY_3      24000 non-null  int64  \n     8   PAY_4      24000 non-null  int64  \n     9   PAY_5      24000 non-null  int64  \n     10  PAY_6      24000 non-null  int64  \n     11  BILL_AMT1  24000 non-null  float64\n     12  BILL_AMT2  24000 non-null  float64\n     13  BILL_AMT3  24000 non-null  float64\n     14  BILL_AMT4  24000 non-null  float64\n     15  BILL_AMT5  24000 non-null  float64\n     16  BILL_AMT6  24000 non-null  float64\n     17  PAY_AMT1   24000 non-null  float64\n     18  PAY_AMT2   24000 non-null  float64\n     19  PAY_AMT3   24000 non-null  float64\n     20  PAY_AMT4   24000 non-null  float64\n     21  PAY_AMT5   24000 non-null  float64\n     22  PAY_AMT6   24000 non-null  float64\n     23  default    24000 non-null  int64  \n    dtypes: float64(12), int64(12)\n    memory usage: 4.4 MB\n    \n\n\n```python\ndata = dataset.sample(frac=0.95, random_state=786)\ndata_unseen = dataset.drop(data.index)\ndata.reset_index(inplace=True, drop=True)\ndata_unseen.reset_index(inplace=True, drop=True)\nprint('Data for Modeling: ' + str(data.shape))\nprint('Unseen Data For Predictions: ' + str(data_unseen.shape))\n```\n\n\n\n<script src=\"/static/components/requirejs/require.js\"></script>\n<script>\n  requirejs.config({\n    paths: {\n      base: '/static/base',\n      plotly: 'https://cdn.plot.ly/plotly-latest.min.js?noext',\n    },\n  });\n</script>\n\n\n\n    Data for Modeling: (22800, 24)\n    Unseen Data For Predictions: (1200, 24)\n    \n\n- setup\n\n\n```python\nimport jinja2\nfrom pycaret.classification import *\nexp_clf101 = setup(data = data, target = 'default', session_id=123)\n# 빈 칸이 뜨면 엔터 치기\n```\n\n\n\n  <div id=\"df-02f377d0-f141-4491-8122-89a5f7a25949\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Description</th>\n      <th>Value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>session_id</td>\n      <td>123</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Target</td>\n      <td>default</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Target Type</td>\n      <td>Binary</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Label Encoded</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Original Data</td>\n      <td>(22800, 24)</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Missing Values</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Numeric Features</td>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Categorical Features</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Ordinal Features</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>High Cardinality Features</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>High Cardinality Method</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>Transformed Train Set</td>\n      <td>(15959, 88)</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Transformed Test Set</td>\n      <td>(6841, 88)</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>Shuffle Train-Test</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>Stratify Train-Test</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>Fold Generator</td>\n      <td>StratifiedKFold</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>Fold Number</td>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>CPU Jobs</td>\n      <td>-1</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>Use GPU</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>Log Experiment</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>Experiment Name</td>\n      <td>clf-default-name</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>USI</td>\n      <td>a6b7</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>Imputation Type</td>\n      <td>simple</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>Iterative Imputation Iteration</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>Numeric Imputer</td>\n      <td>mean</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>Iterative Imputation Numeric Model</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>Categorical Imputer</td>\n      <td>constant</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>Iterative Imputation Categorical Model</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>Unknown Categoricals Handling</td>\n      <td>least_frequent</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>Normalize</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>30</th>\n      <td>Normalize Method</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>31</th>\n      <td>Transformation</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>32</th>\n      <td>Transformation Method</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>33</th>\n      <td>PCA</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>34</th>\n      <td>PCA Method</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>35</th>\n      <td>PCA Components</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>36</th>\n      <td>Ignore Low Variance</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>37</th>\n      <td>Combine Rare Levels</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>38</th>\n      <td>Rare Level Threshold</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>39</th>\n      <td>Numeric Binning</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>40</th>\n      <td>Remove Outliers</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>41</th>\n      <td>Outliers Threshold</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>42</th>\n      <td>Remove Multicollinearity</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>43</th>\n      <td>Multicollinearity Threshold</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>44</th>\n      <td>Remove Perfect Collinearity</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>45</th>\n      <td>Clustering</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>46</th>\n      <td>Clustering Iteration</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>47</th>\n      <td>Polynomial Features</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>48</th>\n      <td>Polynomial Degree</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>49</th>\n      <td>Trignometry Features</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>50</th>\n      <td>Polynomial Threshold</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>51</th>\n      <td>Group Features</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>52</th>\n      <td>Feature Selection</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>53</th>\n      <td>Feature Selection Method</td>\n      <td>classic</td>\n    </tr>\n    <tr>\n      <th>54</th>\n      <td>Features Selection Threshold</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>55</th>\n      <td>Feature Interaction</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>56</th>\n      <td>Feature Ratio</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>57</th>\n      <td>Interaction Threshold</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>58</th>\n      <td>Fix Imbalance</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>59</th>\n      <td>Fix Imbalance Method</td>\n      <td>SMOTE</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-02f377d0-f141-4491-8122-89a5f7a25949')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n       width=\"24px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n  </svg>\n      </button>\n\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n\n\n## 모델링\n\n\n```python\nbest_model = compare_models()\n```\n\n\n\n  <div id=\"df-1f936788-ded9-461f-8219-3f16656853b9\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Model</th>\n      <th>Accuracy</th>\n      <th>AUC</th>\n      <th>Recall</th>\n      <th>Prec.</th>\n      <th>F1</th>\n      <th>Kappa</th>\n      <th>MCC</th>\n      <th>TT (Sec)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>ridge</th>\n      <td>Ridge Classifier</td>\n      <td>0.8254</td>\n      <td>0.0000</td>\n      <td>0.3637</td>\n      <td>0.6913</td>\n      <td>0.4764</td>\n      <td>0.3836</td>\n      <td>0.4122</td>\n      <td>0.038</td>\n    </tr>\n    <tr>\n      <th>lda</th>\n      <td>Linear Discriminant Analysis</td>\n      <td>0.8247</td>\n      <td>0.7634</td>\n      <td>0.3755</td>\n      <td>0.6794</td>\n      <td>0.4835</td>\n      <td>0.3884</td>\n      <td>0.4132</td>\n      <td>0.300</td>\n    </tr>\n    <tr>\n      <th>gbc</th>\n      <td>Gradient Boosting Classifier</td>\n      <td>0.8226</td>\n      <td>0.7789</td>\n      <td>0.3551</td>\n      <td>0.6806</td>\n      <td>0.4664</td>\n      <td>0.3725</td>\n      <td>0.4010</td>\n      <td>5.707</td>\n    </tr>\n    <tr>\n      <th>ada</th>\n      <td>Ada Boost Classifier</td>\n      <td>0.8221</td>\n      <td>0.7697</td>\n      <td>0.3505</td>\n      <td>0.6811</td>\n      <td>0.4626</td>\n      <td>0.3690</td>\n      <td>0.3983</td>\n      <td>1.312</td>\n    </tr>\n    <tr>\n      <th>lightgbm</th>\n      <td>Light Gradient Boosting Machine</td>\n      <td>0.8210</td>\n      <td>0.7750</td>\n      <td>0.3609</td>\n      <td>0.6679</td>\n      <td>0.4683</td>\n      <td>0.3721</td>\n      <td>0.3977</td>\n      <td>0.420</td>\n    </tr>\n    <tr>\n      <th>rf</th>\n      <td>Random Forest Classifier</td>\n      <td>0.8199</td>\n      <td>0.7598</td>\n      <td>0.3663</td>\n      <td>0.6601</td>\n      <td>0.4707</td>\n      <td>0.3727</td>\n      <td>0.3965</td>\n      <td>3.079</td>\n    </tr>\n    <tr>\n      <th>et</th>\n      <td>Extra Trees Classifier</td>\n      <td>0.8092</td>\n      <td>0.7377</td>\n      <td>0.3677</td>\n      <td>0.6047</td>\n      <td>0.4571</td>\n      <td>0.3497</td>\n      <td>0.3657</td>\n      <td>2.547</td>\n    </tr>\n    <tr>\n      <th>lr</th>\n      <td>Logistic Regression</td>\n      <td>0.7814</td>\n      <td>0.6410</td>\n      <td>0.0003</td>\n      <td>0.1000</td>\n      <td>0.0006</td>\n      <td>0.0003</td>\n      <td>0.0034</td>\n      <td>1.005</td>\n    </tr>\n    <tr>\n      <th>dummy</th>\n      <td>Dummy Classifier</td>\n      <td>0.7814</td>\n      <td>0.5000</td>\n      <td>0.0000</td>\n      <td>0.0000</td>\n      <td>0.0000</td>\n      <td>0.0000</td>\n      <td>0.0000</td>\n      <td>0.029</td>\n    </tr>\n    <tr>\n      <th>knn</th>\n      <td>K Neighbors Classifier</td>\n      <td>0.7547</td>\n      <td>0.5939</td>\n      <td>0.1763</td>\n      <td>0.3719</td>\n      <td>0.2388</td>\n      <td>0.1145</td>\n      <td>0.1259</td>\n      <td>0.943</td>\n    </tr>\n    <tr>\n      <th>dt</th>\n      <td>Decision Tree Classifier</td>\n      <td>0.7293</td>\n      <td>0.6147</td>\n      <td>0.4104</td>\n      <td>0.3878</td>\n      <td>0.3986</td>\n      <td>0.2242</td>\n      <td>0.2245</td>\n      <td>0.378</td>\n    </tr>\n    <tr>\n      <th>svm</th>\n      <td>SVM - Linear Kernel</td>\n      <td>0.7277</td>\n      <td>0.0000</td>\n      <td>0.1017</td>\n      <td>0.1671</td>\n      <td>0.0984</td>\n      <td>0.0067</td>\n      <td>0.0075</td>\n      <td>0.498</td>\n    </tr>\n    <tr>\n      <th>qda</th>\n      <td>Quadratic Discriminant Analysis</td>\n      <td>0.5098</td>\n      <td>0.5473</td>\n      <td>0.6141</td>\n      <td>0.2472</td>\n      <td>0.3488</td>\n      <td>0.0600</td>\n      <td>0.0805</td>\n      <td>0.154</td>\n    </tr>\n    <tr>\n      <th>nb</th>\n      <td>Naive Bayes</td>\n      <td>0.3760</td>\n      <td>0.6442</td>\n      <td>0.8845</td>\n      <td>0.2441</td>\n      <td>0.3826</td>\n      <td>0.0608</td>\n      <td>0.1207</td>\n      <td>0.047</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1f936788-ded9-461f-8219-3f16656853b9')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n       width=\"24px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n  </svg>\n      </button>\n\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n      <script>\n        const buttonEl =\n          document.querySelector('#df-1f936788-ded9-461f-8219-3f16656853b9 button.colab-df-convert');\n        buttonEl.style.display =\n          google.colab.kernel.accessAllowed ? 'block' : 'none';\n\n        async function convertToInteractive(key) {\n          const element = document.querySelector('#df-1f936788-ded9-461f-8219-3f16656853b9');\n          const dataTable =\n            await google.colab.kernel.invokeFunction('convertToInteractive',\n                                                     [key], {});\n          if (!dataTable) return;\n\n          const docLinkHtml = 'Like what you see? Visit the ' +\n            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n            + ' to learn more about interactive tables.';\n          element.innerHTML = '';\n          dataTable['output_type'] = 'display_data';\n          await google.colab.output.renderOutput(dataTable, element);\n          const docLink = document.createElement('div');\n          docLink.innerHTML = docLinkHtml;\n          element.appendChild(docLink);\n        }\n      </script>\n    </div>\n  </div>\n\n\n\n- 여기서 가장 좋은 모델을 뽑기\n\n\n```python\nprint(best_model)\n```\n\n\n\n<script src=\"/static/components/requirejs/require.js\"></script>\n<script>\n  requirejs.config({\n    paths: {\n      base: '/static/base',\n      plotly: 'https://cdn.plot.ly/plotly-latest.min.js?noext',\n    },\n  });\n</script>\n\n\n\n    RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,\n                    max_iter=None, normalize=False, random_state=123, solver='auto',\n                    tol=0.001)\n    \n\n- 모델 생성\n\n\n```python\nknn_model = create_model('knn')\n# create_model('모델ID')\n```\n\n\n\n  <div id=\"df-dcfbc557-8ff3-4ddc-b12d-ac11d9486b3f\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Accuracy</th>\n      <th>AUC</th>\n      <th>Recall</th>\n      <th>Prec.</th>\n      <th>F1</th>\n      <th>Kappa</th>\n      <th>MCC</th>\n    </tr>\n    <tr>\n      <th>Fold</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.7469</td>\n      <td>0.6020</td>\n      <td>0.1920</td>\n      <td>0.3545</td>\n      <td>0.2491</td>\n      <td>0.1128</td>\n      <td>0.1204</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.7550</td>\n      <td>0.5894</td>\n      <td>0.2092</td>\n      <td>0.3883</td>\n      <td>0.2719</td>\n      <td>0.1402</td>\n      <td>0.1500</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.7506</td>\n      <td>0.5883</td>\n      <td>0.1576</td>\n      <td>0.3459</td>\n      <td>0.2165</td>\n      <td>0.0923</td>\n      <td>0.1024</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.7419</td>\n      <td>0.5818</td>\n      <td>0.1519</td>\n      <td>0.3136</td>\n      <td>0.2046</td>\n      <td>0.0723</td>\n      <td>0.0790</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.7563</td>\n      <td>0.5908</td>\n      <td>0.1490</td>\n      <td>0.3611</td>\n      <td>0.2110</td>\n      <td>0.0954</td>\n      <td>0.1085</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>0.7550</td>\n      <td>0.5997</td>\n      <td>0.1748</td>\n      <td>0.3720</td>\n      <td>0.2378</td>\n      <td>0.1139</td>\n      <td>0.1255</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>0.7638</td>\n      <td>0.5890</td>\n      <td>0.1891</td>\n      <td>0.4125</td>\n      <td>0.2593</td>\n      <td>0.1413</td>\n      <td>0.1565</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>0.7613</td>\n      <td>0.6240</td>\n      <td>0.1633</td>\n      <td>0.3904</td>\n      <td>0.2303</td>\n      <td>0.1163</td>\n      <td>0.1318</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>0.7619</td>\n      <td>0.5988</td>\n      <td>0.1862</td>\n      <td>0.4037</td>\n      <td>0.2549</td>\n      <td>0.1356</td>\n      <td>0.1500</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>0.7549</td>\n      <td>0.5756</td>\n      <td>0.1897</td>\n      <td>0.3771</td>\n      <td>0.2524</td>\n      <td>0.1246</td>\n      <td>0.1351</td>\n    </tr>\n    <tr>\n      <th>Mean</th>\n      <td>0.7547</td>\n      <td>0.5939</td>\n      <td>0.1763</td>\n      <td>0.3719</td>\n      <td>0.2388</td>\n      <td>0.1145</td>\n      <td>0.1259</td>\n    </tr>\n    <tr>\n      <th>Std</th>\n      <td>0.0065</td>\n      <td>0.0126</td>\n      <td>0.0191</td>\n      <td>0.0279</td>\n      <td>0.0214</td>\n      <td>0.0214</td>\n      <td>0.0230</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dcfbc557-8ff3-4ddc-b12d-ac11d9486b3f')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n       width=\"24px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n  </svg>\n      </button>\n\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n      <script>\n        const buttonEl =\n          document.querySelector('#df-dcfbc557-8ff3-4ddc-b12d-ac11d9486b3f button.colab-df-convert');\n        buttonEl.style.display =\n          google.colab.kernel.accessAllowed ? 'block' : 'none';\n\n        async function convertToInteractive(key) {\n          const element = document.querySelector('#df-dcfbc557-8ff3-4ddc-b12d-ac11d9486b3f');\n          const dataTable =\n            await google.colab.kernel.invokeFunction('convertToInteractive',\n                                                     [key], {});\n          if (!dataTable) return;\n\n          const docLinkHtml = 'Like what you see? Visit the ' +\n            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n            + ' to learn more about interactive tables.';\n          element.innerHTML = '';\n          dataTable['output_type'] = 'display_data';\n          await google.colab.output.renderOutput(dataTable, element);\n          const docLink = document.createElement('div');\n          docLink.innerHTML = docLinkHtml;\n          element.appendChild(docLink);\n        }\n      </script>\n    </div>\n  </div>\n\n\n\n\n```python\nimport numpy as np\nparams = {\n    'n_neighbors' : np.arange(0, 50, 1)\n}\ntunned_knn = tune_model(knn_model, custom_grid=params)\nprint(tunned_knn)\n\n```\n\n\n\n  <div id=\"df-b3460ed9-d903-4ed4-b39b-824b759b0e90\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Accuracy</th>\n      <th>AUC</th>\n      <th>Recall</th>\n      <th>Prec.</th>\n      <th>F1</th>\n      <th>Kappa</th>\n      <th>MCC</th>\n    </tr>\n    <tr>\n      <th>Fold</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.7813</td>\n      <td>0.6482</td>\n      <td>0.0372</td>\n      <td>0.5000</td>\n      <td>0.0693</td>\n      <td>0.0402</td>\n      <td>0.0876</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.7807</td>\n      <td>0.6436</td>\n      <td>0.0315</td>\n      <td>0.4783</td>\n      <td>0.0591</td>\n      <td>0.0330</td>\n      <td>0.0759</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.7744</td>\n      <td>0.6563</td>\n      <td>0.0315</td>\n      <td>0.3333</td>\n      <td>0.0576</td>\n      <td>0.0206</td>\n      <td>0.0403</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.7845</td>\n      <td>0.6589</td>\n      <td>0.0659</td>\n      <td>0.5610</td>\n      <td>0.1179</td>\n      <td>0.0754</td>\n      <td>0.1345</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.7826</td>\n      <td>0.6645</td>\n      <td>0.0315</td>\n      <td>0.5500</td>\n      <td>0.0596</td>\n      <td>0.0368</td>\n      <td>0.0903</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>0.7794</td>\n      <td>0.6477</td>\n      <td>0.0544</td>\n      <td>0.4634</td>\n      <td>0.0974</td>\n      <td>0.0539</td>\n      <td>0.0961</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>0.7826</td>\n      <td>0.6278</td>\n      <td>0.0630</td>\n      <td>0.5238</td>\n      <td>0.1125</td>\n      <td>0.0688</td>\n      <td>0.1214</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>0.7751</td>\n      <td>0.6702</td>\n      <td>0.0372</td>\n      <td>0.3611</td>\n      <td>0.0675</td>\n      <td>0.0278</td>\n      <td>0.0523</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>0.7813</td>\n      <td>0.6409</td>\n      <td>0.0630</td>\n      <td>0.5000</td>\n      <td>0.1120</td>\n      <td>0.0662</td>\n      <td>0.1146</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>0.7881</td>\n      <td>0.6426</td>\n      <td>0.0661</td>\n      <td>0.6389</td>\n      <td>0.1198</td>\n      <td>0.0822</td>\n      <td>0.1548</td>\n    </tr>\n    <tr>\n      <th>Mean</th>\n      <td>0.7810</td>\n      <td>0.6501</td>\n      <td>0.0482</td>\n      <td>0.4910</td>\n      <td>0.0873</td>\n      <td>0.0505</td>\n      <td>0.0968</td>\n    </tr>\n    <tr>\n      <th>Std</th>\n      <td>0.0039</td>\n      <td>0.0119</td>\n      <td>0.0148</td>\n      <td>0.0861</td>\n      <td>0.0255</td>\n      <td>0.0206</td>\n      <td>0.0338</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b3460ed9-d903-4ed4-b39b-824b759b0e90')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n       width=\"24px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n  </svg>\n      </button>\n\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n      <script>\n        const buttonEl =\n          document.querySelector('#df-b3460ed9-d903-4ed4-b39b-824b759b0e90 button.colab-df-convert');\n        buttonEl.style.display =\n          google.colab.kernel.accessAllowed ? 'block' : 'none';\n\n        async function convertToInteractive(key) {\n          const element = document.querySelector('#df-b3460ed9-d903-4ed4-b39b-824b759b0e90');\n          const dataTable =\n            await google.colab.kernel.invokeFunction('convertToInteractive',\n                                                     [key], {});\n          if (!dataTable) return;\n\n          const docLinkHtml = 'Like what you see? Visit the ' +\n            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n            + ' to learn more about interactive tables.';\n          element.innerHTML = '';\n          dataTable['output_type'] = 'display_data';\n          await google.colab.output.renderOutput(dataTable, element);\n          const docLink = document.createElement('div');\n          docLink.innerHTML = docLinkHtml;\n          element.appendChild(docLink);\n        }\n      </script>\n    </div>\n  </div>\n\n\n\n    KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',\n                         metric_params=None, n_jobs=-1, n_neighbors=42, p=2,\n                         weights='uniform')\n    \n\n\n```python\nplot_model(tunned_knn, plot = 'auc')\n```\n\n\n    \n![png](/images/0705/output_17_0.png)\n    \n\n\n- AUC\n  + 최소 0.5, 최고 1\n  + 좋은 모델은 0.8 이상\n- ROC\n  + 면적\n\n\n```python\n# 의사결정 트리\n# plot_model(tunned_knn, plot = 'feature')\nplot_model(tunned_knn, plot='confusion_matrix')\n```\n\n\n    \n![png](/images/0705/output_19_0.png)\n    \n\n\n\n```python\nevaluate_model(tunned_knn)\n# 최고의 모델을 찾는 것 보다는 필요한 모델의 그래프를 비교할 때 사용\n```\n\n\n\n<script src=\"/static/components/requirejs/require.js\"></script>\n<script>\n  requirejs.config({\n    paths: {\n      base: '/static/base',\n      plotly: 'https://cdn.plot.ly/plotly-latest.min.js?noext',\n    },\n  });\n</script>\n\n\n\n\n    interactive(children=(ToggleButtons(description='Plot Type:', icons=('',), options=(('Hyperparameters', 'param…\n\n\n\n```python\nmodels()\n```\n\n\n\n<script src=\"/static/components/requirejs/require.js\"></script>\n<script>\n  requirejs.config({\n    paths: {\n      base: '/static/base',\n      plotly: 'https://cdn.plot.ly/plotly-latest.min.js?noext',\n    },\n  });\n</script>\n\n\n\n\n\n\n\n  <div id=\"df-d12a53d1-70cd-4e9e-bc39-3807e72a559f\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Name</th>\n      <th>Reference</th>\n      <th>Turbo</th>\n    </tr>\n    <tr>\n      <th>ID</th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>lr</th>\n      <td>Logistic Regression</td>\n      <td>sklearn.linear_model._logistic.LogisticRegression</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>knn</th>\n      <td>K Neighbors Classifier</td>\n      <td>sklearn.neighbors._classification.KNeighborsCl...</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>nb</th>\n      <td>Naive Bayes</td>\n      <td>sklearn.naive_bayes.GaussianNB</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>dt</th>\n      <td>Decision Tree Classifier</td>\n      <td>sklearn.tree._classes.DecisionTreeClassifier</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>svm</th>\n      <td>SVM - Linear Kernel</td>\n      <td>sklearn.linear_model._stochastic_gradient.SGDC...</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>rbfsvm</th>\n      <td>SVM - Radial Kernel</td>\n      <td>sklearn.svm._classes.SVC</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>gpc</th>\n      <td>Gaussian Process Classifier</td>\n      <td>sklearn.gaussian_process._gpc.GaussianProcessC...</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>mlp</th>\n      <td>MLP Classifier</td>\n      <td>sklearn.neural_network._multilayer_perceptron....</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>ridge</th>\n      <td>Ridge Classifier</td>\n      <td>sklearn.linear_model._ridge.RidgeClassifier</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>rf</th>\n      <td>Random Forest Classifier</td>\n      <td>sklearn.ensemble._forest.RandomForestClassifier</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>qda</th>\n      <td>Quadratic Discriminant Analysis</td>\n      <td>sklearn.discriminant_analysis.QuadraticDiscrim...</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>ada</th>\n      <td>Ada Boost Classifier</td>\n      <td>sklearn.ensemble._weight_boosting.AdaBoostClas...</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>gbc</th>\n      <td>Gradient Boosting Classifier</td>\n      <td>sklearn.ensemble._gb.GradientBoostingClassifier</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>lda</th>\n      <td>Linear Discriminant Analysis</td>\n      <td>sklearn.discriminant_analysis.LinearDiscrimina...</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>et</th>\n      <td>Extra Trees Classifier</td>\n      <td>sklearn.ensemble._forest.ExtraTreesClassifier</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>lightgbm</th>\n      <td>Light Gradient Boosting Machine</td>\n      <td>lightgbm.sklearn.LGBMClassifier</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>dummy</th>\n      <td>Dummy Classifier</td>\n      <td>sklearn.dummy.DummyClassifier</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d12a53d1-70cd-4e9e-bc39-3807e72a559f')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n       width=\"24px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n  </svg>\n      </button>\n\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n      <script>\n        const buttonEl =\n          document.querySelector('#df-d12a53d1-70cd-4e9e-bc39-3807e72a559f button.colab-df-convert');\n        buttonEl.style.display =\n          google.colab.kernel.accessAllowed ? 'block' : 'none';\n\n        async function convertToInteractive(key) {\n          const element = document.querySelector('#df-d12a53d1-70cd-4e9e-bc39-3807e72a559f');\n          const dataTable =\n            await google.colab.kernel.invokeFunction('convertToInteractive',\n                                                     [key], {});\n          if (!dataTable) return;\n\n          const docLinkHtml = 'Like what you see? Visit the ' +\n            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n            + ' to learn more about interactive tables.';\n          element.innerHTML = '';\n          dataTable['output_type'] = 'display_data';\n          await google.colab.output.renderOutput(dataTable, element);\n          const docLink = document.createElement('div');\n          docLink.innerHTML = docLinkHtml;\n          element.appendChild(docLink);\n        }\n      </script>\n    </div>\n  </div>\n\n\n\n","source":"_posts/PyCaret_Sample (1).md","raw":"---\ntitle: \"PyCaret(함수자동생성기 세팅)\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: Python\nclearReading: true\nthumbnailImage: pycaret.png\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-07-05 16:50:55'\n---\n\n- PyCaret 설치 및 세팅\n<!-- excerpt -->\n\n\n- PyCaret 설치\n- https://github.com/pycaret/pycaret  에서 requirement.txt에 있는 목록 다 버전 맞춰서 깐다.\n\n\n```python\n!pip uninstall sklearn -y\n!pip install --upgrade sklearn\n!pip install scikit-learn==0.23.2 --user\n!pip install pycaret\n!pip install markupsafe==2.0.1\n# 밑에 \"RESTART RUMTIME\" 을 클릭한다. (파란글씨 X)\n```\n\n- PyCaret을 구글 코랩에서 활성화\n\n\n```python\nfrom pycaret.utils import enable_colab\nenable_colab()\n```\n\n    Colab mode enabled.\n    \n\n### 데이터 불러오기\n\n\n```python\nfrom pycaret.datasets import get_data\ndataset = get_data('credit')\n# credit 데이터 = 신용카드 연체 데이터, PyCaret 의 샘플 데이터이다.\n```\n\n\n\n<script src=\"/static/components/requirejs/require.js\"></script>\n<script>\n  requirejs.config({\n    paths: {\n      base: '/static/base',\n      plotly: 'https://cdn.plot.ly/plotly-latest.min.js?noext',\n    },\n  });\n</script>\n\n\n\n\n\n  <div id=\"df-c4307632-6e01-480c-9107-02c1c7afdd50\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>LIMIT_BAL</th>\n      <th>SEX</th>\n      <th>EDUCATION</th>\n      <th>MARRIAGE</th>\n      <th>AGE</th>\n      <th>PAY_1</th>\n      <th>PAY_2</th>\n      <th>PAY_3</th>\n      <th>PAY_4</th>\n      <th>PAY_5</th>\n      <th>...</th>\n      <th>BILL_AMT4</th>\n      <th>BILL_AMT5</th>\n      <th>BILL_AMT6</th>\n      <th>PAY_AMT1</th>\n      <th>PAY_AMT2</th>\n      <th>PAY_AMT3</th>\n      <th>PAY_AMT4</th>\n      <th>PAY_AMT5</th>\n      <th>PAY_AMT6</th>\n      <th>default</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>20000</td>\n      <td>2</td>\n      <td>2</td>\n      <td>1</td>\n      <td>24</td>\n      <td>2</td>\n      <td>2</td>\n      <td>-1</td>\n      <td>-1</td>\n      <td>-2</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>689.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>90000</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>34</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>14331.0</td>\n      <td>14948.0</td>\n      <td>15549.0</td>\n      <td>1518.0</td>\n      <td>1500.0</td>\n      <td>1000.0</td>\n      <td>1000.0</td>\n      <td>1000.0</td>\n      <td>5000.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>50000</td>\n      <td>2</td>\n      <td>2</td>\n      <td>1</td>\n      <td>37</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>28314.0</td>\n      <td>28959.0</td>\n      <td>29547.0</td>\n      <td>2000.0</td>\n      <td>2019.0</td>\n      <td>1200.0</td>\n      <td>1100.0</td>\n      <td>1069.0</td>\n      <td>1000.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>50000</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>57</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>20940.0</td>\n      <td>19146.0</td>\n      <td>19131.0</td>\n      <td>2000.0</td>\n      <td>36681.0</td>\n      <td>10000.0</td>\n      <td>9000.0</td>\n      <td>689.0</td>\n      <td>679.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>50000</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>37</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>19394.0</td>\n      <td>19619.0</td>\n      <td>20024.0</td>\n      <td>2500.0</td>\n      <td>1815.0</td>\n      <td>657.0</td>\n      <td>1000.0</td>\n      <td>1000.0</td>\n      <td>800.0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 24 columns</p>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c4307632-6e01-480c-9107-02c1c7afdd50')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n       width=\"24px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n  </svg>\n      </button>\n\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n      <script>\n        const buttonEl =\n          document.querySelector('#df-c4307632-6e01-480c-9107-02c1c7afdd50 button.colab-df-convert');\n        buttonEl.style.display =\n          google.colab.kernel.accessAllowed ? 'block' : 'none';\n\n        async function convertToInteractive(key) {\n          const element = document.querySelector('#df-c4307632-6e01-480c-9107-02c1c7afdd50');\n          const dataTable =\n            await google.colab.kernel.invokeFunction('convertToInteractive',\n                                                     [key], {});\n          if (!dataTable) return;\n\n          const docLinkHtml = 'Like what you see? Visit the ' +\n            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n            + ' to learn more about interactive tables.';\n          element.innerHTML = '';\n          dataTable['output_type'] = 'display_data';\n          await google.colab.output.renderOutput(dataTable, element);\n          const docLink = document.createElement('div');\n          docLink.innerHTML = docLinkHtml;\n          element.appendChild(docLink);\n        }\n      </script>\n    </div>\n  </div>\n\n\n\n\n```python\ndataset.info()\n```\n\n\n\n<script src=\"/static/components/requirejs/require.js\"></script>\n<script>\n  requirejs.config({\n    paths: {\n      base: '/static/base',\n      plotly: 'https://cdn.plot.ly/plotly-latest.min.js?noext',\n    },\n  });\n</script>\n\n\n\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 24000 entries, 0 to 23999\n    Data columns (total 24 columns):\n     #   Column     Non-Null Count  Dtype  \n    ---  ------     --------------  -----  \n     0   LIMIT_BAL  24000 non-null  int64  \n     1   SEX        24000 non-null  int64  \n     2   EDUCATION  24000 non-null  int64  \n     3   MARRIAGE   24000 non-null  int64  \n     4   AGE        24000 non-null  int64  \n     5   PAY_1      24000 non-null  int64  \n     6   PAY_2      24000 non-null  int64  \n     7   PAY_3      24000 non-null  int64  \n     8   PAY_4      24000 non-null  int64  \n     9   PAY_5      24000 non-null  int64  \n     10  PAY_6      24000 non-null  int64  \n     11  BILL_AMT1  24000 non-null  float64\n     12  BILL_AMT2  24000 non-null  float64\n     13  BILL_AMT3  24000 non-null  float64\n     14  BILL_AMT4  24000 non-null  float64\n     15  BILL_AMT5  24000 non-null  float64\n     16  BILL_AMT6  24000 non-null  float64\n     17  PAY_AMT1   24000 non-null  float64\n     18  PAY_AMT2   24000 non-null  float64\n     19  PAY_AMT3   24000 non-null  float64\n     20  PAY_AMT4   24000 non-null  float64\n     21  PAY_AMT5   24000 non-null  float64\n     22  PAY_AMT6   24000 non-null  float64\n     23  default    24000 non-null  int64  \n    dtypes: float64(12), int64(12)\n    memory usage: 4.4 MB\n    \n\n\n```python\ndata = dataset.sample(frac=0.95, random_state=786)\ndata_unseen = dataset.drop(data.index)\ndata.reset_index(inplace=True, drop=True)\ndata_unseen.reset_index(inplace=True, drop=True)\nprint('Data for Modeling: ' + str(data.shape))\nprint('Unseen Data For Predictions: ' + str(data_unseen.shape))\n```\n\n\n\n<script src=\"/static/components/requirejs/require.js\"></script>\n<script>\n  requirejs.config({\n    paths: {\n      base: '/static/base',\n      plotly: 'https://cdn.plot.ly/plotly-latest.min.js?noext',\n    },\n  });\n</script>\n\n\n\n    Data for Modeling: (22800, 24)\n    Unseen Data For Predictions: (1200, 24)\n    \n\n- setup\n\n\n```python\nimport jinja2\nfrom pycaret.classification import *\nexp_clf101 = setup(data = data, target = 'default', session_id=123)\n# 빈 칸이 뜨면 엔터 치기\n```\n\n\n\n  <div id=\"df-02f377d0-f141-4491-8122-89a5f7a25949\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Description</th>\n      <th>Value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>session_id</td>\n      <td>123</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Target</td>\n      <td>default</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Target Type</td>\n      <td>Binary</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Label Encoded</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Original Data</td>\n      <td>(22800, 24)</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Missing Values</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Numeric Features</td>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Categorical Features</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Ordinal Features</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>High Cardinality Features</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>High Cardinality Method</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>Transformed Train Set</td>\n      <td>(15959, 88)</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Transformed Test Set</td>\n      <td>(6841, 88)</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>Shuffle Train-Test</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>Stratify Train-Test</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>Fold Generator</td>\n      <td>StratifiedKFold</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>Fold Number</td>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>CPU Jobs</td>\n      <td>-1</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>Use GPU</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>Log Experiment</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>Experiment Name</td>\n      <td>clf-default-name</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>USI</td>\n      <td>a6b7</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>Imputation Type</td>\n      <td>simple</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>Iterative Imputation Iteration</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>Numeric Imputer</td>\n      <td>mean</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>Iterative Imputation Numeric Model</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>Categorical Imputer</td>\n      <td>constant</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>Iterative Imputation Categorical Model</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>Unknown Categoricals Handling</td>\n      <td>least_frequent</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>Normalize</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>30</th>\n      <td>Normalize Method</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>31</th>\n      <td>Transformation</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>32</th>\n      <td>Transformation Method</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>33</th>\n      <td>PCA</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>34</th>\n      <td>PCA Method</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>35</th>\n      <td>PCA Components</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>36</th>\n      <td>Ignore Low Variance</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>37</th>\n      <td>Combine Rare Levels</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>38</th>\n      <td>Rare Level Threshold</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>39</th>\n      <td>Numeric Binning</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>40</th>\n      <td>Remove Outliers</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>41</th>\n      <td>Outliers Threshold</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>42</th>\n      <td>Remove Multicollinearity</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>43</th>\n      <td>Multicollinearity Threshold</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>44</th>\n      <td>Remove Perfect Collinearity</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>45</th>\n      <td>Clustering</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>46</th>\n      <td>Clustering Iteration</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>47</th>\n      <td>Polynomial Features</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>48</th>\n      <td>Polynomial Degree</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>49</th>\n      <td>Trignometry Features</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>50</th>\n      <td>Polynomial Threshold</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>51</th>\n      <td>Group Features</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>52</th>\n      <td>Feature Selection</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>53</th>\n      <td>Feature Selection Method</td>\n      <td>classic</td>\n    </tr>\n    <tr>\n      <th>54</th>\n      <td>Features Selection Threshold</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>55</th>\n      <td>Feature Interaction</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>56</th>\n      <td>Feature Ratio</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>57</th>\n      <td>Interaction Threshold</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>58</th>\n      <td>Fix Imbalance</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>59</th>\n      <td>Fix Imbalance Method</td>\n      <td>SMOTE</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-02f377d0-f141-4491-8122-89a5f7a25949')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n       width=\"24px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n  </svg>\n      </button>\n\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n\n\n## 모델링\n\n\n```python\nbest_model = compare_models()\n```\n\n\n\n  <div id=\"df-1f936788-ded9-461f-8219-3f16656853b9\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Model</th>\n      <th>Accuracy</th>\n      <th>AUC</th>\n      <th>Recall</th>\n      <th>Prec.</th>\n      <th>F1</th>\n      <th>Kappa</th>\n      <th>MCC</th>\n      <th>TT (Sec)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>ridge</th>\n      <td>Ridge Classifier</td>\n      <td>0.8254</td>\n      <td>0.0000</td>\n      <td>0.3637</td>\n      <td>0.6913</td>\n      <td>0.4764</td>\n      <td>0.3836</td>\n      <td>0.4122</td>\n      <td>0.038</td>\n    </tr>\n    <tr>\n      <th>lda</th>\n      <td>Linear Discriminant Analysis</td>\n      <td>0.8247</td>\n      <td>0.7634</td>\n      <td>0.3755</td>\n      <td>0.6794</td>\n      <td>0.4835</td>\n      <td>0.3884</td>\n      <td>0.4132</td>\n      <td>0.300</td>\n    </tr>\n    <tr>\n      <th>gbc</th>\n      <td>Gradient Boosting Classifier</td>\n      <td>0.8226</td>\n      <td>0.7789</td>\n      <td>0.3551</td>\n      <td>0.6806</td>\n      <td>0.4664</td>\n      <td>0.3725</td>\n      <td>0.4010</td>\n      <td>5.707</td>\n    </tr>\n    <tr>\n      <th>ada</th>\n      <td>Ada Boost Classifier</td>\n      <td>0.8221</td>\n      <td>0.7697</td>\n      <td>0.3505</td>\n      <td>0.6811</td>\n      <td>0.4626</td>\n      <td>0.3690</td>\n      <td>0.3983</td>\n      <td>1.312</td>\n    </tr>\n    <tr>\n      <th>lightgbm</th>\n      <td>Light Gradient Boosting Machine</td>\n      <td>0.8210</td>\n      <td>0.7750</td>\n      <td>0.3609</td>\n      <td>0.6679</td>\n      <td>0.4683</td>\n      <td>0.3721</td>\n      <td>0.3977</td>\n      <td>0.420</td>\n    </tr>\n    <tr>\n      <th>rf</th>\n      <td>Random Forest Classifier</td>\n      <td>0.8199</td>\n      <td>0.7598</td>\n      <td>0.3663</td>\n      <td>0.6601</td>\n      <td>0.4707</td>\n      <td>0.3727</td>\n      <td>0.3965</td>\n      <td>3.079</td>\n    </tr>\n    <tr>\n      <th>et</th>\n      <td>Extra Trees Classifier</td>\n      <td>0.8092</td>\n      <td>0.7377</td>\n      <td>0.3677</td>\n      <td>0.6047</td>\n      <td>0.4571</td>\n      <td>0.3497</td>\n      <td>0.3657</td>\n      <td>2.547</td>\n    </tr>\n    <tr>\n      <th>lr</th>\n      <td>Logistic Regression</td>\n      <td>0.7814</td>\n      <td>0.6410</td>\n      <td>0.0003</td>\n      <td>0.1000</td>\n      <td>0.0006</td>\n      <td>0.0003</td>\n      <td>0.0034</td>\n      <td>1.005</td>\n    </tr>\n    <tr>\n      <th>dummy</th>\n      <td>Dummy Classifier</td>\n      <td>0.7814</td>\n      <td>0.5000</td>\n      <td>0.0000</td>\n      <td>0.0000</td>\n      <td>0.0000</td>\n      <td>0.0000</td>\n      <td>0.0000</td>\n      <td>0.029</td>\n    </tr>\n    <tr>\n      <th>knn</th>\n      <td>K Neighbors Classifier</td>\n      <td>0.7547</td>\n      <td>0.5939</td>\n      <td>0.1763</td>\n      <td>0.3719</td>\n      <td>0.2388</td>\n      <td>0.1145</td>\n      <td>0.1259</td>\n      <td>0.943</td>\n    </tr>\n    <tr>\n      <th>dt</th>\n      <td>Decision Tree Classifier</td>\n      <td>0.7293</td>\n      <td>0.6147</td>\n      <td>0.4104</td>\n      <td>0.3878</td>\n      <td>0.3986</td>\n      <td>0.2242</td>\n      <td>0.2245</td>\n      <td>0.378</td>\n    </tr>\n    <tr>\n      <th>svm</th>\n      <td>SVM - Linear Kernel</td>\n      <td>0.7277</td>\n      <td>0.0000</td>\n      <td>0.1017</td>\n      <td>0.1671</td>\n      <td>0.0984</td>\n      <td>0.0067</td>\n      <td>0.0075</td>\n      <td>0.498</td>\n    </tr>\n    <tr>\n      <th>qda</th>\n      <td>Quadratic Discriminant Analysis</td>\n      <td>0.5098</td>\n      <td>0.5473</td>\n      <td>0.6141</td>\n      <td>0.2472</td>\n      <td>0.3488</td>\n      <td>0.0600</td>\n      <td>0.0805</td>\n      <td>0.154</td>\n    </tr>\n    <tr>\n      <th>nb</th>\n      <td>Naive Bayes</td>\n      <td>0.3760</td>\n      <td>0.6442</td>\n      <td>0.8845</td>\n      <td>0.2441</td>\n      <td>0.3826</td>\n      <td>0.0608</td>\n      <td>0.1207</td>\n      <td>0.047</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1f936788-ded9-461f-8219-3f16656853b9')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n       width=\"24px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n  </svg>\n      </button>\n\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n      <script>\n        const buttonEl =\n          document.querySelector('#df-1f936788-ded9-461f-8219-3f16656853b9 button.colab-df-convert');\n        buttonEl.style.display =\n          google.colab.kernel.accessAllowed ? 'block' : 'none';\n\n        async function convertToInteractive(key) {\n          const element = document.querySelector('#df-1f936788-ded9-461f-8219-3f16656853b9');\n          const dataTable =\n            await google.colab.kernel.invokeFunction('convertToInteractive',\n                                                     [key], {});\n          if (!dataTable) return;\n\n          const docLinkHtml = 'Like what you see? Visit the ' +\n            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n            + ' to learn more about interactive tables.';\n          element.innerHTML = '';\n          dataTable['output_type'] = 'display_data';\n          await google.colab.output.renderOutput(dataTable, element);\n          const docLink = document.createElement('div');\n          docLink.innerHTML = docLinkHtml;\n          element.appendChild(docLink);\n        }\n      </script>\n    </div>\n  </div>\n\n\n\n- 여기서 가장 좋은 모델을 뽑기\n\n\n```python\nprint(best_model)\n```\n\n\n\n<script src=\"/static/components/requirejs/require.js\"></script>\n<script>\n  requirejs.config({\n    paths: {\n      base: '/static/base',\n      plotly: 'https://cdn.plot.ly/plotly-latest.min.js?noext',\n    },\n  });\n</script>\n\n\n\n    RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,\n                    max_iter=None, normalize=False, random_state=123, solver='auto',\n                    tol=0.001)\n    \n\n- 모델 생성\n\n\n```python\nknn_model = create_model('knn')\n# create_model('모델ID')\n```\n\n\n\n  <div id=\"df-dcfbc557-8ff3-4ddc-b12d-ac11d9486b3f\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Accuracy</th>\n      <th>AUC</th>\n      <th>Recall</th>\n      <th>Prec.</th>\n      <th>F1</th>\n      <th>Kappa</th>\n      <th>MCC</th>\n    </tr>\n    <tr>\n      <th>Fold</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.7469</td>\n      <td>0.6020</td>\n      <td>0.1920</td>\n      <td>0.3545</td>\n      <td>0.2491</td>\n      <td>0.1128</td>\n      <td>0.1204</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.7550</td>\n      <td>0.5894</td>\n      <td>0.2092</td>\n      <td>0.3883</td>\n      <td>0.2719</td>\n      <td>0.1402</td>\n      <td>0.1500</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.7506</td>\n      <td>0.5883</td>\n      <td>0.1576</td>\n      <td>0.3459</td>\n      <td>0.2165</td>\n      <td>0.0923</td>\n      <td>0.1024</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.7419</td>\n      <td>0.5818</td>\n      <td>0.1519</td>\n      <td>0.3136</td>\n      <td>0.2046</td>\n      <td>0.0723</td>\n      <td>0.0790</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.7563</td>\n      <td>0.5908</td>\n      <td>0.1490</td>\n      <td>0.3611</td>\n      <td>0.2110</td>\n      <td>0.0954</td>\n      <td>0.1085</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>0.7550</td>\n      <td>0.5997</td>\n      <td>0.1748</td>\n      <td>0.3720</td>\n      <td>0.2378</td>\n      <td>0.1139</td>\n      <td>0.1255</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>0.7638</td>\n      <td>0.5890</td>\n      <td>0.1891</td>\n      <td>0.4125</td>\n      <td>0.2593</td>\n      <td>0.1413</td>\n      <td>0.1565</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>0.7613</td>\n      <td>0.6240</td>\n      <td>0.1633</td>\n      <td>0.3904</td>\n      <td>0.2303</td>\n      <td>0.1163</td>\n      <td>0.1318</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>0.7619</td>\n      <td>0.5988</td>\n      <td>0.1862</td>\n      <td>0.4037</td>\n      <td>0.2549</td>\n      <td>0.1356</td>\n      <td>0.1500</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>0.7549</td>\n      <td>0.5756</td>\n      <td>0.1897</td>\n      <td>0.3771</td>\n      <td>0.2524</td>\n      <td>0.1246</td>\n      <td>0.1351</td>\n    </tr>\n    <tr>\n      <th>Mean</th>\n      <td>0.7547</td>\n      <td>0.5939</td>\n      <td>0.1763</td>\n      <td>0.3719</td>\n      <td>0.2388</td>\n      <td>0.1145</td>\n      <td>0.1259</td>\n    </tr>\n    <tr>\n      <th>Std</th>\n      <td>0.0065</td>\n      <td>0.0126</td>\n      <td>0.0191</td>\n      <td>0.0279</td>\n      <td>0.0214</td>\n      <td>0.0214</td>\n      <td>0.0230</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dcfbc557-8ff3-4ddc-b12d-ac11d9486b3f')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n       width=\"24px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n  </svg>\n      </button>\n\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n      <script>\n        const buttonEl =\n          document.querySelector('#df-dcfbc557-8ff3-4ddc-b12d-ac11d9486b3f button.colab-df-convert');\n        buttonEl.style.display =\n          google.colab.kernel.accessAllowed ? 'block' : 'none';\n\n        async function convertToInteractive(key) {\n          const element = document.querySelector('#df-dcfbc557-8ff3-4ddc-b12d-ac11d9486b3f');\n          const dataTable =\n            await google.colab.kernel.invokeFunction('convertToInteractive',\n                                                     [key], {});\n          if (!dataTable) return;\n\n          const docLinkHtml = 'Like what you see? Visit the ' +\n            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n            + ' to learn more about interactive tables.';\n          element.innerHTML = '';\n          dataTable['output_type'] = 'display_data';\n          await google.colab.output.renderOutput(dataTable, element);\n          const docLink = document.createElement('div');\n          docLink.innerHTML = docLinkHtml;\n          element.appendChild(docLink);\n        }\n      </script>\n    </div>\n  </div>\n\n\n\n\n```python\nimport numpy as np\nparams = {\n    'n_neighbors' : np.arange(0, 50, 1)\n}\ntunned_knn = tune_model(knn_model, custom_grid=params)\nprint(tunned_knn)\n\n```\n\n\n\n  <div id=\"df-b3460ed9-d903-4ed4-b39b-824b759b0e90\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Accuracy</th>\n      <th>AUC</th>\n      <th>Recall</th>\n      <th>Prec.</th>\n      <th>F1</th>\n      <th>Kappa</th>\n      <th>MCC</th>\n    </tr>\n    <tr>\n      <th>Fold</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.7813</td>\n      <td>0.6482</td>\n      <td>0.0372</td>\n      <td>0.5000</td>\n      <td>0.0693</td>\n      <td>0.0402</td>\n      <td>0.0876</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.7807</td>\n      <td>0.6436</td>\n      <td>0.0315</td>\n      <td>0.4783</td>\n      <td>0.0591</td>\n      <td>0.0330</td>\n      <td>0.0759</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.7744</td>\n      <td>0.6563</td>\n      <td>0.0315</td>\n      <td>0.3333</td>\n      <td>0.0576</td>\n      <td>0.0206</td>\n      <td>0.0403</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.7845</td>\n      <td>0.6589</td>\n      <td>0.0659</td>\n      <td>0.5610</td>\n      <td>0.1179</td>\n      <td>0.0754</td>\n      <td>0.1345</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.7826</td>\n      <td>0.6645</td>\n      <td>0.0315</td>\n      <td>0.5500</td>\n      <td>0.0596</td>\n      <td>0.0368</td>\n      <td>0.0903</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>0.7794</td>\n      <td>0.6477</td>\n      <td>0.0544</td>\n      <td>0.4634</td>\n      <td>0.0974</td>\n      <td>0.0539</td>\n      <td>0.0961</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>0.7826</td>\n      <td>0.6278</td>\n      <td>0.0630</td>\n      <td>0.5238</td>\n      <td>0.1125</td>\n      <td>0.0688</td>\n      <td>0.1214</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>0.7751</td>\n      <td>0.6702</td>\n      <td>0.0372</td>\n      <td>0.3611</td>\n      <td>0.0675</td>\n      <td>0.0278</td>\n      <td>0.0523</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>0.7813</td>\n      <td>0.6409</td>\n      <td>0.0630</td>\n      <td>0.5000</td>\n      <td>0.1120</td>\n      <td>0.0662</td>\n      <td>0.1146</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>0.7881</td>\n      <td>0.6426</td>\n      <td>0.0661</td>\n      <td>0.6389</td>\n      <td>0.1198</td>\n      <td>0.0822</td>\n      <td>0.1548</td>\n    </tr>\n    <tr>\n      <th>Mean</th>\n      <td>0.7810</td>\n      <td>0.6501</td>\n      <td>0.0482</td>\n      <td>0.4910</td>\n      <td>0.0873</td>\n      <td>0.0505</td>\n      <td>0.0968</td>\n    </tr>\n    <tr>\n      <th>Std</th>\n      <td>0.0039</td>\n      <td>0.0119</td>\n      <td>0.0148</td>\n      <td>0.0861</td>\n      <td>0.0255</td>\n      <td>0.0206</td>\n      <td>0.0338</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b3460ed9-d903-4ed4-b39b-824b759b0e90')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n       width=\"24px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n  </svg>\n      </button>\n\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n      <script>\n        const buttonEl =\n          document.querySelector('#df-b3460ed9-d903-4ed4-b39b-824b759b0e90 button.colab-df-convert');\n        buttonEl.style.display =\n          google.colab.kernel.accessAllowed ? 'block' : 'none';\n\n        async function convertToInteractive(key) {\n          const element = document.querySelector('#df-b3460ed9-d903-4ed4-b39b-824b759b0e90');\n          const dataTable =\n            await google.colab.kernel.invokeFunction('convertToInteractive',\n                                                     [key], {});\n          if (!dataTable) return;\n\n          const docLinkHtml = 'Like what you see? Visit the ' +\n            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n            + ' to learn more about interactive tables.';\n          element.innerHTML = '';\n          dataTable['output_type'] = 'display_data';\n          await google.colab.output.renderOutput(dataTable, element);\n          const docLink = document.createElement('div');\n          docLink.innerHTML = docLinkHtml;\n          element.appendChild(docLink);\n        }\n      </script>\n    </div>\n  </div>\n\n\n\n    KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',\n                         metric_params=None, n_jobs=-1, n_neighbors=42, p=2,\n                         weights='uniform')\n    \n\n\n```python\nplot_model(tunned_knn, plot = 'auc')\n```\n\n\n    \n![png](/images/0705/output_17_0.png)\n    \n\n\n- AUC\n  + 최소 0.5, 최고 1\n  + 좋은 모델은 0.8 이상\n- ROC\n  + 면적\n\n\n```python\n# 의사결정 트리\n# plot_model(tunned_knn, plot = 'feature')\nplot_model(tunned_knn, plot='confusion_matrix')\n```\n\n\n    \n![png](/images/0705/output_19_0.png)\n    \n\n\n\n```python\nevaluate_model(tunned_knn)\n# 최고의 모델을 찾는 것 보다는 필요한 모델의 그래프를 비교할 때 사용\n```\n\n\n\n<script src=\"/static/components/requirejs/require.js\"></script>\n<script>\n  requirejs.config({\n    paths: {\n      base: '/static/base',\n      plotly: 'https://cdn.plot.ly/plotly-latest.min.js?noext',\n    },\n  });\n</script>\n\n\n\n\n    interactive(children=(ToggleButtons(description='Plot Type:', icons=('',), options=(('Hyperparameters', 'param…\n\n\n\n```python\nmodels()\n```\n\n\n\n<script src=\"/static/components/requirejs/require.js\"></script>\n<script>\n  requirejs.config({\n    paths: {\n      base: '/static/base',\n      plotly: 'https://cdn.plot.ly/plotly-latest.min.js?noext',\n    },\n  });\n</script>\n\n\n\n\n\n\n\n  <div id=\"df-d12a53d1-70cd-4e9e-bc39-3807e72a559f\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Name</th>\n      <th>Reference</th>\n      <th>Turbo</th>\n    </tr>\n    <tr>\n      <th>ID</th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>lr</th>\n      <td>Logistic Regression</td>\n      <td>sklearn.linear_model._logistic.LogisticRegression</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>knn</th>\n      <td>K Neighbors Classifier</td>\n      <td>sklearn.neighbors._classification.KNeighborsCl...</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>nb</th>\n      <td>Naive Bayes</td>\n      <td>sklearn.naive_bayes.GaussianNB</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>dt</th>\n      <td>Decision Tree Classifier</td>\n      <td>sklearn.tree._classes.DecisionTreeClassifier</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>svm</th>\n      <td>SVM - Linear Kernel</td>\n      <td>sklearn.linear_model._stochastic_gradient.SGDC...</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>rbfsvm</th>\n      <td>SVM - Radial Kernel</td>\n      <td>sklearn.svm._classes.SVC</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>gpc</th>\n      <td>Gaussian Process Classifier</td>\n      <td>sklearn.gaussian_process._gpc.GaussianProcessC...</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>mlp</th>\n      <td>MLP Classifier</td>\n      <td>sklearn.neural_network._multilayer_perceptron....</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>ridge</th>\n      <td>Ridge Classifier</td>\n      <td>sklearn.linear_model._ridge.RidgeClassifier</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>rf</th>\n      <td>Random Forest Classifier</td>\n      <td>sklearn.ensemble._forest.RandomForestClassifier</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>qda</th>\n      <td>Quadratic Discriminant Analysis</td>\n      <td>sklearn.discriminant_analysis.QuadraticDiscrim...</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>ada</th>\n      <td>Ada Boost Classifier</td>\n      <td>sklearn.ensemble._weight_boosting.AdaBoostClas...</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>gbc</th>\n      <td>Gradient Boosting Classifier</td>\n      <td>sklearn.ensemble._gb.GradientBoostingClassifier</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>lda</th>\n      <td>Linear Discriminant Analysis</td>\n      <td>sklearn.discriminant_analysis.LinearDiscrimina...</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>et</th>\n      <td>Extra Trees Classifier</td>\n      <td>sklearn.ensemble._forest.ExtraTreesClassifier</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>lightgbm</th>\n      <td>Light Gradient Boosting Machine</td>\n      <td>lightgbm.sklearn.LGBMClassifier</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>dummy</th>\n      <td>Dummy Classifier</td>\n      <td>sklearn.dummy.DummyClassifier</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d12a53d1-70cd-4e9e-bc39-3807e72a559f')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n       width=\"24px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n  </svg>\n      </button>\n\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n      <script>\n        const buttonEl =\n          document.querySelector('#df-d12a53d1-70cd-4e9e-bc39-3807e72a559f button.colab-df-convert');\n        buttonEl.style.display =\n          google.colab.kernel.accessAllowed ? 'block' : 'none';\n\n        async function convertToInteractive(key) {\n          const element = document.querySelector('#df-d12a53d1-70cd-4e9e-bc39-3807e72a559f');\n          const dataTable =\n            await google.colab.kernel.invokeFunction('convertToInteractive',\n                                                     [key], {});\n          if (!dataTable) return;\n\n          const docLinkHtml = 'Like what you see? Visit the ' +\n            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n            + ' to learn more about interactive tables.';\n          element.innerHTML = '';\n          dataTable['output_type'] = 'display_data';\n          await google.colab.output.renderOutput(dataTable, element);\n          const docLink = document.createElement('div');\n          docLink.innerHTML = docLinkHtml;\n          element.appendChild(docLink);\n        }\n      </script>\n    </div>\n  </div>\n\n\n\n","slug":"PyCaret_Sample (1)","published":1,"updated":"2022-08-06T13:02:32.787Z","_id":"cl5fcok7o000djku08w3t3vtw","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n</li>\n<li><p>PyCaret 설치</p>\n</li>\n<li><p><a href=\"https://github.com/pycaret/pycaret\">https://github.com/pycaret/pycaret</a>  에서 requirement.txt에 있는 목록 다 버전 맞춰서 깐다.</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!pip uninstall sklearn -y</span><br><span class=\"line\">!pip install --upgrade sklearn</span><br><span class=\"line\">!pip install scikit-learn==<span class=\"number\">0.23</span><span class=\"number\">.2</span> --user</span><br><span class=\"line\">!pip install pycaret</span><br><span class=\"line\">!pip install markupsafe==<span class=\"number\">2.0</span><span class=\"number\">.1</span></span><br><span class=\"line\"><span class=\"comment\"># 밑에 &quot;RESTART RUMTIME&quot; 을 클릭한다. (파란글씨 X)</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>PyCaret을 구글 코랩에서 활성화</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pycaret.utils <span class=\"keyword\">import</span> enable_colab</span><br><span class=\"line\">enable_colab()</span><br></pre></td></tr></table></figure>\n\n<pre><code>Colab mode enabled.\n</code></pre>\n<h3 id=\"데이터-불러오기\"><a href=\"#데이터-불러오기\" class=\"headerlink\" title=\"데이터 불러오기\"></a>데이터 불러오기</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pycaret.datasets <span class=\"keyword\">import</span> get_data</span><br><span class=\"line\">dataset = get_data(<span class=\"string\">&#x27;credit&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># credit 데이터 = 신용카드 연체 데이터, PyCaret 의 샘플 데이터이다.</span></span><br></pre></td></tr></table></figure>\n\n\n\n<script src=\"/static/components/requirejs/require.js\"></script>\n<script>\n  requirejs.config({\n    paths: {\n      base: '/static/base',\n      plotly: 'https://cdn.plot.ly/plotly-latest.min.js?noext',\n    },\n  });\n</script>\n\n\n\n\n\n  <div id=\"df-c4307632-6e01-480c-9107-02c1c7afdd50\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>LIMIT_BAL</th>\n      <th>SEX</th>\n      <th>EDUCATION</th>\n      <th>MARRIAGE</th>\n      <th>AGE</th>\n      <th>PAY_1</th>\n      <th>PAY_2</th>\n      <th>PAY_3</th>\n      <th>PAY_4</th>\n      <th>PAY_5</th>\n      <th>...</th>\n      <th>BILL_AMT4</th>\n      <th>BILL_AMT5</th>\n      <th>BILL_AMT6</th>\n      <th>PAY_AMT1</th>\n      <th>PAY_AMT2</th>\n      <th>PAY_AMT3</th>\n      <th>PAY_AMT4</th>\n      <th>PAY_AMT5</th>\n      <th>PAY_AMT6</th>\n      <th>default</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>20000</td>\n      <td>2</td>\n      <td>2</td>\n      <td>1</td>\n      <td>24</td>\n      <td>2</td>\n      <td>2</td>\n      <td>-1</td>\n      <td>-1</td>\n      <td>-2</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>689.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>90000</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>34</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>14331.0</td>\n      <td>14948.0</td>\n      <td>15549.0</td>\n      <td>1518.0</td>\n      <td>1500.0</td>\n      <td>1000.0</td>\n      <td>1000.0</td>\n      <td>1000.0</td>\n      <td>5000.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>50000</td>\n      <td>2</td>\n      <td>2</td>\n      <td>1</td>\n      <td>37</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>28314.0</td>\n      <td>28959.0</td>\n      <td>29547.0</td>\n      <td>2000.0</td>\n      <td>2019.0</td>\n      <td>1200.0</td>\n      <td>1100.0</td>\n      <td>1069.0</td>\n      <td>1000.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>50000</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>57</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>20940.0</td>\n      <td>19146.0</td>\n      <td>19131.0</td>\n      <td>2000.0</td>\n      <td>36681.0</td>\n      <td>10000.0</td>\n      <td>9000.0</td>\n      <td>689.0</td>\n      <td>679.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>50000</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>37</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>19394.0</td>\n      <td>19619.0</td>\n      <td>20024.0</td>\n      <td>2500.0</td>\n      <td>1815.0</td>\n      <td>657.0</td>\n      <td>1000.0</td>\n      <td>1000.0</td>\n      <td>800.0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 24 columns</p>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c4307632-6e01-480c-9107-02c1c7afdd50')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n<p>  &lt;svg xmlns&#x3D;”<a href=\"http://www.w3.org/2000/svg&quot;\">http://www.w3.org/2000/svg&quot;</a> height&#x3D;”24px”viewBox&#x3D;”0 0 24 24”<br>       width&#x3D;”24px”&gt;<br>    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><br>    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/><br>  </svg><br>      </button></p>\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n<pre><code>  &lt;script&gt;\n    const buttonEl =\n      document.querySelector(&#39;#df-c4307632-6e01-480c-9107-02c1c7afdd50 button.colab-df-convert&#39;);\n    buttonEl.style.display =\n      google.colab.kernel.accessAllowed ? &#39;block&#39; : &#39;none&#39;;\n\n    async function convertToInteractive(key) &#123;\n      const element = document.querySelector(&#39;#df-c4307632-6e01-480c-9107-02c1c7afdd50&#39;);\n      const dataTable =\n        await google.colab.kernel.invokeFunction(&#39;convertToInteractive&#39;,\n                                                 [key], &#123;&#125;);\n      if (!dataTable) return;\n\n      const docLinkHtml = &#39;Like what you see? Visit the &#39; +\n        &#39;&lt;a target=&quot;_blank&quot; href=https://colab.research.google.com/notebooks/data_table.ipynb&gt;data table notebook&lt;/a&gt;&#39;\n        + &#39; to learn more about interactive tables.&#39;;\n      element.innerHTML = &#39;&#39;;\n      dataTable[&#39;output_type&#39;] = &#39;display_data&#39;;\n      await google.colab.output.renderOutput(dataTable, element);\n      const docLink = document.createElement(&#39;div&#39;);\n      docLink.innerHTML = docLinkHtml;\n      element.appendChild(docLink);\n    &#125;\n  &lt;/script&gt;\n&lt;/div&gt;\n</code></pre>\n  </div>\n\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dataset.info()</span><br></pre></td></tr></table></figure>\n\n\n\n<script src=\"/static/components/requirejs/require.js\"></script>\n<script>\n  requirejs.config({\n    paths: {\n      base: '/static/base',\n      plotly: 'https://cdn.plot.ly/plotly-latest.min.js?noext',\n    },\n  });\n</script>\n\n\n\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 24000 entries, 0 to 23999\nData columns (total 24 columns):\n #   Column     Non-Null Count  Dtype  \n---  ------     --------------  -----  \n 0   LIMIT_BAL  24000 non-null  int64  \n 1   SEX        24000 non-null  int64  \n 2   EDUCATION  24000 non-null  int64  \n 3   MARRIAGE   24000 non-null  int64  \n 4   AGE        24000 non-null  int64  \n 5   PAY_1      24000 non-null  int64  \n 6   PAY_2      24000 non-null  int64  \n 7   PAY_3      24000 non-null  int64  \n 8   PAY_4      24000 non-null  int64  \n 9   PAY_5      24000 non-null  int64  \n 10  PAY_6      24000 non-null  int64  \n 11  BILL_AMT1  24000 non-null  float64\n 12  BILL_AMT2  24000 non-null  float64\n 13  BILL_AMT3  24000 non-null  float64\n 14  BILL_AMT4  24000 non-null  float64\n 15  BILL_AMT5  24000 non-null  float64\n 16  BILL_AMT6  24000 non-null  float64\n 17  PAY_AMT1   24000 non-null  float64\n 18  PAY_AMT2   24000 non-null  float64\n 19  PAY_AMT3   24000 non-null  float64\n 20  PAY_AMT4   24000 non-null  float64\n 21  PAY_AMT5   24000 non-null  float64\n 22  PAY_AMT6   24000 non-null  float64\n 23  default    24000 non-null  int64  \ndtypes: float64(12), int64(12)\nmemory usage: 4.4 MB\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data = dataset.sample(frac=<span class=\"number\">0.95</span>, random_state=<span class=\"number\">786</span>)</span><br><span class=\"line\">data_unseen = dataset.drop(data.index)</span><br><span class=\"line\">data.reset_index(inplace=<span class=\"literal\">True</span>, drop=<span class=\"literal\">True</span>)</span><br><span class=\"line\">data_unseen.reset_index(inplace=<span class=\"literal\">True</span>, drop=<span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Data for Modeling: &#x27;</span> + <span class=\"built_in\">str</span>(data.shape))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Unseen Data For Predictions: &#x27;</span> + <span class=\"built_in\">str</span>(data_unseen.shape))</span><br></pre></td></tr></table></figure>\n\n\n\n<script src=\"/static/components/requirejs/require.js\"></script>\n<script>\n  requirejs.config({\n    paths: {\n      base: '/static/base',\n      plotly: 'https://cdn.plot.ly/plotly-latest.min.js?noext',\n    },\n  });\n</script>\n\n\n\n<pre><code>Data for Modeling: (22800, 24)\nUnseen Data For Predictions: (1200, 24)\n</code></pre>\n<ul>\n<li>setup</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> jinja2</span><br><span class=\"line\"><span class=\"keyword\">from</span> pycaret.classification <span class=\"keyword\">import</span> *</span><br><span class=\"line\">exp_clf101 = setup(data = data, target = <span class=\"string\">&#x27;default&#x27;</span>, session_id=<span class=\"number\">123</span>)</span><br><span class=\"line\"><span class=\"comment\"># 빈 칸이 뜨면 엔터 치기</span></span><br></pre></td></tr></table></figure>\n\n\n\n  <div id=\"df-02f377d0-f141-4491-8122-89a5f7a25949\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Description</th>\n      <th>Value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>session_id</td>\n      <td>123</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Target</td>\n      <td>default</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Target Type</td>\n      <td>Binary</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Label Encoded</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Original Data</td>\n      <td>(22800, 24)</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Missing Values</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Numeric Features</td>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Categorical Features</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Ordinal Features</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>High Cardinality Features</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>High Cardinality Method</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>Transformed Train Set</td>\n      <td>(15959, 88)</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Transformed Test Set</td>\n      <td>(6841, 88)</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>Shuffle Train-Test</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>Stratify Train-Test</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>Fold Generator</td>\n      <td>StratifiedKFold</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>Fold Number</td>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>CPU Jobs</td>\n      <td>-1</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>Use GPU</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>Log Experiment</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>Experiment Name</td>\n      <td>clf-default-name</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>USI</td>\n      <td>a6b7</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>Imputation Type</td>\n      <td>simple</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>Iterative Imputation Iteration</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>Numeric Imputer</td>\n      <td>mean</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>Iterative Imputation Numeric Model</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>Categorical Imputer</td>\n      <td>constant</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>Iterative Imputation Categorical Model</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>Unknown Categoricals Handling</td>\n      <td>least_frequent</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>Normalize</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>30</th>\n      <td>Normalize Method</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>31</th>\n      <td>Transformation</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>32</th>\n      <td>Transformation Method</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>33</th>\n      <td>PCA</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>34</th>\n      <td>PCA Method</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>35</th>\n      <td>PCA Components</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>36</th>\n      <td>Ignore Low Variance</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>37</th>\n      <td>Combine Rare Levels</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>38</th>\n      <td>Rare Level Threshold</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>39</th>\n      <td>Numeric Binning</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>40</th>\n      <td>Remove Outliers</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>41</th>\n      <td>Outliers Threshold</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>42</th>\n      <td>Remove Multicollinearity</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>43</th>\n      <td>Multicollinearity Threshold</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>44</th>\n      <td>Remove Perfect Collinearity</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>45</th>\n      <td>Clustering</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>46</th>\n      <td>Clustering Iteration</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>47</th>\n      <td>Polynomial Features</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>48</th>\n      <td>Polynomial Degree</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>49</th>\n      <td>Trignometry Features</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>50</th>\n      <td>Polynomial Threshold</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>51</th>\n      <td>Group Features</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>52</th>\n      <td>Feature Selection</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>53</th>\n      <td>Feature Selection Method</td>\n      <td>classic</td>\n    </tr>\n    <tr>\n      <th>54</th>\n      <td>Features Selection Threshold</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>55</th>\n      <td>Feature Interaction</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>56</th>\n      <td>Feature Ratio</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>57</th>\n      <td>Interaction Threshold</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>58</th>\n      <td>Fix Imbalance</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>59</th>\n      <td>Fix Imbalance Method</td>\n      <td>SMOTE</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-02f377d0-f141-4491-8122-89a5f7a25949')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n<p>  &lt;svg xmlns&#x3D;”<a href=\"http://www.w3.org/2000/svg&quot;\">http://www.w3.org/2000/svg&quot;</a> height&#x3D;”24px”viewBox&#x3D;”0 0 24 24”<br>       width&#x3D;”24px”&gt;<br>    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><br>    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/><br>  </svg><br>      </button></p>\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n\n\n<h2 id=\"모델링\"><a href=\"#모델링\" class=\"headerlink\" title=\"모델링\"></a>모델링</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">best_model = compare_models()</span><br></pre></td></tr></table></figure>\n\n\n\n  <div id=\"df-1f936788-ded9-461f-8219-3f16656853b9\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Model</th>\n      <th>Accuracy</th>\n      <th>AUC</th>\n      <th>Recall</th>\n      <th>Prec.</th>\n      <th>F1</th>\n      <th>Kappa</th>\n      <th>MCC</th>\n      <th>TT (Sec)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>ridge</th>\n      <td>Ridge Classifier</td>\n      <td>0.8254</td>\n      <td>0.0000</td>\n      <td>0.3637</td>\n      <td>0.6913</td>\n      <td>0.4764</td>\n      <td>0.3836</td>\n      <td>0.4122</td>\n      <td>0.038</td>\n    </tr>\n    <tr>\n      <th>lda</th>\n      <td>Linear Discriminant Analysis</td>\n      <td>0.8247</td>\n      <td>0.7634</td>\n      <td>0.3755</td>\n      <td>0.6794</td>\n      <td>0.4835</td>\n      <td>0.3884</td>\n      <td>0.4132</td>\n      <td>0.300</td>\n    </tr>\n    <tr>\n      <th>gbc</th>\n      <td>Gradient Boosting Classifier</td>\n      <td>0.8226</td>\n      <td>0.7789</td>\n      <td>0.3551</td>\n      <td>0.6806</td>\n      <td>0.4664</td>\n      <td>0.3725</td>\n      <td>0.4010</td>\n      <td>5.707</td>\n    </tr>\n    <tr>\n      <th>ada</th>\n      <td>Ada Boost Classifier</td>\n      <td>0.8221</td>\n      <td>0.7697</td>\n      <td>0.3505</td>\n      <td>0.6811</td>\n      <td>0.4626</td>\n      <td>0.3690</td>\n      <td>0.3983</td>\n      <td>1.312</td>\n    </tr>\n    <tr>\n      <th>lightgbm</th>\n      <td>Light Gradient Boosting Machine</td>\n      <td>0.8210</td>\n      <td>0.7750</td>\n      <td>0.3609</td>\n      <td>0.6679</td>\n      <td>0.4683</td>\n      <td>0.3721</td>\n      <td>0.3977</td>\n      <td>0.420</td>\n    </tr>\n    <tr>\n      <th>rf</th>\n      <td>Random Forest Classifier</td>\n      <td>0.8199</td>\n      <td>0.7598</td>\n      <td>0.3663</td>\n      <td>0.6601</td>\n      <td>0.4707</td>\n      <td>0.3727</td>\n      <td>0.3965</td>\n      <td>3.079</td>\n    </tr>\n    <tr>\n      <th>et</th>\n      <td>Extra Trees Classifier</td>\n      <td>0.8092</td>\n      <td>0.7377</td>\n      <td>0.3677</td>\n      <td>0.6047</td>\n      <td>0.4571</td>\n      <td>0.3497</td>\n      <td>0.3657</td>\n      <td>2.547</td>\n    </tr>\n    <tr>\n      <th>lr</th>\n      <td>Logistic Regression</td>\n      <td>0.7814</td>\n      <td>0.6410</td>\n      <td>0.0003</td>\n      <td>0.1000</td>\n      <td>0.0006</td>\n      <td>0.0003</td>\n      <td>0.0034</td>\n      <td>1.005</td>\n    </tr>\n    <tr>\n      <th>dummy</th>\n      <td>Dummy Classifier</td>\n      <td>0.7814</td>\n      <td>0.5000</td>\n      <td>0.0000</td>\n      <td>0.0000</td>\n      <td>0.0000</td>\n      <td>0.0000</td>\n      <td>0.0000</td>\n      <td>0.029</td>\n    </tr>\n    <tr>\n      <th>knn</th>\n      <td>K Neighbors Classifier</td>\n      <td>0.7547</td>\n      <td>0.5939</td>\n      <td>0.1763</td>\n      <td>0.3719</td>\n      <td>0.2388</td>\n      <td>0.1145</td>\n      <td>0.1259</td>\n      <td>0.943</td>\n    </tr>\n    <tr>\n      <th>dt</th>\n      <td>Decision Tree Classifier</td>\n      <td>0.7293</td>\n      <td>0.6147</td>\n      <td>0.4104</td>\n      <td>0.3878</td>\n      <td>0.3986</td>\n      <td>0.2242</td>\n      <td>0.2245</td>\n      <td>0.378</td>\n    </tr>\n    <tr>\n      <th>svm</th>\n      <td>SVM - Linear Kernel</td>\n      <td>0.7277</td>\n      <td>0.0000</td>\n      <td>0.1017</td>\n      <td>0.1671</td>\n      <td>0.0984</td>\n      <td>0.0067</td>\n      <td>0.0075</td>\n      <td>0.498</td>\n    </tr>\n    <tr>\n      <th>qda</th>\n      <td>Quadratic Discriminant Analysis</td>\n      <td>0.5098</td>\n      <td>0.5473</td>\n      <td>0.6141</td>\n      <td>0.2472</td>\n      <td>0.3488</td>\n      <td>0.0600</td>\n      <td>0.0805</td>\n      <td>0.154</td>\n    </tr>\n    <tr>\n      <th>nb</th>\n      <td>Naive Bayes</td>\n      <td>0.3760</td>\n      <td>0.6442</td>\n      <td>0.8845</td>\n      <td>0.2441</td>\n      <td>0.3826</td>\n      <td>0.0608</td>\n      <td>0.1207</td>\n      <td>0.047</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1f936788-ded9-461f-8219-3f16656853b9')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n<p>  &lt;svg xmlns&#x3D;”<a href=\"http://www.w3.org/2000/svg&quot;\">http://www.w3.org/2000/svg&quot;</a> height&#x3D;”24px”viewBox&#x3D;”0 0 24 24”<br>       width&#x3D;”24px”&gt;<br>    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><br>    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/><br>  </svg><br>      </button></p>\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n<pre><code>  &lt;script&gt;\n    const buttonEl =\n      document.querySelector(&#39;#df-1f936788-ded9-461f-8219-3f16656853b9 button.colab-df-convert&#39;);\n    buttonEl.style.display =\n      google.colab.kernel.accessAllowed ? &#39;block&#39; : &#39;none&#39;;\n\n    async function convertToInteractive(key) &#123;\n      const element = document.querySelector(&#39;#df-1f936788-ded9-461f-8219-3f16656853b9&#39;);\n      const dataTable =\n        await google.colab.kernel.invokeFunction(&#39;convertToInteractive&#39;,\n                                                 [key], &#123;&#125;);\n      if (!dataTable) return;\n\n      const docLinkHtml = &#39;Like what you see? Visit the &#39; +\n        &#39;&lt;a target=&quot;_blank&quot; href=https://colab.research.google.com/notebooks/data_table.ipynb&gt;data table notebook&lt;/a&gt;&#39;\n        + &#39; to learn more about interactive tables.&#39;;\n      element.innerHTML = &#39;&#39;;\n      dataTable[&#39;output_type&#39;] = &#39;display_data&#39;;\n      await google.colab.output.renderOutput(dataTable, element);\n      const docLink = document.createElement(&#39;div&#39;);\n      docLink.innerHTML = docLinkHtml;\n      element.appendChild(docLink);\n    &#125;\n  &lt;/script&gt;\n&lt;/div&gt;\n</code></pre>\n  </div>\n\n\n\n<ul>\n<li>여기서 가장 좋은 모델을 뽑기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(best_model)</span><br></pre></td></tr></table></figure>\n\n\n\n<script src=\"/static/components/requirejs/require.js\"></script>\n<script>\n  requirejs.config({\n    paths: {\n      base: '/static/base',\n      plotly: 'https://cdn.plot.ly/plotly-latest.min.js?noext',\n    },\n  });\n</script>\n\n\n\n<pre><code>RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,\n                max_iter=None, normalize=False, random_state=123, solver=&#39;auto&#39;,\n                tol=0.001)\n</code></pre>\n<ul>\n<li>모델 생성</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">knn_model = create_model(<span class=\"string\">&#x27;knn&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># create_model(&#x27;모델ID&#x27;)</span></span><br></pre></td></tr></table></figure>\n\n\n\n  <div id=\"df-dcfbc557-8ff3-4ddc-b12d-ac11d9486b3f\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Accuracy</th>\n      <th>AUC</th>\n      <th>Recall</th>\n      <th>Prec.</th>\n      <th>F1</th>\n      <th>Kappa</th>\n      <th>MCC</th>\n    </tr>\n    <tr>\n      <th>Fold</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.7469</td>\n      <td>0.6020</td>\n      <td>0.1920</td>\n      <td>0.3545</td>\n      <td>0.2491</td>\n      <td>0.1128</td>\n      <td>0.1204</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.7550</td>\n      <td>0.5894</td>\n      <td>0.2092</td>\n      <td>0.3883</td>\n      <td>0.2719</td>\n      <td>0.1402</td>\n      <td>0.1500</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.7506</td>\n      <td>0.5883</td>\n      <td>0.1576</td>\n      <td>0.3459</td>\n      <td>0.2165</td>\n      <td>0.0923</td>\n      <td>0.1024</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.7419</td>\n      <td>0.5818</td>\n      <td>0.1519</td>\n      <td>0.3136</td>\n      <td>0.2046</td>\n      <td>0.0723</td>\n      <td>0.0790</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.7563</td>\n      <td>0.5908</td>\n      <td>0.1490</td>\n      <td>0.3611</td>\n      <td>0.2110</td>\n      <td>0.0954</td>\n      <td>0.1085</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>0.7550</td>\n      <td>0.5997</td>\n      <td>0.1748</td>\n      <td>0.3720</td>\n      <td>0.2378</td>\n      <td>0.1139</td>\n      <td>0.1255</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>0.7638</td>\n      <td>0.5890</td>\n      <td>0.1891</td>\n      <td>0.4125</td>\n      <td>0.2593</td>\n      <td>0.1413</td>\n      <td>0.1565</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>0.7613</td>\n      <td>0.6240</td>\n      <td>0.1633</td>\n      <td>0.3904</td>\n      <td>0.2303</td>\n      <td>0.1163</td>\n      <td>0.1318</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>0.7619</td>\n      <td>0.5988</td>\n      <td>0.1862</td>\n      <td>0.4037</td>\n      <td>0.2549</td>\n      <td>0.1356</td>\n      <td>0.1500</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>0.7549</td>\n      <td>0.5756</td>\n      <td>0.1897</td>\n      <td>0.3771</td>\n      <td>0.2524</td>\n      <td>0.1246</td>\n      <td>0.1351</td>\n    </tr>\n    <tr>\n      <th>Mean</th>\n      <td>0.7547</td>\n      <td>0.5939</td>\n      <td>0.1763</td>\n      <td>0.3719</td>\n      <td>0.2388</td>\n      <td>0.1145</td>\n      <td>0.1259</td>\n    </tr>\n    <tr>\n      <th>Std</th>\n      <td>0.0065</td>\n      <td>0.0126</td>\n      <td>0.0191</td>\n      <td>0.0279</td>\n      <td>0.0214</td>\n      <td>0.0214</td>\n      <td>0.0230</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dcfbc557-8ff3-4ddc-b12d-ac11d9486b3f')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n<p>  &lt;svg xmlns&#x3D;”<a href=\"http://www.w3.org/2000/svg&quot;\">http://www.w3.org/2000/svg&quot;</a> height&#x3D;”24px”viewBox&#x3D;”0 0 24 24”<br>       width&#x3D;”24px”&gt;<br>    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><br>    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/><br>  </svg><br>      </button></p>\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n<pre><code>  &lt;script&gt;\n    const buttonEl =\n      document.querySelector(&#39;#df-dcfbc557-8ff3-4ddc-b12d-ac11d9486b3f button.colab-df-convert&#39;);\n    buttonEl.style.display =\n      google.colab.kernel.accessAllowed ? &#39;block&#39; : &#39;none&#39;;\n\n    async function convertToInteractive(key) &#123;\n      const element = document.querySelector(&#39;#df-dcfbc557-8ff3-4ddc-b12d-ac11d9486b3f&#39;);\n      const dataTable =\n        await google.colab.kernel.invokeFunction(&#39;convertToInteractive&#39;,\n                                                 [key], &#123;&#125;);\n      if (!dataTable) return;\n\n      const docLinkHtml = &#39;Like what you see? Visit the &#39; +\n        &#39;&lt;a target=&quot;_blank&quot; href=https://colab.research.google.com/notebooks/data_table.ipynb&gt;data table notebook&lt;/a&gt;&#39;\n        + &#39; to learn more about interactive tables.&#39;;\n      element.innerHTML = &#39;&#39;;\n      dataTable[&#39;output_type&#39;] = &#39;display_data&#39;;\n      await google.colab.output.renderOutput(dataTable, element);\n      const docLink = document.createElement(&#39;div&#39;);\n      docLink.innerHTML = docLinkHtml;\n      element.appendChild(docLink);\n    &#125;\n  &lt;/script&gt;\n&lt;/div&gt;\n</code></pre>\n  </div>\n\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\">params = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;n_neighbors&#x27;</span> : np.arange(<span class=\"number\">0</span>, <span class=\"number\">50</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">tunned_knn = tune_model(knn_model, custom_grid=params)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(tunned_knn)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n  <div id=\"df-b3460ed9-d903-4ed4-b39b-824b759b0e90\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Accuracy</th>\n      <th>AUC</th>\n      <th>Recall</th>\n      <th>Prec.</th>\n      <th>F1</th>\n      <th>Kappa</th>\n      <th>MCC</th>\n    </tr>\n    <tr>\n      <th>Fold</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.7813</td>\n      <td>0.6482</td>\n      <td>0.0372</td>\n      <td>0.5000</td>\n      <td>0.0693</td>\n      <td>0.0402</td>\n      <td>0.0876</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.7807</td>\n      <td>0.6436</td>\n      <td>0.0315</td>\n      <td>0.4783</td>\n      <td>0.0591</td>\n      <td>0.0330</td>\n      <td>0.0759</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.7744</td>\n      <td>0.6563</td>\n      <td>0.0315</td>\n      <td>0.3333</td>\n      <td>0.0576</td>\n      <td>0.0206</td>\n      <td>0.0403</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.7845</td>\n      <td>0.6589</td>\n      <td>0.0659</td>\n      <td>0.5610</td>\n      <td>0.1179</td>\n      <td>0.0754</td>\n      <td>0.1345</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.7826</td>\n      <td>0.6645</td>\n      <td>0.0315</td>\n      <td>0.5500</td>\n      <td>0.0596</td>\n      <td>0.0368</td>\n      <td>0.0903</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>0.7794</td>\n      <td>0.6477</td>\n      <td>0.0544</td>\n      <td>0.4634</td>\n      <td>0.0974</td>\n      <td>0.0539</td>\n      <td>0.0961</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>0.7826</td>\n      <td>0.6278</td>\n      <td>0.0630</td>\n      <td>0.5238</td>\n      <td>0.1125</td>\n      <td>0.0688</td>\n      <td>0.1214</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>0.7751</td>\n      <td>0.6702</td>\n      <td>0.0372</td>\n      <td>0.3611</td>\n      <td>0.0675</td>\n      <td>0.0278</td>\n      <td>0.0523</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>0.7813</td>\n      <td>0.6409</td>\n      <td>0.0630</td>\n      <td>0.5000</td>\n      <td>0.1120</td>\n      <td>0.0662</td>\n      <td>0.1146</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>0.7881</td>\n      <td>0.6426</td>\n      <td>0.0661</td>\n      <td>0.6389</td>\n      <td>0.1198</td>\n      <td>0.0822</td>\n      <td>0.1548</td>\n    </tr>\n    <tr>\n      <th>Mean</th>\n      <td>0.7810</td>\n      <td>0.6501</td>\n      <td>0.0482</td>\n      <td>0.4910</td>\n      <td>0.0873</td>\n      <td>0.0505</td>\n      <td>0.0968</td>\n    </tr>\n    <tr>\n      <th>Std</th>\n      <td>0.0039</td>\n      <td>0.0119</td>\n      <td>0.0148</td>\n      <td>0.0861</td>\n      <td>0.0255</td>\n      <td>0.0206</td>\n      <td>0.0338</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b3460ed9-d903-4ed4-b39b-824b759b0e90')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n<p>  &lt;svg xmlns&#x3D;”<a href=\"http://www.w3.org/2000/svg&quot;\">http://www.w3.org/2000/svg&quot;</a> height&#x3D;”24px”viewBox&#x3D;”0 0 24 24”<br>       width&#x3D;”24px”&gt;<br>    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><br>    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/><br>  </svg><br>      </button></p>\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n<pre><code>  &lt;script&gt;\n    const buttonEl =\n      document.querySelector(&#39;#df-b3460ed9-d903-4ed4-b39b-824b759b0e90 button.colab-df-convert&#39;);\n    buttonEl.style.display =\n      google.colab.kernel.accessAllowed ? &#39;block&#39; : &#39;none&#39;;\n\n    async function convertToInteractive(key) &#123;\n      const element = document.querySelector(&#39;#df-b3460ed9-d903-4ed4-b39b-824b759b0e90&#39;);\n      const dataTable =\n        await google.colab.kernel.invokeFunction(&#39;convertToInteractive&#39;,\n                                                 [key], &#123;&#125;);\n      if (!dataTable) return;\n\n      const docLinkHtml = &#39;Like what you see? Visit the &#39; +\n        &#39;&lt;a target=&quot;_blank&quot; href=https://colab.research.google.com/notebooks/data_table.ipynb&gt;data table notebook&lt;/a&gt;&#39;\n        + &#39; to learn more about interactive tables.&#39;;\n      element.innerHTML = &#39;&#39;;\n      dataTable[&#39;output_type&#39;] = &#39;display_data&#39;;\n      await google.colab.output.renderOutput(dataTable, element);\n      const docLink = document.createElement(&#39;div&#39;);\n      docLink.innerHTML = docLinkHtml;\n      element.appendChild(docLink);\n    &#125;\n  &lt;/script&gt;\n&lt;/div&gt;\n</code></pre>\n  </div>\n\n\n\n<pre><code>KNeighborsClassifier(algorithm=&#39;auto&#39;, leaf_size=30, metric=&#39;minkowski&#39;,\n                     metric_params=None, n_jobs=-1, n_neighbors=42, p=2,\n                     weights=&#39;uniform&#39;)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plot_model(tunned_knn, plot = <span class=\"string\">&#x27;auc&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0705/output_17_0.png\" alt=\"png\"></p>\n<ul>\n<li>AUC<ul>\n<li>최소 0.5, 최고 1</li>\n<li>좋은 모델은 0.8 이상</li>\n</ul>\n</li>\n<li>ROC<ul>\n<li>면적</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 의사결정 트리</span></span><br><span class=\"line\"><span class=\"comment\"># plot_model(tunned_knn, plot = &#x27;feature&#x27;)</span></span><br><span class=\"line\">plot_model(tunned_knn, plot=<span class=\"string\">&#x27;confusion_matrix&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0705/output_19_0.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">evaluate_model(tunned_knn)</span><br><span class=\"line\"><span class=\"comment\"># 최고의 모델을 찾는 것 보다는 필요한 모델의 그래프를 비교할 때 사용</span></span><br></pre></td></tr></table></figure>\n\n\n\n<script src=\"/static/components/requirejs/require.js\"></script>\n<script>\n  requirejs.config({\n    paths: {\n      base: '/static/base',\n      plotly: 'https://cdn.plot.ly/plotly-latest.min.js?noext',\n    },\n  });\n</script>\n\n\n\n\n<pre><code>interactive(children=(ToggleButtons(description=&#39;Plot Type:&#39;, icons=(&#39;&#39;,), options=((&#39;Hyperparameters&#39;, &#39;param…\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">models()</span><br></pre></td></tr></table></figure>\n\n\n\n<script src=\"/static/components/requirejs/require.js\"></script>\n<script>\n  requirejs.config({\n    paths: {\n      base: '/static/base',\n      plotly: 'https://cdn.plot.ly/plotly-latest.min.js?noext',\n    },\n  });\n</script>\n\n\n\n\n\n\n\n  <div id=\"df-d12a53d1-70cd-4e9e-bc39-3807e72a559f\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Name</th>\n      <th>Reference</th>\n      <th>Turbo</th>\n    </tr>\n    <tr>\n      <th>ID</th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>lr</th>\n      <td>Logistic Regression</td>\n      <td>sklearn.linear_model._logistic.LogisticRegression</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>knn</th>\n      <td>K Neighbors Classifier</td>\n      <td>sklearn.neighbors._classification.KNeighborsCl...</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>nb</th>\n      <td>Naive Bayes</td>\n      <td>sklearn.naive_bayes.GaussianNB</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>dt</th>\n      <td>Decision Tree Classifier</td>\n      <td>sklearn.tree._classes.DecisionTreeClassifier</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>svm</th>\n      <td>SVM - Linear Kernel</td>\n      <td>sklearn.linear_model._stochastic_gradient.SGDC...</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>rbfsvm</th>\n      <td>SVM - Radial Kernel</td>\n      <td>sklearn.svm._classes.SVC</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>gpc</th>\n      <td>Gaussian Process Classifier</td>\n      <td>sklearn.gaussian_process._gpc.GaussianProcessC...</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>mlp</th>\n      <td>MLP Classifier</td>\n      <td>sklearn.neural_network._multilayer_perceptron....</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>ridge</th>\n      <td>Ridge Classifier</td>\n      <td>sklearn.linear_model._ridge.RidgeClassifier</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>rf</th>\n      <td>Random Forest Classifier</td>\n      <td>sklearn.ensemble._forest.RandomForestClassifier</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>qda</th>\n      <td>Quadratic Discriminant Analysis</td>\n      <td>sklearn.discriminant_analysis.QuadraticDiscrim...</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>ada</th>\n      <td>Ada Boost Classifier</td>\n      <td>sklearn.ensemble._weight_boosting.AdaBoostClas...</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>gbc</th>\n      <td>Gradient Boosting Classifier</td>\n      <td>sklearn.ensemble._gb.GradientBoostingClassifier</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>lda</th>\n      <td>Linear Discriminant Analysis</td>\n      <td>sklearn.discriminant_analysis.LinearDiscrimina...</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>et</th>\n      <td>Extra Trees Classifier</td>\n      <td>sklearn.ensemble._forest.ExtraTreesClassifier</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>lightgbm</th>\n      <td>Light Gradient Boosting Machine</td>\n      <td>lightgbm.sklearn.LGBMClassifier</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>dummy</th>\n      <td>Dummy Classifier</td>\n      <td>sklearn.dummy.DummyClassifier</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d12a53d1-70cd-4e9e-bc39-3807e72a559f')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n<p>  &lt;svg xmlns&#x3D;”<a href=\"http://www.w3.org/2000/svg&quot;\">http://www.w3.org/2000/svg&quot;</a> height&#x3D;”24px”viewBox&#x3D;”0 0 24 24”<br>       width&#x3D;”24px”&gt;<br>    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><br>    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/><br>  </svg><br>      </button></p>\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n<pre><code>  &lt;script&gt;\n    const buttonEl =\n      document.querySelector(&#39;#df-d12a53d1-70cd-4e9e-bc39-3807e72a559f button.colab-df-convert&#39;);\n    buttonEl.style.display =\n      google.colab.kernel.accessAllowed ? &#39;block&#39; : &#39;none&#39;;\n\n    async function convertToInteractive(key) &#123;\n      const element = document.querySelector(&#39;#df-d12a53d1-70cd-4e9e-bc39-3807e72a559f&#39;);\n      const dataTable =\n        await google.colab.kernel.invokeFunction(&#39;convertToInteractive&#39;,\n                                                 [key], &#123;&#125;);\n      if (!dataTable) return;\n\n      const docLinkHtml = &#39;Like what you see? Visit the &#39; +\n        &#39;&lt;a target=&quot;_blank&quot; href=https://colab.research.google.com/notebooks/data_table.ipynb&gt;data table notebook&lt;/a&gt;&#39;\n        + &#39; to learn more about interactive tables.&#39;;\n      element.innerHTML = &#39;&#39;;\n      dataTable[&#39;output_type&#39;] = &#39;display_data&#39;;\n      await google.colab.output.renderOutput(dataTable, element);\n      const docLink = document.createElement(&#39;div&#39;);\n      docLink.innerHTML = docLinkHtml;\n      element.appendChild(docLink);\n    &#125;\n  &lt;/script&gt;\n&lt;/div&gt;\n</code></pre>\n  </div>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/07/05/PyCaret_Sample%20(1)/pycaret.png","excerpt":"<ul>\n<li><p>PyCaret 설치 및 세팅</p>","more":"<ul>\n<li><p>PyCaret 설치 및 세팅</p>\n<!-- excerpt -->\n\n</li>\n<li><p>PyCaret 설치</p>\n</li>\n<li><p><a href=\"https://github.com/pycaret/pycaret\">https://github.com/pycaret/pycaret</a>  에서 requirement.txt에 있는 목록 다 버전 맞춰서 깐다.</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!pip uninstall sklearn -y</span><br><span class=\"line\">!pip install --upgrade sklearn</span><br><span class=\"line\">!pip install scikit-learn==<span class=\"number\">0.23</span><span class=\"number\">.2</span> --user</span><br><span class=\"line\">!pip install pycaret</span><br><span class=\"line\">!pip install markupsafe==<span class=\"number\">2.0</span><span class=\"number\">.1</span></span><br><span class=\"line\"><span class=\"comment\"># 밑에 &quot;RESTART RUMTIME&quot; 을 클릭한다. (파란글씨 X)</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>PyCaret을 구글 코랩에서 활성화</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pycaret.utils <span class=\"keyword\">import</span> enable_colab</span><br><span class=\"line\">enable_colab()</span><br></pre></td></tr></table></figure>\n\n<pre><code>Colab mode enabled.\n</code></pre>\n<h3 id=\"데이터-불러오기\"><a href=\"#데이터-불러오기\" class=\"headerlink\" title=\"데이터 불러오기\"></a>데이터 불러오기</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pycaret.datasets <span class=\"keyword\">import</span> get_data</span><br><span class=\"line\">dataset = get_data(<span class=\"string\">&#x27;credit&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># credit 데이터 = 신용카드 연체 데이터, PyCaret 의 샘플 데이터이다.</span></span><br></pre></td></tr></table></figure>\n\n\n\n<script src=\"/static/components/requirejs/require.js\"></script>\n<script>\n  requirejs.config({\n    paths: {\n      base: '/static/base',\n      plotly: 'https://cdn.plot.ly/plotly-latest.min.js?noext',\n    },\n  });\n</script>\n\n\n\n\n\n  <div id=\"df-c4307632-6e01-480c-9107-02c1c7afdd50\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>LIMIT_BAL</th>\n      <th>SEX</th>\n      <th>EDUCATION</th>\n      <th>MARRIAGE</th>\n      <th>AGE</th>\n      <th>PAY_1</th>\n      <th>PAY_2</th>\n      <th>PAY_3</th>\n      <th>PAY_4</th>\n      <th>PAY_5</th>\n      <th>...</th>\n      <th>BILL_AMT4</th>\n      <th>BILL_AMT5</th>\n      <th>BILL_AMT6</th>\n      <th>PAY_AMT1</th>\n      <th>PAY_AMT2</th>\n      <th>PAY_AMT3</th>\n      <th>PAY_AMT4</th>\n      <th>PAY_AMT5</th>\n      <th>PAY_AMT6</th>\n      <th>default</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>20000</td>\n      <td>2</td>\n      <td>2</td>\n      <td>1</td>\n      <td>24</td>\n      <td>2</td>\n      <td>2</td>\n      <td>-1</td>\n      <td>-1</td>\n      <td>-2</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>689.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>90000</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>34</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>14331.0</td>\n      <td>14948.0</td>\n      <td>15549.0</td>\n      <td>1518.0</td>\n      <td>1500.0</td>\n      <td>1000.0</td>\n      <td>1000.0</td>\n      <td>1000.0</td>\n      <td>5000.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>50000</td>\n      <td>2</td>\n      <td>2</td>\n      <td>1</td>\n      <td>37</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>28314.0</td>\n      <td>28959.0</td>\n      <td>29547.0</td>\n      <td>2000.0</td>\n      <td>2019.0</td>\n      <td>1200.0</td>\n      <td>1100.0</td>\n      <td>1069.0</td>\n      <td>1000.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>50000</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>57</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>20940.0</td>\n      <td>19146.0</td>\n      <td>19131.0</td>\n      <td>2000.0</td>\n      <td>36681.0</td>\n      <td>10000.0</td>\n      <td>9000.0</td>\n      <td>689.0</td>\n      <td>679.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>50000</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>37</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>19394.0</td>\n      <td>19619.0</td>\n      <td>20024.0</td>\n      <td>2500.0</td>\n      <td>1815.0</td>\n      <td>657.0</td>\n      <td>1000.0</td>\n      <td>1000.0</td>\n      <td>800.0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 24 columns</p>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c4307632-6e01-480c-9107-02c1c7afdd50')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n<p>  &lt;svg xmlns&#x3D;”<a href=\"http://www.w3.org/2000/svg&quot;\">http://www.w3.org/2000/svg&quot;</a> height&#x3D;”24px”viewBox&#x3D;”0 0 24 24”<br>       width&#x3D;”24px”&gt;<br>    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><br>    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/><br>  </svg><br>      </button></p>\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n<pre><code>  &lt;script&gt;\n    const buttonEl =\n      document.querySelector(&#39;#df-c4307632-6e01-480c-9107-02c1c7afdd50 button.colab-df-convert&#39;);\n    buttonEl.style.display =\n      google.colab.kernel.accessAllowed ? &#39;block&#39; : &#39;none&#39;;\n\n    async function convertToInteractive(key) &#123;\n      const element = document.querySelector(&#39;#df-c4307632-6e01-480c-9107-02c1c7afdd50&#39;);\n      const dataTable =\n        await google.colab.kernel.invokeFunction(&#39;convertToInteractive&#39;,\n                                                 [key], &#123;&#125;);\n      if (!dataTable) return;\n\n      const docLinkHtml = &#39;Like what you see? Visit the &#39; +\n        &#39;&lt;a target=&quot;_blank&quot; href=https://colab.research.google.com/notebooks/data_table.ipynb&gt;data table notebook&lt;/a&gt;&#39;\n        + &#39; to learn more about interactive tables.&#39;;\n      element.innerHTML = &#39;&#39;;\n      dataTable[&#39;output_type&#39;] = &#39;display_data&#39;;\n      await google.colab.output.renderOutput(dataTable, element);\n      const docLink = document.createElement(&#39;div&#39;);\n      docLink.innerHTML = docLinkHtml;\n      element.appendChild(docLink);\n    &#125;\n  &lt;/script&gt;\n&lt;/div&gt;\n</code></pre>\n  </div>\n\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dataset.info()</span><br></pre></td></tr></table></figure>\n\n\n\n<script src=\"/static/components/requirejs/require.js\"></script>\n<script>\n  requirejs.config({\n    paths: {\n      base: '/static/base',\n      plotly: 'https://cdn.plot.ly/plotly-latest.min.js?noext',\n    },\n  });\n</script>\n\n\n\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 24000 entries, 0 to 23999\nData columns (total 24 columns):\n #   Column     Non-Null Count  Dtype  \n---  ------     --------------  -----  \n 0   LIMIT_BAL  24000 non-null  int64  \n 1   SEX        24000 non-null  int64  \n 2   EDUCATION  24000 non-null  int64  \n 3   MARRIAGE   24000 non-null  int64  \n 4   AGE        24000 non-null  int64  \n 5   PAY_1      24000 non-null  int64  \n 6   PAY_2      24000 non-null  int64  \n 7   PAY_3      24000 non-null  int64  \n 8   PAY_4      24000 non-null  int64  \n 9   PAY_5      24000 non-null  int64  \n 10  PAY_6      24000 non-null  int64  \n 11  BILL_AMT1  24000 non-null  float64\n 12  BILL_AMT2  24000 non-null  float64\n 13  BILL_AMT3  24000 non-null  float64\n 14  BILL_AMT4  24000 non-null  float64\n 15  BILL_AMT5  24000 non-null  float64\n 16  BILL_AMT6  24000 non-null  float64\n 17  PAY_AMT1   24000 non-null  float64\n 18  PAY_AMT2   24000 non-null  float64\n 19  PAY_AMT3   24000 non-null  float64\n 20  PAY_AMT4   24000 non-null  float64\n 21  PAY_AMT5   24000 non-null  float64\n 22  PAY_AMT6   24000 non-null  float64\n 23  default    24000 non-null  int64  \ndtypes: float64(12), int64(12)\nmemory usage: 4.4 MB\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data = dataset.sample(frac=<span class=\"number\">0.95</span>, random_state=<span class=\"number\">786</span>)</span><br><span class=\"line\">data_unseen = dataset.drop(data.index)</span><br><span class=\"line\">data.reset_index(inplace=<span class=\"literal\">True</span>, drop=<span class=\"literal\">True</span>)</span><br><span class=\"line\">data_unseen.reset_index(inplace=<span class=\"literal\">True</span>, drop=<span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Data for Modeling: &#x27;</span> + <span class=\"built_in\">str</span>(data.shape))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Unseen Data For Predictions: &#x27;</span> + <span class=\"built_in\">str</span>(data_unseen.shape))</span><br></pre></td></tr></table></figure>\n\n\n\n<script src=\"/static/components/requirejs/require.js\"></script>\n<script>\n  requirejs.config({\n    paths: {\n      base: '/static/base',\n      plotly: 'https://cdn.plot.ly/plotly-latest.min.js?noext',\n    },\n  });\n</script>\n\n\n\n<pre><code>Data for Modeling: (22800, 24)\nUnseen Data For Predictions: (1200, 24)\n</code></pre>\n<ul>\n<li>setup</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> jinja2</span><br><span class=\"line\"><span class=\"keyword\">from</span> pycaret.classification <span class=\"keyword\">import</span> *</span><br><span class=\"line\">exp_clf101 = setup(data = data, target = <span class=\"string\">&#x27;default&#x27;</span>, session_id=<span class=\"number\">123</span>)</span><br><span class=\"line\"><span class=\"comment\"># 빈 칸이 뜨면 엔터 치기</span></span><br></pre></td></tr></table></figure>\n\n\n\n  <div id=\"df-02f377d0-f141-4491-8122-89a5f7a25949\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Description</th>\n      <th>Value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>session_id</td>\n      <td>123</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Target</td>\n      <td>default</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Target Type</td>\n      <td>Binary</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Label Encoded</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Original Data</td>\n      <td>(22800, 24)</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Missing Values</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Numeric Features</td>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Categorical Features</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Ordinal Features</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>High Cardinality Features</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>High Cardinality Method</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>Transformed Train Set</td>\n      <td>(15959, 88)</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Transformed Test Set</td>\n      <td>(6841, 88)</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>Shuffle Train-Test</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>Stratify Train-Test</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>Fold Generator</td>\n      <td>StratifiedKFold</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>Fold Number</td>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>CPU Jobs</td>\n      <td>-1</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>Use GPU</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>Log Experiment</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>Experiment Name</td>\n      <td>clf-default-name</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>USI</td>\n      <td>a6b7</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>Imputation Type</td>\n      <td>simple</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>Iterative Imputation Iteration</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>Numeric Imputer</td>\n      <td>mean</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>Iterative Imputation Numeric Model</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>Categorical Imputer</td>\n      <td>constant</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>Iterative Imputation Categorical Model</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>Unknown Categoricals Handling</td>\n      <td>least_frequent</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>Normalize</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>30</th>\n      <td>Normalize Method</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>31</th>\n      <td>Transformation</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>32</th>\n      <td>Transformation Method</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>33</th>\n      <td>PCA</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>34</th>\n      <td>PCA Method</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>35</th>\n      <td>PCA Components</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>36</th>\n      <td>Ignore Low Variance</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>37</th>\n      <td>Combine Rare Levels</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>38</th>\n      <td>Rare Level Threshold</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>39</th>\n      <td>Numeric Binning</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>40</th>\n      <td>Remove Outliers</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>41</th>\n      <td>Outliers Threshold</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>42</th>\n      <td>Remove Multicollinearity</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>43</th>\n      <td>Multicollinearity Threshold</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>44</th>\n      <td>Remove Perfect Collinearity</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>45</th>\n      <td>Clustering</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>46</th>\n      <td>Clustering Iteration</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>47</th>\n      <td>Polynomial Features</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>48</th>\n      <td>Polynomial Degree</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>49</th>\n      <td>Trignometry Features</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>50</th>\n      <td>Polynomial Threshold</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>51</th>\n      <td>Group Features</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>52</th>\n      <td>Feature Selection</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>53</th>\n      <td>Feature Selection Method</td>\n      <td>classic</td>\n    </tr>\n    <tr>\n      <th>54</th>\n      <td>Features Selection Threshold</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>55</th>\n      <td>Feature Interaction</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>56</th>\n      <td>Feature Ratio</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>57</th>\n      <td>Interaction Threshold</td>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th>58</th>\n      <td>Fix Imbalance</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>59</th>\n      <td>Fix Imbalance Method</td>\n      <td>SMOTE</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-02f377d0-f141-4491-8122-89a5f7a25949')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n<p>  &lt;svg xmlns&#x3D;”<a href=\"http://www.w3.org/2000/svg&quot;\">http://www.w3.org/2000/svg&quot;</a> height&#x3D;”24px”viewBox&#x3D;”0 0 24 24”<br>       width&#x3D;”24px”&gt;<br>    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><br>    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/><br>  </svg><br>      </button></p>\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n\n\n<h2 id=\"모델링\"><a href=\"#모델링\" class=\"headerlink\" title=\"모델링\"></a>모델링</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">best_model = compare_models()</span><br></pre></td></tr></table></figure>\n\n\n\n  <div id=\"df-1f936788-ded9-461f-8219-3f16656853b9\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Model</th>\n      <th>Accuracy</th>\n      <th>AUC</th>\n      <th>Recall</th>\n      <th>Prec.</th>\n      <th>F1</th>\n      <th>Kappa</th>\n      <th>MCC</th>\n      <th>TT (Sec)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>ridge</th>\n      <td>Ridge Classifier</td>\n      <td>0.8254</td>\n      <td>0.0000</td>\n      <td>0.3637</td>\n      <td>0.6913</td>\n      <td>0.4764</td>\n      <td>0.3836</td>\n      <td>0.4122</td>\n      <td>0.038</td>\n    </tr>\n    <tr>\n      <th>lda</th>\n      <td>Linear Discriminant Analysis</td>\n      <td>0.8247</td>\n      <td>0.7634</td>\n      <td>0.3755</td>\n      <td>0.6794</td>\n      <td>0.4835</td>\n      <td>0.3884</td>\n      <td>0.4132</td>\n      <td>0.300</td>\n    </tr>\n    <tr>\n      <th>gbc</th>\n      <td>Gradient Boosting Classifier</td>\n      <td>0.8226</td>\n      <td>0.7789</td>\n      <td>0.3551</td>\n      <td>0.6806</td>\n      <td>0.4664</td>\n      <td>0.3725</td>\n      <td>0.4010</td>\n      <td>5.707</td>\n    </tr>\n    <tr>\n      <th>ada</th>\n      <td>Ada Boost Classifier</td>\n      <td>0.8221</td>\n      <td>0.7697</td>\n      <td>0.3505</td>\n      <td>0.6811</td>\n      <td>0.4626</td>\n      <td>0.3690</td>\n      <td>0.3983</td>\n      <td>1.312</td>\n    </tr>\n    <tr>\n      <th>lightgbm</th>\n      <td>Light Gradient Boosting Machine</td>\n      <td>0.8210</td>\n      <td>0.7750</td>\n      <td>0.3609</td>\n      <td>0.6679</td>\n      <td>0.4683</td>\n      <td>0.3721</td>\n      <td>0.3977</td>\n      <td>0.420</td>\n    </tr>\n    <tr>\n      <th>rf</th>\n      <td>Random Forest Classifier</td>\n      <td>0.8199</td>\n      <td>0.7598</td>\n      <td>0.3663</td>\n      <td>0.6601</td>\n      <td>0.4707</td>\n      <td>0.3727</td>\n      <td>0.3965</td>\n      <td>3.079</td>\n    </tr>\n    <tr>\n      <th>et</th>\n      <td>Extra Trees Classifier</td>\n      <td>0.8092</td>\n      <td>0.7377</td>\n      <td>0.3677</td>\n      <td>0.6047</td>\n      <td>0.4571</td>\n      <td>0.3497</td>\n      <td>0.3657</td>\n      <td>2.547</td>\n    </tr>\n    <tr>\n      <th>lr</th>\n      <td>Logistic Regression</td>\n      <td>0.7814</td>\n      <td>0.6410</td>\n      <td>0.0003</td>\n      <td>0.1000</td>\n      <td>0.0006</td>\n      <td>0.0003</td>\n      <td>0.0034</td>\n      <td>1.005</td>\n    </tr>\n    <tr>\n      <th>dummy</th>\n      <td>Dummy Classifier</td>\n      <td>0.7814</td>\n      <td>0.5000</td>\n      <td>0.0000</td>\n      <td>0.0000</td>\n      <td>0.0000</td>\n      <td>0.0000</td>\n      <td>0.0000</td>\n      <td>0.029</td>\n    </tr>\n    <tr>\n      <th>knn</th>\n      <td>K Neighbors Classifier</td>\n      <td>0.7547</td>\n      <td>0.5939</td>\n      <td>0.1763</td>\n      <td>0.3719</td>\n      <td>0.2388</td>\n      <td>0.1145</td>\n      <td>0.1259</td>\n      <td>0.943</td>\n    </tr>\n    <tr>\n      <th>dt</th>\n      <td>Decision Tree Classifier</td>\n      <td>0.7293</td>\n      <td>0.6147</td>\n      <td>0.4104</td>\n      <td>0.3878</td>\n      <td>0.3986</td>\n      <td>0.2242</td>\n      <td>0.2245</td>\n      <td>0.378</td>\n    </tr>\n    <tr>\n      <th>svm</th>\n      <td>SVM - Linear Kernel</td>\n      <td>0.7277</td>\n      <td>0.0000</td>\n      <td>0.1017</td>\n      <td>0.1671</td>\n      <td>0.0984</td>\n      <td>0.0067</td>\n      <td>0.0075</td>\n      <td>0.498</td>\n    </tr>\n    <tr>\n      <th>qda</th>\n      <td>Quadratic Discriminant Analysis</td>\n      <td>0.5098</td>\n      <td>0.5473</td>\n      <td>0.6141</td>\n      <td>0.2472</td>\n      <td>0.3488</td>\n      <td>0.0600</td>\n      <td>0.0805</td>\n      <td>0.154</td>\n    </tr>\n    <tr>\n      <th>nb</th>\n      <td>Naive Bayes</td>\n      <td>0.3760</td>\n      <td>0.6442</td>\n      <td>0.8845</td>\n      <td>0.2441</td>\n      <td>0.3826</td>\n      <td>0.0608</td>\n      <td>0.1207</td>\n      <td>0.047</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1f936788-ded9-461f-8219-3f16656853b9')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n<p>  &lt;svg xmlns&#x3D;”<a href=\"http://www.w3.org/2000/svg&quot;\">http://www.w3.org/2000/svg&quot;</a> height&#x3D;”24px”viewBox&#x3D;”0 0 24 24”<br>       width&#x3D;”24px”&gt;<br>    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><br>    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/><br>  </svg><br>      </button></p>\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n<pre><code>  &lt;script&gt;\n    const buttonEl =\n      document.querySelector(&#39;#df-1f936788-ded9-461f-8219-3f16656853b9 button.colab-df-convert&#39;);\n    buttonEl.style.display =\n      google.colab.kernel.accessAllowed ? &#39;block&#39; : &#39;none&#39;;\n\n    async function convertToInteractive(key) &#123;\n      const element = document.querySelector(&#39;#df-1f936788-ded9-461f-8219-3f16656853b9&#39;);\n      const dataTable =\n        await google.colab.kernel.invokeFunction(&#39;convertToInteractive&#39;,\n                                                 [key], &#123;&#125;);\n      if (!dataTable) return;\n\n      const docLinkHtml = &#39;Like what you see? Visit the &#39; +\n        &#39;&lt;a target=&quot;_blank&quot; href=https://colab.research.google.com/notebooks/data_table.ipynb&gt;data table notebook&lt;/a&gt;&#39;\n        + &#39; to learn more about interactive tables.&#39;;\n      element.innerHTML = &#39;&#39;;\n      dataTable[&#39;output_type&#39;] = &#39;display_data&#39;;\n      await google.colab.output.renderOutput(dataTable, element);\n      const docLink = document.createElement(&#39;div&#39;);\n      docLink.innerHTML = docLinkHtml;\n      element.appendChild(docLink);\n    &#125;\n  &lt;/script&gt;\n&lt;/div&gt;\n</code></pre>\n  </div>\n\n\n\n<ul>\n<li>여기서 가장 좋은 모델을 뽑기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(best_model)</span><br></pre></td></tr></table></figure>\n\n\n\n<script src=\"/static/components/requirejs/require.js\"></script>\n<script>\n  requirejs.config({\n    paths: {\n      base: '/static/base',\n      plotly: 'https://cdn.plot.ly/plotly-latest.min.js?noext',\n    },\n  });\n</script>\n\n\n\n<pre><code>RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,\n                max_iter=None, normalize=False, random_state=123, solver=&#39;auto&#39;,\n                tol=0.001)\n</code></pre>\n<ul>\n<li>모델 생성</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">knn_model = create_model(<span class=\"string\">&#x27;knn&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># create_model(&#x27;모델ID&#x27;)</span></span><br></pre></td></tr></table></figure>\n\n\n\n  <div id=\"df-dcfbc557-8ff3-4ddc-b12d-ac11d9486b3f\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Accuracy</th>\n      <th>AUC</th>\n      <th>Recall</th>\n      <th>Prec.</th>\n      <th>F1</th>\n      <th>Kappa</th>\n      <th>MCC</th>\n    </tr>\n    <tr>\n      <th>Fold</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.7469</td>\n      <td>0.6020</td>\n      <td>0.1920</td>\n      <td>0.3545</td>\n      <td>0.2491</td>\n      <td>0.1128</td>\n      <td>0.1204</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.7550</td>\n      <td>0.5894</td>\n      <td>0.2092</td>\n      <td>0.3883</td>\n      <td>0.2719</td>\n      <td>0.1402</td>\n      <td>0.1500</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.7506</td>\n      <td>0.5883</td>\n      <td>0.1576</td>\n      <td>0.3459</td>\n      <td>0.2165</td>\n      <td>0.0923</td>\n      <td>0.1024</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.7419</td>\n      <td>0.5818</td>\n      <td>0.1519</td>\n      <td>0.3136</td>\n      <td>0.2046</td>\n      <td>0.0723</td>\n      <td>0.0790</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.7563</td>\n      <td>0.5908</td>\n      <td>0.1490</td>\n      <td>0.3611</td>\n      <td>0.2110</td>\n      <td>0.0954</td>\n      <td>0.1085</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>0.7550</td>\n      <td>0.5997</td>\n      <td>0.1748</td>\n      <td>0.3720</td>\n      <td>0.2378</td>\n      <td>0.1139</td>\n      <td>0.1255</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>0.7638</td>\n      <td>0.5890</td>\n      <td>0.1891</td>\n      <td>0.4125</td>\n      <td>0.2593</td>\n      <td>0.1413</td>\n      <td>0.1565</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>0.7613</td>\n      <td>0.6240</td>\n      <td>0.1633</td>\n      <td>0.3904</td>\n      <td>0.2303</td>\n      <td>0.1163</td>\n      <td>0.1318</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>0.7619</td>\n      <td>0.5988</td>\n      <td>0.1862</td>\n      <td>0.4037</td>\n      <td>0.2549</td>\n      <td>0.1356</td>\n      <td>0.1500</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>0.7549</td>\n      <td>0.5756</td>\n      <td>0.1897</td>\n      <td>0.3771</td>\n      <td>0.2524</td>\n      <td>0.1246</td>\n      <td>0.1351</td>\n    </tr>\n    <tr>\n      <th>Mean</th>\n      <td>0.7547</td>\n      <td>0.5939</td>\n      <td>0.1763</td>\n      <td>0.3719</td>\n      <td>0.2388</td>\n      <td>0.1145</td>\n      <td>0.1259</td>\n    </tr>\n    <tr>\n      <th>Std</th>\n      <td>0.0065</td>\n      <td>0.0126</td>\n      <td>0.0191</td>\n      <td>0.0279</td>\n      <td>0.0214</td>\n      <td>0.0214</td>\n      <td>0.0230</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dcfbc557-8ff3-4ddc-b12d-ac11d9486b3f')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n<p>  &lt;svg xmlns&#x3D;”<a href=\"http://www.w3.org/2000/svg&quot;\">http://www.w3.org/2000/svg&quot;</a> height&#x3D;”24px”viewBox&#x3D;”0 0 24 24”<br>       width&#x3D;”24px”&gt;<br>    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><br>    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/><br>  </svg><br>      </button></p>\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n<pre><code>  &lt;script&gt;\n    const buttonEl =\n      document.querySelector(&#39;#df-dcfbc557-8ff3-4ddc-b12d-ac11d9486b3f button.colab-df-convert&#39;);\n    buttonEl.style.display =\n      google.colab.kernel.accessAllowed ? &#39;block&#39; : &#39;none&#39;;\n\n    async function convertToInteractive(key) &#123;\n      const element = document.querySelector(&#39;#df-dcfbc557-8ff3-4ddc-b12d-ac11d9486b3f&#39;);\n      const dataTable =\n        await google.colab.kernel.invokeFunction(&#39;convertToInteractive&#39;,\n                                                 [key], &#123;&#125;);\n      if (!dataTable) return;\n\n      const docLinkHtml = &#39;Like what you see? Visit the &#39; +\n        &#39;&lt;a target=&quot;_blank&quot; href=https://colab.research.google.com/notebooks/data_table.ipynb&gt;data table notebook&lt;/a&gt;&#39;\n        + &#39; to learn more about interactive tables.&#39;;\n      element.innerHTML = &#39;&#39;;\n      dataTable[&#39;output_type&#39;] = &#39;display_data&#39;;\n      await google.colab.output.renderOutput(dataTable, element);\n      const docLink = document.createElement(&#39;div&#39;);\n      docLink.innerHTML = docLinkHtml;\n      element.appendChild(docLink);\n    &#125;\n  &lt;/script&gt;\n&lt;/div&gt;\n</code></pre>\n  </div>\n\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\">params = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;n_neighbors&#x27;</span> : np.arange(<span class=\"number\">0</span>, <span class=\"number\">50</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">tunned_knn = tune_model(knn_model, custom_grid=params)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(tunned_knn)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n  <div id=\"df-b3460ed9-d903-4ed4-b39b-824b759b0e90\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Accuracy</th>\n      <th>AUC</th>\n      <th>Recall</th>\n      <th>Prec.</th>\n      <th>F1</th>\n      <th>Kappa</th>\n      <th>MCC</th>\n    </tr>\n    <tr>\n      <th>Fold</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.7813</td>\n      <td>0.6482</td>\n      <td>0.0372</td>\n      <td>0.5000</td>\n      <td>0.0693</td>\n      <td>0.0402</td>\n      <td>0.0876</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.7807</td>\n      <td>0.6436</td>\n      <td>0.0315</td>\n      <td>0.4783</td>\n      <td>0.0591</td>\n      <td>0.0330</td>\n      <td>0.0759</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.7744</td>\n      <td>0.6563</td>\n      <td>0.0315</td>\n      <td>0.3333</td>\n      <td>0.0576</td>\n      <td>0.0206</td>\n      <td>0.0403</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.7845</td>\n      <td>0.6589</td>\n      <td>0.0659</td>\n      <td>0.5610</td>\n      <td>0.1179</td>\n      <td>0.0754</td>\n      <td>0.1345</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.7826</td>\n      <td>0.6645</td>\n      <td>0.0315</td>\n      <td>0.5500</td>\n      <td>0.0596</td>\n      <td>0.0368</td>\n      <td>0.0903</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>0.7794</td>\n      <td>0.6477</td>\n      <td>0.0544</td>\n      <td>0.4634</td>\n      <td>0.0974</td>\n      <td>0.0539</td>\n      <td>0.0961</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>0.7826</td>\n      <td>0.6278</td>\n      <td>0.0630</td>\n      <td>0.5238</td>\n      <td>0.1125</td>\n      <td>0.0688</td>\n      <td>0.1214</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>0.7751</td>\n      <td>0.6702</td>\n      <td>0.0372</td>\n      <td>0.3611</td>\n      <td>0.0675</td>\n      <td>0.0278</td>\n      <td>0.0523</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>0.7813</td>\n      <td>0.6409</td>\n      <td>0.0630</td>\n      <td>0.5000</td>\n      <td>0.1120</td>\n      <td>0.0662</td>\n      <td>0.1146</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>0.7881</td>\n      <td>0.6426</td>\n      <td>0.0661</td>\n      <td>0.6389</td>\n      <td>0.1198</td>\n      <td>0.0822</td>\n      <td>0.1548</td>\n    </tr>\n    <tr>\n      <th>Mean</th>\n      <td>0.7810</td>\n      <td>0.6501</td>\n      <td>0.0482</td>\n      <td>0.4910</td>\n      <td>0.0873</td>\n      <td>0.0505</td>\n      <td>0.0968</td>\n    </tr>\n    <tr>\n      <th>Std</th>\n      <td>0.0039</td>\n      <td>0.0119</td>\n      <td>0.0148</td>\n      <td>0.0861</td>\n      <td>0.0255</td>\n      <td>0.0206</td>\n      <td>0.0338</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b3460ed9-d903-4ed4-b39b-824b759b0e90')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n<p>  &lt;svg xmlns&#x3D;”<a href=\"http://www.w3.org/2000/svg&quot;\">http://www.w3.org/2000/svg&quot;</a> height&#x3D;”24px”viewBox&#x3D;”0 0 24 24”<br>       width&#x3D;”24px”&gt;<br>    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><br>    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/><br>  </svg><br>      </button></p>\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n<pre><code>  &lt;script&gt;\n    const buttonEl =\n      document.querySelector(&#39;#df-b3460ed9-d903-4ed4-b39b-824b759b0e90 button.colab-df-convert&#39;);\n    buttonEl.style.display =\n      google.colab.kernel.accessAllowed ? &#39;block&#39; : &#39;none&#39;;\n\n    async function convertToInteractive(key) &#123;\n      const element = document.querySelector(&#39;#df-b3460ed9-d903-4ed4-b39b-824b759b0e90&#39;);\n      const dataTable =\n        await google.colab.kernel.invokeFunction(&#39;convertToInteractive&#39;,\n                                                 [key], &#123;&#125;);\n      if (!dataTable) return;\n\n      const docLinkHtml = &#39;Like what you see? Visit the &#39; +\n        &#39;&lt;a target=&quot;_blank&quot; href=https://colab.research.google.com/notebooks/data_table.ipynb&gt;data table notebook&lt;/a&gt;&#39;\n        + &#39; to learn more about interactive tables.&#39;;\n      element.innerHTML = &#39;&#39;;\n      dataTable[&#39;output_type&#39;] = &#39;display_data&#39;;\n      await google.colab.output.renderOutput(dataTable, element);\n      const docLink = document.createElement(&#39;div&#39;);\n      docLink.innerHTML = docLinkHtml;\n      element.appendChild(docLink);\n    &#125;\n  &lt;/script&gt;\n&lt;/div&gt;\n</code></pre>\n  </div>\n\n\n\n<pre><code>KNeighborsClassifier(algorithm=&#39;auto&#39;, leaf_size=30, metric=&#39;minkowski&#39;,\n                     metric_params=None, n_jobs=-1, n_neighbors=42, p=2,\n                     weights=&#39;uniform&#39;)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plot_model(tunned_knn, plot = <span class=\"string\">&#x27;auc&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0705/output_17_0.png\" alt=\"png\"></p>\n<ul>\n<li>AUC<ul>\n<li>최소 0.5, 최고 1</li>\n<li>좋은 모델은 0.8 이상</li>\n</ul>\n</li>\n<li>ROC<ul>\n<li>면적</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 의사결정 트리</span></span><br><span class=\"line\"><span class=\"comment\"># plot_model(tunned_knn, plot = &#x27;feature&#x27;)</span></span><br><span class=\"line\">plot_model(tunned_knn, plot=<span class=\"string\">&#x27;confusion_matrix&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0705/output_19_0.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">evaluate_model(tunned_knn)</span><br><span class=\"line\"><span class=\"comment\"># 최고의 모델을 찾는 것 보다는 필요한 모델의 그래프를 비교할 때 사용</span></span><br></pre></td></tr></table></figure>\n\n\n\n<script src=\"/static/components/requirejs/require.js\"></script>\n<script>\n  requirejs.config({\n    paths: {\n      base: '/static/base',\n      plotly: 'https://cdn.plot.ly/plotly-latest.min.js?noext',\n    },\n  });\n</script>\n\n\n\n\n<pre><code>interactive(children=(ToggleButtons(description=&#39;Plot Type:&#39;, icons=(&#39;&#39;,), options=((&#39;Hyperparameters&#39;, &#39;param…\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">models()</span><br></pre></td></tr></table></figure>\n\n\n\n<script src=\"/static/components/requirejs/require.js\"></script>\n<script>\n  requirejs.config({\n    paths: {\n      base: '/static/base',\n      plotly: 'https://cdn.plot.ly/plotly-latest.min.js?noext',\n    },\n  });\n</script>\n\n\n\n\n\n\n\n  <div id=\"df-d12a53d1-70cd-4e9e-bc39-3807e72a559f\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Name</th>\n      <th>Reference</th>\n      <th>Turbo</th>\n    </tr>\n    <tr>\n      <th>ID</th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>lr</th>\n      <td>Logistic Regression</td>\n      <td>sklearn.linear_model._logistic.LogisticRegression</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>knn</th>\n      <td>K Neighbors Classifier</td>\n      <td>sklearn.neighbors._classification.KNeighborsCl...</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>nb</th>\n      <td>Naive Bayes</td>\n      <td>sklearn.naive_bayes.GaussianNB</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>dt</th>\n      <td>Decision Tree Classifier</td>\n      <td>sklearn.tree._classes.DecisionTreeClassifier</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>svm</th>\n      <td>SVM - Linear Kernel</td>\n      <td>sklearn.linear_model._stochastic_gradient.SGDC...</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>rbfsvm</th>\n      <td>SVM - Radial Kernel</td>\n      <td>sklearn.svm._classes.SVC</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>gpc</th>\n      <td>Gaussian Process Classifier</td>\n      <td>sklearn.gaussian_process._gpc.GaussianProcessC...</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>mlp</th>\n      <td>MLP Classifier</td>\n      <td>sklearn.neural_network._multilayer_perceptron....</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>ridge</th>\n      <td>Ridge Classifier</td>\n      <td>sklearn.linear_model._ridge.RidgeClassifier</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>rf</th>\n      <td>Random Forest Classifier</td>\n      <td>sklearn.ensemble._forest.RandomForestClassifier</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>qda</th>\n      <td>Quadratic Discriminant Analysis</td>\n      <td>sklearn.discriminant_analysis.QuadraticDiscrim...</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>ada</th>\n      <td>Ada Boost Classifier</td>\n      <td>sklearn.ensemble._weight_boosting.AdaBoostClas...</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>gbc</th>\n      <td>Gradient Boosting Classifier</td>\n      <td>sklearn.ensemble._gb.GradientBoostingClassifier</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>lda</th>\n      <td>Linear Discriminant Analysis</td>\n      <td>sklearn.discriminant_analysis.LinearDiscrimina...</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>et</th>\n      <td>Extra Trees Classifier</td>\n      <td>sklearn.ensemble._forest.ExtraTreesClassifier</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>lightgbm</th>\n      <td>Light Gradient Boosting Machine</td>\n      <td>lightgbm.sklearn.LGBMClassifier</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>dummy</th>\n      <td>Dummy Classifier</td>\n      <td>sklearn.dummy.DummyClassifier</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d12a53d1-70cd-4e9e-bc39-3807e72a559f')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n<p>  &lt;svg xmlns&#x3D;”<a href=\"http://www.w3.org/2000/svg&quot;\">http://www.w3.org/2000/svg&quot;</a> height&#x3D;”24px”viewBox&#x3D;”0 0 24 24”<br>       width&#x3D;”24px”&gt;<br>    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><br>    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/><br>  </svg><br>      </button></p>\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n<pre><code>  &lt;script&gt;\n    const buttonEl =\n      document.querySelector(&#39;#df-d12a53d1-70cd-4e9e-bc39-3807e72a559f button.colab-df-convert&#39;);\n    buttonEl.style.display =\n      google.colab.kernel.accessAllowed ? &#39;block&#39; : &#39;none&#39;;\n\n    async function convertToInteractive(key) &#123;\n      const element = document.querySelector(&#39;#df-d12a53d1-70cd-4e9e-bc39-3807e72a559f&#39;);\n      const dataTable =\n        await google.colab.kernel.invokeFunction(&#39;convertToInteractive&#39;,\n                                                 [key], &#123;&#125;);\n      if (!dataTable) return;\n\n      const docLinkHtml = &#39;Like what you see? Visit the &#39; +\n        &#39;&lt;a target=&quot;_blank&quot; href=https://colab.research.google.com/notebooks/data_table.ipynb&gt;data table notebook&lt;/a&gt;&#39;\n        + &#39; to learn more about interactive tables.&#39;;\n      element.innerHTML = &#39;&#39;;\n      dataTable[&#39;output_type&#39;] = &#39;display_data&#39;;\n      await google.colab.output.renderOutput(dataTable, element);\n      const docLink = document.createElement(&#39;div&#39;);\n      docLink.innerHTML = docLinkHtml;\n      element.appendChild(docLink);\n    &#125;\n  &lt;/script&gt;\n&lt;/div&gt;\n</code></pre>\n  </div>\n\n\n\n"},{"title":"6장","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"thumbnailImage":"R_logo.jpg","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-06-21T00:30:00.000Z","_content":"\n데이터 전처리\n<!-- excerpt -->\n\n\n# 6장\n## 데이터 전처리를 위한 도구(p.98)\n- dplyr : 10GB 이내, 매우 쉬움, 처리속도 느림\n- data.table : 50GB 이상, 어려움, 처리속도 빠름\n\n\n- dplyr 라이브러리 불러오기\n\n\n```r\ninstall.packages(\"dplyr\",repos = \"http://cran.us.r-project.org\")\nlibrary(dplyr)\n```\n\n\n- %>% : 파이프 연산자(코드와 코드를 이어줌 (ctrl+shift+m))\n\n```r\nmpg1 <- read.csv(\"mpg1.csv\")\nstr(mpg1)\n```\n\n```\n## 'data.frame':\t234 obs. of  5 variables:\n##  $ manufacturer: chr  \"audi\" \"audi\" \"audi\" \"audi\" ...\n##  $ trans       : chr  \"auto\" \"manual\" \"manual\" \"auto\" ...\n##  $ drv         : chr  \"f\" \"f\" \"f\" \"f\" ...\n##  $ cty         : int  18 21 20 21 16 18 18 18 16 20 ...\n##  $ hwy         : int  29 29 31 30 26 26 27 26 25 28 ...\n```\n\n```r\ndata2 <- mpg1 %>% \n  select(drv,cty,hwy) %>% \n  filter(drv == \"f\")        # filter : 조건에 맞는 행 추출\n```\n  \n- 파이프 연산자 안 쓸 경우\n\n```r\ndata3 <- select(mpg1, drv, cty, hwy)\ndata3 <- filter(data3, drv == \"f\")  #이렇게 쭉 이어 붙여야 한다..\n```\n\n- rename() : 변수 이름 바꿔주기\n\n```r\n#기존데이터 <- 새 데이터 %>% rename(새 이름1=기존 이름1, 새 이름2=기존 이름2,...)\n```\n\n- count() : table()함수와 같지만 count()함수는 데이터프레임\n- table()함수는 테이블 형태로 출력\n\n```r\ncount(mpg1, trans)  #mpg1의 데이터 중 trans 항목의 빈도 수\n```\n\n```\n##    trans   n\n## 1   auto 157\n## 2 manual  77\n```\n\n```r\nclass(count(mpg1, trans)) # count()는 데이터프레임 형태\n```\n\n```\n## [1] \"data.frame\"\n```\n- table() 함수는 데이터세트$변수 이다.\n\n```r\ntable(mpg1$trans)  #mpg1의 데이터 중 trans 항목의 빈도 수\n```\n\n```\n## \n##   auto manual \n##    157     77\n```\n\n```r\nclass(table(mpg1$trans)) # table()은 테이블 형태\n```\n\n```\n## [1] \"table\"\n```\n\n- select : 필요한 열 추출\n\n```r\n#새 데이터세트 <- 데이터세트 %>% select(열1, 열2, ...)\nmpg1_1 <- mpg1 %>% select(manufacturer, trans,cty)  #manufacturer,trans,cty 열만 추출\n```\n- 열 삭제 응용(select 함수 안에 -c 함수로 삭제할 열을 입력)\n\n```r\nmpg1_2 <- mpg1 %>% select(-c(cty,hwy))  #cty,hwy 열이 삭제됨\n```\n\n- slice : 필요한 행 추출\n\n```r\nmpg1 %>% slice(1,4,5)  #1,4,5번 행을 추출한다. 연속적인 행이면 a:b로도 가능\n```\n\n```\n##   manufacturer trans drv cty hwy\n## 1         audi  auto   f  18  29\n## 2         audi  auto   f  21  30\n## 3         audi  auto   f  16  26\n```\n- filter : 조건에 맞는 행 추출\n예시1\n\n```r\nmpg1_hd1 <- mpg1 %>% filter(manufacturer==\"hyundai\") #manufacturer가 'hyundai'인 행을 추출한다.\n```\n- 예시2\n\n```r\nmpg1 %>% filter(cty==max(cty))      #cty의 최댓값 함수를 바로 대입하거나,\n```\n\n```\n##   manufacturer  trans drv cty hwy\n## 1   volkswagen manual   f  35  44\n```\n\n```r\nmax(mpg1$cty)                       #cty의 최댓값을 구한 뒤\n```\n\n```\n## [1] 35\n```\n\n```r\nmpg1 %>% filter(cty==35)            #cty의 최댓값이 35일 때, cty의 값이 35인 행을 추출한다.\n```\n\n```\n##   manufacturer  trans drv cty hwy\n## 1   volkswagen manual   f  35  44\n```\n- 비교값이 다른 데이터 추출\n\n```r\nmpg1_hd2 <- mpg1 %>% filter(manufacturer != \"hyundai\")  #manufacturer가 'hyundai'가 아닌 행을 추출한다.\n```\n- 비교값이 크거나 작은 데이터 추출\n\n```r\nmpg1_hd3 <- mpg1 %>%filter(cty < mean(cty))  #cty값이 평균 미만인 자동차들을 추출한다.\n```\n- 1사분위수와 비교\n\n```r\nquantile(mpg1$cty) \n```\n\n```\n##   0%  25%  50%  75% 100% \n##    9   14   17   19   35\n```\n\n```r\nmpg1_hd4 <- mpg1 %>% filter(cty<=14)  #cty값이 cty값의 1사분위값보다 작거나 같은 자동차들을 추출한다.\n```\n- 크거나 같거나 수학연산자를 사용한다.(<=, >, !=, ...)\n\n- 'manufacturer==\"honda\"|manufacturer==\"nissan\"|manufacturer==\"subaru\"|manufacturer==\"toyota\"'는\n- 'manufacturer %in% c(\"honda\", \"nissan\", \"subaru\", \"toyota\")'로 묶어도 된다.\n\n```r\n# %in% c()로 한번에 묶기\n# %>% 이 아니라 %in% 이다.\nmpg1_hd5 <- mpg1 %>% filter(manufacturer %in% c(\"honda\", \"nissan\", \"subaru\", \"toyota\")) \n```\n\n- glimpse() : 데이터 미리보기\n- mutate() : 새로운 파생변수 항목 만들기\n\n```r\n# 여러 조건들을 한 뒤에 데이터 미리보기\n# \"%>% glimpse()\" 대신 \"<- iris2\" 쓰면 작업한 데이터가 바로 iris2로 저장된다.\niris %>%\n  filter(Species == \"setosa\") %>% \n  select(Sepal.Length, Sepal.Width) %>% \n  filter(Sepal.Length > 5.0) %>% \n  mutate(total = Sepal.Length + Sepal.Width) %>% glimpse()\n```\n\n```\n## Rows: 22\n## Columns: 3\n## $ Sepal.Length <dbl> 5.1, 5.4, 5.4, 5.8, 5.7, 5.4, 5.1, 5.7, 5.1, 5.4, 5.1, 5.…\n## $ Sepal.Width  <dbl> 3.5, 3.9, 3.7, 4.0, 4.4, 3.9, 3.5, 3.8, 3.8, 3.4, 3.7, 3.…\n## $ total        <dbl> 8.6, 9.3, 9.1, 9.8, 10.1, 9.3, 8.6, 9.5, 8.9, 8.8, 8.8, 8…\n```\n- &를 이용하여 반복되는 함수를 줄인다\n\n```r\n#바로 위의 함수와 같은 함수지만 filter를 &로 정리했다.\n#여러 조건일 때 &는 and, |는 or, !는 not\niris %>%\n  filter(Species == \"setosa\" & Sepal.Length > 5.0) %>% \n  select(Sepal.Length, Sepal.Width) %>% \n  mutate(total = Sepal.Length + Sepal.Width)\n```\n\n```\n##    Sepal.Length Sepal.Width total\n## 1           5.1         3.5   8.6\n## 2           5.4         3.9   9.3\n## 3           5.4         3.7   9.1\n## 4           5.8         4.0   9.8\n## 5           5.7         4.4  10.1\n## 6           5.4         3.9   9.3\n## 7           5.1         3.5   8.6\n## 8           5.7         3.8   9.5\n## 9           5.1         3.8   8.9\n## 10          5.4         3.4   8.8\n## 11          5.1         3.7   8.8\n## 12          5.1         3.3   8.4\n## 13          5.2         3.5   8.7\n## 14          5.2         3.4   8.6\n## 15          5.4         3.4   8.8\n## 16          5.2         4.1   9.3\n## 17          5.5         4.2   9.7\n## 18          5.5         3.5   9.0\n## 19          5.1         3.4   8.5\n## 20          5.1         3.8   8.9\n## 21          5.1         3.8   8.9\n## 22          5.3         3.7   9.0\n```\n\n- group_by(trans) : trans 변수안의 범주로 행을 분류한다.\n- summarise(m = mean(cty)) : cty의 평균을 m이라는 변수에 넣는다.\n\n```r\n#'group_by()' 함수랑 'summarise()' 함수는 한 세트로 생각\nmpg1 %>% \n  group_by(trans) %>% \n  summarise(avg     = mean(cty)   # 평균\n            , total = sum(cty)    # 총합\n            , med   = median(cty) # 중간값\n            , count = n())        # 빈도\n```\n\n```\n## # A tibble: 2 × 5\n##   trans    avg total   med count\n##   <chr>  <dbl> <int> <int> <int>\n## 1 auto    16.0  2507    16   157\n## 2 manual  18.7  1438    18    77\n```\n- n() : 데이터숫자를 세어 빈도를 알려준다.(count함수와 비슷함.)\n\n- count() 함수와 summarise(n=n()) 함수는 결과값은 같지만,\ncount()함수는 summarise()함수같이 여러 명령을 수행할 수 없고,\nsummarise(n=n())함수는 여러 명령을 수행할 수 있다.\n\n\n```r\ncount(mpg1, trans)  #짧지만 여러 명령은 불가능..\n```\n\n```\n##    trans   n\n## 1   auto 157\n## 2 manual  77\n```\n\n```r\nmpg1 %>% \n  group_by(trans) %>% \n  summarise(n=n())  #summarise(n=n()) 함수가 더 길지만, 여러 명령을 붙일 때 빛을 본다.\n```\n\n```\n## # A tibble: 2 × 2\n##   trans      n\n##   <chr>  <int>\n## 1 auto     157\n## 2 manual    77\n```\n\n- group_by() + summarise(n())+ mutate()의 조합\n\n```r\nmpg1 %>% \n  group_by(trans) %>%       #trans범주로 분류\n  summarise(n=n()) %>%      #trans범주별 데이터 빈도 구하기\n    mutate(total=sum(n),    #trans범주별 빈도의 총계 구하기\n          pct=n/total*100)  #trans범주별 비율 구하기\n```\n\n```\n## # A tibble: 2 × 4\n##   trans      n total   pct\n##   <chr>  <int> <int> <dbl>\n## 1 auto     157   234  67.1\n## 2 manual    77   234  32.9\n```\n\n- if, else : if에 조건과 명령문을 쓰고, else에 다른 명령을 쓴다.\n\n```r\n#if(조건) {명령문A} else {명령문B}\n#\"조건이 참이면 명령문A를 수행하고, 아니면 명령문B를 수행하라\"\n```\n- ifelse() : if조건에 참이면 수행하고, 거짓이면 else를 해라. if+else\n\n```r\na <- c(1,3,4,6,9)\nifelse(a%%2==0, \"짝수\", \"홀수\")  #ifelse 함수는 벡터연산 가능\n```\n\n```\n## [1] \"홀수\" \"홀수\" \"짝수\" \"짝수\" \"홀수\"\n```\n\n\n  \n  \n","source":"_posts/day0621_dplyr.md","raw":"---\ntitle: \"6장\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: R studio\nclearReading: true\nthumbnailImage: R_logo.jpg\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-06-21 09:30:00'\n---\n\n데이터 전처리\n<!-- excerpt -->\n\n\n# 6장\n## 데이터 전처리를 위한 도구(p.98)\n- dplyr : 10GB 이내, 매우 쉬움, 처리속도 느림\n- data.table : 50GB 이상, 어려움, 처리속도 빠름\n\n\n- dplyr 라이브러리 불러오기\n\n\n```r\ninstall.packages(\"dplyr\",repos = \"http://cran.us.r-project.org\")\nlibrary(dplyr)\n```\n\n\n- %>% : 파이프 연산자(코드와 코드를 이어줌 (ctrl+shift+m))\n\n```r\nmpg1 <- read.csv(\"mpg1.csv\")\nstr(mpg1)\n```\n\n```\n## 'data.frame':\t234 obs. of  5 variables:\n##  $ manufacturer: chr  \"audi\" \"audi\" \"audi\" \"audi\" ...\n##  $ trans       : chr  \"auto\" \"manual\" \"manual\" \"auto\" ...\n##  $ drv         : chr  \"f\" \"f\" \"f\" \"f\" ...\n##  $ cty         : int  18 21 20 21 16 18 18 18 16 20 ...\n##  $ hwy         : int  29 29 31 30 26 26 27 26 25 28 ...\n```\n\n```r\ndata2 <- mpg1 %>% \n  select(drv,cty,hwy) %>% \n  filter(drv == \"f\")        # filter : 조건에 맞는 행 추출\n```\n  \n- 파이프 연산자 안 쓸 경우\n\n```r\ndata3 <- select(mpg1, drv, cty, hwy)\ndata3 <- filter(data3, drv == \"f\")  #이렇게 쭉 이어 붙여야 한다..\n```\n\n- rename() : 변수 이름 바꿔주기\n\n```r\n#기존데이터 <- 새 데이터 %>% rename(새 이름1=기존 이름1, 새 이름2=기존 이름2,...)\n```\n\n- count() : table()함수와 같지만 count()함수는 데이터프레임\n- table()함수는 테이블 형태로 출력\n\n```r\ncount(mpg1, trans)  #mpg1의 데이터 중 trans 항목의 빈도 수\n```\n\n```\n##    trans   n\n## 1   auto 157\n## 2 manual  77\n```\n\n```r\nclass(count(mpg1, trans)) # count()는 데이터프레임 형태\n```\n\n```\n## [1] \"data.frame\"\n```\n- table() 함수는 데이터세트$변수 이다.\n\n```r\ntable(mpg1$trans)  #mpg1의 데이터 중 trans 항목의 빈도 수\n```\n\n```\n## \n##   auto manual \n##    157     77\n```\n\n```r\nclass(table(mpg1$trans)) # table()은 테이블 형태\n```\n\n```\n## [1] \"table\"\n```\n\n- select : 필요한 열 추출\n\n```r\n#새 데이터세트 <- 데이터세트 %>% select(열1, 열2, ...)\nmpg1_1 <- mpg1 %>% select(manufacturer, trans,cty)  #manufacturer,trans,cty 열만 추출\n```\n- 열 삭제 응용(select 함수 안에 -c 함수로 삭제할 열을 입력)\n\n```r\nmpg1_2 <- mpg1 %>% select(-c(cty,hwy))  #cty,hwy 열이 삭제됨\n```\n\n- slice : 필요한 행 추출\n\n```r\nmpg1 %>% slice(1,4,5)  #1,4,5번 행을 추출한다. 연속적인 행이면 a:b로도 가능\n```\n\n```\n##   manufacturer trans drv cty hwy\n## 1         audi  auto   f  18  29\n## 2         audi  auto   f  21  30\n## 3         audi  auto   f  16  26\n```\n- filter : 조건에 맞는 행 추출\n예시1\n\n```r\nmpg1_hd1 <- mpg1 %>% filter(manufacturer==\"hyundai\") #manufacturer가 'hyundai'인 행을 추출한다.\n```\n- 예시2\n\n```r\nmpg1 %>% filter(cty==max(cty))      #cty의 최댓값 함수를 바로 대입하거나,\n```\n\n```\n##   manufacturer  trans drv cty hwy\n## 1   volkswagen manual   f  35  44\n```\n\n```r\nmax(mpg1$cty)                       #cty의 최댓값을 구한 뒤\n```\n\n```\n## [1] 35\n```\n\n```r\nmpg1 %>% filter(cty==35)            #cty의 최댓값이 35일 때, cty의 값이 35인 행을 추출한다.\n```\n\n```\n##   manufacturer  trans drv cty hwy\n## 1   volkswagen manual   f  35  44\n```\n- 비교값이 다른 데이터 추출\n\n```r\nmpg1_hd2 <- mpg1 %>% filter(manufacturer != \"hyundai\")  #manufacturer가 'hyundai'가 아닌 행을 추출한다.\n```\n- 비교값이 크거나 작은 데이터 추출\n\n```r\nmpg1_hd3 <- mpg1 %>%filter(cty < mean(cty))  #cty값이 평균 미만인 자동차들을 추출한다.\n```\n- 1사분위수와 비교\n\n```r\nquantile(mpg1$cty) \n```\n\n```\n##   0%  25%  50%  75% 100% \n##    9   14   17   19   35\n```\n\n```r\nmpg1_hd4 <- mpg1 %>% filter(cty<=14)  #cty값이 cty값의 1사분위값보다 작거나 같은 자동차들을 추출한다.\n```\n- 크거나 같거나 수학연산자를 사용한다.(<=, >, !=, ...)\n\n- 'manufacturer==\"honda\"|manufacturer==\"nissan\"|manufacturer==\"subaru\"|manufacturer==\"toyota\"'는\n- 'manufacturer %in% c(\"honda\", \"nissan\", \"subaru\", \"toyota\")'로 묶어도 된다.\n\n```r\n# %in% c()로 한번에 묶기\n# %>% 이 아니라 %in% 이다.\nmpg1_hd5 <- mpg1 %>% filter(manufacturer %in% c(\"honda\", \"nissan\", \"subaru\", \"toyota\")) \n```\n\n- glimpse() : 데이터 미리보기\n- mutate() : 새로운 파생변수 항목 만들기\n\n```r\n# 여러 조건들을 한 뒤에 데이터 미리보기\n# \"%>% glimpse()\" 대신 \"<- iris2\" 쓰면 작업한 데이터가 바로 iris2로 저장된다.\niris %>%\n  filter(Species == \"setosa\") %>% \n  select(Sepal.Length, Sepal.Width) %>% \n  filter(Sepal.Length > 5.0) %>% \n  mutate(total = Sepal.Length + Sepal.Width) %>% glimpse()\n```\n\n```\n## Rows: 22\n## Columns: 3\n## $ Sepal.Length <dbl> 5.1, 5.4, 5.4, 5.8, 5.7, 5.4, 5.1, 5.7, 5.1, 5.4, 5.1, 5.…\n## $ Sepal.Width  <dbl> 3.5, 3.9, 3.7, 4.0, 4.4, 3.9, 3.5, 3.8, 3.8, 3.4, 3.7, 3.…\n## $ total        <dbl> 8.6, 9.3, 9.1, 9.8, 10.1, 9.3, 8.6, 9.5, 8.9, 8.8, 8.8, 8…\n```\n- &를 이용하여 반복되는 함수를 줄인다\n\n```r\n#바로 위의 함수와 같은 함수지만 filter를 &로 정리했다.\n#여러 조건일 때 &는 and, |는 or, !는 not\niris %>%\n  filter(Species == \"setosa\" & Sepal.Length > 5.0) %>% \n  select(Sepal.Length, Sepal.Width) %>% \n  mutate(total = Sepal.Length + Sepal.Width)\n```\n\n```\n##    Sepal.Length Sepal.Width total\n## 1           5.1         3.5   8.6\n## 2           5.4         3.9   9.3\n## 3           5.4         3.7   9.1\n## 4           5.8         4.0   9.8\n## 5           5.7         4.4  10.1\n## 6           5.4         3.9   9.3\n## 7           5.1         3.5   8.6\n## 8           5.7         3.8   9.5\n## 9           5.1         3.8   8.9\n## 10          5.4         3.4   8.8\n## 11          5.1         3.7   8.8\n## 12          5.1         3.3   8.4\n## 13          5.2         3.5   8.7\n## 14          5.2         3.4   8.6\n## 15          5.4         3.4   8.8\n## 16          5.2         4.1   9.3\n## 17          5.5         4.2   9.7\n## 18          5.5         3.5   9.0\n## 19          5.1         3.4   8.5\n## 20          5.1         3.8   8.9\n## 21          5.1         3.8   8.9\n## 22          5.3         3.7   9.0\n```\n\n- group_by(trans) : trans 변수안의 범주로 행을 분류한다.\n- summarise(m = mean(cty)) : cty의 평균을 m이라는 변수에 넣는다.\n\n```r\n#'group_by()' 함수랑 'summarise()' 함수는 한 세트로 생각\nmpg1 %>% \n  group_by(trans) %>% \n  summarise(avg     = mean(cty)   # 평균\n            , total = sum(cty)    # 총합\n            , med   = median(cty) # 중간값\n            , count = n())        # 빈도\n```\n\n```\n## # A tibble: 2 × 5\n##   trans    avg total   med count\n##   <chr>  <dbl> <int> <int> <int>\n## 1 auto    16.0  2507    16   157\n## 2 manual  18.7  1438    18    77\n```\n- n() : 데이터숫자를 세어 빈도를 알려준다.(count함수와 비슷함.)\n\n- count() 함수와 summarise(n=n()) 함수는 결과값은 같지만,\ncount()함수는 summarise()함수같이 여러 명령을 수행할 수 없고,\nsummarise(n=n())함수는 여러 명령을 수행할 수 있다.\n\n\n```r\ncount(mpg1, trans)  #짧지만 여러 명령은 불가능..\n```\n\n```\n##    trans   n\n## 1   auto 157\n## 2 manual  77\n```\n\n```r\nmpg1 %>% \n  group_by(trans) %>% \n  summarise(n=n())  #summarise(n=n()) 함수가 더 길지만, 여러 명령을 붙일 때 빛을 본다.\n```\n\n```\n## # A tibble: 2 × 2\n##   trans      n\n##   <chr>  <int>\n## 1 auto     157\n## 2 manual    77\n```\n\n- group_by() + summarise(n())+ mutate()의 조합\n\n```r\nmpg1 %>% \n  group_by(trans) %>%       #trans범주로 분류\n  summarise(n=n()) %>%      #trans범주별 데이터 빈도 구하기\n    mutate(total=sum(n),    #trans범주별 빈도의 총계 구하기\n          pct=n/total*100)  #trans범주별 비율 구하기\n```\n\n```\n## # A tibble: 2 × 4\n##   trans      n total   pct\n##   <chr>  <int> <int> <dbl>\n## 1 auto     157   234  67.1\n## 2 manual    77   234  32.9\n```\n\n- if, else : if에 조건과 명령문을 쓰고, else에 다른 명령을 쓴다.\n\n```r\n#if(조건) {명령문A} else {명령문B}\n#\"조건이 참이면 명령문A를 수행하고, 아니면 명령문B를 수행하라\"\n```\n- ifelse() : if조건에 참이면 수행하고, 거짓이면 else를 해라. if+else\n\n```r\na <- c(1,3,4,6,9)\nifelse(a%%2==0, \"짝수\", \"홀수\")  #ifelse 함수는 벡터연산 가능\n```\n\n```\n## [1] \"홀수\" \"홀수\" \"짝수\" \"짝수\" \"홀수\"\n```\n\n\n  \n  \n","slug":"day0621_dplyr","published":1,"updated":"2022-07-10T15:30:52.648Z","_id":"cl5fcok7p000fjku0caw496ro","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n\n<h1 id=\"6장\"><a href=\"#6장\" class=\"headerlink\" title=\"6장\"></a>6장</h1><h2 id=\"데이터-전처리를-위한-도구-p-98\"><a href=\"#데이터-전처리를-위한-도구-p-98\" class=\"headerlink\" title=\"데이터 전처리를 위한 도구(p.98)\"></a>데이터 전처리를 위한 도구(p.98)</h2><ul>\n<li><p>dplyr : 10GB 이내, 매우 쉬움, 처리속도 느림</p>\n</li>\n<li><p>data.table : 50GB 이상, 어려움, 처리속도 빠름</p>\n</li>\n<li><p>dplyr 라이브러리 불러오기</p>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;dplyr&quot;</span><span class=\"punctuation\">,</span>repos <span class=\"operator\">=</span> <span class=\"string\">&quot;http://cran.us.r-project.org&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>dplyr<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>%&gt;% : 파이프 연산자(코드와 코드를 이어줌 (ctrl+shift+m))</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1 <span class=\"operator\">&lt;-</span> read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;mpg1.csv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">str<span class=\"punctuation\">(</span>mpg1<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## &#x27;data.frame&#x27;:\t234 obs. of  5 variables:</span><br><span class=\"line\">##  $ manufacturer: chr  &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; ...</span><br><span class=\"line\">##  $ trans       : chr  &quot;auto&quot; &quot;manual&quot; &quot;manual&quot; &quot;auto&quot; ...</span><br><span class=\"line\">##  $ drv         : chr  &quot;f&quot; &quot;f&quot; &quot;f&quot; &quot;f&quot; ...</span><br><span class=\"line\">##  $ cty         : int  18 21 20 21 16 18 18 18 16 20 ...</span><br><span class=\"line\">##  $ hwy         : int  29 29 31 30 26 26 27 26 25 28 ...</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data2 <span class=\"operator\">&lt;-</span> mpg1 <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  select<span class=\"punctuation\">(</span>drv<span class=\"punctuation\">,</span>cty<span class=\"punctuation\">,</span>hwy<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  filter<span class=\"punctuation\">(</span>drv <span class=\"operator\">==</span> <span class=\"string\">&quot;f&quot;</span><span class=\"punctuation\">)</span>        <span class=\"comment\"># filter : 조건에 맞는 행 추출</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>파이프 연산자 안 쓸 경우</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data3 <span class=\"operator\">&lt;-</span> select<span class=\"punctuation\">(</span>mpg1<span class=\"punctuation\">,</span> drv<span class=\"punctuation\">,</span> cty<span class=\"punctuation\">,</span> hwy<span class=\"punctuation\">)</span></span><br><span class=\"line\">data3 <span class=\"operator\">&lt;-</span> filter<span class=\"punctuation\">(</span>data3<span class=\"punctuation\">,</span> drv <span class=\"operator\">==</span> <span class=\"string\">&quot;f&quot;</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#이렇게 쭉 이어 붙여야 한다..</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>rename() : 변수 이름 바꿔주기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#기존데이터 &lt;- 새 데이터 %&gt;% rename(새 이름1=기존 이름1, 새 이름2=기존 이름2,...)</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>count() : table()함수와 같지만 count()함수는 데이터프레임</li>\n<li>table()함수는 테이블 형태로 출력</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">count<span class=\"punctuation\">(</span>mpg1<span class=\"punctuation\">,</span> trans<span class=\"punctuation\">)</span>  <span class=\"comment\">#mpg1의 데이터 중 trans 항목의 빈도 수</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##    trans   n</span><br><span class=\"line\">## 1   auto 157</span><br><span class=\"line\">## 2 manual  77</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">class</span><span class=\"punctuation\">(</span>count<span class=\"punctuation\">(</span>mpg1<span class=\"punctuation\">,</span> trans<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"comment\"># count()는 데이터프레임 형태</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;data.frame&quot;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>table() 함수는 데이터세트$변수 이다.</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>trans<span class=\"punctuation\">)</span>  <span class=\"comment\">#mpg1의 데이터 중 trans 항목의 빈도 수</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">##   auto manual </span><br><span class=\"line\">##    157     77</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">class</span><span class=\"punctuation\">(</span>table<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>trans<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"comment\"># table()은 테이블 형태</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;table&quot;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>select : 필요한 열 추출</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#새 데이터세트 &lt;- 데이터세트 %&gt;% select(열1, 열2, ...)</span></span><br><span class=\"line\">mpg1_1 <span class=\"operator\">&lt;-</span> mpg1 <span class=\"operator\">%&gt;%</span> select<span class=\"punctuation\">(</span>manufacturer<span class=\"punctuation\">,</span> trans<span class=\"punctuation\">,</span>cty<span class=\"punctuation\">)</span>  <span class=\"comment\">#manufacturer,trans,cty 열만 추출</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>열 삭제 응용(select 함수 안에 -c 함수로 삭제할 열을 입력)</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1_2 <span class=\"operator\">&lt;-</span> mpg1 <span class=\"operator\">%&gt;%</span> select<span class=\"punctuation\">(</span><span class=\"operator\">-</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span>cty<span class=\"punctuation\">,</span>hwy<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#cty,hwy 열이 삭제됨</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>slice : 필요한 행 추출</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1 <span class=\"operator\">%&gt;%</span> slice<span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"number\">4</span><span class=\"punctuation\">,</span><span class=\"number\">5</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#1,4,5번 행을 추출한다. 연속적인 행이면 a:b로도 가능</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   manufacturer trans drv cty hwy</span><br><span class=\"line\">## 1         audi  auto   f  18  29</span><br><span class=\"line\">## 2         audi  auto   f  21  30</span><br><span class=\"line\">## 3         audi  auto   f  16  26</span><br></pre></td></tr></table></figure>\n<ul>\n<li>filter : 조건에 맞는 행 추출<br>예시1</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1_hd1 <span class=\"operator\">&lt;-</span> mpg1 <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>manufacturer<span class=\"operator\">==</span><span class=\"string\">&quot;hyundai&quot;</span><span class=\"punctuation\">)</span> <span class=\"comment\">#manufacturer가 &#x27;hyundai&#x27;인 행을 추출한다.</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>예시2</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1 <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>cty<span class=\"operator\">==</span><span class=\"built_in\">max</span><span class=\"punctuation\">(</span>cty<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>      <span class=\"comment\">#cty의 최댓값 함수를 바로 대입하거나,</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   manufacturer  trans drv cty hwy</span><br><span class=\"line\">## 1   volkswagen manual   f  35  44</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">max</span><span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>cty<span class=\"punctuation\">)</span>                       <span class=\"comment\">#cty의 최댓값을 구한 뒤</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 35</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1 <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>cty<span class=\"operator\">==</span><span class=\"number\">35</span><span class=\"punctuation\">)</span>            <span class=\"comment\">#cty의 최댓값이 35일 때, cty의 값이 35인 행을 추출한다.</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   manufacturer  trans drv cty hwy</span><br><span class=\"line\">## 1   volkswagen manual   f  35  44</span><br></pre></td></tr></table></figure>\n<ul>\n<li>비교값이 다른 데이터 추출</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1_hd2 <span class=\"operator\">&lt;-</span> mpg1 <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>manufacturer <span class=\"operator\">!=</span> <span class=\"string\">&quot;hyundai&quot;</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#manufacturer가 &#x27;hyundai&#x27;가 아닌 행을 추출한다.</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>비교값이 크거나 작은 데이터 추출</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1_hd3 <span class=\"operator\">&lt;-</span> mpg1 <span class=\"operator\">%&gt;%</span>filter<span class=\"punctuation\">(</span>cty <span class=\"operator\">&lt;</span> mean<span class=\"punctuation\">(</span>cty<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#cty값이 평균 미만인 자동차들을 추출한다.</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>1사분위수와 비교</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">quantile<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>cty<span class=\"punctuation\">)</span> </span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   0%  25%  50%  75% 100% </span><br><span class=\"line\">##    9   14   17   19   35</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1_hd4 <span class=\"operator\">&lt;-</span> mpg1 <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>cty<span class=\"operator\">&lt;=</span><span class=\"number\">14</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#cty값이 cty값의 1사분위값보다 작거나 같은 자동차들을 추출한다.</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>크거나 같거나 수학연산자를 사용한다.(&lt;&#x3D;, &gt;, !&#x3D;, …)</p>\n</li>\n<li><p>‘manufacturer&#x3D;&#x3D;”honda”|manufacturer&#x3D;&#x3D;”nissan”|manufacturer&#x3D;&#x3D;”subaru”|manufacturer&#x3D;&#x3D;”toyota”‘는</p>\n</li>\n<li><p>‘manufacturer %in% c(“honda”, “nissan”, “subaru”, “toyota”)’로 묶어도 된다.</p>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># %in% c()로 한번에 묶기</span></span><br><span class=\"line\"><span class=\"comment\"># %&gt;% 이 아니라 %in% 이다.</span></span><br><span class=\"line\">mpg1_hd5 <span class=\"operator\">&lt;-</span> mpg1 <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>manufacturer <span class=\"operator\">%in%</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;honda&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;nissan&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;subaru&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;toyota&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> </span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>glimpse() : 데이터 미리보기</li>\n<li>mutate() : 새로운 파생변수 항목 만들기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 여러 조건들을 한 뒤에 데이터 미리보기</span></span><br><span class=\"line\"><span class=\"comment\"># &quot;%&gt;% glimpse()&quot; 대신 &quot;&lt;- iris2&quot; 쓰면 작업한 데이터가 바로 iris2로 저장된다.</span></span><br><span class=\"line\">iris <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">  filter<span class=\"punctuation\">(</span>Species <span class=\"operator\">==</span> <span class=\"string\">&quot;setosa&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  select<span class=\"punctuation\">(</span>Sepal.Length<span class=\"punctuation\">,</span> Sepal.Width<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  filter<span class=\"punctuation\">(</span>Sepal.Length <span class=\"operator\">&gt;</span> <span class=\"number\">5.0</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  mutate<span class=\"punctuation\">(</span>total <span class=\"operator\">=</span> Sepal.Length <span class=\"operator\">+</span> Sepal.Width<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> glimpse<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## Rows: 22</span><br><span class=\"line\">## Columns: 3</span><br><span class=\"line\">## $ Sepal.Length &lt;dbl&gt; 5.1, 5.4, 5.4, 5.8, 5.7, 5.4, 5.1, 5.7, 5.1, 5.4, 5.1, 5.…</span><br><span class=\"line\">## $ Sepal.Width  &lt;dbl&gt; 3.5, 3.9, 3.7, 4.0, 4.4, 3.9, 3.5, 3.8, 3.8, 3.4, 3.7, 3.…</span><br><span class=\"line\">## $ total        &lt;dbl&gt; 8.6, 9.3, 9.1, 9.8, 10.1, 9.3, 8.6, 9.5, 8.9, 8.8, 8.8, 8…</span><br></pre></td></tr></table></figure>\n<ul>\n<li>&amp;를 이용하여 반복되는 함수를 줄인다</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#바로 위의 함수와 같은 함수지만 filter를 &amp;로 정리했다.</span></span><br><span class=\"line\"><span class=\"comment\">#여러 조건일 때 &amp;는 and, |는 or, !는 not</span></span><br><span class=\"line\">iris <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">  filter<span class=\"punctuation\">(</span>Species <span class=\"operator\">==</span> <span class=\"string\">&quot;setosa&quot;</span> <span class=\"operator\">&amp;</span> Sepal.Length <span class=\"operator\">&gt;</span> <span class=\"number\">5.0</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  select<span class=\"punctuation\">(</span>Sepal.Length<span class=\"punctuation\">,</span> Sepal.Width<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  mutate<span class=\"punctuation\">(</span>total <span class=\"operator\">=</span> Sepal.Length <span class=\"operator\">+</span> Sepal.Width<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##    Sepal.Length Sepal.Width total</span><br><span class=\"line\">## 1           5.1         3.5   8.6</span><br><span class=\"line\">## 2           5.4         3.9   9.3</span><br><span class=\"line\">## 3           5.4         3.7   9.1</span><br><span class=\"line\">## 4           5.8         4.0   9.8</span><br><span class=\"line\">## 5           5.7         4.4  10.1</span><br><span class=\"line\">## 6           5.4         3.9   9.3</span><br><span class=\"line\">## 7           5.1         3.5   8.6</span><br><span class=\"line\">## 8           5.7         3.8   9.5</span><br><span class=\"line\">## 9           5.1         3.8   8.9</span><br><span class=\"line\">## 10          5.4         3.4   8.8</span><br><span class=\"line\">## 11          5.1         3.7   8.8</span><br><span class=\"line\">## 12          5.1         3.3   8.4</span><br><span class=\"line\">## 13          5.2         3.5   8.7</span><br><span class=\"line\">## 14          5.2         3.4   8.6</span><br><span class=\"line\">## 15          5.4         3.4   8.8</span><br><span class=\"line\">## 16          5.2         4.1   9.3</span><br><span class=\"line\">## 17          5.5         4.2   9.7</span><br><span class=\"line\">## 18          5.5         3.5   9.0</span><br><span class=\"line\">## 19          5.1         3.4   8.5</span><br><span class=\"line\">## 20          5.1         3.8   8.9</span><br><span class=\"line\">## 21          5.1         3.8   8.9</span><br><span class=\"line\">## 22          5.3         3.7   9.0</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>group_by(trans) : trans 변수안의 범주로 행을 분류한다.</li>\n<li>summarise(m &#x3D; mean(cty)) : cty의 평균을 m이라는 변수에 넣는다.</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#&#x27;group_by()&#x27; 함수랑 &#x27;summarise()&#x27; 함수는 한 세트로 생각</span></span><br><span class=\"line\">mpg1 <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  group_by<span class=\"punctuation\">(</span>trans<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  summarise<span class=\"punctuation\">(</span>avg     <span class=\"operator\">=</span> mean<span class=\"punctuation\">(</span>cty<span class=\"punctuation\">)</span>   <span class=\"comment\"># 평균</span></span><br><span class=\"line\">            <span class=\"punctuation\">,</span> total <span class=\"operator\">=</span> <span class=\"built_in\">sum</span><span class=\"punctuation\">(</span>cty<span class=\"punctuation\">)</span>    <span class=\"comment\"># 총합</span></span><br><span class=\"line\">            <span class=\"punctuation\">,</span> med   <span class=\"operator\">=</span> median<span class=\"punctuation\">(</span>cty<span class=\"punctuation\">)</span> <span class=\"comment\"># 중간값</span></span><br><span class=\"line\">            <span class=\"punctuation\">,</span> count <span class=\"operator\">=</span> n<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>        <span class=\"comment\"># 빈도</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## # A tibble: 2 × 5</span><br><span class=\"line\">##   trans    avg total   med count</span><br><span class=\"line\">##   &lt;chr&gt;  &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;</span><br><span class=\"line\">## 1 auto    16.0  2507    16   157</span><br><span class=\"line\">## 2 manual  18.7  1438    18    77</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>n() : 데이터숫자를 세어 빈도를 알려준다.(count함수와 비슷함.)</p>\n</li>\n<li><p>count() 함수와 summarise(n&#x3D;n()) 함수는 결과값은 같지만,<br>count()함수는 summarise()함수같이 여러 명령을 수행할 수 없고,<br>summarise(n&#x3D;n())함수는 여러 명령을 수행할 수 있다.</p>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">count<span class=\"punctuation\">(</span>mpg1<span class=\"punctuation\">,</span> trans<span class=\"punctuation\">)</span>  <span class=\"comment\">#짧지만 여러 명령은 불가능..</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##    trans   n</span><br><span class=\"line\">## 1   auto 157</span><br><span class=\"line\">## 2 manual  77</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1 <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  group_by<span class=\"punctuation\">(</span>trans<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  summarise<span class=\"punctuation\">(</span>n<span class=\"operator\">=</span>n<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#summarise(n=n()) 함수가 더 길지만, 여러 명령을 붙일 때 빛을 본다.</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## # A tibble: 2 × 2</span><br><span class=\"line\">##   trans      n</span><br><span class=\"line\">##   &lt;chr&gt;  &lt;int&gt;</span><br><span class=\"line\">## 1 auto     157</span><br><span class=\"line\">## 2 manual    77</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>group_by() + summarise(n())+ mutate()의 조합</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1 <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  group_by<span class=\"punctuation\">(</span>trans<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span>       <span class=\"comment\">#trans범주로 분류</span></span><br><span class=\"line\">  summarise<span class=\"punctuation\">(</span>n<span class=\"operator\">=</span>n<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span>      <span class=\"comment\">#trans범주별 데이터 빈도 구하기</span></span><br><span class=\"line\">    mutate<span class=\"punctuation\">(</span>total<span class=\"operator\">=</span><span class=\"built_in\">sum</span><span class=\"punctuation\">(</span>n<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span>    <span class=\"comment\">#trans범주별 빈도의 총계 구하기</span></span><br><span class=\"line\">          pct<span class=\"operator\">=</span>n<span class=\"operator\">/</span>total<span class=\"operator\">*</span><span class=\"number\">100</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#trans범주별 비율 구하기</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## # A tibble: 2 × 4</span><br><span class=\"line\">##   trans      n total   pct</span><br><span class=\"line\">##   &lt;chr&gt;  &lt;int&gt; &lt;int&gt; &lt;dbl&gt;</span><br><span class=\"line\">## 1 auto     157   234  67.1</span><br><span class=\"line\">## 2 manual    77   234  32.9</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>if, else : if에 조건과 명령문을 쓰고, else에 다른 명령을 쓴다.</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#if(조건) &#123;명령문A&#125; else &#123;명령문B&#125;</span></span><br><span class=\"line\"><span class=\"comment\">#&quot;조건이 참이면 명령문A를 수행하고, 아니면 명령문B를 수행하라&quot;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>ifelse() : if조건에 참이면 수행하고, 거짓이면 else를 해라. if+else</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"number\">3</span><span class=\"punctuation\">,</span><span class=\"number\">4</span><span class=\"punctuation\">,</span><span class=\"number\">6</span><span class=\"punctuation\">,</span><span class=\"number\">9</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">ifelse<span class=\"punctuation\">(</span>a<span class=\"operator\">%%</span><span class=\"number\">2</span><span class=\"operator\">==</span><span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;짝수&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;홀수&quot;</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#ifelse 함수는 벡터연산 가능</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;홀수&quot; &quot;홀수&quot; &quot;짝수&quot; &quot;짝수&quot; &quot;홀수&quot;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/06/21/day0621_dplyr/R_logo.jpg","excerpt":"<p>데이터 전처리</p>","more":"<p>데이터 전처리</p>\n<!-- excerpt -->\n\n\n<h1 id=\"6장\"><a href=\"#6장\" class=\"headerlink\" title=\"6장\"></a>6장</h1><h2 id=\"데이터-전처리를-위한-도구-p-98\"><a href=\"#데이터-전처리를-위한-도구-p-98\" class=\"headerlink\" title=\"데이터 전처리를 위한 도구(p.98)\"></a>데이터 전처리를 위한 도구(p.98)</h2><ul>\n<li><p>dplyr : 10GB 이내, 매우 쉬움, 처리속도 느림</p>\n</li>\n<li><p>data.table : 50GB 이상, 어려움, 처리속도 빠름</p>\n</li>\n<li><p>dplyr 라이브러리 불러오기</p>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;dplyr&quot;</span><span class=\"punctuation\">,</span>repos <span class=\"operator\">=</span> <span class=\"string\">&quot;http://cran.us.r-project.org&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>dplyr<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>%&gt;% : 파이프 연산자(코드와 코드를 이어줌 (ctrl+shift+m))</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1 <span class=\"operator\">&lt;-</span> read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;mpg1.csv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">str<span class=\"punctuation\">(</span>mpg1<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## &#x27;data.frame&#x27;:\t234 obs. of  5 variables:</span><br><span class=\"line\">##  $ manufacturer: chr  &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; ...</span><br><span class=\"line\">##  $ trans       : chr  &quot;auto&quot; &quot;manual&quot; &quot;manual&quot; &quot;auto&quot; ...</span><br><span class=\"line\">##  $ drv         : chr  &quot;f&quot; &quot;f&quot; &quot;f&quot; &quot;f&quot; ...</span><br><span class=\"line\">##  $ cty         : int  18 21 20 21 16 18 18 18 16 20 ...</span><br><span class=\"line\">##  $ hwy         : int  29 29 31 30 26 26 27 26 25 28 ...</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data2 <span class=\"operator\">&lt;-</span> mpg1 <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  select<span class=\"punctuation\">(</span>drv<span class=\"punctuation\">,</span>cty<span class=\"punctuation\">,</span>hwy<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  filter<span class=\"punctuation\">(</span>drv <span class=\"operator\">==</span> <span class=\"string\">&quot;f&quot;</span><span class=\"punctuation\">)</span>        <span class=\"comment\"># filter : 조건에 맞는 행 추출</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>파이프 연산자 안 쓸 경우</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data3 <span class=\"operator\">&lt;-</span> select<span class=\"punctuation\">(</span>mpg1<span class=\"punctuation\">,</span> drv<span class=\"punctuation\">,</span> cty<span class=\"punctuation\">,</span> hwy<span class=\"punctuation\">)</span></span><br><span class=\"line\">data3 <span class=\"operator\">&lt;-</span> filter<span class=\"punctuation\">(</span>data3<span class=\"punctuation\">,</span> drv <span class=\"operator\">==</span> <span class=\"string\">&quot;f&quot;</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#이렇게 쭉 이어 붙여야 한다..</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>rename() : 변수 이름 바꿔주기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#기존데이터 &lt;- 새 데이터 %&gt;% rename(새 이름1=기존 이름1, 새 이름2=기존 이름2,...)</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>count() : table()함수와 같지만 count()함수는 데이터프레임</li>\n<li>table()함수는 테이블 형태로 출력</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">count<span class=\"punctuation\">(</span>mpg1<span class=\"punctuation\">,</span> trans<span class=\"punctuation\">)</span>  <span class=\"comment\">#mpg1의 데이터 중 trans 항목의 빈도 수</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##    trans   n</span><br><span class=\"line\">## 1   auto 157</span><br><span class=\"line\">## 2 manual  77</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">class</span><span class=\"punctuation\">(</span>count<span class=\"punctuation\">(</span>mpg1<span class=\"punctuation\">,</span> trans<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"comment\"># count()는 데이터프레임 형태</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;data.frame&quot;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>table() 함수는 데이터세트$변수 이다.</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>trans<span class=\"punctuation\">)</span>  <span class=\"comment\">#mpg1의 데이터 중 trans 항목의 빈도 수</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">##   auto manual </span><br><span class=\"line\">##    157     77</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">class</span><span class=\"punctuation\">(</span>table<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>trans<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"comment\"># table()은 테이블 형태</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;table&quot;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>select : 필요한 열 추출</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#새 데이터세트 &lt;- 데이터세트 %&gt;% select(열1, 열2, ...)</span></span><br><span class=\"line\">mpg1_1 <span class=\"operator\">&lt;-</span> mpg1 <span class=\"operator\">%&gt;%</span> select<span class=\"punctuation\">(</span>manufacturer<span class=\"punctuation\">,</span> trans<span class=\"punctuation\">,</span>cty<span class=\"punctuation\">)</span>  <span class=\"comment\">#manufacturer,trans,cty 열만 추출</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>열 삭제 응용(select 함수 안에 -c 함수로 삭제할 열을 입력)</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1_2 <span class=\"operator\">&lt;-</span> mpg1 <span class=\"operator\">%&gt;%</span> select<span class=\"punctuation\">(</span><span class=\"operator\">-</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span>cty<span class=\"punctuation\">,</span>hwy<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#cty,hwy 열이 삭제됨</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>slice : 필요한 행 추출</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1 <span class=\"operator\">%&gt;%</span> slice<span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"number\">4</span><span class=\"punctuation\">,</span><span class=\"number\">5</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#1,4,5번 행을 추출한다. 연속적인 행이면 a:b로도 가능</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   manufacturer trans drv cty hwy</span><br><span class=\"line\">## 1         audi  auto   f  18  29</span><br><span class=\"line\">## 2         audi  auto   f  21  30</span><br><span class=\"line\">## 3         audi  auto   f  16  26</span><br></pre></td></tr></table></figure>\n<ul>\n<li>filter : 조건에 맞는 행 추출<br>예시1</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1_hd1 <span class=\"operator\">&lt;-</span> mpg1 <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>manufacturer<span class=\"operator\">==</span><span class=\"string\">&quot;hyundai&quot;</span><span class=\"punctuation\">)</span> <span class=\"comment\">#manufacturer가 &#x27;hyundai&#x27;인 행을 추출한다.</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>예시2</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1 <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>cty<span class=\"operator\">==</span><span class=\"built_in\">max</span><span class=\"punctuation\">(</span>cty<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>      <span class=\"comment\">#cty의 최댓값 함수를 바로 대입하거나,</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   manufacturer  trans drv cty hwy</span><br><span class=\"line\">## 1   volkswagen manual   f  35  44</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">max</span><span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>cty<span class=\"punctuation\">)</span>                       <span class=\"comment\">#cty의 최댓값을 구한 뒤</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 35</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1 <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>cty<span class=\"operator\">==</span><span class=\"number\">35</span><span class=\"punctuation\">)</span>            <span class=\"comment\">#cty의 최댓값이 35일 때, cty의 값이 35인 행을 추출한다.</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   manufacturer  trans drv cty hwy</span><br><span class=\"line\">## 1   volkswagen manual   f  35  44</span><br></pre></td></tr></table></figure>\n<ul>\n<li>비교값이 다른 데이터 추출</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1_hd2 <span class=\"operator\">&lt;-</span> mpg1 <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>manufacturer <span class=\"operator\">!=</span> <span class=\"string\">&quot;hyundai&quot;</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#manufacturer가 &#x27;hyundai&#x27;가 아닌 행을 추출한다.</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>비교값이 크거나 작은 데이터 추출</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1_hd3 <span class=\"operator\">&lt;-</span> mpg1 <span class=\"operator\">%&gt;%</span>filter<span class=\"punctuation\">(</span>cty <span class=\"operator\">&lt;</span> mean<span class=\"punctuation\">(</span>cty<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#cty값이 평균 미만인 자동차들을 추출한다.</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>1사분위수와 비교</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">quantile<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>cty<span class=\"punctuation\">)</span> </span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   0%  25%  50%  75% 100% </span><br><span class=\"line\">##    9   14   17   19   35</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1_hd4 <span class=\"operator\">&lt;-</span> mpg1 <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>cty<span class=\"operator\">&lt;=</span><span class=\"number\">14</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#cty값이 cty값의 1사분위값보다 작거나 같은 자동차들을 추출한다.</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>크거나 같거나 수학연산자를 사용한다.(&lt;&#x3D;, &gt;, !&#x3D;, …)</p>\n</li>\n<li><p>‘manufacturer&#x3D;&#x3D;”honda”|manufacturer&#x3D;&#x3D;”nissan”|manufacturer&#x3D;&#x3D;”subaru”|manufacturer&#x3D;&#x3D;”toyota”‘는</p>\n</li>\n<li><p>‘manufacturer %in% c(“honda”, “nissan”, “subaru”, “toyota”)’로 묶어도 된다.</p>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># %in% c()로 한번에 묶기</span></span><br><span class=\"line\"><span class=\"comment\"># %&gt;% 이 아니라 %in% 이다.</span></span><br><span class=\"line\">mpg1_hd5 <span class=\"operator\">&lt;-</span> mpg1 <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>manufacturer <span class=\"operator\">%in%</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;honda&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;nissan&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;subaru&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;toyota&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> </span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>glimpse() : 데이터 미리보기</li>\n<li>mutate() : 새로운 파생변수 항목 만들기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 여러 조건들을 한 뒤에 데이터 미리보기</span></span><br><span class=\"line\"><span class=\"comment\"># &quot;%&gt;% glimpse()&quot; 대신 &quot;&lt;- iris2&quot; 쓰면 작업한 데이터가 바로 iris2로 저장된다.</span></span><br><span class=\"line\">iris <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">  filter<span class=\"punctuation\">(</span>Species <span class=\"operator\">==</span> <span class=\"string\">&quot;setosa&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  select<span class=\"punctuation\">(</span>Sepal.Length<span class=\"punctuation\">,</span> Sepal.Width<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  filter<span class=\"punctuation\">(</span>Sepal.Length <span class=\"operator\">&gt;</span> <span class=\"number\">5.0</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  mutate<span class=\"punctuation\">(</span>total <span class=\"operator\">=</span> Sepal.Length <span class=\"operator\">+</span> Sepal.Width<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> glimpse<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## Rows: 22</span><br><span class=\"line\">## Columns: 3</span><br><span class=\"line\">## $ Sepal.Length &lt;dbl&gt; 5.1, 5.4, 5.4, 5.8, 5.7, 5.4, 5.1, 5.7, 5.1, 5.4, 5.1, 5.…</span><br><span class=\"line\">## $ Sepal.Width  &lt;dbl&gt; 3.5, 3.9, 3.7, 4.0, 4.4, 3.9, 3.5, 3.8, 3.8, 3.4, 3.7, 3.…</span><br><span class=\"line\">## $ total        &lt;dbl&gt; 8.6, 9.3, 9.1, 9.8, 10.1, 9.3, 8.6, 9.5, 8.9, 8.8, 8.8, 8…</span><br></pre></td></tr></table></figure>\n<ul>\n<li>&amp;를 이용하여 반복되는 함수를 줄인다</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#바로 위의 함수와 같은 함수지만 filter를 &amp;로 정리했다.</span></span><br><span class=\"line\"><span class=\"comment\">#여러 조건일 때 &amp;는 and, |는 or, !는 not</span></span><br><span class=\"line\">iris <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">  filter<span class=\"punctuation\">(</span>Species <span class=\"operator\">==</span> <span class=\"string\">&quot;setosa&quot;</span> <span class=\"operator\">&amp;</span> Sepal.Length <span class=\"operator\">&gt;</span> <span class=\"number\">5.0</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  select<span class=\"punctuation\">(</span>Sepal.Length<span class=\"punctuation\">,</span> Sepal.Width<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  mutate<span class=\"punctuation\">(</span>total <span class=\"operator\">=</span> Sepal.Length <span class=\"operator\">+</span> Sepal.Width<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##    Sepal.Length Sepal.Width total</span><br><span class=\"line\">## 1           5.1         3.5   8.6</span><br><span class=\"line\">## 2           5.4         3.9   9.3</span><br><span class=\"line\">## 3           5.4         3.7   9.1</span><br><span class=\"line\">## 4           5.8         4.0   9.8</span><br><span class=\"line\">## 5           5.7         4.4  10.1</span><br><span class=\"line\">## 6           5.4         3.9   9.3</span><br><span class=\"line\">## 7           5.1         3.5   8.6</span><br><span class=\"line\">## 8           5.7         3.8   9.5</span><br><span class=\"line\">## 9           5.1         3.8   8.9</span><br><span class=\"line\">## 10          5.4         3.4   8.8</span><br><span class=\"line\">## 11          5.1         3.7   8.8</span><br><span class=\"line\">## 12          5.1         3.3   8.4</span><br><span class=\"line\">## 13          5.2         3.5   8.7</span><br><span class=\"line\">## 14          5.2         3.4   8.6</span><br><span class=\"line\">## 15          5.4         3.4   8.8</span><br><span class=\"line\">## 16          5.2         4.1   9.3</span><br><span class=\"line\">## 17          5.5         4.2   9.7</span><br><span class=\"line\">## 18          5.5         3.5   9.0</span><br><span class=\"line\">## 19          5.1         3.4   8.5</span><br><span class=\"line\">## 20          5.1         3.8   8.9</span><br><span class=\"line\">## 21          5.1         3.8   8.9</span><br><span class=\"line\">## 22          5.3         3.7   9.0</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>group_by(trans) : trans 변수안의 범주로 행을 분류한다.</li>\n<li>summarise(m &#x3D; mean(cty)) : cty의 평균을 m이라는 변수에 넣는다.</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#&#x27;group_by()&#x27; 함수랑 &#x27;summarise()&#x27; 함수는 한 세트로 생각</span></span><br><span class=\"line\">mpg1 <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  group_by<span class=\"punctuation\">(</span>trans<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  summarise<span class=\"punctuation\">(</span>avg     <span class=\"operator\">=</span> mean<span class=\"punctuation\">(</span>cty<span class=\"punctuation\">)</span>   <span class=\"comment\"># 평균</span></span><br><span class=\"line\">            <span class=\"punctuation\">,</span> total <span class=\"operator\">=</span> <span class=\"built_in\">sum</span><span class=\"punctuation\">(</span>cty<span class=\"punctuation\">)</span>    <span class=\"comment\"># 총합</span></span><br><span class=\"line\">            <span class=\"punctuation\">,</span> med   <span class=\"operator\">=</span> median<span class=\"punctuation\">(</span>cty<span class=\"punctuation\">)</span> <span class=\"comment\"># 중간값</span></span><br><span class=\"line\">            <span class=\"punctuation\">,</span> count <span class=\"operator\">=</span> n<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>        <span class=\"comment\"># 빈도</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## # A tibble: 2 × 5</span><br><span class=\"line\">##   trans    avg total   med count</span><br><span class=\"line\">##   &lt;chr&gt;  &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;</span><br><span class=\"line\">## 1 auto    16.0  2507    16   157</span><br><span class=\"line\">## 2 manual  18.7  1438    18    77</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>n() : 데이터숫자를 세어 빈도를 알려준다.(count함수와 비슷함.)</p>\n</li>\n<li><p>count() 함수와 summarise(n&#x3D;n()) 함수는 결과값은 같지만,<br>count()함수는 summarise()함수같이 여러 명령을 수행할 수 없고,<br>summarise(n&#x3D;n())함수는 여러 명령을 수행할 수 있다.</p>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">count<span class=\"punctuation\">(</span>mpg1<span class=\"punctuation\">,</span> trans<span class=\"punctuation\">)</span>  <span class=\"comment\">#짧지만 여러 명령은 불가능..</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##    trans   n</span><br><span class=\"line\">## 1   auto 157</span><br><span class=\"line\">## 2 manual  77</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1 <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  group_by<span class=\"punctuation\">(</span>trans<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  summarise<span class=\"punctuation\">(</span>n<span class=\"operator\">=</span>n<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#summarise(n=n()) 함수가 더 길지만, 여러 명령을 붙일 때 빛을 본다.</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## # A tibble: 2 × 2</span><br><span class=\"line\">##   trans      n</span><br><span class=\"line\">##   &lt;chr&gt;  &lt;int&gt;</span><br><span class=\"line\">## 1 auto     157</span><br><span class=\"line\">## 2 manual    77</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>group_by() + summarise(n())+ mutate()의 조합</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1 <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  group_by<span class=\"punctuation\">(</span>trans<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span>       <span class=\"comment\">#trans범주로 분류</span></span><br><span class=\"line\">  summarise<span class=\"punctuation\">(</span>n<span class=\"operator\">=</span>n<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span>      <span class=\"comment\">#trans범주별 데이터 빈도 구하기</span></span><br><span class=\"line\">    mutate<span class=\"punctuation\">(</span>total<span class=\"operator\">=</span><span class=\"built_in\">sum</span><span class=\"punctuation\">(</span>n<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span>    <span class=\"comment\">#trans범주별 빈도의 총계 구하기</span></span><br><span class=\"line\">          pct<span class=\"operator\">=</span>n<span class=\"operator\">/</span>total<span class=\"operator\">*</span><span class=\"number\">100</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#trans범주별 비율 구하기</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## # A tibble: 2 × 4</span><br><span class=\"line\">##   trans      n total   pct</span><br><span class=\"line\">##   &lt;chr&gt;  &lt;int&gt; &lt;int&gt; &lt;dbl&gt;</span><br><span class=\"line\">## 1 auto     157   234  67.1</span><br><span class=\"line\">## 2 manual    77   234  32.9</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>if, else : if에 조건과 명령문을 쓰고, else에 다른 명령을 쓴다.</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#if(조건) &#123;명령문A&#125; else &#123;명령문B&#125;</span></span><br><span class=\"line\"><span class=\"comment\">#&quot;조건이 참이면 명령문A를 수행하고, 아니면 명령문B를 수행하라&quot;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>ifelse() : if조건에 참이면 수행하고, 거짓이면 else를 해라. if+else</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"number\">3</span><span class=\"punctuation\">,</span><span class=\"number\">4</span><span class=\"punctuation\">,</span><span class=\"number\">6</span><span class=\"punctuation\">,</span><span class=\"number\">9</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">ifelse<span class=\"punctuation\">(</span>a<span class=\"operator\">%%</span><span class=\"number\">2</span><span class=\"operator\">==</span><span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;짝수&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;홀수&quot;</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#ifelse 함수는 벡터연산 가능</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;홀수&quot; &quot;홀수&quot; &quot;짝수&quot; &quot;짝수&quot; &quot;홀수&quot;</span><br></pre></td></tr></table></figure>\n\n\n"},{"title":"3장, 4장","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"thumbnailImage":"R_logo.jpg","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-06-20T00:00:00.000Z","_content":"\n벡터 및 데이터 타입\n<!-- excerpt -->\n\n\n# 3장\n## 벡터의 종류\n- 숫자형, 정수형, 문자형, 범주형, 논리형 벡터가 존재한다.\n- 범주형 벡터 : 행렬과 비슷한 형태, 연산은 안된다.\nex) 성별:남자, 여자 / 연령대:청년, 중년, 고령 의 범주를 만들어서 남자청년, 여자중년 등의 값을 만들어내는 벡터\n- 논리형 벡터 : 참(TRUE), 거짓(FALSE)이라는 논리값으로 구성된 데이터. 논리값은 ',\" 없이 대문자로 쓴다.\n\n- 벡터 종류 확인\n\n```r\na<-c(1,2,\"유형\",\"확인\")\na\n```\n\n```\n## [1] \"1\"    \"2\"    \"유형\" \"확인\"\n```\n\n```r\nclass(a)\n```\n\n```\n## [1] \"character\"\n```\n\n- 숫자형 벡터\n\n```r\na<-1\na   #[1]은 데이터의 위치가 벡터 중 첫 번째 라는 것을 의미\n```\n\n```\n## [1] 1\n```\n\n- 복수의 숫자 벡터\n\n```r\na<-c(1,2,3)\na\n```\n\n```\n## [1] 1 2 3\n```\n\n- 문자형 벡터\n\n```r\na<-\"Hello\"\na\n```\n\n```\n## [1] \"Hello\"\n```\n\n```r\na<-\"1\"   #여기서 1은 '숫자형'이 아닌 '문자형'이다\na\n```\n\n```\n## [1] \"1\"\n```\n\n- 복수의 문자형 벡터\n\n```r\na<-c(\"Hi\",\"Hello\")\na\n```\n\n```\n## [1] \"Hi\"    \"Hello\"\n```\n\n- 숫자 + 문자 벡터(문자형 벡터로 출력)\n\n```r\na<-c(1,2,\"Hello\")\na\n```\n\n```\n## [1] \"1\"     \"2\"     \"Hello\"\n```\n\n```r\na<-c(1,\"1\")   #마찬가지로 1, \"1\" 둘다 문자형으로 출력\na\n```\n\n```\n## [1] \"1\" \"1\"\n```\n\n\n```r\na <- c(1,2,TRUE,FALSE)  #숫자형 + 논리형 벡터라면 숫자형 으로 출력된다.\na\n```\n\n```\n## [1] 1 2 1 0\n```\n\n- 범주형 벡터\n\n```r\na<-factor(c(1,2,1,2,3))\na                        #1,2,3의 Level이 들어간 범주형 벡터 이다.\n```\n\n```\n## [1] 1 2 1 2 3\n## Levels: 1 2 3\n```\n\n- 벡터 만들기\n\n```r\nno <- c(1,2,3,4,5)\nsex <- c(\"male\",\"female\",\"male\",\"male\",\"female\")\nkorean <- c(87,92,95,81,87)\n\nexam_a <- data.frame(no,sex,korean)\nexam_a\n```\n\n```\n##   no    sex korean\n## 1  1   male     87\n## 2  2 female     92\n## 3  3   male     95\n## 4  4   male     81\n## 5  5 female     87\n```\n\n- data.frame() 에서 한번에 만들기\n\n```r\nexam_b <- data.frame(no=c(1,2,3,4,5),\n                    sex=c(\"male\",\"female\",\"male\",\"male\",\"female\"),\n                    korean=c(87,92,95,81,87))\nexam_b\n```\n\n```\n##   no    sex korean\n## 1  1   male     87\n## 2  2 female     92\n## 3  3   male     95\n## 4  4   male     81\n## 5  5 female     87\n```\n\n- 열 추가하기\n\n```r\nscience <- c(82,93,90,80,88)     #science벡터 만들기\nexam_c <- data.frame(no, sex, korean, science)     #science 변수 추가\nexam_c\n```\n\n```\n##   no    sex korean science\n## 1  1   male     87      82\n## 2  2 female     92      93\n## 3  3   male     95      90\n## 4  4   male     81      80\n## 5  5 female     87      88\n```\n- 데이터의 위치 : 객체 이름[행,열]\n```r\nexam_c[2,3]   #exam_c 데이터에서 2행(2),3열(korean)의 값을 출력\n```\n```\n## [1] 92\n```\n```r\nexam_c[2,\"science\"]   #열의 색인번호 대신 이름을 쓴 경우\n```\n```\n## [1] 93\n```\n- 복수 데이터 출력\n```r\nexam_c[c(4,5),c(2,3)]   #(4,5번 학생)의 (성별,국어성적)을 출력\n```\n```\n##      sex korean\n## 4   male     81\n## 5 female     87\n```\n- 전체 행, 열의 데이터 출력\n```r\nexam_c[3,]   #[3번 학생]의 모든 정보 출력\n```\n```\n##   no  sex korean science\n## 3  3 male     95      90\n```\n```r\nexam_c[,4]   #모든 [science] 성적 출력\n```\n```\n## [1] 82 93 90 80 88\n```\n- 연속 데이터 출력\n```r\nexam_c[c(1:3,5),c(2,3)]   #(1,2,3,5번 학생)의 (성별,국어성적)을 출력\n```\n```\n##      sex korean\n## 1   male     87\n## 2 female     92\n## 3   male     95\n## 5 female     87\n```\n- 필요없는 데이터 제거\n```r\nexam_c[c(-4,-5),-2]   #(4,5번 학생을 제외한) 학생들의 (성별을 제외한) 벡터 값 출력\n```\n```\n##   no korean science\n## 1  1     87      82\n## 2  2     92      93\n## 3  3     95      90\n```\n```r\nexam_c[-c(4,5),-2]   #c 앞에 -를 붙여도 된다.\n```\n```\n##   no korean science\n## 1  1     87      82\n## 2  2     92      93\n## 3  3     95      90\n```\n- 특정 변수 출력\n```r\nexam_c$science   #science 값 출력\n```\n```\n## [1] 82 93 90 80 88\n```\n```r\nstr(exam_c)   #데이터의 모든 유형 확인가능\n```\n```\n## 'data.frame':\t5 obs. of  4 variables:\n##  $ no     : num  1 2 3 4 5\n##  $ sex    : chr  \"male\" \"female\" \"male\" \"male\" ...\n##  $ korean : num  87 92 95 81 87\n##  $ science: num  82 93 90 80 88\n```\n```r\nnum_vector = c(1, 2, 3)\nnum_vector2 = c(5, 6, 7)\n\nnum_vector[1] + num_vector2[2]   #num_vector의 1번째 + num_vector2의 2번째 (즉, 1+6)\n```\n```\n## [1] 7\n```\n### 명목형 자료형 Factor\n- 서울, 인천, 부산은 동등한 \"비서열적 변수\" 이다.\n```r\nlocaiton_vector <- c(\"서울\", \"인천\", \"부산\")\nfactor_location_vector <- factor(locaiton_vector)\nfactor_location_vector\n```\n```\n## [1] 서울 인천 부산\n## Levels: 부산 서울 인천\n```\n```r\nclass(factor_location_vector)\n```\n```\n## [1] \"factor\"\n```\n### 순서형 자료형 Factor\n- 기온높음, 보통, 낮음 은 \"서열적 변수\" 이다.\n```r\ntemperature_factor <- c(\"기온높음\", \n                        \"기온보통\", \n                        \"기온낮음\", \n                        \"기온높음\", \n                        \"기온보통\", \n                        \"기온보통\")\ntemperature_factor\n```\n```\n## [1] \"기온높음\" \"기온보통\" \"기온낮음\" \"기온높음\" \"기온보통\" \"기온보통\"\n```\n```r\nfactor_temperature_factor <- factor(temperature_factor, \n                                    ordered = TRUE, \n                                    levels  = c(\"기온보통\", \n                                                \"기온낮음\", \n                                                \"기온높음\"))\n```\n### 데이터 프레임\n- 엑셀 데이터\n```r\nno = c(1,2,3,4,5)\nsex = c(\"male\", \"female\", \"male\",\"male\", \"female\")\nkorean = c(87,92,95,81,87)\nexam = data.frame(no, sex, korean)\nexam                                   #exam이란 데이터 만들기\n```\n```\n##   no    sex korean\n## 1  1   male     87\n## 2  2 female     92\n## 3  3   male     95\n## 4  4   male     81\n## 5  5 female     87\n```\n```r\nexam$no[1]   #'exam' 데이터에서 \"no\"열의 1번째 값\n```\n```\n## [1] 1\n```\n```r\nexam$sex[2]  #'exam' 데이터에서 \"sex\"열의 2번째 값\n```\n```\n## [1] \"female\"\n```\n### 데이터 타입\n```r\nclass(exam$sex)\n```\n```\n## [1] \"character\"\n```\n```r\nclass(exam$no)\n```\n```\n## [1] \"numeric\"\n```\n```r\nstr(exam)\n```\n```\n## 'data.frame':\t5 obs. of  3 variables:\n##  $ no    : num  1 2 3 4 5\n##  $ sex   : chr  \"male\" \"female\" \"male\" \"male\" ...\n##  $ korean: num  87 92 95 81 87\n```\n# 4장\n## 데이터 불러오기\n- 데이터 내보내기 & 불러오기\n- 경로\ngetwd() : 현재 지정된 디렉토리 보기\n```r\ngetwd()  #현재 디렉토리 꼭 확인하기\n```\n```\n## [1] \"C:/Users/Administor/Desktop/R_lecture/data\"\n```\n```r\ntemp = read.csv(\"exam.csv\")\n# 또는\ntemp = read.csv(\"C:/Users/Administor/Desktop/R_lecture/data/exam.csv\")  \n# 경로표시가 \"\\\"가 아닌 \"/\"에 주의\n```\n### p.51\n- R에서 예제파일 exam.csv를 객체 exam으로 입력해서 설명함.\n```r\nexam = read.csv(\"exam.csv\")  #\"exam.csv\" 파일을 불러오기\n```\n- ggplot2 설치\n```r\ninstall.packages(\"ggplot2\",repos = \"http://cran.us.r-project.org\")\nlibrary(ggplot2)                 #ggplot2 패키지를 사용한다.\n```\n- ggplot2에 있는 economics를 불러오는 것\n```r\neconomics <- ggplot2::economics  #새 객체 economics에 economics데이터를 입력\n```\n- data.table 패키지 설치\n```r\ninstall.packages(\"data.table\",repos = \"http://cran.us.r-project.org\")\nlibrary(data.table)\n```\n- 엑셀 패키지 다운로드\n```r\ninstall.packages(\"readxl\",repos = \"http://cran.us.r-project.org\")\nlibrary(readxl)\n```\n```r\nread_excel(\"student1_xl.xlsx\")  #엑셀 파일 불러오기\n```\n\n```\n## # A tibble: 2 × 4\n##      no sex    height weight\n##   <dbl> <chr>   <dbl>  <dbl>\n## 1     1 male      172     72\n## 2     2 female    165     62\n```\n\n### p.68 \n\n```r\nread.csv(\"student1.csv\")  #첫 줄을 제외하지 않고 불러온 경우\n```\n\n```\n##   school  Korea      X    X.1\n## 1     no    sex height weight\n## 2      1   male    172     72\n## 3      2 female    165     62\n```\n\n\n```r\nread.csv(\"student1.csv\", skip = 1)  #첫 줄을 제외하고 불러온 경우\n```\n\n```\n##   no    sex height weight\n## 1  1   male    172     72\n## 2  2 female    165     62\n```\n\n\n- 엑셀 파일에 있는 복수의 시트에서 특정 시트 불러오기\n\n```r\nread_excel(\"student_xl.xlsx\")  #첫 번째 시트 불러오기\n```\n\n```\n## # A tibble: 2 × 4\n##      no sex    height weight\n##   <dbl> <chr>   <dbl>  <dbl>\n## 1     1 male      172     72\n## 2     2 female    165     62\n```\n \n\n```r\nread_excel(\"student1_xl.xlsx\", sheet=2)  #두 번째 시트 불러오기\n```\n\n```\n## # A tibble: 2 × 4\n##      no sex    `100M`  Lift\n##   <dbl> <chr>   <dbl> <dbl>\n## 1     1 male     13.2    12\n## 2     2 female   17.8     5\n```\n\n### p.69 txt 파일 불러오기\n\n```r\nread.table(\"student1.txt\")  #txt 파일 불러오기\n```\n\n```\n##   V1     V2     V3     V4\n## 1 no    sex height weight\n## 2  1   male    172     72\n## 3  2 female    165     62\n```\n\n\n\n\n\n### p.73 SPSS 파일 불러오기\n- SPSS 패키지 다운로드\n\n```r\ninstall.packages(\"foreign\",repos = \"http://cran.us.r-project.org\")\nlibrary(foreign)\n```\n```r\nstudent <- read.spss(\"student.sav\")  #student라는 변수에 \"student.sav\" 파일을 불러온다.\n```\n\n```\n## re-encoding from CP51949\n```\n\n```r\nas.data.frame(student)  #형변환\n```\n\n```\n##   no    sex height weight\n## 1  1 male      172     72\n## 2  2 female    165     62\n```\n\n?write.csv : \"write.csv\"의 함수에 대한 도움말\n\n```r\nwrite.csv(x = exam, file = \"exam.csv\")  #\"exam\" 데이터를 \"exam.csv\"로 저장한다\n```\n","source":"_posts/day0620.md","raw":"---\ntitle: \"3장, 4장\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: R studio\nclearReading: true\nthumbnailImage: R_logo.jpg\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-06-20'\n---\n\n벡터 및 데이터 타입\n<!-- excerpt -->\n\n\n# 3장\n## 벡터의 종류\n- 숫자형, 정수형, 문자형, 범주형, 논리형 벡터가 존재한다.\n- 범주형 벡터 : 행렬과 비슷한 형태, 연산은 안된다.\nex) 성별:남자, 여자 / 연령대:청년, 중년, 고령 의 범주를 만들어서 남자청년, 여자중년 등의 값을 만들어내는 벡터\n- 논리형 벡터 : 참(TRUE), 거짓(FALSE)이라는 논리값으로 구성된 데이터. 논리값은 ',\" 없이 대문자로 쓴다.\n\n- 벡터 종류 확인\n\n```r\na<-c(1,2,\"유형\",\"확인\")\na\n```\n\n```\n## [1] \"1\"    \"2\"    \"유형\" \"확인\"\n```\n\n```r\nclass(a)\n```\n\n```\n## [1] \"character\"\n```\n\n- 숫자형 벡터\n\n```r\na<-1\na   #[1]은 데이터의 위치가 벡터 중 첫 번째 라는 것을 의미\n```\n\n```\n## [1] 1\n```\n\n- 복수의 숫자 벡터\n\n```r\na<-c(1,2,3)\na\n```\n\n```\n## [1] 1 2 3\n```\n\n- 문자형 벡터\n\n```r\na<-\"Hello\"\na\n```\n\n```\n## [1] \"Hello\"\n```\n\n```r\na<-\"1\"   #여기서 1은 '숫자형'이 아닌 '문자형'이다\na\n```\n\n```\n## [1] \"1\"\n```\n\n- 복수의 문자형 벡터\n\n```r\na<-c(\"Hi\",\"Hello\")\na\n```\n\n```\n## [1] \"Hi\"    \"Hello\"\n```\n\n- 숫자 + 문자 벡터(문자형 벡터로 출력)\n\n```r\na<-c(1,2,\"Hello\")\na\n```\n\n```\n## [1] \"1\"     \"2\"     \"Hello\"\n```\n\n```r\na<-c(1,\"1\")   #마찬가지로 1, \"1\" 둘다 문자형으로 출력\na\n```\n\n```\n## [1] \"1\" \"1\"\n```\n\n\n```r\na <- c(1,2,TRUE,FALSE)  #숫자형 + 논리형 벡터라면 숫자형 으로 출력된다.\na\n```\n\n```\n## [1] 1 2 1 0\n```\n\n- 범주형 벡터\n\n```r\na<-factor(c(1,2,1,2,3))\na                        #1,2,3의 Level이 들어간 범주형 벡터 이다.\n```\n\n```\n## [1] 1 2 1 2 3\n## Levels: 1 2 3\n```\n\n- 벡터 만들기\n\n```r\nno <- c(1,2,3,4,5)\nsex <- c(\"male\",\"female\",\"male\",\"male\",\"female\")\nkorean <- c(87,92,95,81,87)\n\nexam_a <- data.frame(no,sex,korean)\nexam_a\n```\n\n```\n##   no    sex korean\n## 1  1   male     87\n## 2  2 female     92\n## 3  3   male     95\n## 4  4   male     81\n## 5  5 female     87\n```\n\n- data.frame() 에서 한번에 만들기\n\n```r\nexam_b <- data.frame(no=c(1,2,3,4,5),\n                    sex=c(\"male\",\"female\",\"male\",\"male\",\"female\"),\n                    korean=c(87,92,95,81,87))\nexam_b\n```\n\n```\n##   no    sex korean\n## 1  1   male     87\n## 2  2 female     92\n## 3  3   male     95\n## 4  4   male     81\n## 5  5 female     87\n```\n\n- 열 추가하기\n\n```r\nscience <- c(82,93,90,80,88)     #science벡터 만들기\nexam_c <- data.frame(no, sex, korean, science)     #science 변수 추가\nexam_c\n```\n\n```\n##   no    sex korean science\n## 1  1   male     87      82\n## 2  2 female     92      93\n## 3  3   male     95      90\n## 4  4   male     81      80\n## 5  5 female     87      88\n```\n- 데이터의 위치 : 객체 이름[행,열]\n```r\nexam_c[2,3]   #exam_c 데이터에서 2행(2),3열(korean)의 값을 출력\n```\n```\n## [1] 92\n```\n```r\nexam_c[2,\"science\"]   #열의 색인번호 대신 이름을 쓴 경우\n```\n```\n## [1] 93\n```\n- 복수 데이터 출력\n```r\nexam_c[c(4,5),c(2,3)]   #(4,5번 학생)의 (성별,국어성적)을 출력\n```\n```\n##      sex korean\n## 4   male     81\n## 5 female     87\n```\n- 전체 행, 열의 데이터 출력\n```r\nexam_c[3,]   #[3번 학생]의 모든 정보 출력\n```\n```\n##   no  sex korean science\n## 3  3 male     95      90\n```\n```r\nexam_c[,4]   #모든 [science] 성적 출력\n```\n```\n## [1] 82 93 90 80 88\n```\n- 연속 데이터 출력\n```r\nexam_c[c(1:3,5),c(2,3)]   #(1,2,3,5번 학생)의 (성별,국어성적)을 출력\n```\n```\n##      sex korean\n## 1   male     87\n## 2 female     92\n## 3   male     95\n## 5 female     87\n```\n- 필요없는 데이터 제거\n```r\nexam_c[c(-4,-5),-2]   #(4,5번 학생을 제외한) 학생들의 (성별을 제외한) 벡터 값 출력\n```\n```\n##   no korean science\n## 1  1     87      82\n## 2  2     92      93\n## 3  3     95      90\n```\n```r\nexam_c[-c(4,5),-2]   #c 앞에 -를 붙여도 된다.\n```\n```\n##   no korean science\n## 1  1     87      82\n## 2  2     92      93\n## 3  3     95      90\n```\n- 특정 변수 출력\n```r\nexam_c$science   #science 값 출력\n```\n```\n## [1] 82 93 90 80 88\n```\n```r\nstr(exam_c)   #데이터의 모든 유형 확인가능\n```\n```\n## 'data.frame':\t5 obs. of  4 variables:\n##  $ no     : num  1 2 3 4 5\n##  $ sex    : chr  \"male\" \"female\" \"male\" \"male\" ...\n##  $ korean : num  87 92 95 81 87\n##  $ science: num  82 93 90 80 88\n```\n```r\nnum_vector = c(1, 2, 3)\nnum_vector2 = c(5, 6, 7)\n\nnum_vector[1] + num_vector2[2]   #num_vector의 1번째 + num_vector2의 2번째 (즉, 1+6)\n```\n```\n## [1] 7\n```\n### 명목형 자료형 Factor\n- 서울, 인천, 부산은 동등한 \"비서열적 변수\" 이다.\n```r\nlocaiton_vector <- c(\"서울\", \"인천\", \"부산\")\nfactor_location_vector <- factor(locaiton_vector)\nfactor_location_vector\n```\n```\n## [1] 서울 인천 부산\n## Levels: 부산 서울 인천\n```\n```r\nclass(factor_location_vector)\n```\n```\n## [1] \"factor\"\n```\n### 순서형 자료형 Factor\n- 기온높음, 보통, 낮음 은 \"서열적 변수\" 이다.\n```r\ntemperature_factor <- c(\"기온높음\", \n                        \"기온보통\", \n                        \"기온낮음\", \n                        \"기온높음\", \n                        \"기온보통\", \n                        \"기온보통\")\ntemperature_factor\n```\n```\n## [1] \"기온높음\" \"기온보통\" \"기온낮음\" \"기온높음\" \"기온보통\" \"기온보통\"\n```\n```r\nfactor_temperature_factor <- factor(temperature_factor, \n                                    ordered = TRUE, \n                                    levels  = c(\"기온보통\", \n                                                \"기온낮음\", \n                                                \"기온높음\"))\n```\n### 데이터 프레임\n- 엑셀 데이터\n```r\nno = c(1,2,3,4,5)\nsex = c(\"male\", \"female\", \"male\",\"male\", \"female\")\nkorean = c(87,92,95,81,87)\nexam = data.frame(no, sex, korean)\nexam                                   #exam이란 데이터 만들기\n```\n```\n##   no    sex korean\n## 1  1   male     87\n## 2  2 female     92\n## 3  3   male     95\n## 4  4   male     81\n## 5  5 female     87\n```\n```r\nexam$no[1]   #'exam' 데이터에서 \"no\"열의 1번째 값\n```\n```\n## [1] 1\n```\n```r\nexam$sex[2]  #'exam' 데이터에서 \"sex\"열의 2번째 값\n```\n```\n## [1] \"female\"\n```\n### 데이터 타입\n```r\nclass(exam$sex)\n```\n```\n## [1] \"character\"\n```\n```r\nclass(exam$no)\n```\n```\n## [1] \"numeric\"\n```\n```r\nstr(exam)\n```\n```\n## 'data.frame':\t5 obs. of  3 variables:\n##  $ no    : num  1 2 3 4 5\n##  $ sex   : chr  \"male\" \"female\" \"male\" \"male\" ...\n##  $ korean: num  87 92 95 81 87\n```\n# 4장\n## 데이터 불러오기\n- 데이터 내보내기 & 불러오기\n- 경로\ngetwd() : 현재 지정된 디렉토리 보기\n```r\ngetwd()  #현재 디렉토리 꼭 확인하기\n```\n```\n## [1] \"C:/Users/Administor/Desktop/R_lecture/data\"\n```\n```r\ntemp = read.csv(\"exam.csv\")\n# 또는\ntemp = read.csv(\"C:/Users/Administor/Desktop/R_lecture/data/exam.csv\")  \n# 경로표시가 \"\\\"가 아닌 \"/\"에 주의\n```\n### p.51\n- R에서 예제파일 exam.csv를 객체 exam으로 입력해서 설명함.\n```r\nexam = read.csv(\"exam.csv\")  #\"exam.csv\" 파일을 불러오기\n```\n- ggplot2 설치\n```r\ninstall.packages(\"ggplot2\",repos = \"http://cran.us.r-project.org\")\nlibrary(ggplot2)                 #ggplot2 패키지를 사용한다.\n```\n- ggplot2에 있는 economics를 불러오는 것\n```r\neconomics <- ggplot2::economics  #새 객체 economics에 economics데이터를 입력\n```\n- data.table 패키지 설치\n```r\ninstall.packages(\"data.table\",repos = \"http://cran.us.r-project.org\")\nlibrary(data.table)\n```\n- 엑셀 패키지 다운로드\n```r\ninstall.packages(\"readxl\",repos = \"http://cran.us.r-project.org\")\nlibrary(readxl)\n```\n```r\nread_excel(\"student1_xl.xlsx\")  #엑셀 파일 불러오기\n```\n\n```\n## # A tibble: 2 × 4\n##      no sex    height weight\n##   <dbl> <chr>   <dbl>  <dbl>\n## 1     1 male      172     72\n## 2     2 female    165     62\n```\n\n### p.68 \n\n```r\nread.csv(\"student1.csv\")  #첫 줄을 제외하지 않고 불러온 경우\n```\n\n```\n##   school  Korea      X    X.1\n## 1     no    sex height weight\n## 2      1   male    172     72\n## 3      2 female    165     62\n```\n\n\n```r\nread.csv(\"student1.csv\", skip = 1)  #첫 줄을 제외하고 불러온 경우\n```\n\n```\n##   no    sex height weight\n## 1  1   male    172     72\n## 2  2 female    165     62\n```\n\n\n- 엑셀 파일에 있는 복수의 시트에서 특정 시트 불러오기\n\n```r\nread_excel(\"student_xl.xlsx\")  #첫 번째 시트 불러오기\n```\n\n```\n## # A tibble: 2 × 4\n##      no sex    height weight\n##   <dbl> <chr>   <dbl>  <dbl>\n## 1     1 male      172     72\n## 2     2 female    165     62\n```\n \n\n```r\nread_excel(\"student1_xl.xlsx\", sheet=2)  #두 번째 시트 불러오기\n```\n\n```\n## # A tibble: 2 × 4\n##      no sex    `100M`  Lift\n##   <dbl> <chr>   <dbl> <dbl>\n## 1     1 male     13.2    12\n## 2     2 female   17.8     5\n```\n\n### p.69 txt 파일 불러오기\n\n```r\nread.table(\"student1.txt\")  #txt 파일 불러오기\n```\n\n```\n##   V1     V2     V3     V4\n## 1 no    sex height weight\n## 2  1   male    172     72\n## 3  2 female    165     62\n```\n\n\n\n\n\n### p.73 SPSS 파일 불러오기\n- SPSS 패키지 다운로드\n\n```r\ninstall.packages(\"foreign\",repos = \"http://cran.us.r-project.org\")\nlibrary(foreign)\n```\n```r\nstudent <- read.spss(\"student.sav\")  #student라는 변수에 \"student.sav\" 파일을 불러온다.\n```\n\n```\n## re-encoding from CP51949\n```\n\n```r\nas.data.frame(student)  #형변환\n```\n\n```\n##   no    sex height weight\n## 1  1 male      172     72\n## 2  2 female    165     62\n```\n\n?write.csv : \"write.csv\"의 함수에 대한 도움말\n\n```r\nwrite.csv(x = exam, file = \"exam.csv\")  #\"exam\" 데이터를 \"exam.csv\"로 저장한다\n```\n","slug":"day0620","published":1,"updated":"2022-07-10T15:30:52.658Z","_id":"cl5fcok7q000hjku076p5fj3e","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n\n<h1 id=\"3장\"><a href=\"#3장\" class=\"headerlink\" title=\"3장\"></a>3장</h1><h2 id=\"벡터의-종류\"><a href=\"#벡터의-종류\" class=\"headerlink\" title=\"벡터의 종류\"></a>벡터의 종류</h2><ul>\n<li><p>숫자형, 정수형, 문자형, 범주형, 논리형 벡터가 존재한다.</p>\n</li>\n<li><p>범주형 벡터 : 행렬과 비슷한 형태, 연산은 안된다.<br>ex) 성별:남자, 여자 &#x2F; 연령대:청년, 중년, 고령 의 범주를 만들어서 남자청년, 여자중년 등의 값을 만들어내는 벡터</p>\n</li>\n<li><p>논리형 벡터 : 참(TRUE), 거짓(FALSE)이라는 논리값으로 구성된 데이터. 논리값은 ‘,” 없이 대문자로 쓴다.</p>\n</li>\n<li><p>벡터 종류 확인</p>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a<span class=\"operator\">&lt;-</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;유형&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;확인&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">a</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;1&quot;    &quot;2&quot;    &quot;유형&quot; &quot;확인&quot;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">class</span><span class=\"punctuation\">(</span>a<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;character&quot;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>숫자형 벡터</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a<span class=\"operator\">&lt;-</span><span class=\"number\">1</span></span><br><span class=\"line\">a   <span class=\"comment\">#[1]은 데이터의 위치가 벡터 중 첫 번째 라는 것을 의미</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 1</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>복수의 숫자 벡터</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a<span class=\"operator\">&lt;-</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">,</span><span class=\"number\">3</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">a</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 1 2 3</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>문자형 벡터</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a<span class=\"operator\">&lt;-</span><span class=\"string\">&quot;Hello&quot;</span></span><br><span class=\"line\">a</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;Hello&quot;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a<span class=\"operator\">&lt;-</span><span class=\"string\">&quot;1&quot;</span>   <span class=\"comment\">#여기서 1은 &#x27;숫자형&#x27;이 아닌 &#x27;문자형&#x27;이다</span></span><br><span class=\"line\">a</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;1&quot;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>복수의 문자형 벡터</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a<span class=\"operator\">&lt;-</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;Hi&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;Hello&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">a</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;Hi&quot;    &quot;Hello&quot;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>숫자 + 문자 벡터(문자형 벡터로 출력)</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a<span class=\"operator\">&lt;-</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;Hello&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">a</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;1&quot;     &quot;2&quot;     &quot;Hello&quot;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a<span class=\"operator\">&lt;-</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;1&quot;</span><span class=\"punctuation\">)</span>   <span class=\"comment\">#마찬가지로 1, &quot;1&quot; 둘다 문자형으로 출력</span></span><br><span class=\"line\">a</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;1&quot; &quot;1&quot;</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">,</span><span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span><span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#숫자형 + 논리형 벡터라면 숫자형 으로 출력된다.</span></span><br><span class=\"line\">a</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 1 2 1 0</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>범주형 벡터</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a<span class=\"operator\">&lt;-</span>factor<span class=\"punctuation\">(</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">,</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">,</span><span class=\"number\">3</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">a                        <span class=\"comment\">#1,2,3의 Level이 들어간 범주형 벡터 이다.</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 1 2 1 2 3</span><br><span class=\"line\">## Levels: 1 2 3</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>벡터 만들기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">no <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">,</span><span class=\"number\">3</span><span class=\"punctuation\">,</span><span class=\"number\">4</span><span class=\"punctuation\">,</span><span class=\"number\">5</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">sex <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;male&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;female&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;male&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;male&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;female&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">korean <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">87</span><span class=\"punctuation\">,</span><span class=\"number\">92</span><span class=\"punctuation\">,</span><span class=\"number\">95</span><span class=\"punctuation\">,</span><span class=\"number\">81</span><span class=\"punctuation\">,</span><span class=\"number\">87</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">exam_a <span class=\"operator\">&lt;-</span> data.frame<span class=\"punctuation\">(</span>no<span class=\"punctuation\">,</span>sex<span class=\"punctuation\">,</span>korean<span class=\"punctuation\">)</span></span><br><span class=\"line\">exam_a</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   no    sex korean</span><br><span class=\"line\">## 1  1   male     87</span><br><span class=\"line\">## 2  2 female     92</span><br><span class=\"line\">## 3  3   male     95</span><br><span class=\"line\">## 4  4   male     81</span><br><span class=\"line\">## 5  5 female     87</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>data.frame() 에서 한번에 만들기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_b <span class=\"operator\">&lt;-</span> data.frame<span class=\"punctuation\">(</span>no<span class=\"operator\">=</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">,</span><span class=\"number\">3</span><span class=\"punctuation\">,</span><span class=\"number\">4</span><span class=\"punctuation\">,</span><span class=\"number\">5</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                    sex<span class=\"operator\">=</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;male&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;female&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;male&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;male&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;female&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                    korean<span class=\"operator\">=</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">87</span><span class=\"punctuation\">,</span><span class=\"number\">92</span><span class=\"punctuation\">,</span><span class=\"number\">95</span><span class=\"punctuation\">,</span><span class=\"number\">81</span><span class=\"punctuation\">,</span><span class=\"number\">87</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">exam_b</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   no    sex korean</span><br><span class=\"line\">## 1  1   male     87</span><br><span class=\"line\">## 2  2 female     92</span><br><span class=\"line\">## 3  3   male     95</span><br><span class=\"line\">## 4  4   male     81</span><br><span class=\"line\">## 5  5 female     87</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>열 추가하기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">science <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">82</span><span class=\"punctuation\">,</span><span class=\"number\">93</span><span class=\"punctuation\">,</span><span class=\"number\">90</span><span class=\"punctuation\">,</span><span class=\"number\">80</span><span class=\"punctuation\">,</span><span class=\"number\">88</span><span class=\"punctuation\">)</span>     <span class=\"comment\">#science벡터 만들기</span></span><br><span class=\"line\">exam_c <span class=\"operator\">&lt;-</span> data.frame<span class=\"punctuation\">(</span>no<span class=\"punctuation\">,</span> sex<span class=\"punctuation\">,</span> korean<span class=\"punctuation\">,</span> science<span class=\"punctuation\">)</span>     <span class=\"comment\">#science 변수 추가</span></span><br><span class=\"line\">exam_c</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   no    sex korean science</span><br><span class=\"line\">## 1  1   male     87      82</span><br><span class=\"line\">## 2  2 female     92      93</span><br><span class=\"line\">## 3  3   male     95      90</span><br><span class=\"line\">## 4  4   male     81      80</span><br><span class=\"line\">## 5  5 female     87      88</span><br></pre></td></tr></table></figure>\n<ul>\n<li>데이터의 위치 : 객체 이름[행,열]<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_c<span class=\"punctuation\">[</span><span class=\"number\">2</span><span class=\"punctuation\">,</span><span class=\"number\">3</span><span class=\"punctuation\">]</span>   <span class=\"comment\">#exam_c 데이터에서 2행(2),3열(korean)의 값을 출력</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 92</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_c<span class=\"punctuation\">[</span><span class=\"number\">2</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;science&quot;</span><span class=\"punctuation\">]</span>   <span class=\"comment\">#열의 색인번호 대신 이름을 쓴 경우</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 93</span><br></pre></td></tr></table></figure></li>\n<li>복수 데이터 출력<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_c<span class=\"punctuation\">[</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">4</span><span class=\"punctuation\">,</span><span class=\"number\">5</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">,</span><span class=\"number\">3</span><span class=\"punctuation\">)</span><span class=\"punctuation\">]</span>   <span class=\"comment\">#(4,5번 학생)의 (성별,국어성적)을 출력</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##      sex korean</span><br><span class=\"line\">## 4   male     81</span><br><span class=\"line\">## 5 female     87</span><br></pre></td></tr></table></figure></li>\n<li>전체 행, 열의 데이터 출력<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_c<span class=\"punctuation\">[</span><span class=\"number\">3</span><span class=\"punctuation\">,</span><span class=\"punctuation\">]</span>   <span class=\"comment\">#[3번 학생]의 모든 정보 출력</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   no  sex korean science</span><br><span class=\"line\">## 3  3 male     95      90</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_c<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span><span class=\"number\">4</span><span class=\"punctuation\">]</span>   <span class=\"comment\">#모든 [science] 성적 출력</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 82 93 90 80 88</span><br></pre></td></tr></table></figure></li>\n<li>연속 데이터 출력<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_c<span class=\"punctuation\">[</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"operator\">:</span><span class=\"number\">3</span><span class=\"punctuation\">,</span><span class=\"number\">5</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">,</span><span class=\"number\">3</span><span class=\"punctuation\">)</span><span class=\"punctuation\">]</span>   <span class=\"comment\">#(1,2,3,5번 학생)의 (성별,국어성적)을 출력</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##      sex korean</span><br><span class=\"line\">## 1   male     87</span><br><span class=\"line\">## 2 female     92</span><br><span class=\"line\">## 3   male     95</span><br><span class=\"line\">## 5 female     87</span><br></pre></td></tr></table></figure></li>\n<li>필요없는 데이터 제거<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_c<span class=\"punctuation\">[</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"operator\">-</span><span class=\"number\">4</span><span class=\"punctuation\">,</span><span class=\"operator\">-</span><span class=\"number\">5</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"operator\">-</span><span class=\"number\">2</span><span class=\"punctuation\">]</span>   <span class=\"comment\">#(4,5번 학생을 제외한) 학생들의 (성별을 제외한) 벡터 값 출력</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   no korean science</span><br><span class=\"line\">## 1  1     87      82</span><br><span class=\"line\">## 2  2     92      93</span><br><span class=\"line\">## 3  3     95      90</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_c<span class=\"punctuation\">[</span><span class=\"operator\">-</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">4</span><span class=\"punctuation\">,</span><span class=\"number\">5</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"operator\">-</span><span class=\"number\">2</span><span class=\"punctuation\">]</span>   <span class=\"comment\">#c 앞에 -를 붙여도 된다.</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   no korean science</span><br><span class=\"line\">## 1  1     87      82</span><br><span class=\"line\">## 2  2     92      93</span><br><span class=\"line\">## 3  3     95      90</span><br></pre></td></tr></table></figure></li>\n<li>특정 변수 출력<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_c<span class=\"operator\">$</span>science   <span class=\"comment\">#science 값 출력</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 82 93 90 80 88</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str<span class=\"punctuation\">(</span>exam_c<span class=\"punctuation\">)</span>   <span class=\"comment\">#데이터의 모든 유형 확인가능</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## &#x27;data.frame&#x27;:\t5 obs. of  4 variables:</span><br><span class=\"line\">##  $ no     : num  1 2 3 4 5</span><br><span class=\"line\">##  $ sex    : chr  &quot;male&quot; &quot;female&quot; &quot;male&quot; &quot;male&quot; ...</span><br><span class=\"line\">##  $ korean : num  87 92 95 81 87</span><br><span class=\"line\">##  $ science: num  82 93 90 80 88</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">num_vector <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"number\">3</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">num_vector2 <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">5</span><span class=\"punctuation\">,</span> <span class=\"number\">6</span><span class=\"punctuation\">,</span> <span class=\"number\">7</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">num_vector<span class=\"punctuation\">[</span><span class=\"number\">1</span><span class=\"punctuation\">]</span> <span class=\"operator\">+</span> num_vector2<span class=\"punctuation\">[</span><span class=\"number\">2</span><span class=\"punctuation\">]</span>   <span class=\"comment\">#num_vector의 1번째 + num_vector2의 2번째 (즉, 1+6)</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 7</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"명목형-자료형-Factor\"><a href=\"#명목형-자료형-Factor\" class=\"headerlink\" title=\"명목형 자료형 Factor\"></a>명목형 자료형 Factor</h3><ul>\n<li>서울, 인천, 부산은 동등한 “비서열적 변수” 이다.<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">locaiton_vector <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;서울&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;인천&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;부산&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">factor_location_vector <span class=\"operator\">&lt;-</span> factor<span class=\"punctuation\">(</span>locaiton_vector<span class=\"punctuation\">)</span></span><br><span class=\"line\">factor_location_vector</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 서울 인천 부산</span><br><span class=\"line\">## Levels: 부산 서울 인천</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">class</span><span class=\"punctuation\">(</span>factor_location_vector<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;factor&quot;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"순서형-자료형-Factor\"><a href=\"#순서형-자료형-Factor\" class=\"headerlink\" title=\"순서형 자료형 Factor\"></a>순서형 자료형 Factor</h3><ul>\n<li>기온높음, 보통, 낮음 은 “서열적 변수” 이다.<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temperature_factor <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;기온높음&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                        <span class=\"string\">&quot;기온보통&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                        <span class=\"string\">&quot;기온낮음&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                        <span class=\"string\">&quot;기온높음&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                        <span class=\"string\">&quot;기온보통&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                        <span class=\"string\">&quot;기온보통&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">temperature_factor</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;기온높음&quot; &quot;기온보통&quot; &quot;기온낮음&quot; &quot;기온높음&quot; &quot;기온보통&quot; &quot;기온보통&quot;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">factor_temperature_factor <span class=\"operator\">&lt;-</span> factor<span class=\"punctuation\">(</span>temperature_factor<span class=\"punctuation\">,</span> </span><br><span class=\"line\">                                    ordered <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                                    levels  <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;기온보통&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                                                <span class=\"string\">&quot;기온낮음&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                                                <span class=\"string\">&quot;기온높음&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"데이터-프레임\"><a href=\"#데이터-프레임\" class=\"headerlink\" title=\"데이터 프레임\"></a>데이터 프레임</h3><ul>\n<li>엑셀 데이터<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">no <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">,</span><span class=\"number\">3</span><span class=\"punctuation\">,</span><span class=\"number\">4</span><span class=\"punctuation\">,</span><span class=\"number\">5</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">sex <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;male&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;female&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;male&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;male&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;female&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">korean <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">87</span><span class=\"punctuation\">,</span><span class=\"number\">92</span><span class=\"punctuation\">,</span><span class=\"number\">95</span><span class=\"punctuation\">,</span><span class=\"number\">81</span><span class=\"punctuation\">,</span><span class=\"number\">87</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">exam <span class=\"operator\">=</span> data.frame<span class=\"punctuation\">(</span>no<span class=\"punctuation\">,</span> sex<span class=\"punctuation\">,</span> korean<span class=\"punctuation\">)</span></span><br><span class=\"line\">exam                                   <span class=\"comment\">#exam이란 데이터 만들기</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   no    sex korean</span><br><span class=\"line\">## 1  1   male     87</span><br><span class=\"line\">## 2  2 female     92</span><br><span class=\"line\">## 3  3   male     95</span><br><span class=\"line\">## 4  4   male     81</span><br><span class=\"line\">## 5  5 female     87</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam<span class=\"operator\">$</span>no<span class=\"punctuation\">[</span><span class=\"number\">1</span><span class=\"punctuation\">]</span>   <span class=\"comment\">#&#x27;exam&#x27; 데이터에서 &quot;no&quot;열의 1번째 값</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 1</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam<span class=\"operator\">$</span>sex<span class=\"punctuation\">[</span><span class=\"number\">2</span><span class=\"punctuation\">]</span>  <span class=\"comment\">#&#x27;exam&#x27; 데이터에서 &quot;sex&quot;열의 2번째 값</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;female&quot;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"데이터-타입\"><a href=\"#데이터-타입\" class=\"headerlink\" title=\"데이터 타입\"></a>데이터 타입</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">class</span><span class=\"punctuation\">(</span>exam<span class=\"operator\">$</span>sex<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;character&quot;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">class</span><span class=\"punctuation\">(</span>exam<span class=\"operator\">$</span>no<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;numeric&quot;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str<span class=\"punctuation\">(</span>exam<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## &#x27;data.frame&#x27;:\t5 obs. of  3 variables:</span><br><span class=\"line\">##  $ no    : num  1 2 3 4 5</span><br><span class=\"line\">##  $ sex   : chr  &quot;male&quot; &quot;female&quot; &quot;male&quot; &quot;male&quot; ...</span><br><span class=\"line\">##  $ korean: num  87 92 95 81 87</span><br></pre></td></tr></table></figure>\n<h1 id=\"4장\"><a href=\"#4장\" class=\"headerlink\" title=\"4장\"></a>4장</h1><h2 id=\"데이터-불러오기\"><a href=\"#데이터-불러오기\" class=\"headerlink\" title=\"데이터 불러오기\"></a>데이터 불러오기</h2><ul>\n<li>데이터 내보내기 &amp; 불러오기</li>\n<li>경로<br>getwd() : 현재 지정된 디렉토리 보기<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getwd<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#현재 디렉토리 꼭 확인하기</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;C:/Users/Administor/Desktop/R_lecture/data&quot;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp <span class=\"operator\">=</span> read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;exam.csv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># 또는</span></span><br><span class=\"line\">temp <span class=\"operator\">=</span> read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;C:/Users/Administor/Desktop/R_lecture/data/exam.csv&quot;</span><span class=\"punctuation\">)</span>  </span><br><span class=\"line\"><span class=\"comment\"># 경로표시가 &quot;\\&quot;가 아닌 &quot;/&quot;에 주의</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"p-51\"><a href=\"#p-51\" class=\"headerlink\" title=\"p.51\"></a>p.51</h3><ul>\n<li>R에서 예제파일 exam.csv를 객체 exam으로 입력해서 설명함.<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam <span class=\"operator\">=</span> read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;exam.csv&quot;</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#&quot;exam.csv&quot; 파일을 불러오기</span></span><br></pre></td></tr></table></figure></li>\n<li>ggplot2 설치<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;ggplot2&quot;</span><span class=\"punctuation\">,</span>repos <span class=\"operator\">=</span> <span class=\"string\">&quot;http://cran.us.r-project.org&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>ggplot2<span class=\"punctuation\">)</span>                 <span class=\"comment\">#ggplot2 패키지를 사용한다.</span></span><br></pre></td></tr></table></figure></li>\n<li>ggplot2에 있는 economics를 불러오는 것<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">economics <span class=\"operator\">&lt;-</span> ggplot2<span class=\"operator\">::</span>economics  <span class=\"comment\">#새 객체 economics에 economics데이터를 입력</span></span><br></pre></td></tr></table></figure></li>\n<li>data.table 패키지 설치<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;data.table&quot;</span><span class=\"punctuation\">,</span>repos <span class=\"operator\">=</span> <span class=\"string\">&quot;http://cran.us.r-project.org&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>data.table<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure></li>\n<li>엑셀 패키지 다운로드<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;readxl&quot;</span><span class=\"punctuation\">,</span>repos <span class=\"operator\">=</span> <span class=\"string\">&quot;http://cran.us.r-project.org&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>readxl<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">read_excel<span class=\"punctuation\">(</span><span class=\"string\">&quot;student1_xl.xlsx&quot;</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#엑셀 파일 불러오기</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## # A tibble: 2 × 4</span><br><span class=\"line\">##      no sex    height weight</span><br><span class=\"line\">##   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;  &lt;dbl&gt;</span><br><span class=\"line\">## 1     1 male      172     72</span><br><span class=\"line\">## 2     2 female    165     62</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"p-68\"><a href=\"#p-68\" class=\"headerlink\" title=\"p.68\"></a>p.68</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;student1.csv&quot;</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#첫 줄을 제외하지 않고 불러온 경우</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   school  Korea      X    X.1</span><br><span class=\"line\">## 1     no    sex height weight</span><br><span class=\"line\">## 2      1   male    172     72</span><br><span class=\"line\">## 3      2 female    165     62</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;student1.csv&quot;</span><span class=\"punctuation\">,</span> skip <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#첫 줄을 제외하고 불러온 경우</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   no    sex height weight</span><br><span class=\"line\">## 1  1   male    172     72</span><br><span class=\"line\">## 2  2 female    165     62</span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>엑셀 파일에 있는 복수의 시트에서 특정 시트 불러오기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">read_excel<span class=\"punctuation\">(</span><span class=\"string\">&quot;student_xl.xlsx&quot;</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#첫 번째 시트 불러오기</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## # A tibble: 2 × 4</span><br><span class=\"line\">##      no sex    height weight</span><br><span class=\"line\">##   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;  &lt;dbl&gt;</span><br><span class=\"line\">## 1     1 male      172     72</span><br><span class=\"line\">## 2     2 female    165     62</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">read_excel<span class=\"punctuation\">(</span><span class=\"string\">&quot;student1_xl.xlsx&quot;</span><span class=\"punctuation\">,</span> sheet<span class=\"operator\">=</span><span class=\"number\">2</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#두 번째 시트 불러오기</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## # A tibble: 2 × 4</span><br><span class=\"line\">##      no sex    `100M`  Lift</span><br><span class=\"line\">##   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt;</span><br><span class=\"line\">## 1     1 male     13.2    12</span><br><span class=\"line\">## 2     2 female   17.8     5</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"p-69-txt-파일-불러오기\"><a href=\"#p-69-txt-파일-불러오기\" class=\"headerlink\" title=\"p.69 txt 파일 불러오기\"></a>p.69 txt 파일 불러오기</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">read.table<span class=\"punctuation\">(</span><span class=\"string\">&quot;student1.txt&quot;</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#txt 파일 불러오기</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   V1     V2     V3     V4</span><br><span class=\"line\">## 1 no    sex height weight</span><br><span class=\"line\">## 2  1   male    172     72</span><br><span class=\"line\">## 3  2 female    165     62</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"p-73-SPSS-파일-불러오기\"><a href=\"#p-73-SPSS-파일-불러오기\" class=\"headerlink\" title=\"p.73 SPSS 파일 불러오기\"></a>p.73 SPSS 파일 불러오기</h3><ul>\n<li>SPSS 패키지 다운로드</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;foreign&quot;</span><span class=\"punctuation\">,</span>repos <span class=\"operator\">=</span> <span class=\"string\">&quot;http://cran.us.r-project.org&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>foreign<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">student <span class=\"operator\">&lt;-</span> read.spss<span class=\"punctuation\">(</span><span class=\"string\">&quot;student.sav&quot;</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#student라는 변수에 &quot;student.sav&quot; 파일을 불러온다.</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## re-encoding from CP51949</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">as.data.frame<span class=\"punctuation\">(</span>student<span class=\"punctuation\">)</span>  <span class=\"comment\">#형변환</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   no    sex height weight</span><br><span class=\"line\">## 1  1 male      172     72</span><br><span class=\"line\">## 2  2 female    165     62</span><br></pre></td></tr></table></figure>\n\n<p>?write.csv : “write.csv”의 함수에 대한 도움말</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">write.csv<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> exam<span class=\"punctuation\">,</span> file <span class=\"operator\">=</span> <span class=\"string\">&quot;exam.csv&quot;</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#&quot;exam&quot; 데이터를 &quot;exam.csv&quot;로 저장한다</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/06/20/day0620/R_logo.jpg","excerpt":"<p>벡터 및 데이터 타입</p>","more":"<p>벡터 및 데이터 타입</p>\n<!-- excerpt -->\n\n\n<h1 id=\"3장\"><a href=\"#3장\" class=\"headerlink\" title=\"3장\"></a>3장</h1><h2 id=\"벡터의-종류\"><a href=\"#벡터의-종류\" class=\"headerlink\" title=\"벡터의 종류\"></a>벡터의 종류</h2><ul>\n<li><p>숫자형, 정수형, 문자형, 범주형, 논리형 벡터가 존재한다.</p>\n</li>\n<li><p>범주형 벡터 : 행렬과 비슷한 형태, 연산은 안된다.<br>ex) 성별:남자, 여자 &#x2F; 연령대:청년, 중년, 고령 의 범주를 만들어서 남자청년, 여자중년 등의 값을 만들어내는 벡터</p>\n</li>\n<li><p>논리형 벡터 : 참(TRUE), 거짓(FALSE)이라는 논리값으로 구성된 데이터. 논리값은 ‘,” 없이 대문자로 쓴다.</p>\n</li>\n<li><p>벡터 종류 확인</p>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a<span class=\"operator\">&lt;-</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;유형&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;확인&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">a</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;1&quot;    &quot;2&quot;    &quot;유형&quot; &quot;확인&quot;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">class</span><span class=\"punctuation\">(</span>a<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;character&quot;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>숫자형 벡터</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a<span class=\"operator\">&lt;-</span><span class=\"number\">1</span></span><br><span class=\"line\">a   <span class=\"comment\">#[1]은 데이터의 위치가 벡터 중 첫 번째 라는 것을 의미</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 1</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>복수의 숫자 벡터</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a<span class=\"operator\">&lt;-</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">,</span><span class=\"number\">3</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">a</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 1 2 3</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>문자형 벡터</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a<span class=\"operator\">&lt;-</span><span class=\"string\">&quot;Hello&quot;</span></span><br><span class=\"line\">a</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;Hello&quot;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a<span class=\"operator\">&lt;-</span><span class=\"string\">&quot;1&quot;</span>   <span class=\"comment\">#여기서 1은 &#x27;숫자형&#x27;이 아닌 &#x27;문자형&#x27;이다</span></span><br><span class=\"line\">a</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;1&quot;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>복수의 문자형 벡터</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a<span class=\"operator\">&lt;-</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;Hi&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;Hello&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">a</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;Hi&quot;    &quot;Hello&quot;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>숫자 + 문자 벡터(문자형 벡터로 출력)</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a<span class=\"operator\">&lt;-</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;Hello&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">a</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;1&quot;     &quot;2&quot;     &quot;Hello&quot;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a<span class=\"operator\">&lt;-</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;1&quot;</span><span class=\"punctuation\">)</span>   <span class=\"comment\">#마찬가지로 1, &quot;1&quot; 둘다 문자형으로 출력</span></span><br><span class=\"line\">a</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;1&quot; &quot;1&quot;</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">,</span><span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span><span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#숫자형 + 논리형 벡터라면 숫자형 으로 출력된다.</span></span><br><span class=\"line\">a</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 1 2 1 0</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>범주형 벡터</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a<span class=\"operator\">&lt;-</span>factor<span class=\"punctuation\">(</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">,</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">,</span><span class=\"number\">3</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">a                        <span class=\"comment\">#1,2,3의 Level이 들어간 범주형 벡터 이다.</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 1 2 1 2 3</span><br><span class=\"line\">## Levels: 1 2 3</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>벡터 만들기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">no <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">,</span><span class=\"number\">3</span><span class=\"punctuation\">,</span><span class=\"number\">4</span><span class=\"punctuation\">,</span><span class=\"number\">5</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">sex <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;male&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;female&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;male&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;male&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;female&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">korean <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">87</span><span class=\"punctuation\">,</span><span class=\"number\">92</span><span class=\"punctuation\">,</span><span class=\"number\">95</span><span class=\"punctuation\">,</span><span class=\"number\">81</span><span class=\"punctuation\">,</span><span class=\"number\">87</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">exam_a <span class=\"operator\">&lt;-</span> data.frame<span class=\"punctuation\">(</span>no<span class=\"punctuation\">,</span>sex<span class=\"punctuation\">,</span>korean<span class=\"punctuation\">)</span></span><br><span class=\"line\">exam_a</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   no    sex korean</span><br><span class=\"line\">## 1  1   male     87</span><br><span class=\"line\">## 2  2 female     92</span><br><span class=\"line\">## 3  3   male     95</span><br><span class=\"line\">## 4  4   male     81</span><br><span class=\"line\">## 5  5 female     87</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>data.frame() 에서 한번에 만들기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_b <span class=\"operator\">&lt;-</span> data.frame<span class=\"punctuation\">(</span>no<span class=\"operator\">=</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">,</span><span class=\"number\">3</span><span class=\"punctuation\">,</span><span class=\"number\">4</span><span class=\"punctuation\">,</span><span class=\"number\">5</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                    sex<span class=\"operator\">=</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;male&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;female&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;male&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;male&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;female&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                    korean<span class=\"operator\">=</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">87</span><span class=\"punctuation\">,</span><span class=\"number\">92</span><span class=\"punctuation\">,</span><span class=\"number\">95</span><span class=\"punctuation\">,</span><span class=\"number\">81</span><span class=\"punctuation\">,</span><span class=\"number\">87</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">exam_b</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   no    sex korean</span><br><span class=\"line\">## 1  1   male     87</span><br><span class=\"line\">## 2  2 female     92</span><br><span class=\"line\">## 3  3   male     95</span><br><span class=\"line\">## 4  4   male     81</span><br><span class=\"line\">## 5  5 female     87</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>열 추가하기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">science <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">82</span><span class=\"punctuation\">,</span><span class=\"number\">93</span><span class=\"punctuation\">,</span><span class=\"number\">90</span><span class=\"punctuation\">,</span><span class=\"number\">80</span><span class=\"punctuation\">,</span><span class=\"number\">88</span><span class=\"punctuation\">)</span>     <span class=\"comment\">#science벡터 만들기</span></span><br><span class=\"line\">exam_c <span class=\"operator\">&lt;-</span> data.frame<span class=\"punctuation\">(</span>no<span class=\"punctuation\">,</span> sex<span class=\"punctuation\">,</span> korean<span class=\"punctuation\">,</span> science<span class=\"punctuation\">)</span>     <span class=\"comment\">#science 변수 추가</span></span><br><span class=\"line\">exam_c</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   no    sex korean science</span><br><span class=\"line\">## 1  1   male     87      82</span><br><span class=\"line\">## 2  2 female     92      93</span><br><span class=\"line\">## 3  3   male     95      90</span><br><span class=\"line\">## 4  4   male     81      80</span><br><span class=\"line\">## 5  5 female     87      88</span><br></pre></td></tr></table></figure>\n<ul>\n<li>데이터의 위치 : 객체 이름[행,열]<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_c<span class=\"punctuation\">[</span><span class=\"number\">2</span><span class=\"punctuation\">,</span><span class=\"number\">3</span><span class=\"punctuation\">]</span>   <span class=\"comment\">#exam_c 데이터에서 2행(2),3열(korean)의 값을 출력</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 92</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_c<span class=\"punctuation\">[</span><span class=\"number\">2</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;science&quot;</span><span class=\"punctuation\">]</span>   <span class=\"comment\">#열의 색인번호 대신 이름을 쓴 경우</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 93</span><br></pre></td></tr></table></figure></li>\n<li>복수 데이터 출력<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_c<span class=\"punctuation\">[</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">4</span><span class=\"punctuation\">,</span><span class=\"number\">5</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">,</span><span class=\"number\">3</span><span class=\"punctuation\">)</span><span class=\"punctuation\">]</span>   <span class=\"comment\">#(4,5번 학생)의 (성별,국어성적)을 출력</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##      sex korean</span><br><span class=\"line\">## 4   male     81</span><br><span class=\"line\">## 5 female     87</span><br></pre></td></tr></table></figure></li>\n<li>전체 행, 열의 데이터 출력<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_c<span class=\"punctuation\">[</span><span class=\"number\">3</span><span class=\"punctuation\">,</span><span class=\"punctuation\">]</span>   <span class=\"comment\">#[3번 학생]의 모든 정보 출력</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   no  sex korean science</span><br><span class=\"line\">## 3  3 male     95      90</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_c<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span><span class=\"number\">4</span><span class=\"punctuation\">]</span>   <span class=\"comment\">#모든 [science] 성적 출력</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 82 93 90 80 88</span><br></pre></td></tr></table></figure></li>\n<li>연속 데이터 출력<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_c<span class=\"punctuation\">[</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"operator\">:</span><span class=\"number\">3</span><span class=\"punctuation\">,</span><span class=\"number\">5</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">,</span><span class=\"number\">3</span><span class=\"punctuation\">)</span><span class=\"punctuation\">]</span>   <span class=\"comment\">#(1,2,3,5번 학생)의 (성별,국어성적)을 출력</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##      sex korean</span><br><span class=\"line\">## 1   male     87</span><br><span class=\"line\">## 2 female     92</span><br><span class=\"line\">## 3   male     95</span><br><span class=\"line\">## 5 female     87</span><br></pre></td></tr></table></figure></li>\n<li>필요없는 데이터 제거<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_c<span class=\"punctuation\">[</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"operator\">-</span><span class=\"number\">4</span><span class=\"punctuation\">,</span><span class=\"operator\">-</span><span class=\"number\">5</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"operator\">-</span><span class=\"number\">2</span><span class=\"punctuation\">]</span>   <span class=\"comment\">#(4,5번 학생을 제외한) 학생들의 (성별을 제외한) 벡터 값 출력</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   no korean science</span><br><span class=\"line\">## 1  1     87      82</span><br><span class=\"line\">## 2  2     92      93</span><br><span class=\"line\">## 3  3     95      90</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_c<span class=\"punctuation\">[</span><span class=\"operator\">-</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">4</span><span class=\"punctuation\">,</span><span class=\"number\">5</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"operator\">-</span><span class=\"number\">2</span><span class=\"punctuation\">]</span>   <span class=\"comment\">#c 앞에 -를 붙여도 된다.</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   no korean science</span><br><span class=\"line\">## 1  1     87      82</span><br><span class=\"line\">## 2  2     92      93</span><br><span class=\"line\">## 3  3     95      90</span><br></pre></td></tr></table></figure></li>\n<li>특정 변수 출력<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_c<span class=\"operator\">$</span>science   <span class=\"comment\">#science 값 출력</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 82 93 90 80 88</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str<span class=\"punctuation\">(</span>exam_c<span class=\"punctuation\">)</span>   <span class=\"comment\">#데이터의 모든 유형 확인가능</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## &#x27;data.frame&#x27;:\t5 obs. of  4 variables:</span><br><span class=\"line\">##  $ no     : num  1 2 3 4 5</span><br><span class=\"line\">##  $ sex    : chr  &quot;male&quot; &quot;female&quot; &quot;male&quot; &quot;male&quot; ...</span><br><span class=\"line\">##  $ korean : num  87 92 95 81 87</span><br><span class=\"line\">##  $ science: num  82 93 90 80 88</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">num_vector <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"number\">3</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">num_vector2 <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">5</span><span class=\"punctuation\">,</span> <span class=\"number\">6</span><span class=\"punctuation\">,</span> <span class=\"number\">7</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">num_vector<span class=\"punctuation\">[</span><span class=\"number\">1</span><span class=\"punctuation\">]</span> <span class=\"operator\">+</span> num_vector2<span class=\"punctuation\">[</span><span class=\"number\">2</span><span class=\"punctuation\">]</span>   <span class=\"comment\">#num_vector의 1번째 + num_vector2의 2번째 (즉, 1+6)</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 7</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"명목형-자료형-Factor\"><a href=\"#명목형-자료형-Factor\" class=\"headerlink\" title=\"명목형 자료형 Factor\"></a>명목형 자료형 Factor</h3><ul>\n<li>서울, 인천, 부산은 동등한 “비서열적 변수” 이다.<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">locaiton_vector <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;서울&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;인천&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;부산&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">factor_location_vector <span class=\"operator\">&lt;-</span> factor<span class=\"punctuation\">(</span>locaiton_vector<span class=\"punctuation\">)</span></span><br><span class=\"line\">factor_location_vector</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 서울 인천 부산</span><br><span class=\"line\">## Levels: 부산 서울 인천</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">class</span><span class=\"punctuation\">(</span>factor_location_vector<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;factor&quot;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"순서형-자료형-Factor\"><a href=\"#순서형-자료형-Factor\" class=\"headerlink\" title=\"순서형 자료형 Factor\"></a>순서형 자료형 Factor</h3><ul>\n<li>기온높음, 보통, 낮음 은 “서열적 변수” 이다.<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temperature_factor <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;기온높음&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                        <span class=\"string\">&quot;기온보통&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                        <span class=\"string\">&quot;기온낮음&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                        <span class=\"string\">&quot;기온높음&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                        <span class=\"string\">&quot;기온보통&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                        <span class=\"string\">&quot;기온보통&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">temperature_factor</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;기온높음&quot; &quot;기온보통&quot; &quot;기온낮음&quot; &quot;기온높음&quot; &quot;기온보통&quot; &quot;기온보통&quot;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">factor_temperature_factor <span class=\"operator\">&lt;-</span> factor<span class=\"punctuation\">(</span>temperature_factor<span class=\"punctuation\">,</span> </span><br><span class=\"line\">                                    ordered <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                                    levels  <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;기온보통&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                                                <span class=\"string\">&quot;기온낮음&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                                                <span class=\"string\">&quot;기온높음&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"데이터-프레임\"><a href=\"#데이터-프레임\" class=\"headerlink\" title=\"데이터 프레임\"></a>데이터 프레임</h3><ul>\n<li>엑셀 데이터<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">no <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">,</span><span class=\"number\">3</span><span class=\"punctuation\">,</span><span class=\"number\">4</span><span class=\"punctuation\">,</span><span class=\"number\">5</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">sex <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;male&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;female&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;male&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;male&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;female&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">korean <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">87</span><span class=\"punctuation\">,</span><span class=\"number\">92</span><span class=\"punctuation\">,</span><span class=\"number\">95</span><span class=\"punctuation\">,</span><span class=\"number\">81</span><span class=\"punctuation\">,</span><span class=\"number\">87</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">exam <span class=\"operator\">=</span> data.frame<span class=\"punctuation\">(</span>no<span class=\"punctuation\">,</span> sex<span class=\"punctuation\">,</span> korean<span class=\"punctuation\">)</span></span><br><span class=\"line\">exam                                   <span class=\"comment\">#exam이란 데이터 만들기</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   no    sex korean</span><br><span class=\"line\">## 1  1   male     87</span><br><span class=\"line\">## 2  2 female     92</span><br><span class=\"line\">## 3  3   male     95</span><br><span class=\"line\">## 4  4   male     81</span><br><span class=\"line\">## 5  5 female     87</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam<span class=\"operator\">$</span>no<span class=\"punctuation\">[</span><span class=\"number\">1</span><span class=\"punctuation\">]</span>   <span class=\"comment\">#&#x27;exam&#x27; 데이터에서 &quot;no&quot;열의 1번째 값</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 1</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam<span class=\"operator\">$</span>sex<span class=\"punctuation\">[</span><span class=\"number\">2</span><span class=\"punctuation\">]</span>  <span class=\"comment\">#&#x27;exam&#x27; 데이터에서 &quot;sex&quot;열의 2번째 값</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;female&quot;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"데이터-타입\"><a href=\"#데이터-타입\" class=\"headerlink\" title=\"데이터 타입\"></a>데이터 타입</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">class</span><span class=\"punctuation\">(</span>exam<span class=\"operator\">$</span>sex<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;character&quot;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">class</span><span class=\"punctuation\">(</span>exam<span class=\"operator\">$</span>no<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;numeric&quot;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str<span class=\"punctuation\">(</span>exam<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## &#x27;data.frame&#x27;:\t5 obs. of  3 variables:</span><br><span class=\"line\">##  $ no    : num  1 2 3 4 5</span><br><span class=\"line\">##  $ sex   : chr  &quot;male&quot; &quot;female&quot; &quot;male&quot; &quot;male&quot; ...</span><br><span class=\"line\">##  $ korean: num  87 92 95 81 87</span><br></pre></td></tr></table></figure>\n<h1 id=\"4장\"><a href=\"#4장\" class=\"headerlink\" title=\"4장\"></a>4장</h1><h2 id=\"데이터-불러오기\"><a href=\"#데이터-불러오기\" class=\"headerlink\" title=\"데이터 불러오기\"></a>데이터 불러오기</h2><ul>\n<li>데이터 내보내기 &amp; 불러오기</li>\n<li>경로<br>getwd() : 현재 지정된 디렉토리 보기<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getwd<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#현재 디렉토리 꼭 확인하기</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;C:/Users/Administor/Desktop/R_lecture/data&quot;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp <span class=\"operator\">=</span> read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;exam.csv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># 또는</span></span><br><span class=\"line\">temp <span class=\"operator\">=</span> read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;C:/Users/Administor/Desktop/R_lecture/data/exam.csv&quot;</span><span class=\"punctuation\">)</span>  </span><br><span class=\"line\"><span class=\"comment\"># 경로표시가 &quot;\\&quot;가 아닌 &quot;/&quot;에 주의</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"p-51\"><a href=\"#p-51\" class=\"headerlink\" title=\"p.51\"></a>p.51</h3><ul>\n<li>R에서 예제파일 exam.csv를 객체 exam으로 입력해서 설명함.<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam <span class=\"operator\">=</span> read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;exam.csv&quot;</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#&quot;exam.csv&quot; 파일을 불러오기</span></span><br></pre></td></tr></table></figure></li>\n<li>ggplot2 설치<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;ggplot2&quot;</span><span class=\"punctuation\">,</span>repos <span class=\"operator\">=</span> <span class=\"string\">&quot;http://cran.us.r-project.org&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>ggplot2<span class=\"punctuation\">)</span>                 <span class=\"comment\">#ggplot2 패키지를 사용한다.</span></span><br></pre></td></tr></table></figure></li>\n<li>ggplot2에 있는 economics를 불러오는 것<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">economics <span class=\"operator\">&lt;-</span> ggplot2<span class=\"operator\">::</span>economics  <span class=\"comment\">#새 객체 economics에 economics데이터를 입력</span></span><br></pre></td></tr></table></figure></li>\n<li>data.table 패키지 설치<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;data.table&quot;</span><span class=\"punctuation\">,</span>repos <span class=\"operator\">=</span> <span class=\"string\">&quot;http://cran.us.r-project.org&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>data.table<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure></li>\n<li>엑셀 패키지 다운로드<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;readxl&quot;</span><span class=\"punctuation\">,</span>repos <span class=\"operator\">=</span> <span class=\"string\">&quot;http://cran.us.r-project.org&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>readxl<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">read_excel<span class=\"punctuation\">(</span><span class=\"string\">&quot;student1_xl.xlsx&quot;</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#엑셀 파일 불러오기</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## # A tibble: 2 × 4</span><br><span class=\"line\">##      no sex    height weight</span><br><span class=\"line\">##   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;  &lt;dbl&gt;</span><br><span class=\"line\">## 1     1 male      172     72</span><br><span class=\"line\">## 2     2 female    165     62</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"p-68\"><a href=\"#p-68\" class=\"headerlink\" title=\"p.68\"></a>p.68</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;student1.csv&quot;</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#첫 줄을 제외하지 않고 불러온 경우</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   school  Korea      X    X.1</span><br><span class=\"line\">## 1     no    sex height weight</span><br><span class=\"line\">## 2      1   male    172     72</span><br><span class=\"line\">## 3      2 female    165     62</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;student1.csv&quot;</span><span class=\"punctuation\">,</span> skip <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#첫 줄을 제외하고 불러온 경우</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   no    sex height weight</span><br><span class=\"line\">## 1  1   male    172     72</span><br><span class=\"line\">## 2  2 female    165     62</span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>엑셀 파일에 있는 복수의 시트에서 특정 시트 불러오기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">read_excel<span class=\"punctuation\">(</span><span class=\"string\">&quot;student_xl.xlsx&quot;</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#첫 번째 시트 불러오기</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## # A tibble: 2 × 4</span><br><span class=\"line\">##      no sex    height weight</span><br><span class=\"line\">##   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;  &lt;dbl&gt;</span><br><span class=\"line\">## 1     1 male      172     72</span><br><span class=\"line\">## 2     2 female    165     62</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">read_excel<span class=\"punctuation\">(</span><span class=\"string\">&quot;student1_xl.xlsx&quot;</span><span class=\"punctuation\">,</span> sheet<span class=\"operator\">=</span><span class=\"number\">2</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#두 번째 시트 불러오기</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## # A tibble: 2 × 4</span><br><span class=\"line\">##      no sex    `100M`  Lift</span><br><span class=\"line\">##   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt;</span><br><span class=\"line\">## 1     1 male     13.2    12</span><br><span class=\"line\">## 2     2 female   17.8     5</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"p-69-txt-파일-불러오기\"><a href=\"#p-69-txt-파일-불러오기\" class=\"headerlink\" title=\"p.69 txt 파일 불러오기\"></a>p.69 txt 파일 불러오기</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">read.table<span class=\"punctuation\">(</span><span class=\"string\">&quot;student1.txt&quot;</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#txt 파일 불러오기</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   V1     V2     V3     V4</span><br><span class=\"line\">## 1 no    sex height weight</span><br><span class=\"line\">## 2  1   male    172     72</span><br><span class=\"line\">## 3  2 female    165     62</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"p-73-SPSS-파일-불러오기\"><a href=\"#p-73-SPSS-파일-불러오기\" class=\"headerlink\" title=\"p.73 SPSS 파일 불러오기\"></a>p.73 SPSS 파일 불러오기</h3><ul>\n<li>SPSS 패키지 다운로드</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;foreign&quot;</span><span class=\"punctuation\">,</span>repos <span class=\"operator\">=</span> <span class=\"string\">&quot;http://cran.us.r-project.org&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>foreign<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">student <span class=\"operator\">&lt;-</span> read.spss<span class=\"punctuation\">(</span><span class=\"string\">&quot;student.sav&quot;</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#student라는 변수에 &quot;student.sav&quot; 파일을 불러온다.</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## re-encoding from CP51949</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">as.data.frame<span class=\"punctuation\">(</span>student<span class=\"punctuation\">)</span>  <span class=\"comment\">#형변환</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   no    sex height weight</span><br><span class=\"line\">## 1  1 male      172     72</span><br><span class=\"line\">## 2  2 female    165     62</span><br></pre></td></tr></table></figure>\n\n<p>?write.csv : “write.csv”의 함수에 대한 도움말</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">write.csv<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> exam<span class=\"punctuation\">,</span> file <span class=\"operator\">=</span> <span class=\"string\">&quot;exam.csv&quot;</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#&quot;exam&quot; 데이터를 &quot;exam.csv&quot;로 저장한다</span></span><br></pre></td></tr></table></figure>\n"},{"title":"7장","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"thumbnailImage":"R_logo.jpg","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-06-22T00:00:00.000Z","_content":"\n결측치\n<!-- excerpt -->\n\n# 7장\n### 라이브러리 불러오기\n- 작업할 때 항상 라이브러리 불러오기\n\n```r\nlibrary(dplyr)\nglimpse(iris)\n```\n\n```\n## Rows: 150\n## Columns: 5\n## $ Sepal.Length <dbl> 5.1, 4.9, 4.7, 4.6, 5.0, 5.4, 4.6, 5.0, 4.4, 4.9, 5.4, 4.…\n## $ Sepal.Width  <dbl> 3.5, 3.0, 3.2, 3.1, 3.6, 3.9, 3.4, 3.4, 2.9, 3.1, 3.7, 3.…\n## $ Petal.Length <dbl> 1.4, 1.4, 1.3, 1.5, 1.4, 1.7, 1.4, 1.5, 1.4, 1.5, 1.5, 1.…\n## $ Petal.Width  <dbl> 0.2, 0.2, 0.2, 0.2, 0.2, 0.4, 0.3, 0.2, 0.2, 0.1, 0.2, 0.…\n## $ Species      <fct> setosa, setosa, setosa, setosa, setosa, setosa, setosa, s…\n```\n\n### 데이터 불러오기\n\n```r\nexam_na <- read.csv(\"data/exam_na.csv\")\nstr(exam_na)\n```\n\n```\n## 'data.frame':\t5 obs. of  5 variables:\n##  $ id     : int  1 2 3 4 5\n##  $ sex    : chr  \"M\" \"F\" \"F\" \"M\" ...\n##  $ korean : int  87 92 95 NA 87\n##  $ english: int  NA 95 92 84 NA\n##  $ math   : int  82 93 90 80 88\n```\n### (1) 결측치 확인\n- is.na() : 결측치가 있습니까? / TRUE or FALSE\n\n```r\nis.na(exam_na)  # TRUE 가 결측치\n```\n\n```\n##         id   sex korean english  math\n## [1,] FALSE FALSE  FALSE    TRUE FALSE\n## [2,] FALSE FALSE  FALSE   FALSE FALSE\n## [3,] FALSE FALSE  FALSE   FALSE FALSE\n## [4,] FALSE FALSE   TRUE   FALSE FALSE\n## [5,] FALSE FALSE  FALSE    TRUE FALSE\n```\n\n\n### (2) 결측치 빈도 구하기\n- table(is.na()) : 빈도 구하기\n\n```r\ntable(is.na(exam_na))          #FALSE 는 결측치가 아닌것, TRUE 는 결측치\n```\n\n```\n## \n## FALSE  TRUE \n##    22     3\n```\n- korean 항목의 결측치 구하기\n\n```r\ntable(is.na(exam_na$korean))\n```\n\n```\n## \n## FALSE  TRUE \n##     4     1\n```\n- 변수별로 결측치 빈도 구하기\n\n```r\nsummary(is.na(exam_na))\n```\n\n```\n##      id             sex            korean         english       \n##  Mode :logical   Mode :logical   Mode :logical   Mode :logical  \n##  FALSE:5         FALSE:5         FALSE:4         FALSE:3        \n##                                  TRUE :1         TRUE :2        \n##     math        \n##  Mode :logical  \n##  FALSE:5        \n## \n```\n- 결측치 포함한 전체 통계\n\n```r\nsummary(exam_na)   # NA's 값이 결측치의 개수\n```\n\n```\n##        id        sex                korean         english           math     \n##  Min.   :1   Length:5           Min.   :87.00   Min.   :84.00   Min.   :80.0  \n##  1st Qu.:2   Class :character   1st Qu.:87.00   1st Qu.:88.00   1st Qu.:82.0  \n##  Median :3   Mode  :character   Median :89.50   Median :92.00   Median :88.0  \n##  Mean   :3                      Mean   :90.25   Mean   :90.33   Mean   :86.6  \n##  3rd Qu.:4                      3rd Qu.:92.75   3rd Qu.:93.50   3rd Qu.:90.0  \n##  Max.   :5                      Max.   :95.00   Max.   :95.00   Max.   :93.0  \n##                                 NA's   :1       NA's   :2\n```\n\n# 결측치 처리 방법\n### (1) 제거하고 처리하기\n- na.rm = T : 'rm'은 remove의 약자. 즉, 결측치를 제거 할 것이냐는 함수\n\n```r\nmean(exam_na$korean, na.rm = TRUE)  #TRUE는 제거, FALSE는 제거 안함\n```\n\n```\n## [1] 90.25\n```\n- na.omit() : 결측치가 있는 행을 모두 제거\n  +가급적 쓰지 말 것\n- filter() 함수 활용\n  + (!is.na(korean))\n\n```r\nexam_na %>% filter(is.na(korean))   #결측치가 있는 열\n```\n\n```\n##   id sex korean english math\n## 1  4   M     NA      84   80\n```\n- 이번에는 !is.na(korean))을 활용한다\n\n```r\nexam_na %>% filter(!is.na(korean))  #!는 not의 의미\n```\n\n```\n##   id sex korean english math\n## 1  1   M     87      NA   82\n## 2  2   F     92      95   93\n## 3  3   F     95      92   90\n## 4  5   F     87      NA   88\n```\n\n\n### (2) 다른 값으로 대체하기\n- imputation 참고자료\n  + https://www.kdnuggets.com/2017/09/missing-data-imputation-using-r.html\n  + [R 결측치(NA) 제거, 대체 방법](https://velog.io/@lifeisbeautiful/R-%EA%B2%B0%EC%B8%A1%EA%B0%92NA-%EC%A0%9C%EA%B1%B0-%EB%8C%80%EC%B2%B4-%EB%B0%A9%EB%B2%95)\n\n#### 평균 입력\n- ifelse()를 이용할 때\n\n```r\nexam_na$korean   # korean 성적에서 4번째가 NA\n```\n\n```\n## [1] 87 92 95 NA 87\n```\n- 결측값을 제외한 값의 평균 구하기\n\n```r\nmean(exam_na$korean, na.rm = TRUE)\n```\n\n```\n## [1] 90.25\n```\n- 결측값에 평균 입력\n\n```r\nexam_na$korean <- ifelse(is.na(exam_na$korean),90.25,exam_na$korean)  #ifelse()함수 이용\n```\n- korean 성적 확인\n\n```r\nexam_na$korean \n```\n\n```\n## [1] 87.00 92.00 95.00 90.25 87.00\n```\n\n\n## 이상치\n- 데이터의 특정 값이 뭔가 '이상'이 있다.\n- Case 1 : 정해진 범주에서 벗어난 데이터\n  + 2000년 4월 30일 / 2000년 40월 30일 ---> 9999\n- Case 2 : 숫자 / 아웃라이어(Outlier) / 극단값\n  + 평균임금 320만원 / 손흥민 몇십억원?\n\n-자료 불러오기\n\n```r\nmpg1_out <- read.csv(\"data/mpg1_out.csv\")\nglimpse(mpg1_out)\n```\n\n```\n## Rows: 234\n## Columns: 3\n## $ trans <int> 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 3, 1, 1…\n## $ drv   <chr> \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"4\", \"4\", \"4\", \"4\", \"4\", \"5\",…\n## $ cty   <int> 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, 15, 15, …\n```\n\n- trans의 갯수를 구하자.\n\n```r\ntable(mpg1_out$trans)\n```\n\n```\n## \n##   1   2   3 \n## 154  76   4\n```\n- 쉽게 하는 방법\n\n```r\nmpg1_out %>% filter(trans != 3)\n```\n\n- ifelse\n\n```r\nmpg1_out$trans <- ifelse(mpg1_out$trans == 3, NA, mpg1_out$trans)\n# trans의 값이 3이면 결측치(NA)로 바꿔주고, 아니면 그대로 두어라\ntable(is.na(mpg1_out$trans))\n```\n\n```\n## \n## FALSE  TRUE \n##   230     4\n```\n\n- 결측치 제거\n\n```r\nresult <- mpg1_out %>% filter(!is.na(trans))  # 결측치가 아닌 것들을 'result' 데이터로 지정\n```\n- 결측치가 아닌 것들을 표현\n\n```r\ntable(is.na(result$trans)) \n```\n\n```\n## \n## FALSE \n##   230\n```\n\n\n### 극단치 처리\n- 숫자 데이터 boxplot()\n- boxplot() 함수를 통해서 극단치가 있는지 없는 확인지 가능\n- IQR : 1사분위 ~ 3사분위\n- 경계값 : IQR + IQR * 1.5 상한/ IQR - IQR * 1.5\n\n```r\nmpg1 <- read.csv(\"data/mpg1.csv\")\nboxplot(mpg1$cty)\n```\n\n![](/images/0622/unnamed-chunk-21-1.png)<!-- -->\n\n- cty 변수의 통계값\n\n```r\nboxplot(mpg1$cty)$stats\n```\n\n![](/images/0622/unnamed-chunk-22-1.png)<!-- -->\n\n```\n##      [,1]\n## [1,]    9\n## [2,]   14\n## [3,]   17\n## [4,]   19\n## [5,]   26\n```\n- cty와 hwy의 통계값\n\n```r\nboxplot(mpg1$cty, mpg1$hwy)$stats \n```\n\n![](/images/0622/unnamed-chunk-23-1.png)<!-- -->\n\n```\n##      [,1] [,2]\n## [1,]    9   12\n## [2,]   14   18\n## [3,]   17   24\n## [4,]   19   27\n## [5,]   26   37\n```\n- drv 범주별 cty 통계값\n\n```r\nboxplot(mpg1$cty~mpg1$drv)$stats \n```\n\n![](/images/0622/unnamed-chunk-24-1.png)<!-- -->\n\n```\n##      [,1] [,2] [,3]\n## [1,]    9   15   11\n## [2,]   13   18   12\n## [3,]   14   19   15\n## [4,]   16   21   15\n## [5,]   20   25   18\n```\n- cty의 극단치 기준 알아보기\n\n```r\nboxplot(mpg1$cty)$stats      \n```\n\n![](/images/0622/unnamed-chunk-25-1.png)<!-- -->\n\n```\n##      [,1]\n## [1,]    9\n## [2,]   14\n## [3,]   17\n## [4,]   19\n## [5,]   26\n```\n- ifelse함수를 활용한다\n\n```r\nmpg1$cty <- ifelse(mpg1$cty>26|mpg1$cty<9, NA, mpg1$cty)\n# cty 값이 26 초과, 9 미만인 경우에 결측치(NA)로 처리하고, 아닌경우 그대로 둔다.\n```\n- 결측치 확인\n\n```r\ntable(is.na(mpg1$cty))\n```\n\n```\n## \n## FALSE  TRUE \n##   229     5\n```\n- 결측치를 제외한 cty 평균 구하기\n\n```r\nmean(mpg1$cty,na.rm = TRUE)  \n```\n\n```\n## [1] 16.55895\n```\n- 또는 이렇게 쓸 수도 있다\n\n```r\nmpg1$cty <- ifelse(mpg1$cty>=9 & mpg1$cty<=26, mpg1$cty, NA)\n# cty 값이 9 이상 26 이하인 경우 그대로 두고, 아닌경우 결측치(NA)로 처리한다.\n```\n\n","source":"_posts/day0622.md","raw":"---\ntitle: \"7장\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: R studio\nclearReading: true\nthumbnailImage: R_logo.jpg\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-06-22 09:00:00'\n---\n\n결측치\n<!-- excerpt -->\n\n# 7장\n### 라이브러리 불러오기\n- 작업할 때 항상 라이브러리 불러오기\n\n```r\nlibrary(dplyr)\nglimpse(iris)\n```\n\n```\n## Rows: 150\n## Columns: 5\n## $ Sepal.Length <dbl> 5.1, 4.9, 4.7, 4.6, 5.0, 5.4, 4.6, 5.0, 4.4, 4.9, 5.4, 4.…\n## $ Sepal.Width  <dbl> 3.5, 3.0, 3.2, 3.1, 3.6, 3.9, 3.4, 3.4, 2.9, 3.1, 3.7, 3.…\n## $ Petal.Length <dbl> 1.4, 1.4, 1.3, 1.5, 1.4, 1.7, 1.4, 1.5, 1.4, 1.5, 1.5, 1.…\n## $ Petal.Width  <dbl> 0.2, 0.2, 0.2, 0.2, 0.2, 0.4, 0.3, 0.2, 0.2, 0.1, 0.2, 0.…\n## $ Species      <fct> setosa, setosa, setosa, setosa, setosa, setosa, setosa, s…\n```\n\n### 데이터 불러오기\n\n```r\nexam_na <- read.csv(\"data/exam_na.csv\")\nstr(exam_na)\n```\n\n```\n## 'data.frame':\t5 obs. of  5 variables:\n##  $ id     : int  1 2 3 4 5\n##  $ sex    : chr  \"M\" \"F\" \"F\" \"M\" ...\n##  $ korean : int  87 92 95 NA 87\n##  $ english: int  NA 95 92 84 NA\n##  $ math   : int  82 93 90 80 88\n```\n### (1) 결측치 확인\n- is.na() : 결측치가 있습니까? / TRUE or FALSE\n\n```r\nis.na(exam_na)  # TRUE 가 결측치\n```\n\n```\n##         id   sex korean english  math\n## [1,] FALSE FALSE  FALSE    TRUE FALSE\n## [2,] FALSE FALSE  FALSE   FALSE FALSE\n## [3,] FALSE FALSE  FALSE   FALSE FALSE\n## [4,] FALSE FALSE   TRUE   FALSE FALSE\n## [5,] FALSE FALSE  FALSE    TRUE FALSE\n```\n\n\n### (2) 결측치 빈도 구하기\n- table(is.na()) : 빈도 구하기\n\n```r\ntable(is.na(exam_na))          #FALSE 는 결측치가 아닌것, TRUE 는 결측치\n```\n\n```\n## \n## FALSE  TRUE \n##    22     3\n```\n- korean 항목의 결측치 구하기\n\n```r\ntable(is.na(exam_na$korean))\n```\n\n```\n## \n## FALSE  TRUE \n##     4     1\n```\n- 변수별로 결측치 빈도 구하기\n\n```r\nsummary(is.na(exam_na))\n```\n\n```\n##      id             sex            korean         english       \n##  Mode :logical   Mode :logical   Mode :logical   Mode :logical  \n##  FALSE:5         FALSE:5         FALSE:4         FALSE:3        \n##                                  TRUE :1         TRUE :2        \n##     math        \n##  Mode :logical  \n##  FALSE:5        \n## \n```\n- 결측치 포함한 전체 통계\n\n```r\nsummary(exam_na)   # NA's 값이 결측치의 개수\n```\n\n```\n##        id        sex                korean         english           math     \n##  Min.   :1   Length:5           Min.   :87.00   Min.   :84.00   Min.   :80.0  \n##  1st Qu.:2   Class :character   1st Qu.:87.00   1st Qu.:88.00   1st Qu.:82.0  \n##  Median :3   Mode  :character   Median :89.50   Median :92.00   Median :88.0  \n##  Mean   :3                      Mean   :90.25   Mean   :90.33   Mean   :86.6  \n##  3rd Qu.:4                      3rd Qu.:92.75   3rd Qu.:93.50   3rd Qu.:90.0  \n##  Max.   :5                      Max.   :95.00   Max.   :95.00   Max.   :93.0  \n##                                 NA's   :1       NA's   :2\n```\n\n# 결측치 처리 방법\n### (1) 제거하고 처리하기\n- na.rm = T : 'rm'은 remove의 약자. 즉, 결측치를 제거 할 것이냐는 함수\n\n```r\nmean(exam_na$korean, na.rm = TRUE)  #TRUE는 제거, FALSE는 제거 안함\n```\n\n```\n## [1] 90.25\n```\n- na.omit() : 결측치가 있는 행을 모두 제거\n  +가급적 쓰지 말 것\n- filter() 함수 활용\n  + (!is.na(korean))\n\n```r\nexam_na %>% filter(is.na(korean))   #결측치가 있는 열\n```\n\n```\n##   id sex korean english math\n## 1  4   M     NA      84   80\n```\n- 이번에는 !is.na(korean))을 활용한다\n\n```r\nexam_na %>% filter(!is.na(korean))  #!는 not의 의미\n```\n\n```\n##   id sex korean english math\n## 1  1   M     87      NA   82\n## 2  2   F     92      95   93\n## 3  3   F     95      92   90\n## 4  5   F     87      NA   88\n```\n\n\n### (2) 다른 값으로 대체하기\n- imputation 참고자료\n  + https://www.kdnuggets.com/2017/09/missing-data-imputation-using-r.html\n  + [R 결측치(NA) 제거, 대체 방법](https://velog.io/@lifeisbeautiful/R-%EA%B2%B0%EC%B8%A1%EA%B0%92NA-%EC%A0%9C%EA%B1%B0-%EB%8C%80%EC%B2%B4-%EB%B0%A9%EB%B2%95)\n\n#### 평균 입력\n- ifelse()를 이용할 때\n\n```r\nexam_na$korean   # korean 성적에서 4번째가 NA\n```\n\n```\n## [1] 87 92 95 NA 87\n```\n- 결측값을 제외한 값의 평균 구하기\n\n```r\nmean(exam_na$korean, na.rm = TRUE)\n```\n\n```\n## [1] 90.25\n```\n- 결측값에 평균 입력\n\n```r\nexam_na$korean <- ifelse(is.na(exam_na$korean),90.25,exam_na$korean)  #ifelse()함수 이용\n```\n- korean 성적 확인\n\n```r\nexam_na$korean \n```\n\n```\n## [1] 87.00 92.00 95.00 90.25 87.00\n```\n\n\n## 이상치\n- 데이터의 특정 값이 뭔가 '이상'이 있다.\n- Case 1 : 정해진 범주에서 벗어난 데이터\n  + 2000년 4월 30일 / 2000년 40월 30일 ---> 9999\n- Case 2 : 숫자 / 아웃라이어(Outlier) / 극단값\n  + 평균임금 320만원 / 손흥민 몇십억원?\n\n-자료 불러오기\n\n```r\nmpg1_out <- read.csv(\"data/mpg1_out.csv\")\nglimpse(mpg1_out)\n```\n\n```\n## Rows: 234\n## Columns: 3\n## $ trans <int> 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 3, 1, 1…\n## $ drv   <chr> \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"4\", \"4\", \"4\", \"4\", \"4\", \"5\",…\n## $ cty   <int> 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, 15, 15, …\n```\n\n- trans의 갯수를 구하자.\n\n```r\ntable(mpg1_out$trans)\n```\n\n```\n## \n##   1   2   3 \n## 154  76   4\n```\n- 쉽게 하는 방법\n\n```r\nmpg1_out %>% filter(trans != 3)\n```\n\n- ifelse\n\n```r\nmpg1_out$trans <- ifelse(mpg1_out$trans == 3, NA, mpg1_out$trans)\n# trans의 값이 3이면 결측치(NA)로 바꿔주고, 아니면 그대로 두어라\ntable(is.na(mpg1_out$trans))\n```\n\n```\n## \n## FALSE  TRUE \n##   230     4\n```\n\n- 결측치 제거\n\n```r\nresult <- mpg1_out %>% filter(!is.na(trans))  # 결측치가 아닌 것들을 'result' 데이터로 지정\n```\n- 결측치가 아닌 것들을 표현\n\n```r\ntable(is.na(result$trans)) \n```\n\n```\n## \n## FALSE \n##   230\n```\n\n\n### 극단치 처리\n- 숫자 데이터 boxplot()\n- boxplot() 함수를 통해서 극단치가 있는지 없는 확인지 가능\n- IQR : 1사분위 ~ 3사분위\n- 경계값 : IQR + IQR * 1.5 상한/ IQR - IQR * 1.5\n\n```r\nmpg1 <- read.csv(\"data/mpg1.csv\")\nboxplot(mpg1$cty)\n```\n\n![](/images/0622/unnamed-chunk-21-1.png)<!-- -->\n\n- cty 변수의 통계값\n\n```r\nboxplot(mpg1$cty)$stats\n```\n\n![](/images/0622/unnamed-chunk-22-1.png)<!-- -->\n\n```\n##      [,1]\n## [1,]    9\n## [2,]   14\n## [3,]   17\n## [4,]   19\n## [5,]   26\n```\n- cty와 hwy의 통계값\n\n```r\nboxplot(mpg1$cty, mpg1$hwy)$stats \n```\n\n![](/images/0622/unnamed-chunk-23-1.png)<!-- -->\n\n```\n##      [,1] [,2]\n## [1,]    9   12\n## [2,]   14   18\n## [3,]   17   24\n## [4,]   19   27\n## [5,]   26   37\n```\n- drv 범주별 cty 통계값\n\n```r\nboxplot(mpg1$cty~mpg1$drv)$stats \n```\n\n![](/images/0622/unnamed-chunk-24-1.png)<!-- -->\n\n```\n##      [,1] [,2] [,3]\n## [1,]    9   15   11\n## [2,]   13   18   12\n## [3,]   14   19   15\n## [4,]   16   21   15\n## [5,]   20   25   18\n```\n- cty의 극단치 기준 알아보기\n\n```r\nboxplot(mpg1$cty)$stats      \n```\n\n![](/images/0622/unnamed-chunk-25-1.png)<!-- -->\n\n```\n##      [,1]\n## [1,]    9\n## [2,]   14\n## [3,]   17\n## [4,]   19\n## [5,]   26\n```\n- ifelse함수를 활용한다\n\n```r\nmpg1$cty <- ifelse(mpg1$cty>26|mpg1$cty<9, NA, mpg1$cty)\n# cty 값이 26 초과, 9 미만인 경우에 결측치(NA)로 처리하고, 아닌경우 그대로 둔다.\n```\n- 결측치 확인\n\n```r\ntable(is.na(mpg1$cty))\n```\n\n```\n## \n## FALSE  TRUE \n##   229     5\n```\n- 결측치를 제외한 cty 평균 구하기\n\n```r\nmean(mpg1$cty,na.rm = TRUE)  \n```\n\n```\n## [1] 16.55895\n```\n- 또는 이렇게 쓸 수도 있다\n\n```r\nmpg1$cty <- ifelse(mpg1$cty>=9 & mpg1$cty<=26, mpg1$cty, NA)\n# cty 값이 9 이상 26 이하인 경우 그대로 두고, 아닌경우 결측치(NA)로 처리한다.\n```\n\n","slug":"day0622","published":1,"updated":"2022-07-10T15:30:52.661Z","_id":"cl5fcok7q000jjku0axef2d9u","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n<h1 id=\"7장\"><a href=\"#7장\" class=\"headerlink\" title=\"7장\"></a>7장</h1><h3 id=\"라이브러리-불러오기\"><a href=\"#라이브러리-불러오기\" class=\"headerlink\" title=\"라이브러리 불러오기\"></a>라이브러리 불러오기</h3><ul>\n<li>작업할 때 항상 라이브러리 불러오기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>dplyr<span class=\"punctuation\">)</span></span><br><span class=\"line\">glimpse<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## Rows: 150</span><br><span class=\"line\">## Columns: 5</span><br><span class=\"line\">## $ Sepal.Length &lt;dbl&gt; 5.1, 4.9, 4.7, 4.6, 5.0, 5.4, 4.6, 5.0, 4.4, 4.9, 5.4, 4.…</span><br><span class=\"line\">## $ Sepal.Width  &lt;dbl&gt; 3.5, 3.0, 3.2, 3.1, 3.6, 3.9, 3.4, 3.4, 2.9, 3.1, 3.7, 3.…</span><br><span class=\"line\">## $ Petal.Length &lt;dbl&gt; 1.4, 1.4, 1.3, 1.5, 1.4, 1.7, 1.4, 1.5, 1.4, 1.5, 1.5, 1.…</span><br><span class=\"line\">## $ Petal.Width  &lt;dbl&gt; 0.2, 0.2, 0.2, 0.2, 0.2, 0.4, 0.3, 0.2, 0.2, 0.1, 0.2, 0.…</span><br><span class=\"line\">## $ Species      &lt;fct&gt; setosa, setosa, setosa, setosa, setosa, setosa, setosa, s…</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"데이터-불러오기\"><a href=\"#데이터-불러오기\" class=\"headerlink\" title=\"데이터 불러오기\"></a>데이터 불러오기</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_na <span class=\"operator\">&lt;-</span> read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;data/exam_na.csv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">str<span class=\"punctuation\">(</span>exam_na<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## &#x27;data.frame&#x27;:\t5 obs. of  5 variables:</span><br><span class=\"line\">##  $ id     : int  1 2 3 4 5</span><br><span class=\"line\">##  $ sex    : chr  &quot;M&quot; &quot;F&quot; &quot;F&quot; &quot;M&quot; ...</span><br><span class=\"line\">##  $ korean : int  87 92 95 NA 87</span><br><span class=\"line\">##  $ english: int  NA 95 92 84 NA</span><br><span class=\"line\">##  $ math   : int  82 93 90 80 88</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-결측치-확인\"><a href=\"#1-결측치-확인\" class=\"headerlink\" title=\"(1) 결측치 확인\"></a>(1) 결측치 확인</h3><ul>\n<li>is.na() : 결측치가 있습니까? &#x2F; TRUE or FALSE</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>exam_na<span class=\"punctuation\">)</span>  <span class=\"comment\"># TRUE 가 결측치</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##         id   sex korean english  math</span><br><span class=\"line\">## [1,] FALSE FALSE  FALSE    TRUE FALSE</span><br><span class=\"line\">## [2,] FALSE FALSE  FALSE   FALSE FALSE</span><br><span class=\"line\">## [3,] FALSE FALSE  FALSE   FALSE FALSE</span><br><span class=\"line\">## [4,] FALSE FALSE   TRUE   FALSE FALSE</span><br><span class=\"line\">## [5,] FALSE FALSE  FALSE    TRUE FALSE</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"2-결측치-빈도-구하기\"><a href=\"#2-결측치-빈도-구하기\" class=\"headerlink\" title=\"(2) 결측치 빈도 구하기\"></a>(2) 결측치 빈도 구하기</h3><ul>\n<li>table(is.na()) : 빈도 구하기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>exam_na<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>          <span class=\"comment\">#FALSE 는 결측치가 아닌것, TRUE 는 결측치</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## FALSE  TRUE </span><br><span class=\"line\">##    22     3</span><br></pre></td></tr></table></figure>\n<ul>\n<li>korean 항목의 결측치 구하기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>exam_na<span class=\"operator\">$</span>korean<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## FALSE  TRUE </span><br><span class=\"line\">##     4     1</span><br></pre></td></tr></table></figure>\n<ul>\n<li>변수별로 결측치 빈도 구하기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">summary<span class=\"punctuation\">(</span><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>exam_na<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##      id             sex            korean         english       </span><br><span class=\"line\">##  Mode :logical   Mode :logical   Mode :logical   Mode :logical  </span><br><span class=\"line\">##  FALSE:5         FALSE:5         FALSE:4         FALSE:3        </span><br><span class=\"line\">##                                  TRUE :1         TRUE :2        </span><br><span class=\"line\">##     math        </span><br><span class=\"line\">##  Mode :logical  </span><br><span class=\"line\">##  FALSE:5        </span><br><span class=\"line\">## </span><br></pre></td></tr></table></figure>\n<ul>\n<li>결측치 포함한 전체 통계</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">summary<span class=\"punctuation\">(</span>exam_na<span class=\"punctuation\">)</span>   <span class=\"comment\"># NA&#x27;s 값이 결측치의 개수</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##        id        sex                korean         english           math     </span><br><span class=\"line\">##  Min.   :1   Length:5           Min.   :87.00   Min.   :84.00   Min.   :80.0  </span><br><span class=\"line\">##  1st Qu.:2   Class :character   1st Qu.:87.00   1st Qu.:88.00   1st Qu.:82.0  </span><br><span class=\"line\">##  Median :3   Mode  :character   Median :89.50   Median :92.00   Median :88.0  </span><br><span class=\"line\">##  Mean   :3                      Mean   :90.25   Mean   :90.33   Mean   :86.6  </span><br><span class=\"line\">##  3rd Qu.:4                      3rd Qu.:92.75   3rd Qu.:93.50   3rd Qu.:90.0  </span><br><span class=\"line\">##  Max.   :5                      Max.   :95.00   Max.   :95.00   Max.   :93.0  </span><br><span class=\"line\">##                                 NA&#x27;s   :1       NA&#x27;s   :2</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"결측치-처리-방법\"><a href=\"#결측치-처리-방법\" class=\"headerlink\" title=\"결측치 처리 방법\"></a>결측치 처리 방법</h1><h3 id=\"1-제거하고-처리하기\"><a href=\"#1-제거하고-처리하기\" class=\"headerlink\" title=\"(1) 제거하고 처리하기\"></a>(1) 제거하고 처리하기</h3><ul>\n<li>na.rm &#x3D; T : ‘rm’은 remove의 약자. 즉, 결측치를 제거 할 것이냐는 함수</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mean<span class=\"punctuation\">(</span>exam_na<span class=\"operator\">$</span>korean<span class=\"punctuation\">,</span> na.rm <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#TRUE는 제거, FALSE는 제거 안함</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 90.25</span><br></pre></td></tr></table></figure>\n<ul>\n<li>na.omit() : 결측치가 있는 행을 모두 제거<br>+가급적 쓰지 말 것</li>\n<li>filter() 함수 활용<ul>\n<li>(!is.na(korean))</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_na <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>korean<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>   <span class=\"comment\">#결측치가 있는 열</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   id sex korean english math</span><br><span class=\"line\">## 1  4   M     NA      84   80</span><br></pre></td></tr></table></figure>\n<ul>\n<li>이번에는 !is.na(korean))을 활용한다</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_na <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span><span class=\"operator\">!</span><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>korean<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#!는 not의 의미</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   id sex korean english math</span><br><span class=\"line\">## 1  1   M     87      NA   82</span><br><span class=\"line\">## 2  2   F     92      95   93</span><br><span class=\"line\">## 3  3   F     95      92   90</span><br><span class=\"line\">## 4  5   F     87      NA   88</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"2-다른-값으로-대체하기\"><a href=\"#2-다른-값으로-대체하기\" class=\"headerlink\" title=\"(2) 다른 값으로 대체하기\"></a>(2) 다른 값으로 대체하기</h3><ul>\n<li>imputation 참고자료<ul>\n<li><a href=\"https://www.kdnuggets.com/2017/09/missing-data-imputation-using-r.html\">https://www.kdnuggets.com/2017/09/missing-data-imputation-using-r.html</a></li>\n<li><a href=\"https://velog.io/@lifeisbeautiful/R-%EA%B2%B0%EC%B8%A1%EA%B0%92NA-%EC%A0%9C%EA%B1%B0-%EB%8C%80%EC%B2%B4-%EB%B0%A9%EB%B2%95\">R 결측치(NA) 제거, 대체 방법</a></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"평균-입력\"><a href=\"#평균-입력\" class=\"headerlink\" title=\"평균 입력\"></a>평균 입력</h4><ul>\n<li>ifelse()를 이용할 때</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_na<span class=\"operator\">$</span>korean   <span class=\"comment\"># korean 성적에서 4번째가 NA</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 87 92 95 NA 87</span><br></pre></td></tr></table></figure>\n<ul>\n<li>결측값을 제외한 값의 평균 구하기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mean<span class=\"punctuation\">(</span>exam_na<span class=\"operator\">$</span>korean<span class=\"punctuation\">,</span> na.rm <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 90.25</span><br></pre></td></tr></table></figure>\n<ul>\n<li>결측값에 평균 입력</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_na<span class=\"operator\">$</span>korean <span class=\"operator\">&lt;-</span> ifelse<span class=\"punctuation\">(</span><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>exam_na<span class=\"operator\">$</span>korean<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"number\">90.25</span><span class=\"punctuation\">,</span>exam_na<span class=\"operator\">$</span>korean<span class=\"punctuation\">)</span>  <span class=\"comment\">#ifelse()함수 이용</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>korean 성적 확인</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_na<span class=\"operator\">$</span>korean </span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 87.00 92.00 95.00 90.25 87.00</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"이상치\"><a href=\"#이상치\" class=\"headerlink\" title=\"이상치\"></a>이상치</h2><ul>\n<li>데이터의 특정 값이 뭔가 ‘이상’이 있다.</li>\n<li>Case 1 : 정해진 범주에서 벗어난 데이터<ul>\n<li>2000년 4월 30일 &#x2F; 2000년 40월 30일 —&gt; 9999</li>\n</ul>\n</li>\n<li>Case 2 : 숫자 &#x2F; 아웃라이어(Outlier) &#x2F; 극단값<ul>\n<li>평균임금 320만원 &#x2F; 손흥민 몇십억원?</li>\n</ul>\n</li>\n</ul>\n<p>-자료 불러오기</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1_out <span class=\"operator\">&lt;-</span> read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;data/mpg1_out.csv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">glimpse<span class=\"punctuation\">(</span>mpg1_out<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## Rows: 234</span><br><span class=\"line\">## Columns: 3</span><br><span class=\"line\">## $ trans &lt;int&gt; 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 3, 1, 1…</span><br><span class=\"line\">## $ drv   &lt;chr&gt; &quot;f&quot;, &quot;f&quot;, &quot;f&quot;, &quot;f&quot;, &quot;f&quot;, &quot;f&quot;, &quot;f&quot;, &quot;4&quot;, &quot;4&quot;, &quot;4&quot;, &quot;4&quot;, &quot;4&quot;, &quot;5&quot;,…</span><br><span class=\"line\">## $ cty   &lt;int&gt; 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, 15, 15, …</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>trans의 갯수를 구하자.</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span>mpg1_out<span class=\"operator\">$</span>trans<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">##   1   2   3 </span><br><span class=\"line\">## 154  76   4</span><br></pre></td></tr></table></figure>\n<ul>\n<li>쉽게 하는 방법</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1_out <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>trans <span class=\"operator\">!=</span> <span class=\"number\">3</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>ifelse</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1_out<span class=\"operator\">$</span>trans <span class=\"operator\">&lt;-</span> ifelse<span class=\"punctuation\">(</span>mpg1_out<span class=\"operator\">$</span>trans <span class=\"operator\">==</span> <span class=\"number\">3</span><span class=\"punctuation\">,</span> <span class=\"literal\">NA</span><span class=\"punctuation\">,</span> mpg1_out<span class=\"operator\">$</span>trans<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># trans의 값이 3이면 결측치(NA)로 바꿔주고, 아니면 그대로 두어라</span></span><br><span class=\"line\">table<span class=\"punctuation\">(</span><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>mpg1_out<span class=\"operator\">$</span>trans<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## FALSE  TRUE </span><br><span class=\"line\">##   230     4</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>결측치 제거</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">result <span class=\"operator\">&lt;-</span> mpg1_out <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span><span class=\"operator\">!</span><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>trans<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>  <span class=\"comment\"># 결측치가 아닌 것들을 &#x27;result&#x27; 데이터로 지정</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>결측치가 아닌 것들을 표현</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>result<span class=\"operator\">$</span>trans<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> </span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## FALSE </span><br><span class=\"line\">##   230</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"극단치-처리\"><a href=\"#극단치-처리\" class=\"headerlink\" title=\"극단치 처리\"></a>극단치 처리</h3><ul>\n<li>숫자 데이터 boxplot()</li>\n<li>boxplot() 함수를 통해서 극단치가 있는지 없는 확인지 가능</li>\n<li>IQR : 1사분위 ~ 3사분위</li>\n<li>경계값 : IQR + IQR * 1.5 상한&#x2F; IQR - IQR * 1.5</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1 <span class=\"operator\">&lt;-</span> read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;data/mpg1.csv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">boxplot<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>cty<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622/unnamed-chunk-21-1.png\"><!-- --></p>\n<ul>\n<li>cty 변수의 통계값</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">boxplot<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>cty<span class=\"punctuation\">)</span><span class=\"operator\">$</span>stats</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622/unnamed-chunk-22-1.png\"><!-- --></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##      [,1]</span><br><span class=\"line\">## [1,]    9</span><br><span class=\"line\">## [2,]   14</span><br><span class=\"line\">## [3,]   17</span><br><span class=\"line\">## [4,]   19</span><br><span class=\"line\">## [5,]   26</span><br></pre></td></tr></table></figure>\n<ul>\n<li>cty와 hwy의 통계값</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">boxplot<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>cty<span class=\"punctuation\">,</span> mpg1<span class=\"operator\">$</span>hwy<span class=\"punctuation\">)</span><span class=\"operator\">$</span>stats </span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622/unnamed-chunk-23-1.png\"><!-- --></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##      [,1] [,2]</span><br><span class=\"line\">## [1,]    9   12</span><br><span class=\"line\">## [2,]   14   18</span><br><span class=\"line\">## [3,]   17   24</span><br><span class=\"line\">## [4,]   19   27</span><br><span class=\"line\">## [5,]   26   37</span><br></pre></td></tr></table></figure>\n<ul>\n<li>drv 범주별 cty 통계값</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">boxplot<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>cty<span class=\"operator\">~</span>mpg1<span class=\"operator\">$</span>drv<span class=\"punctuation\">)</span><span class=\"operator\">$</span>stats </span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622/unnamed-chunk-24-1.png\"><!-- --></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##      [,1] [,2] [,3]</span><br><span class=\"line\">## [1,]    9   15   11</span><br><span class=\"line\">## [2,]   13   18   12</span><br><span class=\"line\">## [3,]   14   19   15</span><br><span class=\"line\">## [4,]   16   21   15</span><br><span class=\"line\">## [5,]   20   25   18</span><br></pre></td></tr></table></figure>\n<ul>\n<li>cty의 극단치 기준 알아보기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">boxplot<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>cty<span class=\"punctuation\">)</span><span class=\"operator\">$</span>stats      </span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622/unnamed-chunk-25-1.png\"><!-- --></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##      [,1]</span><br><span class=\"line\">## [1,]    9</span><br><span class=\"line\">## [2,]   14</span><br><span class=\"line\">## [3,]   17</span><br><span class=\"line\">## [4,]   19</span><br><span class=\"line\">## [5,]   26</span><br></pre></td></tr></table></figure>\n<ul>\n<li>ifelse함수를 활용한다</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1<span class=\"operator\">$</span>cty <span class=\"operator\">&lt;-</span> ifelse<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>cty<span class=\"operator\">&gt;</span><span class=\"number\">26</span><span class=\"operator\">|</span>mpg1<span class=\"operator\">$</span>cty<span class=\"operator\">&lt;</span><span class=\"number\">9</span><span class=\"punctuation\">,</span> <span class=\"literal\">NA</span><span class=\"punctuation\">,</span> mpg1<span class=\"operator\">$</span>cty<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># cty 값이 26 초과, 9 미만인 경우에 결측치(NA)로 처리하고, 아닌경우 그대로 둔다.</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>결측치 확인</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>cty<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## FALSE  TRUE </span><br><span class=\"line\">##   229     5</span><br></pre></td></tr></table></figure>\n<ul>\n<li>결측치를 제외한 cty 평균 구하기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mean<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>cty<span class=\"punctuation\">,</span>na.rm <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span>  </span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 16.55895</span><br></pre></td></tr></table></figure>\n<ul>\n<li>또는 이렇게 쓸 수도 있다</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1<span class=\"operator\">$</span>cty <span class=\"operator\">&lt;-</span> ifelse<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>cty<span class=\"operator\">&gt;=</span><span class=\"number\">9</span> <span class=\"operator\">&amp;</span> mpg1<span class=\"operator\">$</span>cty<span class=\"operator\">&lt;=</span><span class=\"number\">26</span><span class=\"punctuation\">,</span> mpg1<span class=\"operator\">$</span>cty<span class=\"punctuation\">,</span> <span class=\"literal\">NA</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># cty 값이 9 이상 26 이하인 경우 그대로 두고, 아닌경우 결측치(NA)로 처리한다.</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/06/22/day0622/R_logo.jpg","excerpt":"<p>결측치</p>","more":"<p>결측치</p>\n<!-- excerpt -->\n\n<h1 id=\"7장\"><a href=\"#7장\" class=\"headerlink\" title=\"7장\"></a>7장</h1><h3 id=\"라이브러리-불러오기\"><a href=\"#라이브러리-불러오기\" class=\"headerlink\" title=\"라이브러리 불러오기\"></a>라이브러리 불러오기</h3><ul>\n<li>작업할 때 항상 라이브러리 불러오기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>dplyr<span class=\"punctuation\">)</span></span><br><span class=\"line\">glimpse<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## Rows: 150</span><br><span class=\"line\">## Columns: 5</span><br><span class=\"line\">## $ Sepal.Length &lt;dbl&gt; 5.1, 4.9, 4.7, 4.6, 5.0, 5.4, 4.6, 5.0, 4.4, 4.9, 5.4, 4.…</span><br><span class=\"line\">## $ Sepal.Width  &lt;dbl&gt; 3.5, 3.0, 3.2, 3.1, 3.6, 3.9, 3.4, 3.4, 2.9, 3.1, 3.7, 3.…</span><br><span class=\"line\">## $ Petal.Length &lt;dbl&gt; 1.4, 1.4, 1.3, 1.5, 1.4, 1.7, 1.4, 1.5, 1.4, 1.5, 1.5, 1.…</span><br><span class=\"line\">## $ Petal.Width  &lt;dbl&gt; 0.2, 0.2, 0.2, 0.2, 0.2, 0.4, 0.3, 0.2, 0.2, 0.1, 0.2, 0.…</span><br><span class=\"line\">## $ Species      &lt;fct&gt; setosa, setosa, setosa, setosa, setosa, setosa, setosa, s…</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"데이터-불러오기\"><a href=\"#데이터-불러오기\" class=\"headerlink\" title=\"데이터 불러오기\"></a>데이터 불러오기</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_na <span class=\"operator\">&lt;-</span> read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;data/exam_na.csv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">str<span class=\"punctuation\">(</span>exam_na<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## &#x27;data.frame&#x27;:\t5 obs. of  5 variables:</span><br><span class=\"line\">##  $ id     : int  1 2 3 4 5</span><br><span class=\"line\">##  $ sex    : chr  &quot;M&quot; &quot;F&quot; &quot;F&quot; &quot;M&quot; ...</span><br><span class=\"line\">##  $ korean : int  87 92 95 NA 87</span><br><span class=\"line\">##  $ english: int  NA 95 92 84 NA</span><br><span class=\"line\">##  $ math   : int  82 93 90 80 88</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-결측치-확인\"><a href=\"#1-결측치-확인\" class=\"headerlink\" title=\"(1) 결측치 확인\"></a>(1) 결측치 확인</h3><ul>\n<li>is.na() : 결측치가 있습니까? &#x2F; TRUE or FALSE</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>exam_na<span class=\"punctuation\">)</span>  <span class=\"comment\"># TRUE 가 결측치</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##         id   sex korean english  math</span><br><span class=\"line\">## [1,] FALSE FALSE  FALSE    TRUE FALSE</span><br><span class=\"line\">## [2,] FALSE FALSE  FALSE   FALSE FALSE</span><br><span class=\"line\">## [3,] FALSE FALSE  FALSE   FALSE FALSE</span><br><span class=\"line\">## [4,] FALSE FALSE   TRUE   FALSE FALSE</span><br><span class=\"line\">## [5,] FALSE FALSE  FALSE    TRUE FALSE</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"2-결측치-빈도-구하기\"><a href=\"#2-결측치-빈도-구하기\" class=\"headerlink\" title=\"(2) 결측치 빈도 구하기\"></a>(2) 결측치 빈도 구하기</h3><ul>\n<li>table(is.na()) : 빈도 구하기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>exam_na<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>          <span class=\"comment\">#FALSE 는 결측치가 아닌것, TRUE 는 결측치</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## FALSE  TRUE </span><br><span class=\"line\">##    22     3</span><br></pre></td></tr></table></figure>\n<ul>\n<li>korean 항목의 결측치 구하기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>exam_na<span class=\"operator\">$</span>korean<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## FALSE  TRUE </span><br><span class=\"line\">##     4     1</span><br></pre></td></tr></table></figure>\n<ul>\n<li>변수별로 결측치 빈도 구하기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">summary<span class=\"punctuation\">(</span><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>exam_na<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##      id             sex            korean         english       </span><br><span class=\"line\">##  Mode :logical   Mode :logical   Mode :logical   Mode :logical  </span><br><span class=\"line\">##  FALSE:5         FALSE:5         FALSE:4         FALSE:3        </span><br><span class=\"line\">##                                  TRUE :1         TRUE :2        </span><br><span class=\"line\">##     math        </span><br><span class=\"line\">##  Mode :logical  </span><br><span class=\"line\">##  FALSE:5        </span><br><span class=\"line\">## </span><br></pre></td></tr></table></figure>\n<ul>\n<li>결측치 포함한 전체 통계</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">summary<span class=\"punctuation\">(</span>exam_na<span class=\"punctuation\">)</span>   <span class=\"comment\"># NA&#x27;s 값이 결측치의 개수</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##        id        sex                korean         english           math     </span><br><span class=\"line\">##  Min.   :1   Length:5           Min.   :87.00   Min.   :84.00   Min.   :80.0  </span><br><span class=\"line\">##  1st Qu.:2   Class :character   1st Qu.:87.00   1st Qu.:88.00   1st Qu.:82.0  </span><br><span class=\"line\">##  Median :3   Mode  :character   Median :89.50   Median :92.00   Median :88.0  </span><br><span class=\"line\">##  Mean   :3                      Mean   :90.25   Mean   :90.33   Mean   :86.6  </span><br><span class=\"line\">##  3rd Qu.:4                      3rd Qu.:92.75   3rd Qu.:93.50   3rd Qu.:90.0  </span><br><span class=\"line\">##  Max.   :5                      Max.   :95.00   Max.   :95.00   Max.   :93.0  </span><br><span class=\"line\">##                                 NA&#x27;s   :1       NA&#x27;s   :2</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"결측치-처리-방법\"><a href=\"#결측치-처리-방법\" class=\"headerlink\" title=\"결측치 처리 방법\"></a>결측치 처리 방법</h1><h3 id=\"1-제거하고-처리하기\"><a href=\"#1-제거하고-처리하기\" class=\"headerlink\" title=\"(1) 제거하고 처리하기\"></a>(1) 제거하고 처리하기</h3><ul>\n<li>na.rm &#x3D; T : ‘rm’은 remove의 약자. 즉, 결측치를 제거 할 것이냐는 함수</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mean<span class=\"punctuation\">(</span>exam_na<span class=\"operator\">$</span>korean<span class=\"punctuation\">,</span> na.rm <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#TRUE는 제거, FALSE는 제거 안함</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 90.25</span><br></pre></td></tr></table></figure>\n<ul>\n<li>na.omit() : 결측치가 있는 행을 모두 제거<br>+가급적 쓰지 말 것</li>\n<li>filter() 함수 활용<ul>\n<li>(!is.na(korean))</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_na <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>korean<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>   <span class=\"comment\">#결측치가 있는 열</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   id sex korean english math</span><br><span class=\"line\">## 1  4   M     NA      84   80</span><br></pre></td></tr></table></figure>\n<ul>\n<li>이번에는 !is.na(korean))을 활용한다</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_na <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span><span class=\"operator\">!</span><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>korean<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>  <span class=\"comment\">#!는 not의 의미</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   id sex korean english math</span><br><span class=\"line\">## 1  1   M     87      NA   82</span><br><span class=\"line\">## 2  2   F     92      95   93</span><br><span class=\"line\">## 3  3   F     95      92   90</span><br><span class=\"line\">## 4  5   F     87      NA   88</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"2-다른-값으로-대체하기\"><a href=\"#2-다른-값으로-대체하기\" class=\"headerlink\" title=\"(2) 다른 값으로 대체하기\"></a>(2) 다른 값으로 대체하기</h3><ul>\n<li>imputation 참고자료<ul>\n<li><a href=\"https://www.kdnuggets.com/2017/09/missing-data-imputation-using-r.html\">https://www.kdnuggets.com/2017/09/missing-data-imputation-using-r.html</a></li>\n<li><a href=\"https://velog.io/@lifeisbeautiful/R-%EA%B2%B0%EC%B8%A1%EA%B0%92NA-%EC%A0%9C%EA%B1%B0-%EB%8C%80%EC%B2%B4-%EB%B0%A9%EB%B2%95\">R 결측치(NA) 제거, 대체 방법</a></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"평균-입력\"><a href=\"#평균-입력\" class=\"headerlink\" title=\"평균 입력\"></a>평균 입력</h4><ul>\n<li>ifelse()를 이용할 때</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_na<span class=\"operator\">$</span>korean   <span class=\"comment\"># korean 성적에서 4번째가 NA</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 87 92 95 NA 87</span><br></pre></td></tr></table></figure>\n<ul>\n<li>결측값을 제외한 값의 평균 구하기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mean<span class=\"punctuation\">(</span>exam_na<span class=\"operator\">$</span>korean<span class=\"punctuation\">,</span> na.rm <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 90.25</span><br></pre></td></tr></table></figure>\n<ul>\n<li>결측값에 평균 입력</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_na<span class=\"operator\">$</span>korean <span class=\"operator\">&lt;-</span> ifelse<span class=\"punctuation\">(</span><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>exam_na<span class=\"operator\">$</span>korean<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"number\">90.25</span><span class=\"punctuation\">,</span>exam_na<span class=\"operator\">$</span>korean<span class=\"punctuation\">)</span>  <span class=\"comment\">#ifelse()함수 이용</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>korean 성적 확인</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exam_na<span class=\"operator\">$</span>korean </span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 87.00 92.00 95.00 90.25 87.00</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"이상치\"><a href=\"#이상치\" class=\"headerlink\" title=\"이상치\"></a>이상치</h2><ul>\n<li>데이터의 특정 값이 뭔가 ‘이상’이 있다.</li>\n<li>Case 1 : 정해진 범주에서 벗어난 데이터<ul>\n<li>2000년 4월 30일 &#x2F; 2000년 40월 30일 —&gt; 9999</li>\n</ul>\n</li>\n<li>Case 2 : 숫자 &#x2F; 아웃라이어(Outlier) &#x2F; 극단값<ul>\n<li>평균임금 320만원 &#x2F; 손흥민 몇십억원?</li>\n</ul>\n</li>\n</ul>\n<p>-자료 불러오기</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1_out <span class=\"operator\">&lt;-</span> read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;data/mpg1_out.csv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">glimpse<span class=\"punctuation\">(</span>mpg1_out<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## Rows: 234</span><br><span class=\"line\">## Columns: 3</span><br><span class=\"line\">## $ trans &lt;int&gt; 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 3, 1, 1…</span><br><span class=\"line\">## $ drv   &lt;chr&gt; &quot;f&quot;, &quot;f&quot;, &quot;f&quot;, &quot;f&quot;, &quot;f&quot;, &quot;f&quot;, &quot;f&quot;, &quot;4&quot;, &quot;4&quot;, &quot;4&quot;, &quot;4&quot;, &quot;4&quot;, &quot;5&quot;,…</span><br><span class=\"line\">## $ cty   &lt;int&gt; 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, 15, 15, …</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>trans의 갯수를 구하자.</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span>mpg1_out<span class=\"operator\">$</span>trans<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">##   1   2   3 </span><br><span class=\"line\">## 154  76   4</span><br></pre></td></tr></table></figure>\n<ul>\n<li>쉽게 하는 방법</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1_out <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>trans <span class=\"operator\">!=</span> <span class=\"number\">3</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>ifelse</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1_out<span class=\"operator\">$</span>trans <span class=\"operator\">&lt;-</span> ifelse<span class=\"punctuation\">(</span>mpg1_out<span class=\"operator\">$</span>trans <span class=\"operator\">==</span> <span class=\"number\">3</span><span class=\"punctuation\">,</span> <span class=\"literal\">NA</span><span class=\"punctuation\">,</span> mpg1_out<span class=\"operator\">$</span>trans<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># trans의 값이 3이면 결측치(NA)로 바꿔주고, 아니면 그대로 두어라</span></span><br><span class=\"line\">table<span class=\"punctuation\">(</span><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>mpg1_out<span class=\"operator\">$</span>trans<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## FALSE  TRUE </span><br><span class=\"line\">##   230     4</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>결측치 제거</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">result <span class=\"operator\">&lt;-</span> mpg1_out <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span><span class=\"operator\">!</span><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>trans<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>  <span class=\"comment\"># 결측치가 아닌 것들을 &#x27;result&#x27; 데이터로 지정</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>결측치가 아닌 것들을 표현</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>result<span class=\"operator\">$</span>trans<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> </span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## FALSE </span><br><span class=\"line\">##   230</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"극단치-처리\"><a href=\"#극단치-처리\" class=\"headerlink\" title=\"극단치 처리\"></a>극단치 처리</h3><ul>\n<li>숫자 데이터 boxplot()</li>\n<li>boxplot() 함수를 통해서 극단치가 있는지 없는 확인지 가능</li>\n<li>IQR : 1사분위 ~ 3사분위</li>\n<li>경계값 : IQR + IQR * 1.5 상한&#x2F; IQR - IQR * 1.5</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1 <span class=\"operator\">&lt;-</span> read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;data/mpg1.csv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">boxplot<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>cty<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622/unnamed-chunk-21-1.png\"><!-- --></p>\n<ul>\n<li>cty 변수의 통계값</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">boxplot<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>cty<span class=\"punctuation\">)</span><span class=\"operator\">$</span>stats</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622/unnamed-chunk-22-1.png\"><!-- --></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##      [,1]</span><br><span class=\"line\">## [1,]    9</span><br><span class=\"line\">## [2,]   14</span><br><span class=\"line\">## [3,]   17</span><br><span class=\"line\">## [4,]   19</span><br><span class=\"line\">## [5,]   26</span><br></pre></td></tr></table></figure>\n<ul>\n<li>cty와 hwy의 통계값</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">boxplot<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>cty<span class=\"punctuation\">,</span> mpg1<span class=\"operator\">$</span>hwy<span class=\"punctuation\">)</span><span class=\"operator\">$</span>stats </span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622/unnamed-chunk-23-1.png\"><!-- --></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##      [,1] [,2]</span><br><span class=\"line\">## [1,]    9   12</span><br><span class=\"line\">## [2,]   14   18</span><br><span class=\"line\">## [3,]   17   24</span><br><span class=\"line\">## [4,]   19   27</span><br><span class=\"line\">## [5,]   26   37</span><br></pre></td></tr></table></figure>\n<ul>\n<li>drv 범주별 cty 통계값</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">boxplot<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>cty<span class=\"operator\">~</span>mpg1<span class=\"operator\">$</span>drv<span class=\"punctuation\">)</span><span class=\"operator\">$</span>stats </span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622/unnamed-chunk-24-1.png\"><!-- --></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##      [,1] [,2] [,3]</span><br><span class=\"line\">## [1,]    9   15   11</span><br><span class=\"line\">## [2,]   13   18   12</span><br><span class=\"line\">## [3,]   14   19   15</span><br><span class=\"line\">## [4,]   16   21   15</span><br><span class=\"line\">## [5,]   20   25   18</span><br></pre></td></tr></table></figure>\n<ul>\n<li>cty의 극단치 기준 알아보기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">boxplot<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>cty<span class=\"punctuation\">)</span><span class=\"operator\">$</span>stats      </span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622/unnamed-chunk-25-1.png\"><!-- --></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##      [,1]</span><br><span class=\"line\">## [1,]    9</span><br><span class=\"line\">## [2,]   14</span><br><span class=\"line\">## [3,]   17</span><br><span class=\"line\">## [4,]   19</span><br><span class=\"line\">## [5,]   26</span><br></pre></td></tr></table></figure>\n<ul>\n<li>ifelse함수를 활용한다</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1<span class=\"operator\">$</span>cty <span class=\"operator\">&lt;-</span> ifelse<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>cty<span class=\"operator\">&gt;</span><span class=\"number\">26</span><span class=\"operator\">|</span>mpg1<span class=\"operator\">$</span>cty<span class=\"operator\">&lt;</span><span class=\"number\">9</span><span class=\"punctuation\">,</span> <span class=\"literal\">NA</span><span class=\"punctuation\">,</span> mpg1<span class=\"operator\">$</span>cty<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># cty 값이 26 초과, 9 미만인 경우에 결측치(NA)로 처리하고, 아닌경우 그대로 둔다.</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>결측치 확인</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>cty<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## FALSE  TRUE </span><br><span class=\"line\">##   229     5</span><br></pre></td></tr></table></figure>\n<ul>\n<li>결측치를 제외한 cty 평균 구하기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mean<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>cty<span class=\"punctuation\">,</span>na.rm <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span>  </span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 16.55895</span><br></pre></td></tr></table></figure>\n<ul>\n<li>또는 이렇게 쓸 수도 있다</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1<span class=\"operator\">$</span>cty <span class=\"operator\">&lt;-</span> ifelse<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>cty<span class=\"operator\">&gt;=</span><span class=\"number\">9</span> <span class=\"operator\">&amp;</span> mpg1<span class=\"operator\">$</span>cty<span class=\"operator\">&lt;=</span><span class=\"number\">26</span><span class=\"punctuation\">,</span> mpg1<span class=\"operator\">$</span>cty<span class=\"punctuation\">,</span> <span class=\"literal\">NA</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># cty 값이 9 이상 26 이하인 경우 그대로 두고, 아닌경우 결측치(NA)로 처리한다.</span></span><br></pre></td></tr></table></figure>\n\n"},{"title":"9장","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"thumbnailImage":"R_logo.jpg","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-06-22T00:30:00.000Z","_content":"\nggplot2를 이용한 R 시각화\n<!-- excerpt -->\n\n# 9장\n## ggplot2 강의\n- 데이터 불러오기\n\n```r\nlibrary(readxl)\nlibrary(ggplot2)\nwho_disease <- read_xlsx(\"data/who_disease.xlsx\")\n```\n- 기본 시각화\n\n```r\n# x축에 year, y축에 cases 라는 값을 넣겠다.\nggplot(who_disease, aes(x = year, y = cases)) +\n  #그래프 종류\n  geom_point()\n```\n\n![](/images/0622_1/unnamed-chunk-2-1.png)<!-- -->\n\n- 옵션 변화 주기(투명도)\n\n```r\nggplot(who_disease, aes(x = year, y = cases)) +\n  #그래프 종류\n  geom_point(alpha = 0.1)  # alpha 는 투명도\n```\n\n![](/images/0622_1/unnamed-chunk-3-1.png)<!-- -->\n\n- 옵션 색상 변화\n\n```r\nggplot(who_disease, aes(x = year, y = cases)) +\n  #그래프 종류\n  geom_point(alpha = 0.1, colour = \"#A243F5\")  # \"#A243F5\" 색상으로 변경\n```\n\n![](/images/0622_1/unnamed-chunk-4-1.png)<!-- -->\n\n- colour 입력 위치\n  + geom_point(colour=\"red\")       ->  색상명 작성\n  + aes(x, y, colour = 컬럼이름)   ->  aes 안에는 컬럼 이름작성\n  \n\n```r\nstr(iris)\n```\n\n```\n## 'data.frame':\t150 obs. of  5 variables:\n##  $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n##  $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...\n##  $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...\n##  $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...\n##  $ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ...\n```\n\n```r\nggplot(iris, aes(x = Sepal.Length,\n                 y = Sepal.Width,\n                 colour = Species,\n                 size = Petal.Length)) +\n  geom_point()\n```\n\n![](/images/0622_1/unnamed-chunk-5-1.png)<!-- -->\n\n- 원하는 색상값 참조 사이트\n  + https://color.adobe.com/ko/create/color-wheel\n\n- 산점도 : x축 수치형 연속형 데이터, y축 수치형 연속형 데이터\n- 연속형 데이터 : 숫자 같이 연속하는 데이터\n- 이산형 데이터 : 문자 같이 연속하지 않는 데이터\n\n```r\nggplot(who_disease, aes(x = year, y = cases)) +\n  #그래프 종류\n  geom_point(alpha = 0.1)\n```\n\n![](/images/0622_1/unnamed-chunk-6-1.png)<!-- -->\n\n- 커널 밀도 곡선\n\n```r\nggplot(data=diamonds, aes(x=carat))+\n  geom_density()\n```\n\n![](/images/0622_1/unnamed-chunk-7-1.png)<!-- -->\n\n- 상자 그래프\n  + 전체 데이터 기준의 그림\n\n```r\nggplot(data=diamonds, aes(x=1, y=price))+  #통상 x값에 1을 부여한다\n  geom_boxplot()\n```\n\n![](/images/0622_1/unnamed-chunk-8-1.png)<!-- -->\n\n  + 범주형 변수 기준의 그림\n\n```r\nggplot(data=diamonds,aes(x=cut,y=price))+\n  geom_boxplot()\n```\n\n![](/images/0622_1/unnamed-chunk-9-1.png)<!-- -->\n\n- 선 그래프\n  + 속도에 따른 제동거리의 그래프\n\n```r\nggplot(data=cars, aes(x=speed,y=dist))+\n  geom_line()\n```\n\n![](/images/0622_1/unnamed-chunk-10-1.png)<!-- -->\n\n  + 실업자수 변화 그래프\n\n```r\nggplot(data=economics,aes(x=date,y=unemploy))+\n  geom_line()\n```\n\n![](/images/0622_1/unnamed-chunk-11-1.png)<!-- -->\n\n  + 개인 저축률 변화\n\n```r\nggplot(data=economics,aes(x=date, y=psavert))+\n  geom_line()\n```\n\n![](/images/0622_1/unnamed-chunk-12-1.png)<!-- -->\n  \n  + 두 선 그래프를 연결해서 그리기\n\n```r\nggplot()+\n  geom_line(data=economics,aes(x=date,y=uempmed,color=\"red\"))+\n  geom_line(data=economics,aes(x=date,y=psavert,color=\"blue\"))\n```\n\n![](/images/0622_1/unnamed-chunk-13-1.png)<!-- -->\n\n```r\n# 빨간색이 주당평균실업기간\n# 파란색이 개인저축률\n```\n  \n- 히스토그램\n  + 질병데이터 \n    region = AMR, year = 1980, disease = 백일해(pertussis)\n    cases > 0\n\n```r\nlibrary(dplyr)\nstr(who_disease)\n```\n\n```\n## tibble [43,262 × 6] (S3: tbl_df/tbl/data.frame)\n##  $ region     : chr [1:43262] \"EMR\" \"EUR\" \"AFR\" \"EUR\" ...\n##  $ countryCode: chr [1:43262] \"AFG\" \"ALB\" \"DZA\" \"AND\" ...\n##  $ country    : chr [1:43262] \"Afghanistan\" \"Albania\" \"Algeria\" \"Andorra\" ...\n##  $ disease    : chr [1:43262] \"measles\" \"measles\" \"measles\" \"measles\" ...\n##  $ year       : num [1:43262] 2016 2016 2016 2016 2016 ...\n##  $ cases      : num [1:43262] 638 17 41 0 53 0 0 2 99 27 ...\n```\n\n```r\nwho_disease %>% \n  filter(region == 'AMR',\n         year == 1980,\n         disease == 'pertussis',\n         cases > 0) -> data2\n```\n- data2 시각화(histogram)\n\n```r\nggplot(data2, aes(x = cases)) +\n  # 빨간색으로 채운다.\n  geom_histogram(fill = \"red\")    # 분포가 어느 지역에 몰려 있는지에 집중\n```\n\n```\n## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n![](/images/0622_1/unnamed-chunk-15-1.png)<!-- -->\n\n- data2 시각화(col)\n\n```r\nggplot(data2, aes(x =country, y =cases)) +\n  geom_col(fill = \"blue\") +\n  # 옵션(가로로 그래프 나타내기)\n  coord_flip()\n```\n\n![](/images/0622_1/unnamed-chunk-16-1.png)<!-- -->\n\n## ggplot() 정교하게 그리기\n- 산점도 그리기\n\n```r\nggplot(data = diamonds, aes(x = carat, \n                            y = price, \n                            col = cut)) +\n  geom_point()\n```\n\n![](/images/0622_1/unnamed-chunk-17-1.png)<!-- -->\n\n- 막대그래프에 2개 범주 내용 반영하기\n\n```r\nggplot(diamonds, aes(x = color, fill = cut)) +\n  geom_bar()\n```\n\n![](/images/0622_1/unnamed-chunk-18-1.png)<!-- -->\n\n- position을 이용한 막대그래프(특정 그래프 모양에만 적용된다)\n\n```r\nggplot(diamonds, aes(x = color, fill = cut)) +\n  geom_bar(position=\"dodge\")\n```\n\n![](/images/0622_1/unnamed-chunk-19-1.png)<!-- -->\n\n```r\nggplot(diamonds, aes(x = color, fill = cut)) +\n  geom_bar(position=\"fill\")\n```\n\n![](/images/0622_1/unnamed-chunk-20-1.png)<!-- -->\n\n- 선 그래프에 2개 범주 내용 반영\n- 데이터 불러오기\n\n```r\nleisure <- read.csv(\"data/leisure.csv\")\nstr(leisure)\n```\n\n```\n## 'data.frame':\t200 obs. of  3 variables:\n##  $ age    : int  2 2 3 3 4 4 5 5 6 6 ...\n##  $ sex    : chr  \"female\" \"male\" \"female\" \"male\" ...\n##  $ expense: num  25.8 21 30 16.3 25.7 ...\n```\n- 연령별 교양오락지출비 그래프 그리기\n\n```r\nggplot(data=leisure, aes(x=age, y=expense, col = sex)) +\n  geom_line(size=1, linetype=2)   #사이즈, 선 타입 조절\n```\n\n![](/images/0622_1/unnamed-chunk-22-1.png)<!-- -->\n\n### 막대그래프의 순서 변경\n- reorder()\n\n```r\nmpg1 <- read.csv(\"data/mpg1.csv\",\n                 stringsAsFactors = FALSE)\n\n#데이터 가공\ndrv_hwy <- mpg1 %>% \n  group_by(drv) %>% \n  summarise(mean_hwy = mean(hwy))\n```\n\n\n```r\n# 기본 그래프\nggplot(data = drv_hwy, aes(x = drv, \n                           y = mean_hwy)) +\n  geom_col()\n```\n\n![](/images/0622_1/unnamed-chunk-24-1.png)<!-- -->\n\n```r\n#오름차순\nggplot(data = drv_hwy, aes(x = reorder(drv, mean_hwy),  \n                           y = mean_hwy)) +\n  geom_col()\n```\n\n![](/images/0622_1/unnamed-chunk-24-2.png)<!-- -->\n\n```r\n#내림차순\nggplot(data = drv_hwy, aes(x = reorder(drv, -mean_hwy), \n                           y = mean_hwy)) +\n  geom_col() +\n  \n  # 그래프와 축에 이름 붙이기\n  labs(            \n    title = \"그래프 제목을 입력하세요\",\n    subtitle = \"그래프 소제목을 입력하세요\",\n    x = \"x변수명을 입력하세요\",\n    y = \"y변수명을 입력하세요\",\n    caption = \"데이터 출처를 입력하세요\"\n  )\n```\n\n![](/images/0622_1/unnamed-chunk-24-3.png)<!-- -->\n","source":"_posts/day0622_1.md","raw":"---\ntitle: \"9장\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: R studio\nclearReading: true\nthumbnailImage: R_logo.jpg\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-06-22 09:30:00'\n---\n\nggplot2를 이용한 R 시각화\n<!-- excerpt -->\n\n# 9장\n## ggplot2 강의\n- 데이터 불러오기\n\n```r\nlibrary(readxl)\nlibrary(ggplot2)\nwho_disease <- read_xlsx(\"data/who_disease.xlsx\")\n```\n- 기본 시각화\n\n```r\n# x축에 year, y축에 cases 라는 값을 넣겠다.\nggplot(who_disease, aes(x = year, y = cases)) +\n  #그래프 종류\n  geom_point()\n```\n\n![](/images/0622_1/unnamed-chunk-2-1.png)<!-- -->\n\n- 옵션 변화 주기(투명도)\n\n```r\nggplot(who_disease, aes(x = year, y = cases)) +\n  #그래프 종류\n  geom_point(alpha = 0.1)  # alpha 는 투명도\n```\n\n![](/images/0622_1/unnamed-chunk-3-1.png)<!-- -->\n\n- 옵션 색상 변화\n\n```r\nggplot(who_disease, aes(x = year, y = cases)) +\n  #그래프 종류\n  geom_point(alpha = 0.1, colour = \"#A243F5\")  # \"#A243F5\" 색상으로 변경\n```\n\n![](/images/0622_1/unnamed-chunk-4-1.png)<!-- -->\n\n- colour 입력 위치\n  + geom_point(colour=\"red\")       ->  색상명 작성\n  + aes(x, y, colour = 컬럼이름)   ->  aes 안에는 컬럼 이름작성\n  \n\n```r\nstr(iris)\n```\n\n```\n## 'data.frame':\t150 obs. of  5 variables:\n##  $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n##  $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...\n##  $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...\n##  $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...\n##  $ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ...\n```\n\n```r\nggplot(iris, aes(x = Sepal.Length,\n                 y = Sepal.Width,\n                 colour = Species,\n                 size = Petal.Length)) +\n  geom_point()\n```\n\n![](/images/0622_1/unnamed-chunk-5-1.png)<!-- -->\n\n- 원하는 색상값 참조 사이트\n  + https://color.adobe.com/ko/create/color-wheel\n\n- 산점도 : x축 수치형 연속형 데이터, y축 수치형 연속형 데이터\n- 연속형 데이터 : 숫자 같이 연속하는 데이터\n- 이산형 데이터 : 문자 같이 연속하지 않는 데이터\n\n```r\nggplot(who_disease, aes(x = year, y = cases)) +\n  #그래프 종류\n  geom_point(alpha = 0.1)\n```\n\n![](/images/0622_1/unnamed-chunk-6-1.png)<!-- -->\n\n- 커널 밀도 곡선\n\n```r\nggplot(data=diamonds, aes(x=carat))+\n  geom_density()\n```\n\n![](/images/0622_1/unnamed-chunk-7-1.png)<!-- -->\n\n- 상자 그래프\n  + 전체 데이터 기준의 그림\n\n```r\nggplot(data=diamonds, aes(x=1, y=price))+  #통상 x값에 1을 부여한다\n  geom_boxplot()\n```\n\n![](/images/0622_1/unnamed-chunk-8-1.png)<!-- -->\n\n  + 범주형 변수 기준의 그림\n\n```r\nggplot(data=diamonds,aes(x=cut,y=price))+\n  geom_boxplot()\n```\n\n![](/images/0622_1/unnamed-chunk-9-1.png)<!-- -->\n\n- 선 그래프\n  + 속도에 따른 제동거리의 그래프\n\n```r\nggplot(data=cars, aes(x=speed,y=dist))+\n  geom_line()\n```\n\n![](/images/0622_1/unnamed-chunk-10-1.png)<!-- -->\n\n  + 실업자수 변화 그래프\n\n```r\nggplot(data=economics,aes(x=date,y=unemploy))+\n  geom_line()\n```\n\n![](/images/0622_1/unnamed-chunk-11-1.png)<!-- -->\n\n  + 개인 저축률 변화\n\n```r\nggplot(data=economics,aes(x=date, y=psavert))+\n  geom_line()\n```\n\n![](/images/0622_1/unnamed-chunk-12-1.png)<!-- -->\n  \n  + 두 선 그래프를 연결해서 그리기\n\n```r\nggplot()+\n  geom_line(data=economics,aes(x=date,y=uempmed,color=\"red\"))+\n  geom_line(data=economics,aes(x=date,y=psavert,color=\"blue\"))\n```\n\n![](/images/0622_1/unnamed-chunk-13-1.png)<!-- -->\n\n```r\n# 빨간색이 주당평균실업기간\n# 파란색이 개인저축률\n```\n  \n- 히스토그램\n  + 질병데이터 \n    region = AMR, year = 1980, disease = 백일해(pertussis)\n    cases > 0\n\n```r\nlibrary(dplyr)\nstr(who_disease)\n```\n\n```\n## tibble [43,262 × 6] (S3: tbl_df/tbl/data.frame)\n##  $ region     : chr [1:43262] \"EMR\" \"EUR\" \"AFR\" \"EUR\" ...\n##  $ countryCode: chr [1:43262] \"AFG\" \"ALB\" \"DZA\" \"AND\" ...\n##  $ country    : chr [1:43262] \"Afghanistan\" \"Albania\" \"Algeria\" \"Andorra\" ...\n##  $ disease    : chr [1:43262] \"measles\" \"measles\" \"measles\" \"measles\" ...\n##  $ year       : num [1:43262] 2016 2016 2016 2016 2016 ...\n##  $ cases      : num [1:43262] 638 17 41 0 53 0 0 2 99 27 ...\n```\n\n```r\nwho_disease %>% \n  filter(region == 'AMR',\n         year == 1980,\n         disease == 'pertussis',\n         cases > 0) -> data2\n```\n- data2 시각화(histogram)\n\n```r\nggplot(data2, aes(x = cases)) +\n  # 빨간색으로 채운다.\n  geom_histogram(fill = \"red\")    # 분포가 어느 지역에 몰려 있는지에 집중\n```\n\n```\n## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n![](/images/0622_1/unnamed-chunk-15-1.png)<!-- -->\n\n- data2 시각화(col)\n\n```r\nggplot(data2, aes(x =country, y =cases)) +\n  geom_col(fill = \"blue\") +\n  # 옵션(가로로 그래프 나타내기)\n  coord_flip()\n```\n\n![](/images/0622_1/unnamed-chunk-16-1.png)<!-- -->\n\n## ggplot() 정교하게 그리기\n- 산점도 그리기\n\n```r\nggplot(data = diamonds, aes(x = carat, \n                            y = price, \n                            col = cut)) +\n  geom_point()\n```\n\n![](/images/0622_1/unnamed-chunk-17-1.png)<!-- -->\n\n- 막대그래프에 2개 범주 내용 반영하기\n\n```r\nggplot(diamonds, aes(x = color, fill = cut)) +\n  geom_bar()\n```\n\n![](/images/0622_1/unnamed-chunk-18-1.png)<!-- -->\n\n- position을 이용한 막대그래프(특정 그래프 모양에만 적용된다)\n\n```r\nggplot(diamonds, aes(x = color, fill = cut)) +\n  geom_bar(position=\"dodge\")\n```\n\n![](/images/0622_1/unnamed-chunk-19-1.png)<!-- -->\n\n```r\nggplot(diamonds, aes(x = color, fill = cut)) +\n  geom_bar(position=\"fill\")\n```\n\n![](/images/0622_1/unnamed-chunk-20-1.png)<!-- -->\n\n- 선 그래프에 2개 범주 내용 반영\n- 데이터 불러오기\n\n```r\nleisure <- read.csv(\"data/leisure.csv\")\nstr(leisure)\n```\n\n```\n## 'data.frame':\t200 obs. of  3 variables:\n##  $ age    : int  2 2 3 3 4 4 5 5 6 6 ...\n##  $ sex    : chr  \"female\" \"male\" \"female\" \"male\" ...\n##  $ expense: num  25.8 21 30 16.3 25.7 ...\n```\n- 연령별 교양오락지출비 그래프 그리기\n\n```r\nggplot(data=leisure, aes(x=age, y=expense, col = sex)) +\n  geom_line(size=1, linetype=2)   #사이즈, 선 타입 조절\n```\n\n![](/images/0622_1/unnamed-chunk-22-1.png)<!-- -->\n\n### 막대그래프의 순서 변경\n- reorder()\n\n```r\nmpg1 <- read.csv(\"data/mpg1.csv\",\n                 stringsAsFactors = FALSE)\n\n#데이터 가공\ndrv_hwy <- mpg1 %>% \n  group_by(drv) %>% \n  summarise(mean_hwy = mean(hwy))\n```\n\n\n```r\n# 기본 그래프\nggplot(data = drv_hwy, aes(x = drv, \n                           y = mean_hwy)) +\n  geom_col()\n```\n\n![](/images/0622_1/unnamed-chunk-24-1.png)<!-- -->\n\n```r\n#오름차순\nggplot(data = drv_hwy, aes(x = reorder(drv, mean_hwy),  \n                           y = mean_hwy)) +\n  geom_col()\n```\n\n![](/images/0622_1/unnamed-chunk-24-2.png)<!-- -->\n\n```r\n#내림차순\nggplot(data = drv_hwy, aes(x = reorder(drv, -mean_hwy), \n                           y = mean_hwy)) +\n  geom_col() +\n  \n  # 그래프와 축에 이름 붙이기\n  labs(            \n    title = \"그래프 제목을 입력하세요\",\n    subtitle = \"그래프 소제목을 입력하세요\",\n    x = \"x변수명을 입력하세요\",\n    y = \"y변수명을 입력하세요\",\n    caption = \"데이터 출처를 입력하세요\"\n  )\n```\n\n![](/images/0622_1/unnamed-chunk-24-3.png)<!-- -->\n","slug":"day0622_1","published":1,"updated":"2022-07-10T15:30:52.666Z","_id":"cl5fcok7r000kjku02wix373c","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n<h1 id=\"9장\"><a href=\"#9장\" class=\"headerlink\" title=\"9장\"></a>9장</h1><h2 id=\"ggplot2-강의\"><a href=\"#ggplot2-강의\" class=\"headerlink\" title=\"ggplot2 강의\"></a>ggplot2 강의</h2><ul>\n<li>데이터 불러오기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>readxl<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>ggplot2<span class=\"punctuation\">)</span></span><br><span class=\"line\">who_disease <span class=\"operator\">&lt;-</span> read_xlsx<span class=\"punctuation\">(</span><span class=\"string\">&quot;data/who_disease.xlsx&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>기본 시각화</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># x축에 year, y축에 cases 라는 값을 넣겠다.</span></span><br><span class=\"line\">ggplot<span class=\"punctuation\">(</span>who_disease<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> year<span class=\"punctuation\">,</span> y <span class=\"operator\">=</span> cases<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  <span class=\"comment\">#그래프 종류</span></span><br><span class=\"line\">  geom_point<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-2-1.png\"><!-- --></p>\n<ul>\n<li>옵션 변화 주기(투명도)</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>who_disease<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> year<span class=\"punctuation\">,</span> y <span class=\"operator\">=</span> cases<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  <span class=\"comment\">#그래프 종류</span></span><br><span class=\"line\">  geom_point<span class=\"punctuation\">(</span>alpha <span class=\"operator\">=</span> <span class=\"number\">0.1</span><span class=\"punctuation\">)</span>  <span class=\"comment\"># alpha 는 투명도</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-3-1.png\"><!-- --></p>\n<ul>\n<li>옵션 색상 변화</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>who_disease<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> year<span class=\"punctuation\">,</span> y <span class=\"operator\">=</span> cases<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  <span class=\"comment\">#그래프 종류</span></span><br><span class=\"line\">  geom_point<span class=\"punctuation\">(</span>alpha <span class=\"operator\">=</span> <span class=\"number\">0.1</span><span class=\"punctuation\">,</span> colour <span class=\"operator\">=</span> <span class=\"string\">&quot;#A243F5&quot;</span><span class=\"punctuation\">)</span>  <span class=\"comment\"># &quot;#A243F5&quot; 색상으로 변경</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-4-1.png\"><!-- --></p>\n<ul>\n<li>colour 입력 위치<ul>\n<li>geom_point(colour&#x3D;”red”)       -&gt;  색상명 작성</li>\n<li>aes(x, y, colour &#x3D; 컬럼이름)   -&gt;  aes 안에는 컬럼 이름작성</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## &#x27;data.frame&#x27;:\t150 obs. of  5 variables:</span><br><span class=\"line\">##  $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...</span><br><span class=\"line\">##  $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...</span><br><span class=\"line\">##  $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...</span><br><span class=\"line\">##  $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...</span><br><span class=\"line\">##  $ Species     : Factor w/ 3 levels &quot;setosa&quot;,&quot;versicolor&quot;,..: 1 1 1 1 1 1 1 1 1 1 ...</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> Sepal.Length<span class=\"punctuation\">,</span></span><br><span class=\"line\">                 y <span class=\"operator\">=</span> Sepal.Width<span class=\"punctuation\">,</span></span><br><span class=\"line\">                 colour <span class=\"operator\">=</span> Species<span class=\"punctuation\">,</span></span><br><span class=\"line\">                 size <span class=\"operator\">=</span> Petal.Length<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  geom_point<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-5-1.png\"><!-- --></p>\n<ul>\n<li><p>원하는 색상값 참조 사이트</p>\n<ul>\n<li><a href=\"https://color.adobe.com/ko/create/color-wheel\">https://color.adobe.com/ko/create/color-wheel</a></li>\n</ul>\n</li>\n<li><p>산점도 : x축 수치형 연속형 데이터, y축 수치형 연속형 데이터</p>\n</li>\n<li><p>연속형 데이터 : 숫자 같이 연속하는 데이터</p>\n</li>\n<li><p>이산형 데이터 : 문자 같이 연속하지 않는 데이터</p>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>who_disease<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> year<span class=\"punctuation\">,</span> y <span class=\"operator\">=</span> cases<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  <span class=\"comment\">#그래프 종류</span></span><br><span class=\"line\">  geom_point<span class=\"punctuation\">(</span>alpha <span class=\"operator\">=</span> <span class=\"number\">0.1</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-6-1.png\"><!-- --></p>\n<ul>\n<li>커널 밀도 곡선</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data<span class=\"operator\">=</span>diamonds<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x<span class=\"operator\">=</span>carat<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span></span><br><span class=\"line\">  geom_density<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-7-1.png\"><!-- --></p>\n<ul>\n<li>상자 그래프<ul>\n<li>전체 데이터 기준의 그림</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data<span class=\"operator\">=</span>diamonds<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"punctuation\">,</span> y<span class=\"operator\">=</span>price<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span>  <span class=\"comment\">#통상 x값에 1을 부여한다</span></span><br><span class=\"line\">  geom_boxplot<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-8-1.png\"><!-- --></p>\n<ul>\n<li>범주형 변수 기준의 그림</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data<span class=\"operator\">=</span>diamonds<span class=\"punctuation\">,</span>aes<span class=\"punctuation\">(</span>x<span class=\"operator\">=</span>cut<span class=\"punctuation\">,</span>y<span class=\"operator\">=</span>price<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span></span><br><span class=\"line\">  geom_boxplot<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-9-1.png\"><!-- --></p>\n<ul>\n<li>선 그래프<ul>\n<li>속도에 따른 제동거리의 그래프</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data<span class=\"operator\">=</span>cars<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x<span class=\"operator\">=</span>speed<span class=\"punctuation\">,</span>y<span class=\"operator\">=</span>dist<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span></span><br><span class=\"line\">  geom_line<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-10-1.png\"><!-- --></p>\n<ul>\n<li>실업자수 변화 그래프</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data<span class=\"operator\">=</span>economics<span class=\"punctuation\">,</span>aes<span class=\"punctuation\">(</span>x<span class=\"operator\">=</span>date<span class=\"punctuation\">,</span>y<span class=\"operator\">=</span>unemploy<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span></span><br><span class=\"line\">  geom_line<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-11-1.png\"><!-- --></p>\n<ul>\n<li>개인 저축률 변화</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data<span class=\"operator\">=</span>economics<span class=\"punctuation\">,</span>aes<span class=\"punctuation\">(</span>x<span class=\"operator\">=</span>date<span class=\"punctuation\">,</span> y<span class=\"operator\">=</span>psavert<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span></span><br><span class=\"line\">  geom_line<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-12-1.png\"><!-- --></p>\n<ul>\n<li>두 선 그래프를 연결해서 그리기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span></span><br><span class=\"line\">  geom_line<span class=\"punctuation\">(</span>data<span class=\"operator\">=</span>economics<span class=\"punctuation\">,</span>aes<span class=\"punctuation\">(</span>x<span class=\"operator\">=</span>date<span class=\"punctuation\">,</span>y<span class=\"operator\">=</span>uempmed<span class=\"punctuation\">,</span>color<span class=\"operator\">=</span><span class=\"string\">&quot;red&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span></span><br><span class=\"line\">  geom_line<span class=\"punctuation\">(</span>data<span class=\"operator\">=</span>economics<span class=\"punctuation\">,</span>aes<span class=\"punctuation\">(</span>x<span class=\"operator\">=</span>date<span class=\"punctuation\">,</span>y<span class=\"operator\">=</span>psavert<span class=\"punctuation\">,</span>color<span class=\"operator\">=</span><span class=\"string\">&quot;blue&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-13-1.png\"><!-- --></p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 빨간색이 주당평균실업기간</span></span><br><span class=\"line\"><span class=\"comment\"># 파란색이 개인저축률</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>히스토그램<ul>\n<li>질병데이터<br>region &#x3D; AMR, year &#x3D; 1980, disease &#x3D; 백일해(pertussis)<br>cases &gt; 0</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>dplyr<span class=\"punctuation\">)</span></span><br><span class=\"line\">str<span class=\"punctuation\">(</span>who_disease<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## tibble [43,262 × 6] (S3: tbl_df/tbl/data.frame)</span><br><span class=\"line\">##  $ region     : chr [1:43262] &quot;EMR&quot; &quot;EUR&quot; &quot;AFR&quot; &quot;EUR&quot; ...</span><br><span class=\"line\">##  $ countryCode: chr [1:43262] &quot;AFG&quot; &quot;ALB&quot; &quot;DZA&quot; &quot;AND&quot; ...</span><br><span class=\"line\">##  $ country    : chr [1:43262] &quot;Afghanistan&quot; &quot;Albania&quot; &quot;Algeria&quot; &quot;Andorra&quot; ...</span><br><span class=\"line\">##  $ disease    : chr [1:43262] &quot;measles&quot; &quot;measles&quot; &quot;measles&quot; &quot;measles&quot; ...</span><br><span class=\"line\">##  $ year       : num [1:43262] 2016 2016 2016 2016 2016 ...</span><br><span class=\"line\">##  $ cases      : num [1:43262] 638 17 41 0 53 0 0 2 99 27 ...</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">who_disease <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  filter<span class=\"punctuation\">(</span>region <span class=\"operator\">==</span> <span class=\"string\">&#x27;AMR&#x27;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">         year <span class=\"operator\">==</span> <span class=\"number\">1980</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">         disease <span class=\"operator\">==</span> <span class=\"string\">&#x27;pertussis&#x27;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">         cases <span class=\"operator\">&gt;</span> <span class=\"number\">0</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> data2</span><br></pre></td></tr></table></figure>\n<ul>\n<li>data2 시각화(histogram)</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data2<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> cases<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  <span class=\"comment\"># 빨간색으로 채운다.</span></span><br><span class=\"line\">  geom_histogram<span class=\"punctuation\">(</span>fill <span class=\"operator\">=</span> <span class=\"string\">&quot;red&quot;</span><span class=\"punctuation\">)</span>    <span class=\"comment\"># 분포가 어느 지역에 몰려 있는지에 집중</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-15-1.png\"><!-- --></p>\n<ul>\n<li>data2 시각화(col)</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data2<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span>country<span class=\"punctuation\">,</span> y <span class=\"operator\">=</span>cases<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  geom_col<span class=\"punctuation\">(</span>fill <span class=\"operator\">=</span> <span class=\"string\">&quot;blue&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  <span class=\"comment\"># 옵션(가로로 그래프 나타내기)</span></span><br><span class=\"line\">  coord_flip<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-16-1.png\"><!-- --></p>\n<h2 id=\"ggplot-정교하게-그리기\"><a href=\"#ggplot-정교하게-그리기\" class=\"headerlink\" title=\"ggplot() 정교하게 그리기\"></a>ggplot() 정교하게 그리기</h2><ul>\n<li>산점도 그리기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data <span class=\"operator\">=</span> diamonds<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> carat<span class=\"punctuation\">,</span> </span><br><span class=\"line\">                            y <span class=\"operator\">=</span> price<span class=\"punctuation\">,</span> </span><br><span class=\"line\">                            col <span class=\"operator\">=</span> cut<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  geom_point<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-17-1.png\"><!-- --></p>\n<ul>\n<li>막대그래프에 2개 범주 내용 반영하기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>diamonds<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> color<span class=\"punctuation\">,</span> fill <span class=\"operator\">=</span> cut<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  geom_bar<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-18-1.png\"><!-- --></p>\n<ul>\n<li>position을 이용한 막대그래프(특정 그래프 모양에만 적용된다)</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>diamonds<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> color<span class=\"punctuation\">,</span> fill <span class=\"operator\">=</span> cut<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  geom_bar<span class=\"punctuation\">(</span>position<span class=\"operator\">=</span><span class=\"string\">&quot;dodge&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-19-1.png\"><!-- --></p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>diamonds<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> color<span class=\"punctuation\">,</span> fill <span class=\"operator\">=</span> cut<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  geom_bar<span class=\"punctuation\">(</span>position<span class=\"operator\">=</span><span class=\"string\">&quot;fill&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-20-1.png\"><!-- --></p>\n<ul>\n<li>선 그래프에 2개 범주 내용 반영</li>\n<li>데이터 불러오기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">leisure <span class=\"operator\">&lt;-</span> read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;data/leisure.csv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">str<span class=\"punctuation\">(</span>leisure<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## &#x27;data.frame&#x27;:\t200 obs. of  3 variables:</span><br><span class=\"line\">##  $ age    : int  2 2 3 3 4 4 5 5 6 6 ...</span><br><span class=\"line\">##  $ sex    : chr  &quot;female&quot; &quot;male&quot; &quot;female&quot; &quot;male&quot; ...</span><br><span class=\"line\">##  $ expense: num  25.8 21 30 16.3 25.7 ...</span><br></pre></td></tr></table></figure>\n<ul>\n<li>연령별 교양오락지출비 그래프 그리기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data<span class=\"operator\">=</span>leisure<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x<span class=\"operator\">=</span>age<span class=\"punctuation\">,</span> y<span class=\"operator\">=</span>expense<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> sex<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  geom_line<span class=\"punctuation\">(</span>size<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"punctuation\">,</span> linetype<span class=\"operator\">=</span><span class=\"number\">2</span><span class=\"punctuation\">)</span>   <span class=\"comment\">#사이즈, 선 타입 조절</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-22-1.png\"><!-- --></p>\n<h3 id=\"막대그래프의-순서-변경\"><a href=\"#막대그래프의-순서-변경\" class=\"headerlink\" title=\"막대그래프의 순서 변경\"></a>막대그래프의 순서 변경</h3><ul>\n<li>reorder()</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1 <span class=\"operator\">&lt;-</span> read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;data/mpg1.csv&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                 stringsAsFactors <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#데이터 가공</span></span><br><span class=\"line\">drv_hwy <span class=\"operator\">&lt;-</span> mpg1 <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  group_by<span class=\"punctuation\">(</span>drv<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  summarise<span class=\"punctuation\">(</span>mean_hwy <span class=\"operator\">=</span> mean<span class=\"punctuation\">(</span>hwy<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 기본 그래프</span></span><br><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data <span class=\"operator\">=</span> drv_hwy<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> drv<span class=\"punctuation\">,</span> </span><br><span class=\"line\">                           y <span class=\"operator\">=</span> mean_hwy<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  geom_col<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-24-1.png\"><!-- --></p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#오름차순</span></span><br><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data <span class=\"operator\">=</span> drv_hwy<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> reorder<span class=\"punctuation\">(</span>drv<span class=\"punctuation\">,</span> mean_hwy<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span>  </span><br><span class=\"line\">                           y <span class=\"operator\">=</span> mean_hwy<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  geom_col<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-24-2.png\"><!-- --></p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#내림차순</span></span><br><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data <span class=\"operator\">=</span> drv_hwy<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> reorder<span class=\"punctuation\">(</span>drv<span class=\"punctuation\">,</span> <span class=\"operator\">-</span>mean_hwy<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                           y <span class=\"operator\">=</span> mean_hwy<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  geom_col<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># 그래프와 축에 이름 붙이기</span></span><br><span class=\"line\">  labs<span class=\"punctuation\">(</span>            </span><br><span class=\"line\">    title <span class=\"operator\">=</span> <span class=\"string\">&quot;그래프 제목을 입력하세요&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    subtitle <span class=\"operator\">=</span> <span class=\"string\">&quot;그래프 소제목을 입력하세요&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    x <span class=\"operator\">=</span> <span class=\"string\">&quot;x변수명을 입력하세요&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    y <span class=\"operator\">=</span> <span class=\"string\">&quot;y변수명을 입력하세요&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    caption <span class=\"operator\">=</span> <span class=\"string\">&quot;데이터 출처를 입력하세요&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-24-3.png\"><!-- --></p>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/06/22/day0622_1/R_logo.jpg","excerpt":"<p>ggplot2를 이용한 R 시각화</p>","more":"<p>ggplot2를 이용한 R 시각화</p>\n<!-- excerpt -->\n\n<h1 id=\"9장\"><a href=\"#9장\" class=\"headerlink\" title=\"9장\"></a>9장</h1><h2 id=\"ggplot2-강의\"><a href=\"#ggplot2-강의\" class=\"headerlink\" title=\"ggplot2 강의\"></a>ggplot2 강의</h2><ul>\n<li>데이터 불러오기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>readxl<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>ggplot2<span class=\"punctuation\">)</span></span><br><span class=\"line\">who_disease <span class=\"operator\">&lt;-</span> read_xlsx<span class=\"punctuation\">(</span><span class=\"string\">&quot;data/who_disease.xlsx&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>기본 시각화</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># x축에 year, y축에 cases 라는 값을 넣겠다.</span></span><br><span class=\"line\">ggplot<span class=\"punctuation\">(</span>who_disease<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> year<span class=\"punctuation\">,</span> y <span class=\"operator\">=</span> cases<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  <span class=\"comment\">#그래프 종류</span></span><br><span class=\"line\">  geom_point<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-2-1.png\"><!-- --></p>\n<ul>\n<li>옵션 변화 주기(투명도)</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>who_disease<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> year<span class=\"punctuation\">,</span> y <span class=\"operator\">=</span> cases<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  <span class=\"comment\">#그래프 종류</span></span><br><span class=\"line\">  geom_point<span class=\"punctuation\">(</span>alpha <span class=\"operator\">=</span> <span class=\"number\">0.1</span><span class=\"punctuation\">)</span>  <span class=\"comment\"># alpha 는 투명도</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-3-1.png\"><!-- --></p>\n<ul>\n<li>옵션 색상 변화</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>who_disease<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> year<span class=\"punctuation\">,</span> y <span class=\"operator\">=</span> cases<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  <span class=\"comment\">#그래프 종류</span></span><br><span class=\"line\">  geom_point<span class=\"punctuation\">(</span>alpha <span class=\"operator\">=</span> <span class=\"number\">0.1</span><span class=\"punctuation\">,</span> colour <span class=\"operator\">=</span> <span class=\"string\">&quot;#A243F5&quot;</span><span class=\"punctuation\">)</span>  <span class=\"comment\"># &quot;#A243F5&quot; 색상으로 변경</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-4-1.png\"><!-- --></p>\n<ul>\n<li>colour 입력 위치<ul>\n<li>geom_point(colour&#x3D;”red”)       -&gt;  색상명 작성</li>\n<li>aes(x, y, colour &#x3D; 컬럼이름)   -&gt;  aes 안에는 컬럼 이름작성</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## &#x27;data.frame&#x27;:\t150 obs. of  5 variables:</span><br><span class=\"line\">##  $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...</span><br><span class=\"line\">##  $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...</span><br><span class=\"line\">##  $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...</span><br><span class=\"line\">##  $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...</span><br><span class=\"line\">##  $ Species     : Factor w/ 3 levels &quot;setosa&quot;,&quot;versicolor&quot;,..: 1 1 1 1 1 1 1 1 1 1 ...</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> Sepal.Length<span class=\"punctuation\">,</span></span><br><span class=\"line\">                 y <span class=\"operator\">=</span> Sepal.Width<span class=\"punctuation\">,</span></span><br><span class=\"line\">                 colour <span class=\"operator\">=</span> Species<span class=\"punctuation\">,</span></span><br><span class=\"line\">                 size <span class=\"operator\">=</span> Petal.Length<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  geom_point<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-5-1.png\"><!-- --></p>\n<ul>\n<li><p>원하는 색상값 참조 사이트</p>\n<ul>\n<li><a href=\"https://color.adobe.com/ko/create/color-wheel\">https://color.adobe.com/ko/create/color-wheel</a></li>\n</ul>\n</li>\n<li><p>산점도 : x축 수치형 연속형 데이터, y축 수치형 연속형 데이터</p>\n</li>\n<li><p>연속형 데이터 : 숫자 같이 연속하는 데이터</p>\n</li>\n<li><p>이산형 데이터 : 문자 같이 연속하지 않는 데이터</p>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>who_disease<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> year<span class=\"punctuation\">,</span> y <span class=\"operator\">=</span> cases<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  <span class=\"comment\">#그래프 종류</span></span><br><span class=\"line\">  geom_point<span class=\"punctuation\">(</span>alpha <span class=\"operator\">=</span> <span class=\"number\">0.1</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-6-1.png\"><!-- --></p>\n<ul>\n<li>커널 밀도 곡선</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data<span class=\"operator\">=</span>diamonds<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x<span class=\"operator\">=</span>carat<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span></span><br><span class=\"line\">  geom_density<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-7-1.png\"><!-- --></p>\n<ul>\n<li>상자 그래프<ul>\n<li>전체 데이터 기준의 그림</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data<span class=\"operator\">=</span>diamonds<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"punctuation\">,</span> y<span class=\"operator\">=</span>price<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span>  <span class=\"comment\">#통상 x값에 1을 부여한다</span></span><br><span class=\"line\">  geom_boxplot<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-8-1.png\"><!-- --></p>\n<ul>\n<li>범주형 변수 기준의 그림</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data<span class=\"operator\">=</span>diamonds<span class=\"punctuation\">,</span>aes<span class=\"punctuation\">(</span>x<span class=\"operator\">=</span>cut<span class=\"punctuation\">,</span>y<span class=\"operator\">=</span>price<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span></span><br><span class=\"line\">  geom_boxplot<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-9-1.png\"><!-- --></p>\n<ul>\n<li>선 그래프<ul>\n<li>속도에 따른 제동거리의 그래프</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data<span class=\"operator\">=</span>cars<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x<span class=\"operator\">=</span>speed<span class=\"punctuation\">,</span>y<span class=\"operator\">=</span>dist<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span></span><br><span class=\"line\">  geom_line<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-10-1.png\"><!-- --></p>\n<ul>\n<li>실업자수 변화 그래프</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data<span class=\"operator\">=</span>economics<span class=\"punctuation\">,</span>aes<span class=\"punctuation\">(</span>x<span class=\"operator\">=</span>date<span class=\"punctuation\">,</span>y<span class=\"operator\">=</span>unemploy<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span></span><br><span class=\"line\">  geom_line<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-11-1.png\"><!-- --></p>\n<ul>\n<li>개인 저축률 변화</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data<span class=\"operator\">=</span>economics<span class=\"punctuation\">,</span>aes<span class=\"punctuation\">(</span>x<span class=\"operator\">=</span>date<span class=\"punctuation\">,</span> y<span class=\"operator\">=</span>psavert<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span></span><br><span class=\"line\">  geom_line<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-12-1.png\"><!-- --></p>\n<ul>\n<li>두 선 그래프를 연결해서 그리기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span></span><br><span class=\"line\">  geom_line<span class=\"punctuation\">(</span>data<span class=\"operator\">=</span>economics<span class=\"punctuation\">,</span>aes<span class=\"punctuation\">(</span>x<span class=\"operator\">=</span>date<span class=\"punctuation\">,</span>y<span class=\"operator\">=</span>uempmed<span class=\"punctuation\">,</span>color<span class=\"operator\">=</span><span class=\"string\">&quot;red&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span></span><br><span class=\"line\">  geom_line<span class=\"punctuation\">(</span>data<span class=\"operator\">=</span>economics<span class=\"punctuation\">,</span>aes<span class=\"punctuation\">(</span>x<span class=\"operator\">=</span>date<span class=\"punctuation\">,</span>y<span class=\"operator\">=</span>psavert<span class=\"punctuation\">,</span>color<span class=\"operator\">=</span><span class=\"string\">&quot;blue&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-13-1.png\"><!-- --></p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 빨간색이 주당평균실업기간</span></span><br><span class=\"line\"><span class=\"comment\"># 파란색이 개인저축률</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>히스토그램<ul>\n<li>질병데이터<br>region &#x3D; AMR, year &#x3D; 1980, disease &#x3D; 백일해(pertussis)<br>cases &gt; 0</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>dplyr<span class=\"punctuation\">)</span></span><br><span class=\"line\">str<span class=\"punctuation\">(</span>who_disease<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## tibble [43,262 × 6] (S3: tbl_df/tbl/data.frame)</span><br><span class=\"line\">##  $ region     : chr [1:43262] &quot;EMR&quot; &quot;EUR&quot; &quot;AFR&quot; &quot;EUR&quot; ...</span><br><span class=\"line\">##  $ countryCode: chr [1:43262] &quot;AFG&quot; &quot;ALB&quot; &quot;DZA&quot; &quot;AND&quot; ...</span><br><span class=\"line\">##  $ country    : chr [1:43262] &quot;Afghanistan&quot; &quot;Albania&quot; &quot;Algeria&quot; &quot;Andorra&quot; ...</span><br><span class=\"line\">##  $ disease    : chr [1:43262] &quot;measles&quot; &quot;measles&quot; &quot;measles&quot; &quot;measles&quot; ...</span><br><span class=\"line\">##  $ year       : num [1:43262] 2016 2016 2016 2016 2016 ...</span><br><span class=\"line\">##  $ cases      : num [1:43262] 638 17 41 0 53 0 0 2 99 27 ...</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">who_disease <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  filter<span class=\"punctuation\">(</span>region <span class=\"operator\">==</span> <span class=\"string\">&#x27;AMR&#x27;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">         year <span class=\"operator\">==</span> <span class=\"number\">1980</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">         disease <span class=\"operator\">==</span> <span class=\"string\">&#x27;pertussis&#x27;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">         cases <span class=\"operator\">&gt;</span> <span class=\"number\">0</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> data2</span><br></pre></td></tr></table></figure>\n<ul>\n<li>data2 시각화(histogram)</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data2<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> cases<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  <span class=\"comment\"># 빨간색으로 채운다.</span></span><br><span class=\"line\">  geom_histogram<span class=\"punctuation\">(</span>fill <span class=\"operator\">=</span> <span class=\"string\">&quot;red&quot;</span><span class=\"punctuation\">)</span>    <span class=\"comment\"># 분포가 어느 지역에 몰려 있는지에 집중</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-15-1.png\"><!-- --></p>\n<ul>\n<li>data2 시각화(col)</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data2<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span>country<span class=\"punctuation\">,</span> y <span class=\"operator\">=</span>cases<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  geom_col<span class=\"punctuation\">(</span>fill <span class=\"operator\">=</span> <span class=\"string\">&quot;blue&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  <span class=\"comment\"># 옵션(가로로 그래프 나타내기)</span></span><br><span class=\"line\">  coord_flip<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-16-1.png\"><!-- --></p>\n<h2 id=\"ggplot-정교하게-그리기\"><a href=\"#ggplot-정교하게-그리기\" class=\"headerlink\" title=\"ggplot() 정교하게 그리기\"></a>ggplot() 정교하게 그리기</h2><ul>\n<li>산점도 그리기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data <span class=\"operator\">=</span> diamonds<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> carat<span class=\"punctuation\">,</span> </span><br><span class=\"line\">                            y <span class=\"operator\">=</span> price<span class=\"punctuation\">,</span> </span><br><span class=\"line\">                            col <span class=\"operator\">=</span> cut<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  geom_point<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-17-1.png\"><!-- --></p>\n<ul>\n<li>막대그래프에 2개 범주 내용 반영하기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>diamonds<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> color<span class=\"punctuation\">,</span> fill <span class=\"operator\">=</span> cut<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  geom_bar<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-18-1.png\"><!-- --></p>\n<ul>\n<li>position을 이용한 막대그래프(특정 그래프 모양에만 적용된다)</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>diamonds<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> color<span class=\"punctuation\">,</span> fill <span class=\"operator\">=</span> cut<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  geom_bar<span class=\"punctuation\">(</span>position<span class=\"operator\">=</span><span class=\"string\">&quot;dodge&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-19-1.png\"><!-- --></p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>diamonds<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> color<span class=\"punctuation\">,</span> fill <span class=\"operator\">=</span> cut<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  geom_bar<span class=\"punctuation\">(</span>position<span class=\"operator\">=</span><span class=\"string\">&quot;fill&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-20-1.png\"><!-- --></p>\n<ul>\n<li>선 그래프에 2개 범주 내용 반영</li>\n<li>데이터 불러오기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">leisure <span class=\"operator\">&lt;-</span> read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;data/leisure.csv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">str<span class=\"punctuation\">(</span>leisure<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## &#x27;data.frame&#x27;:\t200 obs. of  3 variables:</span><br><span class=\"line\">##  $ age    : int  2 2 3 3 4 4 5 5 6 6 ...</span><br><span class=\"line\">##  $ sex    : chr  &quot;female&quot; &quot;male&quot; &quot;female&quot; &quot;male&quot; ...</span><br><span class=\"line\">##  $ expense: num  25.8 21 30 16.3 25.7 ...</span><br></pre></td></tr></table></figure>\n<ul>\n<li>연령별 교양오락지출비 그래프 그리기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data<span class=\"operator\">=</span>leisure<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x<span class=\"operator\">=</span>age<span class=\"punctuation\">,</span> y<span class=\"operator\">=</span>expense<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> sex<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  geom_line<span class=\"punctuation\">(</span>size<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"punctuation\">,</span> linetype<span class=\"operator\">=</span><span class=\"number\">2</span><span class=\"punctuation\">)</span>   <span class=\"comment\">#사이즈, 선 타입 조절</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-22-1.png\"><!-- --></p>\n<h3 id=\"막대그래프의-순서-변경\"><a href=\"#막대그래프의-순서-변경\" class=\"headerlink\" title=\"막대그래프의 순서 변경\"></a>막대그래프의 순서 변경</h3><ul>\n<li>reorder()</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1 <span class=\"operator\">&lt;-</span> read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;data/mpg1.csv&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                 stringsAsFactors <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#데이터 가공</span></span><br><span class=\"line\">drv_hwy <span class=\"operator\">&lt;-</span> mpg1 <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  group_by<span class=\"punctuation\">(</span>drv<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  summarise<span class=\"punctuation\">(</span>mean_hwy <span class=\"operator\">=</span> mean<span class=\"punctuation\">(</span>hwy<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 기본 그래프</span></span><br><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data <span class=\"operator\">=</span> drv_hwy<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> drv<span class=\"punctuation\">,</span> </span><br><span class=\"line\">                           y <span class=\"operator\">=</span> mean_hwy<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  geom_col<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-24-1.png\"><!-- --></p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#오름차순</span></span><br><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data <span class=\"operator\">=</span> drv_hwy<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> reorder<span class=\"punctuation\">(</span>drv<span class=\"punctuation\">,</span> mean_hwy<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span>  </span><br><span class=\"line\">                           y <span class=\"operator\">=</span> mean_hwy<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  geom_col<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-24-2.png\"><!-- --></p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#내림차순</span></span><br><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data <span class=\"operator\">=</span> drv_hwy<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> reorder<span class=\"punctuation\">(</span>drv<span class=\"punctuation\">,</span> <span class=\"operator\">-</span>mean_hwy<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                           y <span class=\"operator\">=</span> mean_hwy<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  geom_col<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># 그래프와 축에 이름 붙이기</span></span><br><span class=\"line\">  labs<span class=\"punctuation\">(</span>            </span><br><span class=\"line\">    title <span class=\"operator\">=</span> <span class=\"string\">&quot;그래프 제목을 입력하세요&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    subtitle <span class=\"operator\">=</span> <span class=\"string\">&quot;그래프 소제목을 입력하세요&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    x <span class=\"operator\">=</span> <span class=\"string\">&quot;x변수명을 입력하세요&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    y <span class=\"operator\">=</span> <span class=\"string\">&quot;y변수명을 입력하세요&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    caption <span class=\"operator\">=</span> <span class=\"string\">&quot;데이터 출처를 입력하세요&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0622_1/unnamed-chunk-24-3.png\"><!-- --></p>\n"},{"title":"8장","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"thumbnailImage":"R_logo.jpg","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-06-23T08:31:30.000Z","_content":"\n\n시각화, 교차분석\n<!-- excerpt -->\n  \n  \n# 8장  \n  \n  \n## 통계\n- 기술통계 : 평균, 최솟값, 최댓값\n- 추론통계 : 변수 간의 관계를 파악 / 새로운 사실을 추정  \n\n  + (중요)평균차이 검정\n    - 수치형 데이터 + 범주형 데이터\n    - 가설검정 : 각 그룹간의 평균의 차이를 검정\n    ex) '남자'의 평균 키와 '여자'의 평균 키는 \"차이\"가 있을 것이다.\n    - '남자'의 평균 키가 '여자'의 평균 키보다 크다. 라는 결론을 내리려면  \n    이번 측정의 결과가 우연한 측정이 아니라는 것을 통계적으로 검정해야된다.  \n    ex) '여자' 배구선수 평균 키는 '남자'의 평균 키보다 큰데?  \n    '여자' 배구선수의 측정은 우연한 측정이라서 결과에 사용할 수 없음\n  \n  \n  \n  + 교차분석 (= 빈도분석)\n    - 범주형 데이터\n    - 가설검정 : 각 범주별 빈도를 활용해서 관계성을 검정\n    ex) '아파트의 크기'는 'TV의 크기'와 관계가 있을 것이다.\n      + '아파트의 크기' = '소형 아파트','대형 아파트'\n      + 'TV의 크기' = '소형 TV','대형 TV'\n  \n  + 상관관계 분석\n    - 수치형 데이터\n    - -1 <= r <= 1 로 두 변수간의 상관관계를 의미한다.\n      + 절댓값이 1에 가까울 수록 완전 정의 관계, 역의 관계이다.\n      + 절댓값이 0에 가까울 수록 상관관계가 거의 없다고 해석한다.\n  \n  \n  + (중요)단순회귀분석 : 인과관계 분석\n    - y = ax + b\n    - ex1) 기온, 판매량\n    - 가설검정\n      + 기온(독립변수=x)이 판매량(종속변수=y)에 긍정적 or 부정적 영향을 주고 있을 것이다.  \n      \n    - ex2) 월급, 외식횟수\n    - 가설검정\n      + 월급(독립변수=x)이 증가하면 외식횟수(종속변수=y)가 증가할 것 이다.  \n\n## 통계 검정\n### 가설\n- Hypothesis\n---> 공부 방법 : 선행연구, 해당 분석방법의 가설 설정 예시 참고\n\n- 연구 -> 내가 궁금한 것을 찾는 것\n  + 남자의 평균 키와 여자의 평균 키는 차이가 있을 것인가?\n- 귀무가설 : 두 그룹간의 평균 차이가 없다.\n- 대립가설 : 두 그룹간의 평균 차이가 있다. (보통 내가 궁금한 것)  \n- 유의수준 : 오류를 범할 확률\n- 가설검정에서 인정하는 유의수준(<==> 신뢰수준)\n  + 5%, 1%, 0.1%, 또는 10%(각 분야마다 기준이 달라진다)\n\n\n- 오차범위\n  + A후보의 44%\n  + B후보의 42%\n    - 오차범위 안에 있다 -> 다시 조사하면 바뀔 수 있다.\n    - 오차범위 밖에 있다 -> 바뀔 수 없다.\n  \n  \n- 어떻게 데이터를 입력하는지 확인\n- p-value, 유의수준 0.05 이상 : 귀무가설, 0.05 이내 --> 대립가설\n  \n  \n- 데이터 불러오기\n\n```r\nmpg1 <- read.csv(\"mpg1.csv\", stringsAsFactors = FALSE)\nstr(mpg1)\n```\n\n```\n## 'data.frame':\t234 obs. of  5 variables:\n##  $ manufacturer: chr  \"audi\" \"audi\" \"audi\" \"audi\" ...\n##  $ trans       : chr  \"auto\" \"manual\" \"manual\" \"auto\" ...\n##  $ drv         : chr  \"f\" \"f\" \"f\" \"f\" ...\n##  $ cty         : int  18 21 20 21 16 18 18 18 16 20 ...\n##  $ hwy         : int  29 29 31 30 26 26 27 26 25 28 ...\n```\n\n- 시각화\n\n```r\nlibrary(ggplot2)\nggplot(mpg1, aes(x = trans, y = cty)) +\n  # trans 변수는 chr(문자형)이고, cty 변수는 int(정수형)이므로 boxplot 그래프를 쓴다.\n  geom_boxplot()\n```\n\n![](/images/0623/unnamed-chunk-2-1.png)<!-- -->\n\n- t.test 검정\n  + 귀무가설 : auto와 manual의 cty 평균은 차이가 없다.\n  + 대립가설 : auto와 manual의 cty 평균은 차이가 있다.\n\n```r\nt.test(data = mpg1, cty ~ trans)\n```\n\n```\n## \n## \tWelch Two Sample t-test\n## \n## data:  cty by trans\n## t = -4.5375, df = 132.32, p-value = 1.263e-05\n## alternative hypothesis: true difference in means between group auto and group manual is not equal to 0\n## 95 percent confidence interval:\n##  -3.887311 -1.527033\n## sample estimates:\n##   mean in group auto mean in group manual \n##             15.96815             18.67532\n```\n\n```r\n            # 종속변수 ~ 독립변수\n            # 반응변수 ~ 설명변수\n            #     y          x\n```\n  \n  - 'p-value = 1.263e-05' 에서 p-value 값이 유의수준이 0.05보다 작으므로,  \n  \n  이 결과는 대립가설인 'auto와 manual의 cty 평균은 차이가 있다.' 로 설명할 수 있다.\n  \n- 두 그룹의 평균 차이 검정\n  + 사전 필수 검정\n  + 등분산 검정\n    + 두 그룹간의 분산이 비슷하면 --> t.test (모수 검정)\n    + 두 그룹간의 분산이 다르면   --> 비모수 검정\n  - 보통 대립가설에 알고 싶은 결과를 대입하지만, <br>등분산 검정에서의 귀무가설, 대립가설은 정의된 것임\n    + 귀무가설 : 두 그룹간의 분산이 비슷하다\n      - 등분산 검정 에서 p-value > 0.05 되어야 t.test가 가능\n    + 대립가설 : 두 그룹간의 분산이 다르다\n    \n  \n\n```r\nvar.test(data = mpg1, cty~trans)\n```\n\n```\n## \n## \tF test to compare two variances\n## \n## data:  cty by trans\n## F = 0.73539, num df = 156, denom df = 76, p-value = 0.1101\n## alternative hypothesis: true ratio of variances is not equal to 1\n## 95 percent confidence interval:\n##  0.4912917 1.0719468\n## sample estimates:\n## ratio of variances \n##          0.7353887\n```\n\n\n```r\nggplot(mpg1, aes(x = cty, fill = trans)) +\n  # geom_histogram() +\n  geom_density(alpha = 0.1)\n```\n\n![](/images/0623/unnamed-chunk-5-1.png)<!-- -->\n\n### 교차 분석\n- 범주형 변수들이 관계가 있다는 것을 검정\n- 비율에 차이가 있는지 검정\n- 교차분석 검정은 chisq.test() 함수로 진행\n  + 귀무가설 : trans에 따라 drv(4, f, r)의 (비율)차이가 없다.\n  + 대립가설 : trans에 따라 drv의 차이가 있다.\n\n<br>  \n\n- 빈도표 / 비율\n\n```r\ntable(mpg1$trans, mpg1$drv)   # 교차분석\n```\n\n```\n##         \n##           4  f  r\n##   auto   75 65 17\n##   manual 28 41  8\n```\n\n- 비율\n\n```r\nprop.table(table(mpg1$trans, mpg1$drv), 1)\n```\n\n```\n##         \n##                  4         f         r\n##   auto   0.4777070 0.4140127 0.1082803\n##   manual 0.3636364 0.5324675 0.1038961\n```\n\n- auto 4륜 구동(4)인 47.8%\n- manual 전륜 구동(f) 53.2% 가장 많음\n- 별 차이 없어보이는데.. 실제 통계적으로 차이가 있는지 검정\n  + 귀무가설 : trans에 따라 drv(4, f, r)의 (비율)차이가 없다.\n  + 대립가설 : trans에 따라 drv의 차이가 있다.\n \n\n```r\nchisq.test(mpg1$trans, mpg1$drv)\n```\n\n```\n## \n## \tPearson's Chi-squared test\n## \n## data:  mpg1$trans and mpg1$drv\n## X-squared = 3.1368, df = 2, p-value = 0.2084\n```\n  - p-value 값이 0.05 보다 크므로 귀무가설이 성립된다.\n  - 결론 : \"trans에 따라 drv(4, f, r)의 (비율)차이가 없다.\"\n<br>\n\n### 상관관계분석\n- 변수들의 상관관계를 증명()\n- cty와 hwy는 상관관계가 있는지를 증명\n- 상관관계분석은 cor.test() 함수로 진행\n  + 귀무가설 : cty와 hwy는 상관관계가 없다.\n  + 대립가설 : cty와 hwy는 상관관계가 있다.\n\n```r\nmpg1 <-read.csv(\"mpg1.csv\", stringsAsFactors = FALSE)\ncor.test(mpg1$cty, mpg1$hwy)    # 상관관계분석\n```\n\n```\n## \n## \tPearson's product-moment correlation\n## \n## data:  mpg1$cty and mpg1$hwy\n## t = 49.585, df = 232, p-value < 2.2e-16\n## alternative hypothesis: true correlation is not equal to 0\n## 95 percent confidence interval:\n##  0.9433129 0.9657663\n## sample estimates:\n##       cor \n## 0.9559159\n```\n\n- 'p-value < 2.2e-16' 에서 p-value 값이 0.05보다 작으므로 대립가설이 성립한다.\n- cor(상관관계계수) = 0.9559159 이므로 상관관계가 1에 가까워서 매우 높다.\n- 결론 : \"cty와 hwy는 유의미하게 매우 높은 상관관계에 있다.\"\n\n\n### 회귀분석\n- 기초통계 : 특정한 결과에 영향을 주는 주 요인이 무엇인지 찾는 것\n- 회귀분석과 종료\n  + 1세대 회귀 방법론 : 다항회귀분석, 다중회귀분석, 포아송 회귀분석, etc\n  + 2세대 회귀 방법론 : 구조방정식\n\n- 귀무가설, 대립가설 존재\n  + 귀무가설 : x(=독립변수)가 y(=종속변수)에 영향을 주지 않는다\n  + 대립가설 : x가 y에 영향을 준다\n  \n- lm(종속변수 ~ 독립변수, data)\n  + p-value\n\n\n```r\nRA <- lm(data=mtcars, mpg ~ disp)  # 종속변수 ~ 독립변수+독립변수+...\nsummary(RA)\n```\n\n```\n## \n## Call:\n## lm(formula = mpg ~ disp, data = mtcars)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -4.8922 -2.2022 -0.9631  1.6272  7.2305 \n## \n## Coefficients:\n##              Estimate Std. Error t value Pr(>|t|)    \n## (Intercept) 29.599855   1.229720  24.070  < 2e-16 ***\n## disp        -0.041215   0.004712  -8.747 9.38e-10 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 3.251 on 30 degrees of freedom\n## Multiple R-squared:  0.7183,\tAdjusted R-squared:  0.709 \n## F-statistic: 76.51 on 1 and 30 DF,  p-value: 9.38e-10\n```\n\n```r\n# 맨 밑의 p-value 값은 전체식에 해당하는 값이다.\n# 여러 변수들 중 'Pr(>|t|)'값이(=p-value) 0.05 이상이면 그 변수는 제외한다.\n```\n\n\n- 머신러닝, 인공지능\n  + 주 목적은 예측\n  + y = ax + b\n---\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 29.599855   1.229720  24.070  < 2e-16 ***\ndisp        -0.041215   0.004712  -8.747 9.38e-10 ***\nvar1                                     0.10\nvar2                                     9.38e-10\nvar3                                     3.14e-9\n---\n\n\nResidual standard error: 3.251 on 30 degrees of freedom\nMultiple R-squared:  0.7183,\tAdjusted R-squared:  0.709 \nF-statistic: 76.51 on 1 and 30 DF,  p-value: 9.38e-10\n\n- Estimate값 해석 : y(mpg) = 29.599855 - 0.041215 x disp\n  + 우하향 하는 그래프\n\n- 에서 ANOVA (분산분석) 을 통해서 식1, 식2, 식3, ... 을 해서 괜찮은 식을 도출해야한다\n- p-value 값은 항상 0.05 미만\n식1 : y = disp + var1 + var2 + var3\n식2 : y = disp + var1 + var2\n식3 : y = disp + var1\n\n- Residual standard error: 3.251 on 30 degrees of freedom\nMultiple R-squared:  0.7183,\tAdjusted R-squared:  0.709 에서\n- R-squared (결정계수) = 설명력 = 0 ~ 1\n- 1로 수렴할수록 설명력이 좋다\n- 'Multiple R-squared:   0.7183' 의 의미는 해당 변수들이 71.83% 만큼 영향을 준다는 뜻\n<br>\n\n### 회귀분석에서 고려해야할 것들\n1. 전체식의 p-value 값이 0.05 보다 작은가?\n2. ANOVA를 통해서 변하는 p-value 값이 0.05 미만인가를 체크한다.\n3. R-squared(결정계수)가 1에 가까운 변수 식을 찾는다.\n","source":"_posts/day0623.md","raw":"---\ntitle: \"8장\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: R studio\nclearReading: true\nthumbnailImage: R_logo.jpg\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-06-23 17:31:30'\n---\n\n\n시각화, 교차분석\n<!-- excerpt -->\n  \n  \n# 8장  \n  \n  \n## 통계\n- 기술통계 : 평균, 최솟값, 최댓값\n- 추론통계 : 변수 간의 관계를 파악 / 새로운 사실을 추정  \n\n  + (중요)평균차이 검정\n    - 수치형 데이터 + 범주형 데이터\n    - 가설검정 : 각 그룹간의 평균의 차이를 검정\n    ex) '남자'의 평균 키와 '여자'의 평균 키는 \"차이\"가 있을 것이다.\n    - '남자'의 평균 키가 '여자'의 평균 키보다 크다. 라는 결론을 내리려면  \n    이번 측정의 결과가 우연한 측정이 아니라는 것을 통계적으로 검정해야된다.  \n    ex) '여자' 배구선수 평균 키는 '남자'의 평균 키보다 큰데?  \n    '여자' 배구선수의 측정은 우연한 측정이라서 결과에 사용할 수 없음\n  \n  \n  \n  + 교차분석 (= 빈도분석)\n    - 범주형 데이터\n    - 가설검정 : 각 범주별 빈도를 활용해서 관계성을 검정\n    ex) '아파트의 크기'는 'TV의 크기'와 관계가 있을 것이다.\n      + '아파트의 크기' = '소형 아파트','대형 아파트'\n      + 'TV의 크기' = '소형 TV','대형 TV'\n  \n  + 상관관계 분석\n    - 수치형 데이터\n    - -1 <= r <= 1 로 두 변수간의 상관관계를 의미한다.\n      + 절댓값이 1에 가까울 수록 완전 정의 관계, 역의 관계이다.\n      + 절댓값이 0에 가까울 수록 상관관계가 거의 없다고 해석한다.\n  \n  \n  + (중요)단순회귀분석 : 인과관계 분석\n    - y = ax + b\n    - ex1) 기온, 판매량\n    - 가설검정\n      + 기온(독립변수=x)이 판매량(종속변수=y)에 긍정적 or 부정적 영향을 주고 있을 것이다.  \n      \n    - ex2) 월급, 외식횟수\n    - 가설검정\n      + 월급(독립변수=x)이 증가하면 외식횟수(종속변수=y)가 증가할 것 이다.  \n\n## 통계 검정\n### 가설\n- Hypothesis\n---> 공부 방법 : 선행연구, 해당 분석방법의 가설 설정 예시 참고\n\n- 연구 -> 내가 궁금한 것을 찾는 것\n  + 남자의 평균 키와 여자의 평균 키는 차이가 있을 것인가?\n- 귀무가설 : 두 그룹간의 평균 차이가 없다.\n- 대립가설 : 두 그룹간의 평균 차이가 있다. (보통 내가 궁금한 것)  \n- 유의수준 : 오류를 범할 확률\n- 가설검정에서 인정하는 유의수준(<==> 신뢰수준)\n  + 5%, 1%, 0.1%, 또는 10%(각 분야마다 기준이 달라진다)\n\n\n- 오차범위\n  + A후보의 44%\n  + B후보의 42%\n    - 오차범위 안에 있다 -> 다시 조사하면 바뀔 수 있다.\n    - 오차범위 밖에 있다 -> 바뀔 수 없다.\n  \n  \n- 어떻게 데이터를 입력하는지 확인\n- p-value, 유의수준 0.05 이상 : 귀무가설, 0.05 이내 --> 대립가설\n  \n  \n- 데이터 불러오기\n\n```r\nmpg1 <- read.csv(\"mpg1.csv\", stringsAsFactors = FALSE)\nstr(mpg1)\n```\n\n```\n## 'data.frame':\t234 obs. of  5 variables:\n##  $ manufacturer: chr  \"audi\" \"audi\" \"audi\" \"audi\" ...\n##  $ trans       : chr  \"auto\" \"manual\" \"manual\" \"auto\" ...\n##  $ drv         : chr  \"f\" \"f\" \"f\" \"f\" ...\n##  $ cty         : int  18 21 20 21 16 18 18 18 16 20 ...\n##  $ hwy         : int  29 29 31 30 26 26 27 26 25 28 ...\n```\n\n- 시각화\n\n```r\nlibrary(ggplot2)\nggplot(mpg1, aes(x = trans, y = cty)) +\n  # trans 변수는 chr(문자형)이고, cty 변수는 int(정수형)이므로 boxplot 그래프를 쓴다.\n  geom_boxplot()\n```\n\n![](/images/0623/unnamed-chunk-2-1.png)<!-- -->\n\n- t.test 검정\n  + 귀무가설 : auto와 manual의 cty 평균은 차이가 없다.\n  + 대립가설 : auto와 manual의 cty 평균은 차이가 있다.\n\n```r\nt.test(data = mpg1, cty ~ trans)\n```\n\n```\n## \n## \tWelch Two Sample t-test\n## \n## data:  cty by trans\n## t = -4.5375, df = 132.32, p-value = 1.263e-05\n## alternative hypothesis: true difference in means between group auto and group manual is not equal to 0\n## 95 percent confidence interval:\n##  -3.887311 -1.527033\n## sample estimates:\n##   mean in group auto mean in group manual \n##             15.96815             18.67532\n```\n\n```r\n            # 종속변수 ~ 독립변수\n            # 반응변수 ~ 설명변수\n            #     y          x\n```\n  \n  - 'p-value = 1.263e-05' 에서 p-value 값이 유의수준이 0.05보다 작으므로,  \n  \n  이 결과는 대립가설인 'auto와 manual의 cty 평균은 차이가 있다.' 로 설명할 수 있다.\n  \n- 두 그룹의 평균 차이 검정\n  + 사전 필수 검정\n  + 등분산 검정\n    + 두 그룹간의 분산이 비슷하면 --> t.test (모수 검정)\n    + 두 그룹간의 분산이 다르면   --> 비모수 검정\n  - 보통 대립가설에 알고 싶은 결과를 대입하지만, <br>등분산 검정에서의 귀무가설, 대립가설은 정의된 것임\n    + 귀무가설 : 두 그룹간의 분산이 비슷하다\n      - 등분산 검정 에서 p-value > 0.05 되어야 t.test가 가능\n    + 대립가설 : 두 그룹간의 분산이 다르다\n    \n  \n\n```r\nvar.test(data = mpg1, cty~trans)\n```\n\n```\n## \n## \tF test to compare two variances\n## \n## data:  cty by trans\n## F = 0.73539, num df = 156, denom df = 76, p-value = 0.1101\n## alternative hypothesis: true ratio of variances is not equal to 1\n## 95 percent confidence interval:\n##  0.4912917 1.0719468\n## sample estimates:\n## ratio of variances \n##          0.7353887\n```\n\n\n```r\nggplot(mpg1, aes(x = cty, fill = trans)) +\n  # geom_histogram() +\n  geom_density(alpha = 0.1)\n```\n\n![](/images/0623/unnamed-chunk-5-1.png)<!-- -->\n\n### 교차 분석\n- 범주형 변수들이 관계가 있다는 것을 검정\n- 비율에 차이가 있는지 검정\n- 교차분석 검정은 chisq.test() 함수로 진행\n  + 귀무가설 : trans에 따라 drv(4, f, r)의 (비율)차이가 없다.\n  + 대립가설 : trans에 따라 drv의 차이가 있다.\n\n<br>  \n\n- 빈도표 / 비율\n\n```r\ntable(mpg1$trans, mpg1$drv)   # 교차분석\n```\n\n```\n##         \n##           4  f  r\n##   auto   75 65 17\n##   manual 28 41  8\n```\n\n- 비율\n\n```r\nprop.table(table(mpg1$trans, mpg1$drv), 1)\n```\n\n```\n##         \n##                  4         f         r\n##   auto   0.4777070 0.4140127 0.1082803\n##   manual 0.3636364 0.5324675 0.1038961\n```\n\n- auto 4륜 구동(4)인 47.8%\n- manual 전륜 구동(f) 53.2% 가장 많음\n- 별 차이 없어보이는데.. 실제 통계적으로 차이가 있는지 검정\n  + 귀무가설 : trans에 따라 drv(4, f, r)의 (비율)차이가 없다.\n  + 대립가설 : trans에 따라 drv의 차이가 있다.\n \n\n```r\nchisq.test(mpg1$trans, mpg1$drv)\n```\n\n```\n## \n## \tPearson's Chi-squared test\n## \n## data:  mpg1$trans and mpg1$drv\n## X-squared = 3.1368, df = 2, p-value = 0.2084\n```\n  - p-value 값이 0.05 보다 크므로 귀무가설이 성립된다.\n  - 결론 : \"trans에 따라 drv(4, f, r)의 (비율)차이가 없다.\"\n<br>\n\n### 상관관계분석\n- 변수들의 상관관계를 증명()\n- cty와 hwy는 상관관계가 있는지를 증명\n- 상관관계분석은 cor.test() 함수로 진행\n  + 귀무가설 : cty와 hwy는 상관관계가 없다.\n  + 대립가설 : cty와 hwy는 상관관계가 있다.\n\n```r\nmpg1 <-read.csv(\"mpg1.csv\", stringsAsFactors = FALSE)\ncor.test(mpg1$cty, mpg1$hwy)    # 상관관계분석\n```\n\n```\n## \n## \tPearson's product-moment correlation\n## \n## data:  mpg1$cty and mpg1$hwy\n## t = 49.585, df = 232, p-value < 2.2e-16\n## alternative hypothesis: true correlation is not equal to 0\n## 95 percent confidence interval:\n##  0.9433129 0.9657663\n## sample estimates:\n##       cor \n## 0.9559159\n```\n\n- 'p-value < 2.2e-16' 에서 p-value 값이 0.05보다 작으므로 대립가설이 성립한다.\n- cor(상관관계계수) = 0.9559159 이므로 상관관계가 1에 가까워서 매우 높다.\n- 결론 : \"cty와 hwy는 유의미하게 매우 높은 상관관계에 있다.\"\n\n\n### 회귀분석\n- 기초통계 : 특정한 결과에 영향을 주는 주 요인이 무엇인지 찾는 것\n- 회귀분석과 종료\n  + 1세대 회귀 방법론 : 다항회귀분석, 다중회귀분석, 포아송 회귀분석, etc\n  + 2세대 회귀 방법론 : 구조방정식\n\n- 귀무가설, 대립가설 존재\n  + 귀무가설 : x(=독립변수)가 y(=종속변수)에 영향을 주지 않는다\n  + 대립가설 : x가 y에 영향을 준다\n  \n- lm(종속변수 ~ 독립변수, data)\n  + p-value\n\n\n```r\nRA <- lm(data=mtcars, mpg ~ disp)  # 종속변수 ~ 독립변수+독립변수+...\nsummary(RA)\n```\n\n```\n## \n## Call:\n## lm(formula = mpg ~ disp, data = mtcars)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -4.8922 -2.2022 -0.9631  1.6272  7.2305 \n## \n## Coefficients:\n##              Estimate Std. Error t value Pr(>|t|)    \n## (Intercept) 29.599855   1.229720  24.070  < 2e-16 ***\n## disp        -0.041215   0.004712  -8.747 9.38e-10 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 3.251 on 30 degrees of freedom\n## Multiple R-squared:  0.7183,\tAdjusted R-squared:  0.709 \n## F-statistic: 76.51 on 1 and 30 DF,  p-value: 9.38e-10\n```\n\n```r\n# 맨 밑의 p-value 값은 전체식에 해당하는 값이다.\n# 여러 변수들 중 'Pr(>|t|)'값이(=p-value) 0.05 이상이면 그 변수는 제외한다.\n```\n\n\n- 머신러닝, 인공지능\n  + 주 목적은 예측\n  + y = ax + b\n---\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 29.599855   1.229720  24.070  < 2e-16 ***\ndisp        -0.041215   0.004712  -8.747 9.38e-10 ***\nvar1                                     0.10\nvar2                                     9.38e-10\nvar3                                     3.14e-9\n---\n\n\nResidual standard error: 3.251 on 30 degrees of freedom\nMultiple R-squared:  0.7183,\tAdjusted R-squared:  0.709 \nF-statistic: 76.51 on 1 and 30 DF,  p-value: 9.38e-10\n\n- Estimate값 해석 : y(mpg) = 29.599855 - 0.041215 x disp\n  + 우하향 하는 그래프\n\n- 에서 ANOVA (분산분석) 을 통해서 식1, 식2, 식3, ... 을 해서 괜찮은 식을 도출해야한다\n- p-value 값은 항상 0.05 미만\n식1 : y = disp + var1 + var2 + var3\n식2 : y = disp + var1 + var2\n식3 : y = disp + var1\n\n- Residual standard error: 3.251 on 30 degrees of freedom\nMultiple R-squared:  0.7183,\tAdjusted R-squared:  0.709 에서\n- R-squared (결정계수) = 설명력 = 0 ~ 1\n- 1로 수렴할수록 설명력이 좋다\n- 'Multiple R-squared:   0.7183' 의 의미는 해당 변수들이 71.83% 만큼 영향을 준다는 뜻\n<br>\n\n### 회귀분석에서 고려해야할 것들\n1. 전체식의 p-value 값이 0.05 보다 작은가?\n2. ANOVA를 통해서 변하는 p-value 값이 0.05 미만인가를 체크한다.\n3. R-squared(결정계수)가 1에 가까운 변수 식을 찾는다.\n","slug":"day0623","published":1,"updated":"2022-07-10T15:28:20.470Z","_id":"cl5fcok7r000ljku09mjo32ra","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n<h1 id=\"8장\"><a href=\"#8장\" class=\"headerlink\" title=\"8장\"></a>8장</h1><h2 id=\"통계\"><a href=\"#통계\" class=\"headerlink\" title=\"통계\"></a>통계</h2><ul>\n<li><p>기술통계 : 평균, 최솟값, 최댓값</p>\n</li>\n<li><p>추론통계 : 변수 간의 관계를 파악 &#x2F; 새로운 사실을 추정  </p>\n<ul>\n<li><p>(중요)평균차이 검정</p>\n<ul>\n<li>수치형 데이터 + 범주형 데이터</li>\n<li>가설검정 : 각 그룹간의 평균의 차이를 검정<br>ex) ‘남자’의 평균 키와 ‘여자’의 평균 키는 “차이”가 있을 것이다.</li>\n<li>‘남자’의 평균 키가 ‘여자’의 평균 키보다 크다. 라는 결론을 내리려면<br>이번 측정의 결과가 우연한 측정이 아니라는 것을 통계적으로 검정해야된다.<br>ex) ‘여자’ 배구선수 평균 키는 ‘남자’의 평균 키보다 큰데?<br>‘여자’ 배구선수의 측정은 우연한 측정이라서 결과에 사용할 수 없음</li>\n</ul>\n</li>\n<li><p>교차분석 (&#x3D; 빈도분석)</p>\n<ul>\n<li>범주형 데이터</li>\n<li>가설검정 : 각 범주별 빈도를 활용해서 관계성을 검정<br>ex) ‘아파트의 크기’는 ‘TV의 크기’와 관계가 있을 것이다.<ul>\n<li>‘아파트의 크기’ &#x3D; ‘소형 아파트’,’대형 아파트’</li>\n<li>‘TV의 크기’ &#x3D; ‘소형 TV’,’대형 TV’</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>상관관계 분석</p>\n<ul>\n<li>수치형 데이터</li>\n<li>-1 &lt;&#x3D; r &lt;&#x3D; 1 로 두 변수간의 상관관계를 의미한다.<ul>\n<li>절댓값이 1에 가까울 수록 완전 정의 관계, 역의 관계이다.</li>\n<li>절댓값이 0에 가까울 수록 상관관계가 거의 없다고 해석한다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>(중요)단순회귀분석 : 인과관계 분석</p>\n<ul>\n<li><p>y &#x3D; ax + b</p>\n</li>\n<li><p>ex1) 기온, 판매량</p>\n</li>\n<li><p>가설검정</p>\n<ul>\n<li>기온(독립변수&#x3D;x)이 판매량(종속변수&#x3D;y)에 긍정적 or 부정적 영향을 주고 있을 것이다.</li>\n</ul>\n</li>\n<li><p>ex2) 월급, 외식횟수</p>\n</li>\n<li><p>가설검정</p>\n<ul>\n<li>월급(독립변수&#x3D;x)이 증가하면 외식횟수(종속변수&#x3D;y)가 증가할 것 이다.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"통계-검정\"><a href=\"#통계-검정\" class=\"headerlink\" title=\"통계 검정\"></a>통계 검정</h2><h3 id=\"가설\"><a href=\"#가설\" class=\"headerlink\" title=\"가설\"></a>가설</h3><ul>\n<li><p>Hypothesis<br>—&gt; 공부 방법 : 선행연구, 해당 분석방법의 가설 설정 예시 참고</p>\n</li>\n<li><p>연구 -&gt; 내가 궁금한 것을 찾는 것</p>\n<ul>\n<li>남자의 평균 키와 여자의 평균 키는 차이가 있을 것인가?</li>\n</ul>\n</li>\n<li><p>귀무가설 : 두 그룹간의 평균 차이가 없다.</p>\n</li>\n<li><p>대립가설 : 두 그룹간의 평균 차이가 있다. (보통 내가 궁금한 것)  </p>\n</li>\n<li><p>유의수준 : 오류를 범할 확률</p>\n</li>\n<li><p>가설검정에서 인정하는 유의수준(&lt;&#x3D;&#x3D;&gt; 신뢰수준)</p>\n<ul>\n<li>5%, 1%, 0.1%, 또는 10%(각 분야마다 기준이 달라진다)</li>\n</ul>\n</li>\n<li><p>오차범위</p>\n<ul>\n<li>A후보의 44%</li>\n<li>B후보의 42%<ul>\n<li>오차범위 안에 있다 -&gt; 다시 조사하면 바뀔 수 있다.</li>\n<li>오차범위 밖에 있다 -&gt; 바뀔 수 없다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>어떻게 데이터를 입력하는지 확인</p>\n</li>\n<li><p>p-value, 유의수준 0.05 이상 : 귀무가설, 0.05 이내 –&gt; 대립가설</p>\n</li>\n<li><p>데이터 불러오기</p>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1 <span class=\"operator\">&lt;-</span> read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;mpg1.csv&quot;</span><span class=\"punctuation\">,</span> stringsAsFactors <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">str<span class=\"punctuation\">(</span>mpg1<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## &#x27;data.frame&#x27;:\t234 obs. of  5 variables:</span><br><span class=\"line\">##  $ manufacturer: chr  &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; ...</span><br><span class=\"line\">##  $ trans       : chr  &quot;auto&quot; &quot;manual&quot; &quot;manual&quot; &quot;auto&quot; ...</span><br><span class=\"line\">##  $ drv         : chr  &quot;f&quot; &quot;f&quot; &quot;f&quot; &quot;f&quot; ...</span><br><span class=\"line\">##  $ cty         : int  18 21 20 21 16 18 18 18 16 20 ...</span><br><span class=\"line\">##  $ hwy         : int  29 29 31 30 26 26 27 26 25 28 ...</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>시각화</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>ggplot2<span class=\"punctuation\">)</span></span><br><span class=\"line\">ggplot<span class=\"punctuation\">(</span>mpg1<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> trans<span class=\"punctuation\">,</span> y <span class=\"operator\">=</span> cty<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  <span class=\"comment\"># trans 변수는 chr(문자형)이고, cty 변수는 int(정수형)이므로 boxplot 그래프를 쓴다.</span></span><br><span class=\"line\">  geom_boxplot<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0623/unnamed-chunk-2-1.png\"><!-- --></p>\n<ul>\n<li>t.test 검정<ul>\n<li>귀무가설 : auto와 manual의 cty 평균은 차이가 없다.</li>\n<li>대립가설 : auto와 manual의 cty 평균은 차이가 있다.</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">t.test<span class=\"punctuation\">(</span>data <span class=\"operator\">=</span> mpg1<span class=\"punctuation\">,</span> cty <span class=\"operator\">~</span> trans<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## \tWelch Two Sample t-test</span><br><span class=\"line\">## </span><br><span class=\"line\">## data:  cty by trans</span><br><span class=\"line\">## t = -4.5375, df = 132.32, p-value = 1.263e-05</span><br><span class=\"line\">## alternative hypothesis: true difference in means between group auto and group manual is not equal to 0</span><br><span class=\"line\">## 95 percent confidence interval:</span><br><span class=\"line\">##  -3.887311 -1.527033</span><br><span class=\"line\">## sample estimates:</span><br><span class=\"line\">##   mean in group auto mean in group manual </span><br><span class=\"line\">##             15.96815             18.67532</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 종속변수 ~ 독립변수</span></span><br><span class=\"line\"><span class=\"comment\"># 반응변수 ~ 설명변수</span></span><br><span class=\"line\"><span class=\"comment\">#     y          x</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>‘p-value &#x3D; 1.263e-05’ 에서 p-value 값이 유의수준이 0.05보다 작으므로,</li>\n</ul>\n<p>  이 결과는 대립가설인 ‘auto와 manual의 cty 평균은 차이가 있다.’ 로 설명할 수 있다.</p>\n<ul>\n<li>두 그룹의 평균 차이 검정<ul>\n<li>사전 필수 검정</li>\n<li>등분산 검정<ul>\n<li>두 그룹간의 분산이 비슷하면 –&gt; t.test (모수 검정)</li>\n<li>두 그룹간의 분산이 다르면   –&gt; 비모수 검정</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>보통 대립가설에 알고 싶은 결과를 대입하지만, <br>등분산 검정에서의 귀무가설, 대립가설은 정의된 것임<ul>\n<li>귀무가설 : 두 그룹간의 분산이 비슷하다<ul>\n<li>등분산 검정 에서 p-value &gt; 0.05 되어야 t.test가 가능</li>\n</ul>\n</li>\n<li>대립가설 : 두 그룹간의 분산이 다르다</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var.test<span class=\"punctuation\">(</span>data <span class=\"operator\">=</span> mpg1<span class=\"punctuation\">,</span> cty<span class=\"operator\">~</span>trans<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## \tF test to compare two variances</span><br><span class=\"line\">## </span><br><span class=\"line\">## data:  cty by trans</span><br><span class=\"line\">## F = 0.73539, num df = 156, denom df = 76, p-value = 0.1101</span><br><span class=\"line\">## alternative hypothesis: true ratio of variances is not equal to 1</span><br><span class=\"line\">## 95 percent confidence interval:</span><br><span class=\"line\">##  0.4912917 1.0719468</span><br><span class=\"line\">## sample estimates:</span><br><span class=\"line\">## ratio of variances </span><br><span class=\"line\">##          0.7353887</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>mpg1<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> cty<span class=\"punctuation\">,</span> fill <span class=\"operator\">=</span> trans<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  <span class=\"comment\"># geom_histogram() +</span></span><br><span class=\"line\">  geom_density<span class=\"punctuation\">(</span>alpha <span class=\"operator\">=</span> <span class=\"number\">0.1</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0623/unnamed-chunk-5-1.png\"><!-- --></p>\n<h3 id=\"교차-분석\"><a href=\"#교차-분석\" class=\"headerlink\" title=\"교차 분석\"></a>교차 분석</h3><ul>\n<li>범주형 변수들이 관계가 있다는 것을 검정</li>\n<li>비율에 차이가 있는지 검정</li>\n<li>교차분석 검정은 chisq.test() 함수로 진행<ul>\n<li>귀무가설 : trans에 따라 drv(4, f, r)의 (비율)차이가 없다.</li>\n<li>대립가설 : trans에 따라 drv의 차이가 있다.</li>\n</ul>\n</li>\n</ul>\n<br>  \n\n<ul>\n<li>빈도표 &#x2F; 비율</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>trans<span class=\"punctuation\">,</span> mpg1<span class=\"operator\">$</span>drv<span class=\"punctuation\">)</span>   <span class=\"comment\"># 교차분석</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##         </span><br><span class=\"line\">##           4  f  r</span><br><span class=\"line\">##   auto   75 65 17</span><br><span class=\"line\">##   manual 28 41  8</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>비율</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">prop.table<span class=\"punctuation\">(</span>table<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>trans<span class=\"punctuation\">,</span> mpg1<span class=\"operator\">$</span>drv<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##         </span><br><span class=\"line\">##                  4         f         r</span><br><span class=\"line\">##   auto   0.4777070 0.4140127 0.1082803</span><br><span class=\"line\">##   manual 0.3636364 0.5324675 0.1038961</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>auto 4륜 구동(4)인 47.8%</li>\n<li>manual 전륜 구동(f) 53.2% 가장 많음</li>\n<li>별 차이 없어보이는데.. 실제 통계적으로 차이가 있는지 검정<ul>\n<li>귀무가설 : trans에 따라 drv(4, f, r)의 (비율)차이가 없다.</li>\n<li>대립가설 : trans에 따라 drv의 차이가 있다.</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chisq.test<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>trans<span class=\"punctuation\">,</span> mpg1<span class=\"operator\">$</span>drv<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## \tPearson&#x27;s Chi-squared test</span><br><span class=\"line\">## </span><br><span class=\"line\">## data:  mpg1$trans and mpg1$drv</span><br><span class=\"line\">## X-squared = 3.1368, df = 2, p-value = 0.2084</span><br></pre></td></tr></table></figure>\n<ul>\n<li>p-value 값이 0.05 보다 크므로 귀무가설이 성립된다.</li>\n<li>결론 : “trans에 따라 drv(4, f, r)의 (비율)차이가 없다.”<br></li>\n</ul>\n<h3 id=\"상관관계분석\"><a href=\"#상관관계분석\" class=\"headerlink\" title=\"상관관계분석\"></a>상관관계분석</h3><ul>\n<li>변수들의 상관관계를 증명()</li>\n<li>cty와 hwy는 상관관계가 있는지를 증명</li>\n<li>상관관계분석은 cor.test() 함수로 진행<ul>\n<li>귀무가설 : cty와 hwy는 상관관계가 없다.</li>\n<li>대립가설 : cty와 hwy는 상관관계가 있다.</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1 <span class=\"operator\">&lt;-</span>read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;mpg1.csv&quot;</span><span class=\"punctuation\">,</span> stringsAsFactors <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">cor.test<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>cty<span class=\"punctuation\">,</span> mpg1<span class=\"operator\">$</span>hwy<span class=\"punctuation\">)</span>    <span class=\"comment\"># 상관관계분석</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## \tPearson&#x27;s product-moment correlation</span><br><span class=\"line\">## </span><br><span class=\"line\">## data:  mpg1$cty and mpg1$hwy</span><br><span class=\"line\">## t = 49.585, df = 232, p-value &lt; 2.2e-16</span><br><span class=\"line\">## alternative hypothesis: true correlation is not equal to 0</span><br><span class=\"line\">## 95 percent confidence interval:</span><br><span class=\"line\">##  0.9433129 0.9657663</span><br><span class=\"line\">## sample estimates:</span><br><span class=\"line\">##       cor </span><br><span class=\"line\">## 0.9559159</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>‘p-value &lt; 2.2e-16’ 에서 p-value 값이 0.05보다 작으므로 대립가설이 성립한다.</li>\n<li>cor(상관관계계수) &#x3D; 0.9559159 이므로 상관관계가 1에 가까워서 매우 높다.</li>\n<li>결론 : “cty와 hwy는 유의미하게 매우 높은 상관관계에 있다.”</li>\n</ul>\n<h3 id=\"회귀분석\"><a href=\"#회귀분석\" class=\"headerlink\" title=\"회귀분석\"></a>회귀분석</h3><ul>\n<li><p>기초통계 : 특정한 결과에 영향을 주는 주 요인이 무엇인지 찾는 것</p>\n</li>\n<li><p>회귀분석과 종료</p>\n<ul>\n<li>1세대 회귀 방법론 : 다항회귀분석, 다중회귀분석, 포아송 회귀분석, etc</li>\n<li>2세대 회귀 방법론 : 구조방정식</li>\n</ul>\n</li>\n<li><p>귀무가설, 대립가설 존재</p>\n<ul>\n<li>귀무가설 : x(&#x3D;독립변수)가 y(&#x3D;종속변수)에 영향을 주지 않는다</li>\n<li>대립가설 : x가 y에 영향을 준다</li>\n</ul>\n</li>\n<li><p>lm(종속변수 ~ 독립변수, data)</p>\n<ul>\n<li>p-value</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RA <span class=\"operator\">&lt;-</span> lm<span class=\"punctuation\">(</span>data<span class=\"operator\">=</span>mtcars<span class=\"punctuation\">,</span> mpg <span class=\"operator\">~</span> disp<span class=\"punctuation\">)</span>  <span class=\"comment\"># 종속변수 ~ 독립변수+독립변수+...</span></span><br><span class=\"line\">summary<span class=\"punctuation\">(</span>RA<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## Call:</span><br><span class=\"line\">## lm(formula = mpg ~ disp, data = mtcars)</span><br><span class=\"line\">## </span><br><span class=\"line\">## Residuals:</span><br><span class=\"line\">##     Min      1Q  Median      3Q     Max </span><br><span class=\"line\">## -4.8922 -2.2022 -0.9631  1.6272  7.2305 </span><br><span class=\"line\">## </span><br><span class=\"line\">## Coefficients:</span><br><span class=\"line\">##              Estimate Std. Error t value Pr(&gt;|t|)    </span><br><span class=\"line\">## (Intercept) 29.599855   1.229720  24.070  &lt; 2e-16 ***</span><br><span class=\"line\">## disp        -0.041215   0.004712  -8.747 9.38e-10 ***</span><br><span class=\"line\">## ---</span><br><span class=\"line\">## Signif. codes:  0 &#x27;***&#x27; 0.001 &#x27;**&#x27; 0.01 &#x27;*&#x27; 0.05 &#x27;.&#x27; 0.1 &#x27; &#x27; 1</span><br><span class=\"line\">## </span><br><span class=\"line\">## Residual standard error: 3.251 on 30 degrees of freedom</span><br><span class=\"line\">## Multiple R-squared:  0.7183,\tAdjusted R-squared:  0.709 </span><br><span class=\"line\">## F-statistic: 76.51 on 1 and 30 DF,  p-value: 9.38e-10</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 맨 밑의 p-value 값은 전체식에 해당하는 값이다.</span></span><br><span class=\"line\"><span class=\"comment\"># 여러 변수들 중 &#x27;Pr(&gt;|t|)&#x27;값이(=p-value) 0.05 이상이면 그 변수는 제외한다.</span></span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>머신러닝, 인공지능<ul>\n<li>주 목적은 예측</li>\n<li>y &#x3D; ax + b</li>\n</ul>\n</li>\n</ul>\n<hr>\n<p>Coefficients:<br>             Estimate Std. Error t value Pr(&gt;|t|)<br>(Intercept) 29.599855   1.229720  24.070  &lt; 2e-16 ***<br>disp        -0.041215   0.004712  -8.747 9.38e-10 ***<br>var1                                     0.10<br>var2                                     9.38e-10<br>var3                                     3.14e-9</p>\n<hr>\n<p>Residual standard error: 3.251 on 30 degrees of freedom<br>Multiple R-squared:  0.7183,\tAdjusted R-squared:  0.709<br>F-statistic: 76.51 on 1 and 30 DF,  p-value: 9.38e-10</p>\n<ul>\n<li><p>Estimate값 해석 : y(mpg) &#x3D; 29.599855 - 0.041215 x disp</p>\n<ul>\n<li>우하향 하는 그래프</li>\n</ul>\n</li>\n<li><p>에서 ANOVA (분산분석) 을 통해서 식1, 식2, 식3, … 을 해서 괜찮은 식을 도출해야한다</p>\n</li>\n<li><p>p-value 값은 항상 0.05 미만<br>식1 : y &#x3D; disp + var1 + var2 + var3<br>식2 : y &#x3D; disp + var1 + var2<br>식3 : y &#x3D; disp + var1</p>\n</li>\n<li><p>Residual standard error: 3.251 on 30 degrees of freedom<br>Multiple R-squared:  0.7183,\tAdjusted R-squared:  0.709 에서</p>\n</li>\n<li><p>R-squared (결정계수) &#x3D; 설명력 &#x3D; 0 ~ 1</p>\n</li>\n<li><p>1로 수렴할수록 설명력이 좋다</p>\n</li>\n<li><p>‘Multiple R-squared:   0.7183’ 의 의미는 해당 변수들이 71.83% 만큼 영향을 준다는 뜻</p>\n<br></li>\n</ul>\n<h3 id=\"회귀분석에서-고려해야할-것들\"><a href=\"#회귀분석에서-고려해야할-것들\" class=\"headerlink\" title=\"회귀분석에서 고려해야할 것들\"></a>회귀분석에서 고려해야할 것들</h3><ol>\n<li>전체식의 p-value 값이 0.05 보다 작은가?</li>\n<li>ANOVA를 통해서 변하는 p-value 값이 0.05 미만인가를 체크한다.</li>\n<li>R-squared(결정계수)가 1에 가까운 변수 식을 찾는다.</li>\n</ol>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/06/23/day0623/R_logo.jpg","excerpt":"<p>시각화, 교차분석</p>","more":"<p>시각화, 교차분석</p>\n<!-- excerpt -->\n<h1 id=\"8장\"><a href=\"#8장\" class=\"headerlink\" title=\"8장\"></a>8장</h1><h2 id=\"통계\"><a href=\"#통계\" class=\"headerlink\" title=\"통계\"></a>통계</h2><ul>\n<li><p>기술통계 : 평균, 최솟값, 최댓값</p>\n</li>\n<li><p>추론통계 : 변수 간의 관계를 파악 &#x2F; 새로운 사실을 추정  </p>\n<ul>\n<li><p>(중요)평균차이 검정</p>\n<ul>\n<li>수치형 데이터 + 범주형 데이터</li>\n<li>가설검정 : 각 그룹간의 평균의 차이를 검정<br>ex) ‘남자’의 평균 키와 ‘여자’의 평균 키는 “차이”가 있을 것이다.</li>\n<li>‘남자’의 평균 키가 ‘여자’의 평균 키보다 크다. 라는 결론을 내리려면<br>이번 측정의 결과가 우연한 측정이 아니라는 것을 통계적으로 검정해야된다.<br>ex) ‘여자’ 배구선수 평균 키는 ‘남자’의 평균 키보다 큰데?<br>‘여자’ 배구선수의 측정은 우연한 측정이라서 결과에 사용할 수 없음</li>\n</ul>\n</li>\n<li><p>교차분석 (&#x3D; 빈도분석)</p>\n<ul>\n<li>범주형 데이터</li>\n<li>가설검정 : 각 범주별 빈도를 활용해서 관계성을 검정<br>ex) ‘아파트의 크기’는 ‘TV의 크기’와 관계가 있을 것이다.<ul>\n<li>‘아파트의 크기’ &#x3D; ‘소형 아파트’,’대형 아파트’</li>\n<li>‘TV의 크기’ &#x3D; ‘소형 TV’,’대형 TV’</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>상관관계 분석</p>\n<ul>\n<li>수치형 데이터</li>\n<li>-1 &lt;&#x3D; r &lt;&#x3D; 1 로 두 변수간의 상관관계를 의미한다.<ul>\n<li>절댓값이 1에 가까울 수록 완전 정의 관계, 역의 관계이다.</li>\n<li>절댓값이 0에 가까울 수록 상관관계가 거의 없다고 해석한다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>(중요)단순회귀분석 : 인과관계 분석</p>\n<ul>\n<li><p>y &#x3D; ax + b</p>\n</li>\n<li><p>ex1) 기온, 판매량</p>\n</li>\n<li><p>가설검정</p>\n<ul>\n<li>기온(독립변수&#x3D;x)이 판매량(종속변수&#x3D;y)에 긍정적 or 부정적 영향을 주고 있을 것이다.</li>\n</ul>\n</li>\n<li><p>ex2) 월급, 외식횟수</p>\n</li>\n<li><p>가설검정</p>\n<ul>\n<li>월급(독립변수&#x3D;x)이 증가하면 외식횟수(종속변수&#x3D;y)가 증가할 것 이다.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"통계-검정\"><a href=\"#통계-검정\" class=\"headerlink\" title=\"통계 검정\"></a>통계 검정</h2><h3 id=\"가설\"><a href=\"#가설\" class=\"headerlink\" title=\"가설\"></a>가설</h3><ul>\n<li><p>Hypothesis<br>—&gt; 공부 방법 : 선행연구, 해당 분석방법의 가설 설정 예시 참고</p>\n</li>\n<li><p>연구 -&gt; 내가 궁금한 것을 찾는 것</p>\n<ul>\n<li>남자의 평균 키와 여자의 평균 키는 차이가 있을 것인가?</li>\n</ul>\n</li>\n<li><p>귀무가설 : 두 그룹간의 평균 차이가 없다.</p>\n</li>\n<li><p>대립가설 : 두 그룹간의 평균 차이가 있다. (보통 내가 궁금한 것)  </p>\n</li>\n<li><p>유의수준 : 오류를 범할 확률</p>\n</li>\n<li><p>가설검정에서 인정하는 유의수준(&lt;&#x3D;&#x3D;&gt; 신뢰수준)</p>\n<ul>\n<li>5%, 1%, 0.1%, 또는 10%(각 분야마다 기준이 달라진다)</li>\n</ul>\n</li>\n<li><p>오차범위</p>\n<ul>\n<li>A후보의 44%</li>\n<li>B후보의 42%<ul>\n<li>오차범위 안에 있다 -&gt; 다시 조사하면 바뀔 수 있다.</li>\n<li>오차범위 밖에 있다 -&gt; 바뀔 수 없다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>어떻게 데이터를 입력하는지 확인</p>\n</li>\n<li><p>p-value, 유의수준 0.05 이상 : 귀무가설, 0.05 이내 –&gt; 대립가설</p>\n</li>\n<li><p>데이터 불러오기</p>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1 <span class=\"operator\">&lt;-</span> read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;mpg1.csv&quot;</span><span class=\"punctuation\">,</span> stringsAsFactors <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">str<span class=\"punctuation\">(</span>mpg1<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## &#x27;data.frame&#x27;:\t234 obs. of  5 variables:</span><br><span class=\"line\">##  $ manufacturer: chr  &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; ...</span><br><span class=\"line\">##  $ trans       : chr  &quot;auto&quot; &quot;manual&quot; &quot;manual&quot; &quot;auto&quot; ...</span><br><span class=\"line\">##  $ drv         : chr  &quot;f&quot; &quot;f&quot; &quot;f&quot; &quot;f&quot; ...</span><br><span class=\"line\">##  $ cty         : int  18 21 20 21 16 18 18 18 16 20 ...</span><br><span class=\"line\">##  $ hwy         : int  29 29 31 30 26 26 27 26 25 28 ...</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>시각화</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>ggplot2<span class=\"punctuation\">)</span></span><br><span class=\"line\">ggplot<span class=\"punctuation\">(</span>mpg1<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> trans<span class=\"punctuation\">,</span> y <span class=\"operator\">=</span> cty<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  <span class=\"comment\"># trans 변수는 chr(문자형)이고, cty 변수는 int(정수형)이므로 boxplot 그래프를 쓴다.</span></span><br><span class=\"line\">  geom_boxplot<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0623/unnamed-chunk-2-1.png\"><!-- --></p>\n<ul>\n<li>t.test 검정<ul>\n<li>귀무가설 : auto와 manual의 cty 평균은 차이가 없다.</li>\n<li>대립가설 : auto와 manual의 cty 평균은 차이가 있다.</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">t.test<span class=\"punctuation\">(</span>data <span class=\"operator\">=</span> mpg1<span class=\"punctuation\">,</span> cty <span class=\"operator\">~</span> trans<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## \tWelch Two Sample t-test</span><br><span class=\"line\">## </span><br><span class=\"line\">## data:  cty by trans</span><br><span class=\"line\">## t = -4.5375, df = 132.32, p-value = 1.263e-05</span><br><span class=\"line\">## alternative hypothesis: true difference in means between group auto and group manual is not equal to 0</span><br><span class=\"line\">## 95 percent confidence interval:</span><br><span class=\"line\">##  -3.887311 -1.527033</span><br><span class=\"line\">## sample estimates:</span><br><span class=\"line\">##   mean in group auto mean in group manual </span><br><span class=\"line\">##             15.96815             18.67532</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 종속변수 ~ 독립변수</span></span><br><span class=\"line\"><span class=\"comment\"># 반응변수 ~ 설명변수</span></span><br><span class=\"line\"><span class=\"comment\">#     y          x</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>‘p-value &#x3D; 1.263e-05’ 에서 p-value 값이 유의수준이 0.05보다 작으므로,</li>\n</ul>\n<p>  이 결과는 대립가설인 ‘auto와 manual의 cty 평균은 차이가 있다.’ 로 설명할 수 있다.</p>\n<ul>\n<li>두 그룹의 평균 차이 검정<ul>\n<li>사전 필수 검정</li>\n<li>등분산 검정<ul>\n<li>두 그룹간의 분산이 비슷하면 –&gt; t.test (모수 검정)</li>\n<li>두 그룹간의 분산이 다르면   –&gt; 비모수 검정</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>보통 대립가설에 알고 싶은 결과를 대입하지만, <br>등분산 검정에서의 귀무가설, 대립가설은 정의된 것임<ul>\n<li>귀무가설 : 두 그룹간의 분산이 비슷하다<ul>\n<li>등분산 검정 에서 p-value &gt; 0.05 되어야 t.test가 가능</li>\n</ul>\n</li>\n<li>대립가설 : 두 그룹간의 분산이 다르다</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var.test<span class=\"punctuation\">(</span>data <span class=\"operator\">=</span> mpg1<span class=\"punctuation\">,</span> cty<span class=\"operator\">~</span>trans<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## \tF test to compare two variances</span><br><span class=\"line\">## </span><br><span class=\"line\">## data:  cty by trans</span><br><span class=\"line\">## F = 0.73539, num df = 156, denom df = 76, p-value = 0.1101</span><br><span class=\"line\">## alternative hypothesis: true ratio of variances is not equal to 1</span><br><span class=\"line\">## 95 percent confidence interval:</span><br><span class=\"line\">##  0.4912917 1.0719468</span><br><span class=\"line\">## sample estimates:</span><br><span class=\"line\">## ratio of variances </span><br><span class=\"line\">##          0.7353887</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>mpg1<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> cty<span class=\"punctuation\">,</span> fill <span class=\"operator\">=</span> trans<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  <span class=\"comment\"># geom_histogram() +</span></span><br><span class=\"line\">  geom_density<span class=\"punctuation\">(</span>alpha <span class=\"operator\">=</span> <span class=\"number\">0.1</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0623/unnamed-chunk-5-1.png\"><!-- --></p>\n<h3 id=\"교차-분석\"><a href=\"#교차-분석\" class=\"headerlink\" title=\"교차 분석\"></a>교차 분석</h3><ul>\n<li>범주형 변수들이 관계가 있다는 것을 검정</li>\n<li>비율에 차이가 있는지 검정</li>\n<li>교차분석 검정은 chisq.test() 함수로 진행<ul>\n<li>귀무가설 : trans에 따라 drv(4, f, r)의 (비율)차이가 없다.</li>\n<li>대립가설 : trans에 따라 drv의 차이가 있다.</li>\n</ul>\n</li>\n</ul>\n<br>  \n\n<ul>\n<li>빈도표 &#x2F; 비율</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>trans<span class=\"punctuation\">,</span> mpg1<span class=\"operator\">$</span>drv<span class=\"punctuation\">)</span>   <span class=\"comment\"># 교차분석</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##         </span><br><span class=\"line\">##           4  f  r</span><br><span class=\"line\">##   auto   75 65 17</span><br><span class=\"line\">##   manual 28 41  8</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>비율</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">prop.table<span class=\"punctuation\">(</span>table<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>trans<span class=\"punctuation\">,</span> mpg1<span class=\"operator\">$</span>drv<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##         </span><br><span class=\"line\">##                  4         f         r</span><br><span class=\"line\">##   auto   0.4777070 0.4140127 0.1082803</span><br><span class=\"line\">##   manual 0.3636364 0.5324675 0.1038961</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>auto 4륜 구동(4)인 47.8%</li>\n<li>manual 전륜 구동(f) 53.2% 가장 많음</li>\n<li>별 차이 없어보이는데.. 실제 통계적으로 차이가 있는지 검정<ul>\n<li>귀무가설 : trans에 따라 drv(4, f, r)의 (비율)차이가 없다.</li>\n<li>대립가설 : trans에 따라 drv의 차이가 있다.</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chisq.test<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>trans<span class=\"punctuation\">,</span> mpg1<span class=\"operator\">$</span>drv<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## \tPearson&#x27;s Chi-squared test</span><br><span class=\"line\">## </span><br><span class=\"line\">## data:  mpg1$trans and mpg1$drv</span><br><span class=\"line\">## X-squared = 3.1368, df = 2, p-value = 0.2084</span><br></pre></td></tr></table></figure>\n<ul>\n<li>p-value 값이 0.05 보다 크므로 귀무가설이 성립된다.</li>\n<li>결론 : “trans에 따라 drv(4, f, r)의 (비율)차이가 없다.”<br></li>\n</ul>\n<h3 id=\"상관관계분석\"><a href=\"#상관관계분석\" class=\"headerlink\" title=\"상관관계분석\"></a>상관관계분석</h3><ul>\n<li>변수들의 상관관계를 증명()</li>\n<li>cty와 hwy는 상관관계가 있는지를 증명</li>\n<li>상관관계분석은 cor.test() 함수로 진행<ul>\n<li>귀무가설 : cty와 hwy는 상관관계가 없다.</li>\n<li>대립가설 : cty와 hwy는 상관관계가 있다.</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1 <span class=\"operator\">&lt;-</span>read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;mpg1.csv&quot;</span><span class=\"punctuation\">,</span> stringsAsFactors <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">cor.test<span class=\"punctuation\">(</span>mpg1<span class=\"operator\">$</span>cty<span class=\"punctuation\">,</span> mpg1<span class=\"operator\">$</span>hwy<span class=\"punctuation\">)</span>    <span class=\"comment\"># 상관관계분석</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## \tPearson&#x27;s product-moment correlation</span><br><span class=\"line\">## </span><br><span class=\"line\">## data:  mpg1$cty and mpg1$hwy</span><br><span class=\"line\">## t = 49.585, df = 232, p-value &lt; 2.2e-16</span><br><span class=\"line\">## alternative hypothesis: true correlation is not equal to 0</span><br><span class=\"line\">## 95 percent confidence interval:</span><br><span class=\"line\">##  0.9433129 0.9657663</span><br><span class=\"line\">## sample estimates:</span><br><span class=\"line\">##       cor </span><br><span class=\"line\">## 0.9559159</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>‘p-value &lt; 2.2e-16’ 에서 p-value 값이 0.05보다 작으므로 대립가설이 성립한다.</li>\n<li>cor(상관관계계수) &#x3D; 0.9559159 이므로 상관관계가 1에 가까워서 매우 높다.</li>\n<li>결론 : “cty와 hwy는 유의미하게 매우 높은 상관관계에 있다.”</li>\n</ul>\n<h3 id=\"회귀분석\"><a href=\"#회귀분석\" class=\"headerlink\" title=\"회귀분석\"></a>회귀분석</h3><ul>\n<li><p>기초통계 : 특정한 결과에 영향을 주는 주 요인이 무엇인지 찾는 것</p>\n</li>\n<li><p>회귀분석과 종료</p>\n<ul>\n<li>1세대 회귀 방법론 : 다항회귀분석, 다중회귀분석, 포아송 회귀분석, etc</li>\n<li>2세대 회귀 방법론 : 구조방정식</li>\n</ul>\n</li>\n<li><p>귀무가설, 대립가설 존재</p>\n<ul>\n<li>귀무가설 : x(&#x3D;독립변수)가 y(&#x3D;종속변수)에 영향을 주지 않는다</li>\n<li>대립가설 : x가 y에 영향을 준다</li>\n</ul>\n</li>\n<li><p>lm(종속변수 ~ 독립변수, data)</p>\n<ul>\n<li>p-value</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RA <span class=\"operator\">&lt;-</span> lm<span class=\"punctuation\">(</span>data<span class=\"operator\">=</span>mtcars<span class=\"punctuation\">,</span> mpg <span class=\"operator\">~</span> disp<span class=\"punctuation\">)</span>  <span class=\"comment\"># 종속변수 ~ 독립변수+독립변수+...</span></span><br><span class=\"line\">summary<span class=\"punctuation\">(</span>RA<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## Call:</span><br><span class=\"line\">## lm(formula = mpg ~ disp, data = mtcars)</span><br><span class=\"line\">## </span><br><span class=\"line\">## Residuals:</span><br><span class=\"line\">##     Min      1Q  Median      3Q     Max </span><br><span class=\"line\">## -4.8922 -2.2022 -0.9631  1.6272  7.2305 </span><br><span class=\"line\">## </span><br><span class=\"line\">## Coefficients:</span><br><span class=\"line\">##              Estimate Std. Error t value Pr(&gt;|t|)    </span><br><span class=\"line\">## (Intercept) 29.599855   1.229720  24.070  &lt; 2e-16 ***</span><br><span class=\"line\">## disp        -0.041215   0.004712  -8.747 9.38e-10 ***</span><br><span class=\"line\">## ---</span><br><span class=\"line\">## Signif. codes:  0 &#x27;***&#x27; 0.001 &#x27;**&#x27; 0.01 &#x27;*&#x27; 0.05 &#x27;.&#x27; 0.1 &#x27; &#x27; 1</span><br><span class=\"line\">## </span><br><span class=\"line\">## Residual standard error: 3.251 on 30 degrees of freedom</span><br><span class=\"line\">## Multiple R-squared:  0.7183,\tAdjusted R-squared:  0.709 </span><br><span class=\"line\">## F-statistic: 76.51 on 1 and 30 DF,  p-value: 9.38e-10</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 맨 밑의 p-value 값은 전체식에 해당하는 값이다.</span></span><br><span class=\"line\"><span class=\"comment\"># 여러 변수들 중 &#x27;Pr(&gt;|t|)&#x27;값이(=p-value) 0.05 이상이면 그 변수는 제외한다.</span></span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>머신러닝, 인공지능<ul>\n<li>주 목적은 예측</li>\n<li>y &#x3D; ax + b</li>\n</ul>\n</li>\n</ul>\n<hr>\n<p>Coefficients:<br>             Estimate Std. Error t value Pr(&gt;|t|)<br>(Intercept) 29.599855   1.229720  24.070  &lt; 2e-16 ***<br>disp        -0.041215   0.004712  -8.747 9.38e-10 ***<br>var1                                     0.10<br>var2                                     9.38e-10<br>var3                                     3.14e-9</p>\n<hr>\n<p>Residual standard error: 3.251 on 30 degrees of freedom<br>Multiple R-squared:  0.7183,\tAdjusted R-squared:  0.709<br>F-statistic: 76.51 on 1 and 30 DF,  p-value: 9.38e-10</p>\n<ul>\n<li><p>Estimate값 해석 : y(mpg) &#x3D; 29.599855 - 0.041215 x disp</p>\n<ul>\n<li>우하향 하는 그래프</li>\n</ul>\n</li>\n<li><p>에서 ANOVA (분산분석) 을 통해서 식1, 식2, 식3, … 을 해서 괜찮은 식을 도출해야한다</p>\n</li>\n<li><p>p-value 값은 항상 0.05 미만<br>식1 : y &#x3D; disp + var1 + var2 + var3<br>식2 : y &#x3D; disp + var1 + var2<br>식3 : y &#x3D; disp + var1</p>\n</li>\n<li><p>Residual standard error: 3.251 on 30 degrees of freedom<br>Multiple R-squared:  0.7183,\tAdjusted R-squared:  0.709 에서</p>\n</li>\n<li><p>R-squared (결정계수) &#x3D; 설명력 &#x3D; 0 ~ 1</p>\n</li>\n<li><p>1로 수렴할수록 설명력이 좋다</p>\n</li>\n<li><p>‘Multiple R-squared:   0.7183’ 의 의미는 해당 변수들이 71.83% 만큼 영향을 준다는 뜻</p>\n<br></li>\n</ul>\n<h3 id=\"회귀분석에서-고려해야할-것들\"><a href=\"#회귀분석에서-고려해야할-것들\" class=\"headerlink\" title=\"회귀분석에서 고려해야할 것들\"></a>회귀분석에서 고려해야할 것들</h3><ol>\n<li>전체식의 p-value 값이 0.05 보다 작은가?</li>\n<li>ANOVA를 통해서 변하는 p-value 값이 0.05 미만인가를 체크한다.</li>\n<li>R-squared(결정계수)가 1에 가까운 변수 식을 찾는다.</li>\n</ol>\n"},{"title":"Python 기초문법","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"thumbnailImage":"python.png","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-06-27T00:00:00.000Z","_content":"\n- Hello World\n- 주석처리\n- 변수 (수치형, 자료형, bool형)\n<!-- more -->\n\n```python\nprint(\"Hello World\")\n```\n\n    Hello World\n    \n\n## 주석처리\n- 1줄 주석, 여러줄 주석처리\n- 여러 줄 주석처리\n  + 함수 또는 클래스를 문서화 할 때 주로 사용\n\n- 프로젝트 할 떄\n  + 전체 공정 100\n  + 코드 / 코드 문서화 / 한글작업 문서화\n\n\n```python\n# print() 함수 사용\nprint(\"1줄 주석\")\n\n\"\"\"\n여러 줄 주석\n쌍따옴표 3개를 입력해주세요\n앞과 뒤로\n\"\"\"\n\nprint(\"여러줄 주석\")\n```\n\n    1줄 주석\n    여러줄 주석\n    \n\n## 변수 (Scalar)\n- 자료형\n- Scalar형 / Non-Scalar형\n\n### 수치형 / 자료형\n- int, float\n\n\n```python\nnum_int = 1\nprint(num_int)\nprint(type(num_int))\n```\n\n    1\n    <class 'int'>\n    \n\n\n```python\nnum_float = 0.1\nprint(num_float)\nprint(type(num_float))\n```\n\n    0.1\n    <class 'float'>\n    \n\n### Bool형\n- True, False       (앞 글자만 대문자)\n- R : TRUE, FALSE   (R 은 뒷 글자 전부 대문자)\n\n\n```python\nbool_true = True\nprint(bool_true)\nprint(type(bool_true))\n```\n\n    True\n    <class 'bool'>\n    \n\n### None 자료형\n- Null값, 값이 정해지지 않은 자료형\n\n\n```python\nnone_x = None\nprint(none_x)\nprint(type(none_x))\n```\n\n    None\n    <class 'NoneType'>\n    \n\n## 사칙연산\n- 정수형 사칙연산, 실수형 사칙연산\n- 결괏값의 자료형\n\n### 정수형 사칙연산\n+, -, *, /\n\n\n```python\na = 3\nb = 2\nprint('a + b = ', a+b)\n```\n\n    a + b =  5\n    \n\n### 실수형 사칙 연산\n\n\n```python\na = 3\nb = 2\nprint('a + b = ', a+b)\nprint('a - b = ', a-b)\nprint('a * b = ', a*b)\nprint('a / b = ', a/b)\n# 나누기는 정수/정수 했어도 '실수' 형이 나올 수 있다.\n```\n\n    a + b =  5\n    a - b =  1\n    a * b =  6\n    a / b =  1.5\n    \n\n## 논리형 연산자\n- Bool형\n- True와 False 값으로 정의\n- 조건식\n  + 교집합(=and), 합집합(=or)\n  \n\n\n```python\nprint(True and True)\nprint(True and False)\nprint(False and True)\nprint(False and False)\n```\n\n    True\n    False\n    False\n    False\n    \n\n\n```python\nprint(True or True)\nprint(True or False)\nprint(False or True)\nprint(False or False)\n```\n\n    True\n    True\n    True\n    False\n    \n\n## 비교 연산자\n- 비교 연산자는 부등호를 의미한다.\n\n\n```python\nprint(4>3)  # 참   = True\nprint(4<3)  # 거짓 = False\n\nprint(4 > 3 and 4 < 3)  #False\nprint(4 > 3 or 4 < 3)   #True\n```\n\n    True\n    False\n    False\n    True\n    \n\n## 논리형 & 비교 연산자 응용\n- input()\n!!! 중요\n- 형변환\n  + 데이터 타입을 바꾸는 것\n\n\n```python\nvar = int(input(\"숫자를 입력하세요..!\"))\nprint(var)\nprint(type(var))\n```\n\n    숫자를 입력하세요..!3\n    3\n    <class 'int'>\n    \n\n\n```python\nnum1 = int(input(\"첫번쨰 숫자를 입력하세요..!\"))\nnum2 = int(input(\"두번째 숫자를 입력하세요..!\"))\nnum3 = int(input(\"세번째 숫자를 입력하세요..!\"))\nnum4 = int(input(\"네번째 숫자를 입력하세요..!\"))\n```\n\n    첫번쨰 숫자를 입력하세요..!10\n    두번째 숫자를 입력하세요..!20\n    세번째 숫자를 입력하세요..!30\n    네번째 숫자를 입력하세요..!40\n    \n\n\n```python\nvar1 = num1 >= num2\nvar2 = num3 < num4\n```\n\n\n```python\nprint(var1 and var2)\n\n\n```\n\n    False\n    \n\n## String\n- Non Scalar\n\n\n\n```python\nprint('Hello World')\nprint(\"Hello World\")\n\nprint(\"'Hello World'\")  # 작은 따옴표(') 출력\nprint('\"Hello World\"')  # 큰 따옴표(\") 출력\n```\n\n    Hello World\n    Hello World\n    'Hello World'\n    \n\n## String Operators\n- 문자열 연산자\n- +, * 만 가능\n\n\n```python\nstr1 = \"Hello \"\nstr2 = \"World   \"\nprint(str1 + str2)\n```\n\n    Hello World   \n    \n\n\n```python\ngreet = str1 + str2\nprint(greet * 3)\n```\n\n    Hello World   Hello World   Hello World   \n    \n\n## 문자열 인덱싱\n- 인덱싱은 0번째 부터 시작(공백도 포함)\n\n\n```python\ngreeting = \"Hello Kaggle\"\ni = 7\nprint(greeting[i])\n```\n\n    a\n    \n\n\n```python\ngreeting = \"Hello Kaggle\"\ni = int(input(\"숫자를 입력하세요..! = \"))\nprint(greeting[i])\n```\n\n    숫자를 입력하세요..! = 4\n    o\n    \n\n## 슬라이싱\n\n\n```python\ngreeting = \"Hello Kaggle\"\n# print(greeting[시작 인덱스:끝 인덱스-1])\nprint(greeting[0:2])     # 0, 1번째 인덱스가 출력\nprint(greeting[:8])      # 처음부터 7번째 인덱스 까지\nprint(greeting[6:])      # 6번 인덱스부터 끝까지\nprint(greeting[0:10:2])  # 처음부터 9번째 인덱스 까지 2칸씩 띄워서 출력\nprint(greeting[0:10:3])  # 처음부터 9번째 인덱스 까지 3칸씩 띄워서 출력\nprint(greeting[0:10:4])  # 처음부터 9번째 인덱스 까지 4칸씩 띄워서 출력\n```\n\n    He\n    Hello Ka\n    Kaggle\n    HloKg\n    HlKg\n    Hog\n    \n\n- 문자열 관련 메서드(추가공부)\n  + split()\n  + sort()\n\n## 리스트(매우중요)\n- []로 표시,\n- [item1, item2, item3]\n- 포용하는 범위가 넓다.\n- 파이썬 코딩의 시작\n\n\n```python\na = []              # 빈 리스트\na_func = list()     # 빈 리스트 생성\nb = [1]             # 숫자 요소\nc = ['apple']       # 문자요소\nd = [1, 2, ['apple'], 'apple']\nprint(d)\n```\n\n### 리스트 값 수정하기\n- 리스트 값 수정\n\n\n```python\na = [0, 1, 2]\na[0] = \"아무값\"\nprint(a)\n```\n\n    ['아무값', 1, 2]\n    \n\n### 리스트 값 추가하기\n- 메서드 사용\n- append = 하나만 추가하고 싶을 때\n- extend = 여러개를 추가하고 싶을 때\n\n\n```python\na = [100, 200, 300]\na.append(400)    # a = a.append(400)이 아니다.\n\nprint(a)\n\na.append([500,600])\nprint(a)\n```\n\n    [100, 200, 300, 400]\n    [100, 200, 300, 400, [500, 600]]\n    \n\n\n```python\na = [100, 200, 300]\na.append(400)\n\nprint(a)\n\na.extend([400,500])   # 리스트 안에 리스트를 추가할 때\nprint(a)\n```\n\n    [100, 200, 300, 400]\n    [100, 200, 300, 400, 400, 500]\n    \n\n- insert(인덱스 위치, 값)\n\n\n```python\na = [100, 200, 300]\na.insert(1, 1000)\nprint(a)\n```\n\n    [100, 1000, 200, 300]\n    \n\n### 리스트 값 삭제하기\n- remove()\n\n\n```python\na = [1, 2, 1, 2, 10]\na.remove(1)\n\nprint(a)   # 처음 나오는 '1' 을 제거한다.\n\na.remove(10)\nprint(a)\n```\n\n    [2, 1, 2, 10]\n    [2, 1, 2]\n    \n\n- del\n\n\n```python\na = [0, 0, 1, 2, 3, 4]\ndel a[1]    # 2번째 인덱스 값을 삭제\nprint(a)\n\ndel a[0:2]\nprint(a)\n```\n\n    [0, 1, 2, 3, 4]\n    [2, 3, 4]\n    \n\n- pop()\n\n\n```python\na = [1, 2, 3, 4, 5]\nrem = a.pop(1)\nprint(a)\nprint(rem)\nx = a.pop()\nprint(a)\nprint(x)\n```\n\n    [1, 3, 4, 5]\n    2\n    [1, 3, 4]\n    5\n    \n\n- clear() : 리스트 내 모든 값 삭제\n- index(\"값\") : 값의 위치를 불러옴\n\n\n```python\na = [1,4,5,2,3]\nb = [\"철수\", \"영희\", \"길동\"]\nprint(a.index(4))          # \"4\" 의 인덱스 값\nprint(b.index(\"길동\"))     # \"길동\" 의 인덱스 값\n```\n\n    1\n    2\n    \n\n- sort : 리스트의 정렬(오름차순, 내림차순)\n\n\n```python\na = [1,4,5,2,3]\na.sort()              # 오름차순\nprint(a)\na.sort(reverse=True)  # 내림차순\nprint(a)\n```\n\n    [1, 2, 3, 4, 5]\n    [5, 4, 3, 2, 1]\n    \n\n## 튜플\n- 면접질문 : 리스트와 튜플의 차이가 뭐예요?\n  + 리스트 : []\n    + 수정, 삭제, 추가 가능\n  + 튜플 : ()\n    + 다 안됨\n\n\n```python\ntuple1 = (0)\ntuple2 = (0, )\ntuple3 = 0, 1, 2\n\nprint(type(tuple1))\nprint(type(tuple2))   # \",\"가 찍히느냐 안 찍히느냐에 따라 유형이 달라진다\nprint(type(tuple3))\n\nprint(tuple1)\nprint(tuple2)\nprint(tuple3)\n```\n\n    <class 'int'>\n    <class 'tuple'>\n    <class 'tuple'>\n    0\n    (0,)\n    (0, 1, 2)\n    \n\n\n```python\na = (0, 1, 2, 3, 'a')   # 삭제 안됨\ndel a [4]\n```\n\n\n    ---------------------------------------------------------------------------\n\n    TypeError                                 Traceback (most recent call last)\n\n    <ipython-input-45-d866ffd24276> in <module>()\n          1 a = (0, 1, 2, 3, 'a')\n    ----> 2 del a [4]\n    \n\n    TypeError: 'tuple' object doesn't support item deletion\n\n\n\n```python\na = (0, 1, 2, 3, 'a')   # 수정 안됨\na[4] = 4\nprint(a)\n```\n\n\n    ---------------------------------------------------------------------------\n\n    TypeError                                 Traceback (most recent call last)\n\n    <ipython-input-47-fdbbdf9f616e> in <module>()\n          1 a = (0, 1, 2, 3, 'a')\n    ----> 2 a[4] = 4\n          3 print(a)\n    \n\n    TypeError: 'tuple' object does not support item assignment\n\n\n## 튜플(=리스트) 연산자\n- 문자열 연산자\n- +, *\n\n\n```python\nt1 = [0, 1, 2]\nt2 = [3, 4, 5]\nprint(t1 + t2)\nprint(t1 * 3)\n```\n\n    (0, 1, 2, 3, 4, 5)\n    \n\n\n    ---------------------------------------------------------------------------\n\n    TypeError                                 Traceback (most recent call last)\n\n    <ipython-input-51-d5cac866d659> in <module>()\n          2 t2 = (3, 4, 5)\n          3 print(t1 + t2)\n    ----> 4 print(t1 * t2)\n    \n\n    TypeError: can't multiply sequence by non-int of type 'tuple'\n\n\n## 딕셔너리\n- Key(키)와 Value(값)으로 구성됨\n- 슬라이싱 = (값의 순서가 존재해야 함)\n- 딕셔너리 = 순서라는 개념 자체가 존재하지 않음(슬라이싱x)\n\n\n```python\ntemp_dict = {\n    'teacher' : 'evan',\n    'class' : 15,\n    'students' : ['s1', 's2', 's3']\n}\n\nprint(temp_dict[\"teacher\"])\nprint(temp_dict['class'])\nprint(temp_dict['students'])\nprint(temp_dict['A'])       # A라는 Key가 없음\n```\n\n    evan\n    15\n    ['s1', 's2', 's3']\n    \n\n\n    ---------------------------------------------------------------------------\n\n    KeyError                                  Traceback (most recent call last)\n\n    <ipython-input-55-4cf39da18c67> in <module>()\n          8 print(temp_dict['class'])\n          9 print(temp_dict['students'])\n    ---> 10 print(temp_dict['A'])\n    \n\n    KeyError: 'A'\n\n\n- keys() 값만 출력\n\n\n```python\ntemp_dict.keys()\nlist(temp_dict.keys())   #list로 형변환\n```\n\n\n\n\n    ['teacher', 'class', 'students']\n\n\n\n- values() 값만 출력\n\n\n```python\ntemp_dict.values()\nlist(temp_dict.values())  #list로 형 변환\n```\n\n- items() key-value 쌍으로, list와 tuple 형태로 반환\n\n\n```python\ntemp_dict.items()\nlist(temp_dict.items())   #list로 형 변환\n```\n\n\n\n\n    [('teacher', 'evan'), ('class', 15), ('students', ['s1', 's2', 's3'])]\n\n\n\n## 조건문\n- 조건을 만족하는 처음 조건만 실행된다.\n\n\n```python\na = int(input(\"숫자를 입력하세요\"))\nif a > 5:                      # 5뒤에 \":\" 을 꼭 찍어줘야 된다.\n  print(\"a는 5보다 크다\")\nelif a > 0:                    # elif 는 elseif 의 뜻으로 if와 else를 이어주는 역할이다\n  print(\"a는 0보다 크다\")\nelif a > -5:\n  print(\"a는 -5보다 크다\")\nelse:\n  print(\"a는 매우 작다\")\n```\n\n    숫자를 입력하세요3\n    a는 0보다 크다\n    \n\n\n```python\n# Hello World 1000번 출력하세요\nfor idx in range(10):\n  # print(idx+1)                # 방법1\n  print(idx+1, \"Hello World\")   # 방법2\n\n```\n\n    1\n    Hello World\n    2\n    Hello World\n    3\n    Hello World\n    \n\n- for loop if 조건문 사용\n- 문자열, 리스트 등 --> 시퀀스 데이터(반복문 돌릴 수 있는 데이터)\n\n\n```python\na = \"Kaggle\"\n# g로 시작하면 반복문을 멈추세요\nfor x in a:\n  print(x)\n  if x == 'g':\n    break\n    # 여기에 print(x)이면 어떻게 출력될까?\n```\n\n    K\n    a\n    g\n    \n\n- enumerate()\n\n\n```python\nalphabets = ['A', 'B', 'C']\nfor index, value in enumerate(alphabets):   # in 다음에 표시할 수 있는 함수가 여러가지가 있다. 그때그때 상황 맞춰서 써야 함\n  print(index, value)\n```\n\n    0 A\n    1 B\n    2 C\n    \n\n## 리스트 컴프리헨션\nlist comprehension\n\n\n\n```python\n\"a\" in \"apple\"\n```\n\n\n\n\n    True\n\n\n\n\n```python\nfruits = ['apple', 'kiwi', 'mango']\nnewlists = []\n\n# 알파벳 a가 있는 과일만 추출 후, 새로운 리스트에 담기\nfor fruit in fruits:\n  # print(fruit)\n  if \"a\" in fruit:\n    newlists.append(fruit)\nprint(newlists)\n```\n\n    ['apple', 'mango']\n    \n\n\n```python\n# 리스트 컴프리헨션(한 줄에 코드 다 입력하는 방식)\nnewlist = [fruit for fruit in fruits if 'a' in fruit]\nprint(newlist)\n```\n\n    ['apple', 'mango']\n    \n","source":"_posts/day0627.md","raw":"---\ntitle: \"Python 기초문법\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: Python\nclearReading: true\nthumbnailImage: python.png\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-06-27'\n---\n\n- Hello World\n- 주석처리\n- 변수 (수치형, 자료형, bool형)\n<!-- more -->\n\n```python\nprint(\"Hello World\")\n```\n\n    Hello World\n    \n\n## 주석처리\n- 1줄 주석, 여러줄 주석처리\n- 여러 줄 주석처리\n  + 함수 또는 클래스를 문서화 할 때 주로 사용\n\n- 프로젝트 할 떄\n  + 전체 공정 100\n  + 코드 / 코드 문서화 / 한글작업 문서화\n\n\n```python\n# print() 함수 사용\nprint(\"1줄 주석\")\n\n\"\"\"\n여러 줄 주석\n쌍따옴표 3개를 입력해주세요\n앞과 뒤로\n\"\"\"\n\nprint(\"여러줄 주석\")\n```\n\n    1줄 주석\n    여러줄 주석\n    \n\n## 변수 (Scalar)\n- 자료형\n- Scalar형 / Non-Scalar형\n\n### 수치형 / 자료형\n- int, float\n\n\n```python\nnum_int = 1\nprint(num_int)\nprint(type(num_int))\n```\n\n    1\n    <class 'int'>\n    \n\n\n```python\nnum_float = 0.1\nprint(num_float)\nprint(type(num_float))\n```\n\n    0.1\n    <class 'float'>\n    \n\n### Bool형\n- True, False       (앞 글자만 대문자)\n- R : TRUE, FALSE   (R 은 뒷 글자 전부 대문자)\n\n\n```python\nbool_true = True\nprint(bool_true)\nprint(type(bool_true))\n```\n\n    True\n    <class 'bool'>\n    \n\n### None 자료형\n- Null값, 값이 정해지지 않은 자료형\n\n\n```python\nnone_x = None\nprint(none_x)\nprint(type(none_x))\n```\n\n    None\n    <class 'NoneType'>\n    \n\n## 사칙연산\n- 정수형 사칙연산, 실수형 사칙연산\n- 결괏값의 자료형\n\n### 정수형 사칙연산\n+, -, *, /\n\n\n```python\na = 3\nb = 2\nprint('a + b = ', a+b)\n```\n\n    a + b =  5\n    \n\n### 실수형 사칙 연산\n\n\n```python\na = 3\nb = 2\nprint('a + b = ', a+b)\nprint('a - b = ', a-b)\nprint('a * b = ', a*b)\nprint('a / b = ', a/b)\n# 나누기는 정수/정수 했어도 '실수' 형이 나올 수 있다.\n```\n\n    a + b =  5\n    a - b =  1\n    a * b =  6\n    a / b =  1.5\n    \n\n## 논리형 연산자\n- Bool형\n- True와 False 값으로 정의\n- 조건식\n  + 교집합(=and), 합집합(=or)\n  \n\n\n```python\nprint(True and True)\nprint(True and False)\nprint(False and True)\nprint(False and False)\n```\n\n    True\n    False\n    False\n    False\n    \n\n\n```python\nprint(True or True)\nprint(True or False)\nprint(False or True)\nprint(False or False)\n```\n\n    True\n    True\n    True\n    False\n    \n\n## 비교 연산자\n- 비교 연산자는 부등호를 의미한다.\n\n\n```python\nprint(4>3)  # 참   = True\nprint(4<3)  # 거짓 = False\n\nprint(4 > 3 and 4 < 3)  #False\nprint(4 > 3 or 4 < 3)   #True\n```\n\n    True\n    False\n    False\n    True\n    \n\n## 논리형 & 비교 연산자 응용\n- input()\n!!! 중요\n- 형변환\n  + 데이터 타입을 바꾸는 것\n\n\n```python\nvar = int(input(\"숫자를 입력하세요..!\"))\nprint(var)\nprint(type(var))\n```\n\n    숫자를 입력하세요..!3\n    3\n    <class 'int'>\n    \n\n\n```python\nnum1 = int(input(\"첫번쨰 숫자를 입력하세요..!\"))\nnum2 = int(input(\"두번째 숫자를 입력하세요..!\"))\nnum3 = int(input(\"세번째 숫자를 입력하세요..!\"))\nnum4 = int(input(\"네번째 숫자를 입력하세요..!\"))\n```\n\n    첫번쨰 숫자를 입력하세요..!10\n    두번째 숫자를 입력하세요..!20\n    세번째 숫자를 입력하세요..!30\n    네번째 숫자를 입력하세요..!40\n    \n\n\n```python\nvar1 = num1 >= num2\nvar2 = num3 < num4\n```\n\n\n```python\nprint(var1 and var2)\n\n\n```\n\n    False\n    \n\n## String\n- Non Scalar\n\n\n\n```python\nprint('Hello World')\nprint(\"Hello World\")\n\nprint(\"'Hello World'\")  # 작은 따옴표(') 출력\nprint('\"Hello World\"')  # 큰 따옴표(\") 출력\n```\n\n    Hello World\n    Hello World\n    'Hello World'\n    \n\n## String Operators\n- 문자열 연산자\n- +, * 만 가능\n\n\n```python\nstr1 = \"Hello \"\nstr2 = \"World   \"\nprint(str1 + str2)\n```\n\n    Hello World   \n    \n\n\n```python\ngreet = str1 + str2\nprint(greet * 3)\n```\n\n    Hello World   Hello World   Hello World   \n    \n\n## 문자열 인덱싱\n- 인덱싱은 0번째 부터 시작(공백도 포함)\n\n\n```python\ngreeting = \"Hello Kaggle\"\ni = 7\nprint(greeting[i])\n```\n\n    a\n    \n\n\n```python\ngreeting = \"Hello Kaggle\"\ni = int(input(\"숫자를 입력하세요..! = \"))\nprint(greeting[i])\n```\n\n    숫자를 입력하세요..! = 4\n    o\n    \n\n## 슬라이싱\n\n\n```python\ngreeting = \"Hello Kaggle\"\n# print(greeting[시작 인덱스:끝 인덱스-1])\nprint(greeting[0:2])     # 0, 1번째 인덱스가 출력\nprint(greeting[:8])      # 처음부터 7번째 인덱스 까지\nprint(greeting[6:])      # 6번 인덱스부터 끝까지\nprint(greeting[0:10:2])  # 처음부터 9번째 인덱스 까지 2칸씩 띄워서 출력\nprint(greeting[0:10:3])  # 처음부터 9번째 인덱스 까지 3칸씩 띄워서 출력\nprint(greeting[0:10:4])  # 처음부터 9번째 인덱스 까지 4칸씩 띄워서 출력\n```\n\n    He\n    Hello Ka\n    Kaggle\n    HloKg\n    HlKg\n    Hog\n    \n\n- 문자열 관련 메서드(추가공부)\n  + split()\n  + sort()\n\n## 리스트(매우중요)\n- []로 표시,\n- [item1, item2, item3]\n- 포용하는 범위가 넓다.\n- 파이썬 코딩의 시작\n\n\n```python\na = []              # 빈 리스트\na_func = list()     # 빈 리스트 생성\nb = [1]             # 숫자 요소\nc = ['apple']       # 문자요소\nd = [1, 2, ['apple'], 'apple']\nprint(d)\n```\n\n### 리스트 값 수정하기\n- 리스트 값 수정\n\n\n```python\na = [0, 1, 2]\na[0] = \"아무값\"\nprint(a)\n```\n\n    ['아무값', 1, 2]\n    \n\n### 리스트 값 추가하기\n- 메서드 사용\n- append = 하나만 추가하고 싶을 때\n- extend = 여러개를 추가하고 싶을 때\n\n\n```python\na = [100, 200, 300]\na.append(400)    # a = a.append(400)이 아니다.\n\nprint(a)\n\na.append([500,600])\nprint(a)\n```\n\n    [100, 200, 300, 400]\n    [100, 200, 300, 400, [500, 600]]\n    \n\n\n```python\na = [100, 200, 300]\na.append(400)\n\nprint(a)\n\na.extend([400,500])   # 리스트 안에 리스트를 추가할 때\nprint(a)\n```\n\n    [100, 200, 300, 400]\n    [100, 200, 300, 400, 400, 500]\n    \n\n- insert(인덱스 위치, 값)\n\n\n```python\na = [100, 200, 300]\na.insert(1, 1000)\nprint(a)\n```\n\n    [100, 1000, 200, 300]\n    \n\n### 리스트 값 삭제하기\n- remove()\n\n\n```python\na = [1, 2, 1, 2, 10]\na.remove(1)\n\nprint(a)   # 처음 나오는 '1' 을 제거한다.\n\na.remove(10)\nprint(a)\n```\n\n    [2, 1, 2, 10]\n    [2, 1, 2]\n    \n\n- del\n\n\n```python\na = [0, 0, 1, 2, 3, 4]\ndel a[1]    # 2번째 인덱스 값을 삭제\nprint(a)\n\ndel a[0:2]\nprint(a)\n```\n\n    [0, 1, 2, 3, 4]\n    [2, 3, 4]\n    \n\n- pop()\n\n\n```python\na = [1, 2, 3, 4, 5]\nrem = a.pop(1)\nprint(a)\nprint(rem)\nx = a.pop()\nprint(a)\nprint(x)\n```\n\n    [1, 3, 4, 5]\n    2\n    [1, 3, 4]\n    5\n    \n\n- clear() : 리스트 내 모든 값 삭제\n- index(\"값\") : 값의 위치를 불러옴\n\n\n```python\na = [1,4,5,2,3]\nb = [\"철수\", \"영희\", \"길동\"]\nprint(a.index(4))          # \"4\" 의 인덱스 값\nprint(b.index(\"길동\"))     # \"길동\" 의 인덱스 값\n```\n\n    1\n    2\n    \n\n- sort : 리스트의 정렬(오름차순, 내림차순)\n\n\n```python\na = [1,4,5,2,3]\na.sort()              # 오름차순\nprint(a)\na.sort(reverse=True)  # 내림차순\nprint(a)\n```\n\n    [1, 2, 3, 4, 5]\n    [5, 4, 3, 2, 1]\n    \n\n## 튜플\n- 면접질문 : 리스트와 튜플의 차이가 뭐예요?\n  + 리스트 : []\n    + 수정, 삭제, 추가 가능\n  + 튜플 : ()\n    + 다 안됨\n\n\n```python\ntuple1 = (0)\ntuple2 = (0, )\ntuple3 = 0, 1, 2\n\nprint(type(tuple1))\nprint(type(tuple2))   # \",\"가 찍히느냐 안 찍히느냐에 따라 유형이 달라진다\nprint(type(tuple3))\n\nprint(tuple1)\nprint(tuple2)\nprint(tuple3)\n```\n\n    <class 'int'>\n    <class 'tuple'>\n    <class 'tuple'>\n    0\n    (0,)\n    (0, 1, 2)\n    \n\n\n```python\na = (0, 1, 2, 3, 'a')   # 삭제 안됨\ndel a [4]\n```\n\n\n    ---------------------------------------------------------------------------\n\n    TypeError                                 Traceback (most recent call last)\n\n    <ipython-input-45-d866ffd24276> in <module>()\n          1 a = (0, 1, 2, 3, 'a')\n    ----> 2 del a [4]\n    \n\n    TypeError: 'tuple' object doesn't support item deletion\n\n\n\n```python\na = (0, 1, 2, 3, 'a')   # 수정 안됨\na[4] = 4\nprint(a)\n```\n\n\n    ---------------------------------------------------------------------------\n\n    TypeError                                 Traceback (most recent call last)\n\n    <ipython-input-47-fdbbdf9f616e> in <module>()\n          1 a = (0, 1, 2, 3, 'a')\n    ----> 2 a[4] = 4\n          3 print(a)\n    \n\n    TypeError: 'tuple' object does not support item assignment\n\n\n## 튜플(=리스트) 연산자\n- 문자열 연산자\n- +, *\n\n\n```python\nt1 = [0, 1, 2]\nt2 = [3, 4, 5]\nprint(t1 + t2)\nprint(t1 * 3)\n```\n\n    (0, 1, 2, 3, 4, 5)\n    \n\n\n    ---------------------------------------------------------------------------\n\n    TypeError                                 Traceback (most recent call last)\n\n    <ipython-input-51-d5cac866d659> in <module>()\n          2 t2 = (3, 4, 5)\n          3 print(t1 + t2)\n    ----> 4 print(t1 * t2)\n    \n\n    TypeError: can't multiply sequence by non-int of type 'tuple'\n\n\n## 딕셔너리\n- Key(키)와 Value(값)으로 구성됨\n- 슬라이싱 = (값의 순서가 존재해야 함)\n- 딕셔너리 = 순서라는 개념 자체가 존재하지 않음(슬라이싱x)\n\n\n```python\ntemp_dict = {\n    'teacher' : 'evan',\n    'class' : 15,\n    'students' : ['s1', 's2', 's3']\n}\n\nprint(temp_dict[\"teacher\"])\nprint(temp_dict['class'])\nprint(temp_dict['students'])\nprint(temp_dict['A'])       # A라는 Key가 없음\n```\n\n    evan\n    15\n    ['s1', 's2', 's3']\n    \n\n\n    ---------------------------------------------------------------------------\n\n    KeyError                                  Traceback (most recent call last)\n\n    <ipython-input-55-4cf39da18c67> in <module>()\n          8 print(temp_dict['class'])\n          9 print(temp_dict['students'])\n    ---> 10 print(temp_dict['A'])\n    \n\n    KeyError: 'A'\n\n\n- keys() 값만 출력\n\n\n```python\ntemp_dict.keys()\nlist(temp_dict.keys())   #list로 형변환\n```\n\n\n\n\n    ['teacher', 'class', 'students']\n\n\n\n- values() 값만 출력\n\n\n```python\ntemp_dict.values()\nlist(temp_dict.values())  #list로 형 변환\n```\n\n- items() key-value 쌍으로, list와 tuple 형태로 반환\n\n\n```python\ntemp_dict.items()\nlist(temp_dict.items())   #list로 형 변환\n```\n\n\n\n\n    [('teacher', 'evan'), ('class', 15), ('students', ['s1', 's2', 's3'])]\n\n\n\n## 조건문\n- 조건을 만족하는 처음 조건만 실행된다.\n\n\n```python\na = int(input(\"숫자를 입력하세요\"))\nif a > 5:                      # 5뒤에 \":\" 을 꼭 찍어줘야 된다.\n  print(\"a는 5보다 크다\")\nelif a > 0:                    # elif 는 elseif 의 뜻으로 if와 else를 이어주는 역할이다\n  print(\"a는 0보다 크다\")\nelif a > -5:\n  print(\"a는 -5보다 크다\")\nelse:\n  print(\"a는 매우 작다\")\n```\n\n    숫자를 입력하세요3\n    a는 0보다 크다\n    \n\n\n```python\n# Hello World 1000번 출력하세요\nfor idx in range(10):\n  # print(idx+1)                # 방법1\n  print(idx+1, \"Hello World\")   # 방법2\n\n```\n\n    1\n    Hello World\n    2\n    Hello World\n    3\n    Hello World\n    \n\n- for loop if 조건문 사용\n- 문자열, 리스트 등 --> 시퀀스 데이터(반복문 돌릴 수 있는 데이터)\n\n\n```python\na = \"Kaggle\"\n# g로 시작하면 반복문을 멈추세요\nfor x in a:\n  print(x)\n  if x == 'g':\n    break\n    # 여기에 print(x)이면 어떻게 출력될까?\n```\n\n    K\n    a\n    g\n    \n\n- enumerate()\n\n\n```python\nalphabets = ['A', 'B', 'C']\nfor index, value in enumerate(alphabets):   # in 다음에 표시할 수 있는 함수가 여러가지가 있다. 그때그때 상황 맞춰서 써야 함\n  print(index, value)\n```\n\n    0 A\n    1 B\n    2 C\n    \n\n## 리스트 컴프리헨션\nlist comprehension\n\n\n\n```python\n\"a\" in \"apple\"\n```\n\n\n\n\n    True\n\n\n\n\n```python\nfruits = ['apple', 'kiwi', 'mango']\nnewlists = []\n\n# 알파벳 a가 있는 과일만 추출 후, 새로운 리스트에 담기\nfor fruit in fruits:\n  # print(fruit)\n  if \"a\" in fruit:\n    newlists.append(fruit)\nprint(newlists)\n```\n\n    ['apple', 'mango']\n    \n\n\n```python\n# 리스트 컴프리헨션(한 줄에 코드 다 입력하는 방식)\nnewlist = [fruit for fruit in fruits if 'a' in fruit]\nprint(newlist)\n```\n\n    ['apple', 'mango']\n    \n","slug":"day0627","published":1,"updated":"2022-08-06T13:32:19.078Z","_id":"cl5fcok7r000mjku0829pdfnw","comments":1,"layout":"post","photos":[],"link":"","content":"<ul>\n<li>Hello World</li>\n<li>주석처리</li>\n<li>변수 (수치형, 자료형, bool형)<span id=\"more\"></span></li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Hello World&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Hello World\n</code></pre>\n<h2 id=\"주석처리\"><a href=\"#주석처리\" class=\"headerlink\" title=\"주석처리\"></a>주석처리</h2><ul>\n<li><p>1줄 주석, 여러줄 주석처리</p>\n</li>\n<li><p>여러 줄 주석처리</p>\n<ul>\n<li>함수 또는 클래스를 문서화 할 때 주로 사용</li>\n</ul>\n</li>\n<li><p>프로젝트 할 떄</p>\n<ul>\n<li>전체 공정 100</li>\n<li>코드 &#x2F; 코드 문서화 &#x2F; 한글작업 문서화</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># print() 함수 사용</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;1줄 주석&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">여러 줄 주석</span></span><br><span class=\"line\"><span class=\"string\">쌍따옴표 3개를 입력해주세요</span></span><br><span class=\"line\"><span class=\"string\">앞과 뒤로</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;여러줄 주석&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>1줄 주석\n여러줄 주석\n</code></pre>\n<h2 id=\"변수-Scalar\"><a href=\"#변수-Scalar\" class=\"headerlink\" title=\"변수 (Scalar)\"></a>변수 (Scalar)</h2><ul>\n<li>자료형</li>\n<li>Scalar형 &#x2F; Non-Scalar형</li>\n</ul>\n<h3 id=\"수치형-x2F-자료형\"><a href=\"#수치형-x2F-자료형\" class=\"headerlink\" title=\"수치형 &#x2F; 자료형\"></a>수치형 &#x2F; 자료형</h3><ul>\n<li>int, float</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">num_int = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(num_int)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(num_int))</span><br></pre></td></tr></table></figure>\n\n<pre><code>1\n&lt;class &#39;int&#39;&gt;\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">num_float = <span class=\"number\">0.1</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(num_float)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(num_float))</span><br></pre></td></tr></table></figure>\n\n<pre><code>0.1\n&lt;class &#39;float&#39;&gt;\n</code></pre>\n<h3 id=\"Bool형\"><a href=\"#Bool형\" class=\"headerlink\" title=\"Bool형\"></a>Bool형</h3><ul>\n<li>True, False       (앞 글자만 대문자)</li>\n<li>R : TRUE, FALSE   (R 은 뒷 글자 전부 대문자)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bool_true = <span class=\"literal\">True</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(bool_true)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(bool_true))</span><br></pre></td></tr></table></figure>\n\n<pre><code>True\n&lt;class &#39;bool&#39;&gt;\n</code></pre>\n<h3 id=\"None-자료형\"><a href=\"#None-자료형\" class=\"headerlink\" title=\"None 자료형\"></a>None 자료형</h3><ul>\n<li>Null값, 값이 정해지지 않은 자료형</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">none_x = <span class=\"literal\">None</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(none_x)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(none_x))</span><br></pre></td></tr></table></figure>\n\n<pre><code>None\n&lt;class &#39;NoneType&#39;&gt;\n</code></pre>\n<h2 id=\"사칙연산\"><a href=\"#사칙연산\" class=\"headerlink\" title=\"사칙연산\"></a>사칙연산</h2><ul>\n<li>정수형 사칙연산, 실수형 사칙연산</li>\n<li>결괏값의 자료형</li>\n</ul>\n<h3 id=\"정수형-사칙연산\"><a href=\"#정수형-사칙연산\" class=\"headerlink\" title=\"정수형 사칙연산\"></a>정수형 사칙연산</h3><p>+, -, *, &#x2F;</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"number\">3</span></span><br><span class=\"line\">b = <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;a + b = &#x27;</span>, a+b)</span><br></pre></td></tr></table></figure>\n\n<pre><code>a + b =  5\n</code></pre>\n<h3 id=\"실수형-사칙-연산\"><a href=\"#실수형-사칙-연산\" class=\"headerlink\" title=\"실수형 사칙 연산\"></a>실수형 사칙 연산</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"number\">3</span></span><br><span class=\"line\">b = <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;a + b = &#x27;</span>, a+b)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;a - b = &#x27;</span>, a-b)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;a * b = &#x27;</span>, a*b)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;a / b = &#x27;</span>, a/b)</span><br><span class=\"line\"><span class=\"comment\"># 나누기는 정수/정수 했어도 &#x27;실수&#x27; 형이 나올 수 있다.</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>a + b =  5\na - b =  1\na * b =  6\na / b =  1.5\n</code></pre>\n<h2 id=\"논리형-연산자\"><a href=\"#논리형-연산자\" class=\"headerlink\" title=\"논리형 연산자\"></a>논리형 연산자</h2><ul>\n<li>Bool형</li>\n<li>True와 False 값으로 정의</li>\n<li>조건식<ul>\n<li>교집합(&#x3D;and), 합집합(&#x3D;or)</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"literal\">True</span> <span class=\"keyword\">and</span> <span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"literal\">True</span> <span class=\"keyword\">and</span> <span class=\"literal\">False</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"literal\">False</span> <span class=\"keyword\">and</span> <span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"literal\">False</span> <span class=\"keyword\">and</span> <span class=\"literal\">False</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>True\nFalse\nFalse\nFalse\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"literal\">True</span> <span class=\"keyword\">or</span> <span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"literal\">True</span> <span class=\"keyword\">or</span> <span class=\"literal\">False</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"literal\">False</span> <span class=\"keyword\">or</span> <span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"literal\">False</span> <span class=\"keyword\">or</span> <span class=\"literal\">False</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>True\nTrue\nTrue\nFalse\n</code></pre>\n<h2 id=\"비교-연산자\"><a href=\"#비교-연산자\" class=\"headerlink\" title=\"비교 연산자\"></a>비교 연산자</h2><ul>\n<li>비교 연산자는 부등호를 의미한다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">4</span>&gt;<span class=\"number\">3</span>)  <span class=\"comment\"># 참   = True</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">4</span>&lt;<span class=\"number\">3</span>)  <span class=\"comment\"># 거짓 = False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">4</span> &gt; <span class=\"number\">3</span> <span class=\"keyword\">and</span> <span class=\"number\">4</span> &lt; <span class=\"number\">3</span>)  <span class=\"comment\">#False</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">4</span> &gt; <span class=\"number\">3</span> <span class=\"keyword\">or</span> <span class=\"number\">4</span> &lt; <span class=\"number\">3</span>)   <span class=\"comment\">#True</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>True\nFalse\nFalse\nTrue\n</code></pre>\n<h2 id=\"논리형-amp-비교-연산자-응용\"><a href=\"#논리형-amp-비교-연산자-응용\" class=\"headerlink\" title=\"논리형 &amp; 비교 연산자 응용\"></a>논리형 &amp; 비교 연산자 응용</h2><ul>\n<li>input()<br>!!! 중요</li>\n<li>형변환<ul>\n<li>데이터 타입을 바꾸는 것</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;숫자를 입력하세요..!&quot;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(var)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(var))</span><br></pre></td></tr></table></figure>\n\n<pre><code>숫자를 입력하세요..!3\n3\n&lt;class &#39;int&#39;&gt;\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">num1 = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;첫번쨰 숫자를 입력하세요..!&quot;</span>))</span><br><span class=\"line\">num2 = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;두번째 숫자를 입력하세요..!&quot;</span>))</span><br><span class=\"line\">num3 = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;세번째 숫자를 입력하세요..!&quot;</span>))</span><br><span class=\"line\">num4 = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;네번째 숫자를 입력하세요..!&quot;</span>))</span><br></pre></td></tr></table></figure>\n\n<pre><code>첫번쨰 숫자를 입력하세요..!10\n두번째 숫자를 입력하세요..!20\n세번째 숫자를 입력하세요..!30\n네번째 숫자를 입력하세요..!40\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var1 = num1 &gt;= num2</span><br><span class=\"line\">var2 = num3 &lt; num4</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(var1 <span class=\"keyword\">and</span> var2)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<pre><code>False\n</code></pre>\n<h2 id=\"String\"><a href=\"#String\" class=\"headerlink\" title=\"String\"></a>String</h2><ul>\n<li>Non Scalar</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Hello World&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Hello World&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&#x27;Hello World&#x27;&quot;</span>)  <span class=\"comment\"># 작은 따옴표(&#x27;) 출력</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&quot;Hello World&quot;&#x27;</span>)  <span class=\"comment\"># 큰 따옴표(&quot;) 출력</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>Hello World\nHello World\n&#39;Hello World&#39;\n</code></pre>\n<h2 id=\"String-Operators\"><a href=\"#String-Operators\" class=\"headerlink\" title=\"String Operators\"></a>String Operators</h2><ul>\n<li>문자열 연산자</li>\n<li>+, * 만 가능</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str1 = <span class=\"string\">&quot;Hello &quot;</span></span><br><span class=\"line\">str2 = <span class=\"string\">&quot;World   &quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(str1 + str2)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Hello World   \n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">greet = str1 + str2</span><br><span class=\"line\"><span class=\"built_in\">print</span>(greet * <span class=\"number\">3</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Hello World   Hello World   Hello World   \n</code></pre>\n<h2 id=\"문자열-인덱싱\"><a href=\"#문자열-인덱싱\" class=\"headerlink\" title=\"문자열 인덱싱\"></a>문자열 인덱싱</h2><ul>\n<li>인덱싱은 0번째 부터 시작(공백도 포함)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">greeting = <span class=\"string\">&quot;Hello Kaggle&quot;</span></span><br><span class=\"line\">i = <span class=\"number\">7</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(greeting[i])</span><br></pre></td></tr></table></figure>\n\n<pre><code>a\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">greeting = <span class=\"string\">&quot;Hello Kaggle&quot;</span></span><br><span class=\"line\">i = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;숫자를 입력하세요..! = &quot;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(greeting[i])</span><br></pre></td></tr></table></figure>\n\n<pre><code>숫자를 입력하세요..! = 4\no\n</code></pre>\n<h2 id=\"슬라이싱\"><a href=\"#슬라이싱\" class=\"headerlink\" title=\"슬라이싱\"></a>슬라이싱</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">greeting = <span class=\"string\">&quot;Hello Kaggle&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># print(greeting[시작 인덱스:끝 인덱스-1])</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(greeting[<span class=\"number\">0</span>:<span class=\"number\">2</span>])     <span class=\"comment\"># 0, 1번째 인덱스가 출력</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(greeting[:<span class=\"number\">8</span>])      <span class=\"comment\"># 처음부터 7번째 인덱스 까지</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(greeting[<span class=\"number\">6</span>:])      <span class=\"comment\"># 6번 인덱스부터 끝까지</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(greeting[<span class=\"number\">0</span>:<span class=\"number\">10</span>:<span class=\"number\">2</span>])  <span class=\"comment\"># 처음부터 9번째 인덱스 까지 2칸씩 띄워서 출력</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(greeting[<span class=\"number\">0</span>:<span class=\"number\">10</span>:<span class=\"number\">3</span>])  <span class=\"comment\"># 처음부터 9번째 인덱스 까지 3칸씩 띄워서 출력</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(greeting[<span class=\"number\">0</span>:<span class=\"number\">10</span>:<span class=\"number\">4</span>])  <span class=\"comment\"># 처음부터 9번째 인덱스 까지 4칸씩 띄워서 출력</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>He\nHello Ka\nKaggle\nHloKg\nHlKg\nHog\n</code></pre>\n<ul>\n<li>문자열 관련 메서드(추가공부)<ul>\n<li>split()</li>\n<li>sort()</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"리스트-매우중요\"><a href=\"#리스트-매우중요\" class=\"headerlink\" title=\"리스트(매우중요)\"></a>리스트(매우중요)</h2><ul>\n<li>[]로 표시,</li>\n<li>[item1, item2, item3]</li>\n<li>포용하는 범위가 넓다.</li>\n<li>파이썬 코딩의 시작</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = []              <span class=\"comment\"># 빈 리스트</span></span><br><span class=\"line\">a_func = <span class=\"built_in\">list</span>()     <span class=\"comment\"># 빈 리스트 생성</span></span><br><span class=\"line\">b = [<span class=\"number\">1</span>]             <span class=\"comment\"># 숫자 요소</span></span><br><span class=\"line\">c = [<span class=\"string\">&#x27;apple&#x27;</span>]       <span class=\"comment\"># 문자요소</span></span><br><span class=\"line\">d = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, [<span class=\"string\">&#x27;apple&#x27;</span>], <span class=\"string\">&#x27;apple&#x27;</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(d)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"리스트-값-수정하기\"><a href=\"#리스트-값-수정하기\" class=\"headerlink\" title=\"리스트 값 수정하기\"></a>리스트 값 수정하기</h3><ul>\n<li>리스트 값 수정</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\">a[<span class=\"number\">0</span>] = <span class=\"string\">&quot;아무값&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[&#39;아무값&#39;, 1, 2]\n</code></pre>\n<h3 id=\"리스트-값-추가하기\"><a href=\"#리스트-값-추가하기\" class=\"headerlink\" title=\"리스트 값 추가하기\"></a>리스트 값 추가하기</h3><ul>\n<li>메서드 사용</li>\n<li>append &#x3D; 하나만 추가하고 싶을 때</li>\n<li>extend &#x3D; 여러개를 추가하고 싶을 때</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [<span class=\"number\">100</span>, <span class=\"number\">200</span>, <span class=\"number\">300</span>]</span><br><span class=\"line\">a.append(<span class=\"number\">400</span>)    <span class=\"comment\"># a = a.append(400)이 아니다.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br><span class=\"line\"></span><br><span class=\"line\">a.append([<span class=\"number\">500</span>,<span class=\"number\">600</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[100, 200, 300, 400]\n[100, 200, 300, 400, [500, 600]]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [<span class=\"number\">100</span>, <span class=\"number\">200</span>, <span class=\"number\">300</span>]</span><br><span class=\"line\">a.append(<span class=\"number\">400</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br><span class=\"line\"></span><br><span class=\"line\">a.extend([<span class=\"number\">400</span>,<span class=\"number\">500</span>])   <span class=\"comment\"># 리스트 안에 리스트를 추가할 때</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[100, 200, 300, 400]\n[100, 200, 300, 400, 400, 500]\n</code></pre>\n<ul>\n<li>insert(인덱스 위치, 값)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [<span class=\"number\">100</span>, <span class=\"number\">200</span>, <span class=\"number\">300</span>]</span><br><span class=\"line\">a.insert(<span class=\"number\">1</span>, <span class=\"number\">1000</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[100, 1000, 200, 300]\n</code></pre>\n<h3 id=\"리스트-값-삭제하기\"><a href=\"#리스트-값-삭제하기\" class=\"headerlink\" title=\"리스트 값 삭제하기\"></a>리스트 값 삭제하기</h3><ul>\n<li>remove()</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">10</span>]</span><br><span class=\"line\">a.remove(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)   <span class=\"comment\"># 처음 나오는 &#x27;1&#x27; 을 제거한다.</span></span><br><span class=\"line\"></span><br><span class=\"line\">a.remove(<span class=\"number\">10</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[2, 1, 2, 10]\n[2, 1, 2]\n</code></pre>\n<ul>\n<li>del</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">del</span> a[<span class=\"number\">1</span>]    <span class=\"comment\"># 2번째 인덱스 값을 삭제</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">del</span> a[<span class=\"number\">0</span>:<span class=\"number\">2</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[0, 1, 2, 3, 4]\n[2, 3, 4]\n</code></pre>\n<ul>\n<li>pop()</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\">rem = a.pop(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(rem)</span><br><span class=\"line\">x = a.pop()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[1, 3, 4, 5]\n2\n[1, 3, 4]\n5\n</code></pre>\n<ul>\n<li>clear() : 리스트 내 모든 값 삭제</li>\n<li>index(“값”) : 값의 위치를 불러옴</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\">b = [<span class=\"string\">&quot;철수&quot;</span>, <span class=\"string\">&quot;영희&quot;</span>, <span class=\"string\">&quot;길동&quot;</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a.index(<span class=\"number\">4</span>))          <span class=\"comment\"># &quot;4&quot; 의 인덱스 값</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(b.index(<span class=\"string\">&quot;길동&quot;</span>))     <span class=\"comment\"># &quot;길동&quot; 의 인덱스 값</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>1\n2\n</code></pre>\n<ul>\n<li>sort : 리스트의 정렬(오름차순, 내림차순)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\">a.sort()              <span class=\"comment\"># 오름차순</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br><span class=\"line\">a.sort(reverse=<span class=\"literal\">True</span>)  <span class=\"comment\"># 내림차순</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[1, 2, 3, 4, 5]\n[5, 4, 3, 2, 1]\n</code></pre>\n<h2 id=\"튜플\"><a href=\"#튜플\" class=\"headerlink\" title=\"튜플\"></a>튜플</h2><ul>\n<li>면접질문 : 리스트와 튜플의 차이가 뭐예요?<ul>\n<li>리스트 : []<ul>\n<li>수정, 삭제, 추가 가능</li>\n</ul>\n</li>\n<li>튜플 : ()<ul>\n<li>다 안됨</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tuple1 = (<span class=\"number\">0</span>)</span><br><span class=\"line\">tuple2 = (<span class=\"number\">0</span>, )</span><br><span class=\"line\">tuple3 = <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(tuple1))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(tuple2))   <span class=\"comment\"># &quot;,&quot;가 찍히느냐 안 찍히느냐에 따라 유형이 달라진다</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(tuple3))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(tuple1)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(tuple2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(tuple3)</span><br></pre></td></tr></table></figure>\n\n<pre><code>&lt;class &#39;int&#39;&gt;\n&lt;class &#39;tuple&#39;&gt;\n&lt;class &#39;tuple&#39;&gt;\n0\n(0,)\n(0, 1, 2)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = (<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"string\">&#x27;a&#x27;</span>)   <span class=\"comment\"># 삭제 안됨</span></span><br><span class=\"line\"><span class=\"keyword\">del</span> a [<span class=\"number\">4</span>]</span><br></pre></td></tr></table></figure>\n\n\n<pre><code>---------------------------------------------------------------------------\n\nTypeError                                 Traceback (most recent call last)\n\n&lt;ipython-input-45-d866ffd24276&gt; in &lt;module&gt;()\n      1 a = (0, 1, 2, 3, &#39;a&#39;)\n----&gt; 2 del a [4]\n\n\nTypeError: &#39;tuple&#39; object doesn&#39;t support item deletion\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = (<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"string\">&#x27;a&#x27;</span>)   <span class=\"comment\"># 수정 안됨</span></span><br><span class=\"line\">a[<span class=\"number\">4</span>] = <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br></pre></td></tr></table></figure>\n\n\n<pre><code>---------------------------------------------------------------------------\n\nTypeError                                 Traceback (most recent call last)\n\n&lt;ipython-input-47-fdbbdf9f616e&gt; in &lt;module&gt;()\n      1 a = (0, 1, 2, 3, &#39;a&#39;)\n----&gt; 2 a[4] = 4\n      3 print(a)\n\n\nTypeError: &#39;tuple&#39; object does not support item assignment\n</code></pre>\n<h2 id=\"튜플-x3D-리스트-연산자\"><a href=\"#튜플-x3D-리스트-연산자\" class=\"headerlink\" title=\"튜플(&#x3D;리스트) 연산자\"></a>튜플(&#x3D;리스트) 연산자</h2><ul>\n<li>문자열 연산자</li>\n<li>+, *</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">t1 = [<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\">t2 = [<span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(t1 + t2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(t1 * <span class=\"number\">3</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(0, 1, 2, 3, 4, 5)\n\n\n\n---------------------------------------------------------------------------\n\nTypeError                                 Traceback (most recent call last)\n\n&lt;ipython-input-51-d5cac866d659&gt; in &lt;module&gt;()\n      2 t2 = (3, 4, 5)\n      3 print(t1 + t2)\n----&gt; 4 print(t1 * t2)\n\n\nTypeError: can&#39;t multiply sequence by non-int of type &#39;tuple&#39;\n</code></pre>\n<h2 id=\"딕셔너리\"><a href=\"#딕셔너리\" class=\"headerlink\" title=\"딕셔너리\"></a>딕셔너리</h2><ul>\n<li>Key(키)와 Value(값)으로 구성됨</li>\n<li>슬라이싱 &#x3D; (값의 순서가 존재해야 함)</li>\n<li>딕셔너리 &#x3D; 순서라는 개념 자체가 존재하지 않음(슬라이싱x)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_dict = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;teacher&#x27;</span> : <span class=\"string\">&#x27;evan&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;class&#x27;</span> : <span class=\"number\">15</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;students&#x27;</span> : [<span class=\"string\">&#x27;s1&#x27;</span>, <span class=\"string\">&#x27;s2&#x27;</span>, <span class=\"string\">&#x27;s3&#x27;</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_dict[<span class=\"string\">&quot;teacher&quot;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_dict[<span class=\"string\">&#x27;class&#x27;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_dict[<span class=\"string\">&#x27;students&#x27;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_dict[<span class=\"string\">&#x27;A&#x27;</span>])       <span class=\"comment\"># A라는 Key가 없음</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>evan\n15\n[&#39;s1&#39;, &#39;s2&#39;, &#39;s3&#39;]\n\n\n\n---------------------------------------------------------------------------\n\nKeyError                                  Traceback (most recent call last)\n\n&lt;ipython-input-55-4cf39da18c67&gt; in &lt;module&gt;()\n      8 print(temp_dict[&#39;class&#39;])\n      9 print(temp_dict[&#39;students&#39;])\n---&gt; 10 print(temp_dict[&#39;A&#39;])\n\n\nKeyError: &#39;A&#39;\n</code></pre>\n<ul>\n<li>keys() 값만 출력</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_dict.keys()</span><br><span class=\"line\"><span class=\"built_in\">list</span>(temp_dict.keys())   <span class=\"comment\">#list로 형변환</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>[&#39;teacher&#39;, &#39;class&#39;, &#39;students&#39;]\n</code></pre>\n<ul>\n<li>values() 값만 출력</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_dict.values()</span><br><span class=\"line\"><span class=\"built_in\">list</span>(temp_dict.values())  <span class=\"comment\">#list로 형 변환</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>items() key-value 쌍으로, list와 tuple 형태로 반환</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_dict.items()</span><br><span class=\"line\"><span class=\"built_in\">list</span>(temp_dict.items())   <span class=\"comment\">#list로 형 변환</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>[(&#39;teacher&#39;, &#39;evan&#39;), (&#39;class&#39;, 15), (&#39;students&#39;, [&#39;s1&#39;, &#39;s2&#39;, &#39;s3&#39;])]\n</code></pre>\n<h2 id=\"조건문\"><a href=\"#조건문\" class=\"headerlink\" title=\"조건문\"></a>조건문</h2><ul>\n<li>조건을 만족하는 처음 조건만 실행된다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;숫자를 입력하세요&quot;</span>))</span><br><span class=\"line\"><span class=\"keyword\">if</span> a &gt; <span class=\"number\">5</span>:                      <span class=\"comment\"># 5뒤에 &quot;:&quot; 을 꼭 찍어줘야 된다.</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;a는 5보다 크다&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">elif</span> a &gt; <span class=\"number\">0</span>:                    <span class=\"comment\"># elif 는 elseif 의 뜻으로 if와 else를 이어주는 역할이다</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;a는 0보다 크다&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">elif</span> a &gt; -<span class=\"number\">5</span>:</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;a는 -5보다 크다&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;a는 매우 작다&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>숫자를 입력하세요3\na는 0보다 크다\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Hello World 1000번 출력하세요</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> idx <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):</span><br><span class=\"line\">  <span class=\"comment\"># print(idx+1)                # 방법1</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(idx+<span class=\"number\">1</span>, <span class=\"string\">&quot;Hello World&quot;</span>)   <span class=\"comment\"># 방법2</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<pre><code>1\nHello World\n2\nHello World\n3\nHello World\n</code></pre>\n<ul>\n<li>for loop if 조건문 사용</li>\n<li>문자열, 리스트 등 –&gt; 시퀀스 데이터(반복문 돌릴 수 있는 데이터)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&quot;Kaggle&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># g로 시작하면 반복문을 멈추세요</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> a:</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(x)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> x == <span class=\"string\">&#x27;g&#x27;</span>:</span><br><span class=\"line\">    <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"comment\"># 여기에 print(x)이면 어떻게 출력될까?</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>K\na\ng\n</code></pre>\n<ul>\n<li>enumerate()</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alphabets = [<span class=\"string\">&#x27;A&#x27;</span>, <span class=\"string\">&#x27;B&#x27;</span>, <span class=\"string\">&#x27;C&#x27;</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> index, value <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(alphabets):   <span class=\"comment\"># in 다음에 표시할 수 있는 함수가 여러가지가 있다. 그때그때 상황 맞춰서 써야 함</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(index, value)</span><br></pre></td></tr></table></figure>\n\n<pre><code>0 A\n1 B\n2 C\n</code></pre>\n<h2 id=\"리스트-컴프리헨션\"><a href=\"#리스트-컴프리헨션\" class=\"headerlink\" title=\"리스트 컴프리헨션\"></a>리스트 컴프리헨션</h2><p>list comprehension</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;a&quot;</span> <span class=\"keyword\">in</span> <span class=\"string\">&quot;apple&quot;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>True\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fruits = [<span class=\"string\">&#x27;apple&#x27;</span>, <span class=\"string\">&#x27;kiwi&#x27;</span>, <span class=\"string\">&#x27;mango&#x27;</span>]</span><br><span class=\"line\">newlists = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 알파벳 a가 있는 과일만 추출 후, 새로운 리스트에 담기</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> fruit <span class=\"keyword\">in</span> fruits:</span><br><span class=\"line\">  <span class=\"comment\"># print(fruit)</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"string\">&quot;a&quot;</span> <span class=\"keyword\">in</span> fruit:</span><br><span class=\"line\">    newlists.append(fruit)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(newlists)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[&#39;apple&#39;, &#39;mango&#39;]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 리스트 컴프리헨션(한 줄에 코드 다 입력하는 방식)</span></span><br><span class=\"line\">newlist = [fruit <span class=\"keyword\">for</span> fruit <span class=\"keyword\">in</span> fruits <span class=\"keyword\">if</span> <span class=\"string\">&#x27;a&#x27;</span> <span class=\"keyword\">in</span> fruit]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(newlist)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[&#39;apple&#39;, &#39;mango&#39;]\n</code></pre>\n","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/06/27/day0627/python.png","excerpt":"<ul>\n<li>Hello World</li>\n<li>주석처리</li>\n<li>변수 (수치형, 자료형, bool형)","more":"</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Hello World&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Hello World\n</code></pre>\n<h2 id=\"주석처리\"><a href=\"#주석처리\" class=\"headerlink\" title=\"주석처리\"></a>주석처리</h2><ul>\n<li><p>1줄 주석, 여러줄 주석처리</p>\n</li>\n<li><p>여러 줄 주석처리</p>\n<ul>\n<li>함수 또는 클래스를 문서화 할 때 주로 사용</li>\n</ul>\n</li>\n<li><p>프로젝트 할 떄</p>\n<ul>\n<li>전체 공정 100</li>\n<li>코드 &#x2F; 코드 문서화 &#x2F; 한글작업 문서화</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># print() 함수 사용</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;1줄 주석&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">여러 줄 주석</span></span><br><span class=\"line\"><span class=\"string\">쌍따옴표 3개를 입력해주세요</span></span><br><span class=\"line\"><span class=\"string\">앞과 뒤로</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;여러줄 주석&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>1줄 주석\n여러줄 주석\n</code></pre>\n<h2 id=\"변수-Scalar\"><a href=\"#변수-Scalar\" class=\"headerlink\" title=\"변수 (Scalar)\"></a>변수 (Scalar)</h2><ul>\n<li>자료형</li>\n<li>Scalar형 &#x2F; Non-Scalar형</li>\n</ul>\n<h3 id=\"수치형-x2F-자료형\"><a href=\"#수치형-x2F-자료형\" class=\"headerlink\" title=\"수치형 &#x2F; 자료형\"></a>수치형 &#x2F; 자료형</h3><ul>\n<li>int, float</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">num_int = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(num_int)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(num_int))</span><br></pre></td></tr></table></figure>\n\n<pre><code>1\n&lt;class &#39;int&#39;&gt;\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">num_float = <span class=\"number\">0.1</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(num_float)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(num_float))</span><br></pre></td></tr></table></figure>\n\n<pre><code>0.1\n&lt;class &#39;float&#39;&gt;\n</code></pre>\n<h3 id=\"Bool형\"><a href=\"#Bool형\" class=\"headerlink\" title=\"Bool형\"></a>Bool형</h3><ul>\n<li>True, False       (앞 글자만 대문자)</li>\n<li>R : TRUE, FALSE   (R 은 뒷 글자 전부 대문자)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bool_true = <span class=\"literal\">True</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(bool_true)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(bool_true))</span><br></pre></td></tr></table></figure>\n\n<pre><code>True\n&lt;class &#39;bool&#39;&gt;\n</code></pre>\n<h3 id=\"None-자료형\"><a href=\"#None-자료형\" class=\"headerlink\" title=\"None 자료형\"></a>None 자료형</h3><ul>\n<li>Null값, 값이 정해지지 않은 자료형</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">none_x = <span class=\"literal\">None</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(none_x)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(none_x))</span><br></pre></td></tr></table></figure>\n\n<pre><code>None\n&lt;class &#39;NoneType&#39;&gt;\n</code></pre>\n<h2 id=\"사칙연산\"><a href=\"#사칙연산\" class=\"headerlink\" title=\"사칙연산\"></a>사칙연산</h2><ul>\n<li>정수형 사칙연산, 실수형 사칙연산</li>\n<li>결괏값의 자료형</li>\n</ul>\n<h3 id=\"정수형-사칙연산\"><a href=\"#정수형-사칙연산\" class=\"headerlink\" title=\"정수형 사칙연산\"></a>정수형 사칙연산</h3><p>+, -, *, &#x2F;</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"number\">3</span></span><br><span class=\"line\">b = <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;a + b = &#x27;</span>, a+b)</span><br></pre></td></tr></table></figure>\n\n<pre><code>a + b =  5\n</code></pre>\n<h3 id=\"실수형-사칙-연산\"><a href=\"#실수형-사칙-연산\" class=\"headerlink\" title=\"실수형 사칙 연산\"></a>실수형 사칙 연산</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"number\">3</span></span><br><span class=\"line\">b = <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;a + b = &#x27;</span>, a+b)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;a - b = &#x27;</span>, a-b)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;a * b = &#x27;</span>, a*b)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;a / b = &#x27;</span>, a/b)</span><br><span class=\"line\"><span class=\"comment\"># 나누기는 정수/정수 했어도 &#x27;실수&#x27; 형이 나올 수 있다.</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>a + b =  5\na - b =  1\na * b =  6\na / b =  1.5\n</code></pre>\n<h2 id=\"논리형-연산자\"><a href=\"#논리형-연산자\" class=\"headerlink\" title=\"논리형 연산자\"></a>논리형 연산자</h2><ul>\n<li>Bool형</li>\n<li>True와 False 값으로 정의</li>\n<li>조건식<ul>\n<li>교집합(&#x3D;and), 합집합(&#x3D;or)</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"literal\">True</span> <span class=\"keyword\">and</span> <span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"literal\">True</span> <span class=\"keyword\">and</span> <span class=\"literal\">False</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"literal\">False</span> <span class=\"keyword\">and</span> <span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"literal\">False</span> <span class=\"keyword\">and</span> <span class=\"literal\">False</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>True\nFalse\nFalse\nFalse\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"literal\">True</span> <span class=\"keyword\">or</span> <span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"literal\">True</span> <span class=\"keyword\">or</span> <span class=\"literal\">False</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"literal\">False</span> <span class=\"keyword\">or</span> <span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"literal\">False</span> <span class=\"keyword\">or</span> <span class=\"literal\">False</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>True\nTrue\nTrue\nFalse\n</code></pre>\n<h2 id=\"비교-연산자\"><a href=\"#비교-연산자\" class=\"headerlink\" title=\"비교 연산자\"></a>비교 연산자</h2><ul>\n<li>비교 연산자는 부등호를 의미한다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">4</span>&gt;<span class=\"number\">3</span>)  <span class=\"comment\"># 참   = True</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">4</span>&lt;<span class=\"number\">3</span>)  <span class=\"comment\"># 거짓 = False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">4</span> &gt; <span class=\"number\">3</span> <span class=\"keyword\">and</span> <span class=\"number\">4</span> &lt; <span class=\"number\">3</span>)  <span class=\"comment\">#False</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">4</span> &gt; <span class=\"number\">3</span> <span class=\"keyword\">or</span> <span class=\"number\">4</span> &lt; <span class=\"number\">3</span>)   <span class=\"comment\">#True</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>True\nFalse\nFalse\nTrue\n</code></pre>\n<h2 id=\"논리형-amp-비교-연산자-응용\"><a href=\"#논리형-amp-비교-연산자-응용\" class=\"headerlink\" title=\"논리형 &amp; 비교 연산자 응용\"></a>논리형 &amp; 비교 연산자 응용</h2><ul>\n<li>input()<br>!!! 중요</li>\n<li>형변환<ul>\n<li>데이터 타입을 바꾸는 것</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;숫자를 입력하세요..!&quot;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(var)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(var))</span><br></pre></td></tr></table></figure>\n\n<pre><code>숫자를 입력하세요..!3\n3\n&lt;class &#39;int&#39;&gt;\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">num1 = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;첫번쨰 숫자를 입력하세요..!&quot;</span>))</span><br><span class=\"line\">num2 = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;두번째 숫자를 입력하세요..!&quot;</span>))</span><br><span class=\"line\">num3 = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;세번째 숫자를 입력하세요..!&quot;</span>))</span><br><span class=\"line\">num4 = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;네번째 숫자를 입력하세요..!&quot;</span>))</span><br></pre></td></tr></table></figure>\n\n<pre><code>첫번쨰 숫자를 입력하세요..!10\n두번째 숫자를 입력하세요..!20\n세번째 숫자를 입력하세요..!30\n네번째 숫자를 입력하세요..!40\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var1 = num1 &gt;= num2</span><br><span class=\"line\">var2 = num3 &lt; num4</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(var1 <span class=\"keyword\">and</span> var2)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<pre><code>False\n</code></pre>\n<h2 id=\"String\"><a href=\"#String\" class=\"headerlink\" title=\"String\"></a>String</h2><ul>\n<li>Non Scalar</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Hello World&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Hello World&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&#x27;Hello World&#x27;&quot;</span>)  <span class=\"comment\"># 작은 따옴표(&#x27;) 출력</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&quot;Hello World&quot;&#x27;</span>)  <span class=\"comment\"># 큰 따옴표(&quot;) 출력</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>Hello World\nHello World\n&#39;Hello World&#39;\n</code></pre>\n<h2 id=\"String-Operators\"><a href=\"#String-Operators\" class=\"headerlink\" title=\"String Operators\"></a>String Operators</h2><ul>\n<li>문자열 연산자</li>\n<li>+, * 만 가능</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str1 = <span class=\"string\">&quot;Hello &quot;</span></span><br><span class=\"line\">str2 = <span class=\"string\">&quot;World   &quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(str1 + str2)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Hello World   \n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">greet = str1 + str2</span><br><span class=\"line\"><span class=\"built_in\">print</span>(greet * <span class=\"number\">3</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Hello World   Hello World   Hello World   \n</code></pre>\n<h2 id=\"문자열-인덱싱\"><a href=\"#문자열-인덱싱\" class=\"headerlink\" title=\"문자열 인덱싱\"></a>문자열 인덱싱</h2><ul>\n<li>인덱싱은 0번째 부터 시작(공백도 포함)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">greeting = <span class=\"string\">&quot;Hello Kaggle&quot;</span></span><br><span class=\"line\">i = <span class=\"number\">7</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(greeting[i])</span><br></pre></td></tr></table></figure>\n\n<pre><code>a\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">greeting = <span class=\"string\">&quot;Hello Kaggle&quot;</span></span><br><span class=\"line\">i = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;숫자를 입력하세요..! = &quot;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(greeting[i])</span><br></pre></td></tr></table></figure>\n\n<pre><code>숫자를 입력하세요..! = 4\no\n</code></pre>\n<h2 id=\"슬라이싱\"><a href=\"#슬라이싱\" class=\"headerlink\" title=\"슬라이싱\"></a>슬라이싱</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">greeting = <span class=\"string\">&quot;Hello Kaggle&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># print(greeting[시작 인덱스:끝 인덱스-1])</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(greeting[<span class=\"number\">0</span>:<span class=\"number\">2</span>])     <span class=\"comment\"># 0, 1번째 인덱스가 출력</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(greeting[:<span class=\"number\">8</span>])      <span class=\"comment\"># 처음부터 7번째 인덱스 까지</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(greeting[<span class=\"number\">6</span>:])      <span class=\"comment\"># 6번 인덱스부터 끝까지</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(greeting[<span class=\"number\">0</span>:<span class=\"number\">10</span>:<span class=\"number\">2</span>])  <span class=\"comment\"># 처음부터 9번째 인덱스 까지 2칸씩 띄워서 출력</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(greeting[<span class=\"number\">0</span>:<span class=\"number\">10</span>:<span class=\"number\">3</span>])  <span class=\"comment\"># 처음부터 9번째 인덱스 까지 3칸씩 띄워서 출력</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(greeting[<span class=\"number\">0</span>:<span class=\"number\">10</span>:<span class=\"number\">4</span>])  <span class=\"comment\"># 처음부터 9번째 인덱스 까지 4칸씩 띄워서 출력</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>He\nHello Ka\nKaggle\nHloKg\nHlKg\nHog\n</code></pre>\n<ul>\n<li>문자열 관련 메서드(추가공부)<ul>\n<li>split()</li>\n<li>sort()</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"리스트-매우중요\"><a href=\"#리스트-매우중요\" class=\"headerlink\" title=\"리스트(매우중요)\"></a>리스트(매우중요)</h2><ul>\n<li>[]로 표시,</li>\n<li>[item1, item2, item3]</li>\n<li>포용하는 범위가 넓다.</li>\n<li>파이썬 코딩의 시작</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = []              <span class=\"comment\"># 빈 리스트</span></span><br><span class=\"line\">a_func = <span class=\"built_in\">list</span>()     <span class=\"comment\"># 빈 리스트 생성</span></span><br><span class=\"line\">b = [<span class=\"number\">1</span>]             <span class=\"comment\"># 숫자 요소</span></span><br><span class=\"line\">c = [<span class=\"string\">&#x27;apple&#x27;</span>]       <span class=\"comment\"># 문자요소</span></span><br><span class=\"line\">d = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, [<span class=\"string\">&#x27;apple&#x27;</span>], <span class=\"string\">&#x27;apple&#x27;</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(d)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"리스트-값-수정하기\"><a href=\"#리스트-값-수정하기\" class=\"headerlink\" title=\"리스트 값 수정하기\"></a>리스트 값 수정하기</h3><ul>\n<li>리스트 값 수정</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\">a[<span class=\"number\">0</span>] = <span class=\"string\">&quot;아무값&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[&#39;아무값&#39;, 1, 2]\n</code></pre>\n<h3 id=\"리스트-값-추가하기\"><a href=\"#리스트-값-추가하기\" class=\"headerlink\" title=\"리스트 값 추가하기\"></a>리스트 값 추가하기</h3><ul>\n<li>메서드 사용</li>\n<li>append &#x3D; 하나만 추가하고 싶을 때</li>\n<li>extend &#x3D; 여러개를 추가하고 싶을 때</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [<span class=\"number\">100</span>, <span class=\"number\">200</span>, <span class=\"number\">300</span>]</span><br><span class=\"line\">a.append(<span class=\"number\">400</span>)    <span class=\"comment\"># a = a.append(400)이 아니다.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br><span class=\"line\"></span><br><span class=\"line\">a.append([<span class=\"number\">500</span>,<span class=\"number\">600</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[100, 200, 300, 400]\n[100, 200, 300, 400, [500, 600]]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [<span class=\"number\">100</span>, <span class=\"number\">200</span>, <span class=\"number\">300</span>]</span><br><span class=\"line\">a.append(<span class=\"number\">400</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br><span class=\"line\"></span><br><span class=\"line\">a.extend([<span class=\"number\">400</span>,<span class=\"number\">500</span>])   <span class=\"comment\"># 리스트 안에 리스트를 추가할 때</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[100, 200, 300, 400]\n[100, 200, 300, 400, 400, 500]\n</code></pre>\n<ul>\n<li>insert(인덱스 위치, 값)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [<span class=\"number\">100</span>, <span class=\"number\">200</span>, <span class=\"number\">300</span>]</span><br><span class=\"line\">a.insert(<span class=\"number\">1</span>, <span class=\"number\">1000</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[100, 1000, 200, 300]\n</code></pre>\n<h3 id=\"리스트-값-삭제하기\"><a href=\"#리스트-값-삭제하기\" class=\"headerlink\" title=\"리스트 값 삭제하기\"></a>리스트 값 삭제하기</h3><ul>\n<li>remove()</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">10</span>]</span><br><span class=\"line\">a.remove(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)   <span class=\"comment\"># 처음 나오는 &#x27;1&#x27; 을 제거한다.</span></span><br><span class=\"line\"></span><br><span class=\"line\">a.remove(<span class=\"number\">10</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[2, 1, 2, 10]\n[2, 1, 2]\n</code></pre>\n<ul>\n<li>del</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">del</span> a[<span class=\"number\">1</span>]    <span class=\"comment\"># 2번째 인덱스 값을 삭제</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">del</span> a[<span class=\"number\">0</span>:<span class=\"number\">2</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[0, 1, 2, 3, 4]\n[2, 3, 4]\n</code></pre>\n<ul>\n<li>pop()</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\">rem = a.pop(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(rem)</span><br><span class=\"line\">x = a.pop()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[1, 3, 4, 5]\n2\n[1, 3, 4]\n5\n</code></pre>\n<ul>\n<li>clear() : 리스트 내 모든 값 삭제</li>\n<li>index(“값”) : 값의 위치를 불러옴</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\">b = [<span class=\"string\">&quot;철수&quot;</span>, <span class=\"string\">&quot;영희&quot;</span>, <span class=\"string\">&quot;길동&quot;</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a.index(<span class=\"number\">4</span>))          <span class=\"comment\"># &quot;4&quot; 의 인덱스 값</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(b.index(<span class=\"string\">&quot;길동&quot;</span>))     <span class=\"comment\"># &quot;길동&quot; 의 인덱스 값</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>1\n2\n</code></pre>\n<ul>\n<li>sort : 리스트의 정렬(오름차순, 내림차순)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\">a.sort()              <span class=\"comment\"># 오름차순</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br><span class=\"line\">a.sort(reverse=<span class=\"literal\">True</span>)  <span class=\"comment\"># 내림차순</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[1, 2, 3, 4, 5]\n[5, 4, 3, 2, 1]\n</code></pre>\n<h2 id=\"튜플\"><a href=\"#튜플\" class=\"headerlink\" title=\"튜플\"></a>튜플</h2><ul>\n<li>면접질문 : 리스트와 튜플의 차이가 뭐예요?<ul>\n<li>리스트 : []<ul>\n<li>수정, 삭제, 추가 가능</li>\n</ul>\n</li>\n<li>튜플 : ()<ul>\n<li>다 안됨</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tuple1 = (<span class=\"number\">0</span>)</span><br><span class=\"line\">tuple2 = (<span class=\"number\">0</span>, )</span><br><span class=\"line\">tuple3 = <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(tuple1))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(tuple2))   <span class=\"comment\"># &quot;,&quot;가 찍히느냐 안 찍히느냐에 따라 유형이 달라진다</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(tuple3))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(tuple1)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(tuple2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(tuple3)</span><br></pre></td></tr></table></figure>\n\n<pre><code>&lt;class &#39;int&#39;&gt;\n&lt;class &#39;tuple&#39;&gt;\n&lt;class &#39;tuple&#39;&gt;\n0\n(0,)\n(0, 1, 2)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = (<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"string\">&#x27;a&#x27;</span>)   <span class=\"comment\"># 삭제 안됨</span></span><br><span class=\"line\"><span class=\"keyword\">del</span> a [<span class=\"number\">4</span>]</span><br></pre></td></tr></table></figure>\n\n\n<pre><code>---------------------------------------------------------------------------\n\nTypeError                                 Traceback (most recent call last)\n\n&lt;ipython-input-45-d866ffd24276&gt; in &lt;module&gt;()\n      1 a = (0, 1, 2, 3, &#39;a&#39;)\n----&gt; 2 del a [4]\n\n\nTypeError: &#39;tuple&#39; object doesn&#39;t support item deletion\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = (<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"string\">&#x27;a&#x27;</span>)   <span class=\"comment\"># 수정 안됨</span></span><br><span class=\"line\">a[<span class=\"number\">4</span>] = <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br></pre></td></tr></table></figure>\n\n\n<pre><code>---------------------------------------------------------------------------\n\nTypeError                                 Traceback (most recent call last)\n\n&lt;ipython-input-47-fdbbdf9f616e&gt; in &lt;module&gt;()\n      1 a = (0, 1, 2, 3, &#39;a&#39;)\n----&gt; 2 a[4] = 4\n      3 print(a)\n\n\nTypeError: &#39;tuple&#39; object does not support item assignment\n</code></pre>\n<h2 id=\"튜플-x3D-리스트-연산자\"><a href=\"#튜플-x3D-리스트-연산자\" class=\"headerlink\" title=\"튜플(&#x3D;리스트) 연산자\"></a>튜플(&#x3D;리스트) 연산자</h2><ul>\n<li>문자열 연산자</li>\n<li>+, *</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">t1 = [<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\">t2 = [<span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(t1 + t2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(t1 * <span class=\"number\">3</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(0, 1, 2, 3, 4, 5)\n\n\n\n---------------------------------------------------------------------------\n\nTypeError                                 Traceback (most recent call last)\n\n&lt;ipython-input-51-d5cac866d659&gt; in &lt;module&gt;()\n      2 t2 = (3, 4, 5)\n      3 print(t1 + t2)\n----&gt; 4 print(t1 * t2)\n\n\nTypeError: can&#39;t multiply sequence by non-int of type &#39;tuple&#39;\n</code></pre>\n<h2 id=\"딕셔너리\"><a href=\"#딕셔너리\" class=\"headerlink\" title=\"딕셔너리\"></a>딕셔너리</h2><ul>\n<li>Key(키)와 Value(값)으로 구성됨</li>\n<li>슬라이싱 &#x3D; (값의 순서가 존재해야 함)</li>\n<li>딕셔너리 &#x3D; 순서라는 개념 자체가 존재하지 않음(슬라이싱x)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_dict = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;teacher&#x27;</span> : <span class=\"string\">&#x27;evan&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;class&#x27;</span> : <span class=\"number\">15</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;students&#x27;</span> : [<span class=\"string\">&#x27;s1&#x27;</span>, <span class=\"string\">&#x27;s2&#x27;</span>, <span class=\"string\">&#x27;s3&#x27;</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_dict[<span class=\"string\">&quot;teacher&quot;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_dict[<span class=\"string\">&#x27;class&#x27;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_dict[<span class=\"string\">&#x27;students&#x27;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_dict[<span class=\"string\">&#x27;A&#x27;</span>])       <span class=\"comment\"># A라는 Key가 없음</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>evan\n15\n[&#39;s1&#39;, &#39;s2&#39;, &#39;s3&#39;]\n\n\n\n---------------------------------------------------------------------------\n\nKeyError                                  Traceback (most recent call last)\n\n&lt;ipython-input-55-4cf39da18c67&gt; in &lt;module&gt;()\n      8 print(temp_dict[&#39;class&#39;])\n      9 print(temp_dict[&#39;students&#39;])\n---&gt; 10 print(temp_dict[&#39;A&#39;])\n\n\nKeyError: &#39;A&#39;\n</code></pre>\n<ul>\n<li>keys() 값만 출력</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_dict.keys()</span><br><span class=\"line\"><span class=\"built_in\">list</span>(temp_dict.keys())   <span class=\"comment\">#list로 형변환</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>[&#39;teacher&#39;, &#39;class&#39;, &#39;students&#39;]\n</code></pre>\n<ul>\n<li>values() 값만 출력</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_dict.values()</span><br><span class=\"line\"><span class=\"built_in\">list</span>(temp_dict.values())  <span class=\"comment\">#list로 형 변환</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>items() key-value 쌍으로, list와 tuple 형태로 반환</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_dict.items()</span><br><span class=\"line\"><span class=\"built_in\">list</span>(temp_dict.items())   <span class=\"comment\">#list로 형 변환</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>[(&#39;teacher&#39;, &#39;evan&#39;), (&#39;class&#39;, 15), (&#39;students&#39;, [&#39;s1&#39;, &#39;s2&#39;, &#39;s3&#39;])]\n</code></pre>\n<h2 id=\"조건문\"><a href=\"#조건문\" class=\"headerlink\" title=\"조건문\"></a>조건문</h2><ul>\n<li>조건을 만족하는 처음 조건만 실행된다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;숫자를 입력하세요&quot;</span>))</span><br><span class=\"line\"><span class=\"keyword\">if</span> a &gt; <span class=\"number\">5</span>:                      <span class=\"comment\"># 5뒤에 &quot;:&quot; 을 꼭 찍어줘야 된다.</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;a는 5보다 크다&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">elif</span> a &gt; <span class=\"number\">0</span>:                    <span class=\"comment\"># elif 는 elseif 의 뜻으로 if와 else를 이어주는 역할이다</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;a는 0보다 크다&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">elif</span> a &gt; -<span class=\"number\">5</span>:</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;a는 -5보다 크다&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;a는 매우 작다&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>숫자를 입력하세요3\na는 0보다 크다\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Hello World 1000번 출력하세요</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> idx <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):</span><br><span class=\"line\">  <span class=\"comment\"># print(idx+1)                # 방법1</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(idx+<span class=\"number\">1</span>, <span class=\"string\">&quot;Hello World&quot;</span>)   <span class=\"comment\"># 방법2</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<pre><code>1\nHello World\n2\nHello World\n3\nHello World\n</code></pre>\n<ul>\n<li>for loop if 조건문 사용</li>\n<li>문자열, 리스트 등 –&gt; 시퀀스 데이터(반복문 돌릴 수 있는 데이터)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&quot;Kaggle&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># g로 시작하면 반복문을 멈추세요</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> a:</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(x)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> x == <span class=\"string\">&#x27;g&#x27;</span>:</span><br><span class=\"line\">    <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"comment\"># 여기에 print(x)이면 어떻게 출력될까?</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>K\na\ng\n</code></pre>\n<ul>\n<li>enumerate()</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alphabets = [<span class=\"string\">&#x27;A&#x27;</span>, <span class=\"string\">&#x27;B&#x27;</span>, <span class=\"string\">&#x27;C&#x27;</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> index, value <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(alphabets):   <span class=\"comment\"># in 다음에 표시할 수 있는 함수가 여러가지가 있다. 그때그때 상황 맞춰서 써야 함</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(index, value)</span><br></pre></td></tr></table></figure>\n\n<pre><code>0 A\n1 B\n2 C\n</code></pre>\n<h2 id=\"리스트-컴프리헨션\"><a href=\"#리스트-컴프리헨션\" class=\"headerlink\" title=\"리스트 컴프리헨션\"></a>리스트 컴프리헨션</h2><p>list comprehension</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;a&quot;</span> <span class=\"keyword\">in</span> <span class=\"string\">&quot;apple&quot;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>True\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fruits = [<span class=\"string\">&#x27;apple&#x27;</span>, <span class=\"string\">&#x27;kiwi&#x27;</span>, <span class=\"string\">&#x27;mango&#x27;</span>]</span><br><span class=\"line\">newlists = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 알파벳 a가 있는 과일만 추출 후, 새로운 리스트에 담기</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> fruit <span class=\"keyword\">in</span> fruits:</span><br><span class=\"line\">  <span class=\"comment\"># print(fruit)</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"string\">&quot;a&quot;</span> <span class=\"keyword\">in</span> fruit:</span><br><span class=\"line\">    newlists.append(fruit)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(newlists)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[&#39;apple&#39;, &#39;mango&#39;]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 리스트 컴프리헨션(한 줄에 코드 다 입력하는 방식)</span></span><br><span class=\"line\">newlist = [fruit <span class=\"keyword\">for</span> fruit <span class=\"keyword\">in</span> fruits <span class=\"keyword\">if</span> <span class=\"string\">&#x27;a&#x27;</span> <span class=\"keyword\">in</span> fruit]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(newlist)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[&#39;apple&#39;, &#39;mango&#39;]\n</code></pre>"},{"title":"day 0628","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"thumbnailImage":"python.png","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-06-28T02:31:30.000Z","_content":"\n공부하자\n<!-- excerpt -->\n\n## 반복문 복습\n- for loop and while loop\n\n\n```python\nfor i in range(3):\n  print(\"Hello World\")\n  print(\"안녕하세요\")\n```\n\n    Hello World\n    안녕하세요\n    Hello World\n    안녕하세요\n    Hello World\n    안녕하세요\n    \n\n\n```python\nfor i in range(1000):\n  print(\"No.\", i+1)\n  if i == 10:\n    break                  # Hello World, 안녕하세요 가 10번 출력 됨\n  print(\"Hello World\")\n  print(\"안녕하세요\")      # i 값이 11이라서 \"No. 11\" 까지는 출력 되지만 if문 조건에서 통과 안됨\n```\n\n    No. 1\n    Hello World\n    안녕하세요\n    No. 2\n    Hello World\n    안녕하세요\n    No. 3\n    Hello World\n    안녕하세요\n    No. 4\n    Hello World\n    안녕하세요\n    No. 5\n    Hello World\n    안녕하세요\n    No. 6\n    Hello World\n    안녕하세요\n    No. 7\n    Hello World\n    안녕하세요\n    No. 8\n    Hello World\n    안녕하세요\n    No. 9\n    Hello World\n    안녕하세요\n    No. 10\n    Hello World\n    안녕하세요\n    No. 11\n    \n\n\n```python\n\n```\n\n\n```python\na = \"Kaggle\"\n\nfor i in a:\n  print(i)\n  if i == \"a\":\n    break\n    #print(i)  # 이 위치에 print가 있다면 어떻게 출력될까?\n```\n\n    K\n    a\n    \n\n- 리스트의 값이 존재\n- 전체 총합 구하기\n\n\n```python\nnumbers = [1, 2, 3, 4, 5]\nsum = 0\n\nfor num in numbers:\n  print(\"numbers: \", num)   # num 1 일때 sum = 1,  num 2 일때 sum = 2 + 1 = 3,   num 3 일때 sum = 3 + 3 = 6\n  sum = sum+num\n  print(\"total:\", sum)\n\nprint(\"----최종 결괏값----\")\nprint(sum)\n```\n\n    numbers:  1\n    total: 1\n    numbers:  2\n    total: 3\n    numbers:  3\n    total: 6\n    numbers:  4\n    total: 10\n    numbers:  5\n    total: 15\n    ----최종 결괏값----\n    15\n    \n\n\n```python\nfruits = ['apple', 'kiwi', 'mango']\nnewlist = []\n\n'''\napple : a가 있나요? 있네요, newlist에 추가하세요.\nkiwi : a가 있나요? 없네요. 그럼 넘어가요.\nmango : a가 있나요? 있네요. newlist에 추가하세요.\n'''\nfor fruit in fruits:\n  print(\"조건문 밖 : \", fruit)\n  if \"a\" in fruit:\n    print(\"조건문 안쪽 : \", fruit)\n    newlist.append(fruit)\n\nprint(newlist)\n```\n\n    조건문 밖 :  apple\n    조건문 안쪽 :  apple\n    조건문 밖 :  kiwi\n    조건문 밖 :  mango\n    조건문 안쪽 :  mango\n    ['apple', 'mango']\n    \n\n### While Loop\n\n- while문 : 분석할 때는 거의 쓸 일이 없음(분석할 때는 거의 틀이 정해져 있음)\n개발할 때는 많이 씀\n\n\n```python\ni = 1\nwhile i < 10: #참일때만 반복문 코드가 돌아감\n  # 코드\n  print(i)\n  i += 1          # 1씩 증감\n  #i -= 1         # 1씩 감소\n```\n\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    \n\n## 사용자 정의 함수\n- 내가 필요에 의해 직접 함수를 작성(취업 준비)\n\n\n```python\ndef 함수명(param1, param2):      # 함수 정의\n  # 코드\n  return None\n```\n\n\n```python\ndef add(a = 0, b = 1):\n  c = a + b\n  return c\n  return a + b\n\nprint(add(a = 5, b =4))\nprint(add())\n```\n\n    9\n    1\n    \n\n- 사칙연산 사용자 정의 함수 만들기\n- 함수 문서화\n  + print(함수명.__doc__)\n  + 키워드 : Docstring\n\n\n```python\ndef code(a, b, c):\n  d =  (b - c) * a / 10\n  return d\n\n'''\na = 10회 뽑기에 필요한 다이아\nb = 확정 뽑기 횟수\nc = 현재 누적 뽑기 횟수\n'''\nprint(\"확정 뽑기에 필요한 다이아 수 : \", code(a = 2700, b = 200, c = 40))\n```\n\n    확정 뽑기에 필요한 다이아 수 :  43200.0\n    \n\n\n```python\ndef subtract(a, b):\n  \"\"\"a, b를 빼는 함수\n\n  Parameters:\n  a (int): int형 숫자 a가 입력\n\n  b (int): int형 숫자 b가 입력\n\n  Returns:\n  int : 반환값\n  \n\n  \"\"\"\n  return a-b\n\nprint(subtract(a = 5, b= 10))\nprint(subtract.__doc__)\n```\n\n    -5\n    a, b를 빼는 함수\n    \n      Parameters:\n      a (int): int형 숫자 a가 입력\n      \n      b (int): int형 숫자 b가 입력\n    \n      Returns:\n        int : 반환값\n    \n      \n```\n\n## NumPy\n- 내장 모듈(=라이브러리=패키지) (X)\n- 별도 라이브러리 설치\n\n\n```python\nimport numpy as np\nprint(np.__version__)\n```\n\n    1.21.6\n    \n\n\n```python\ntemp = [1, 2, 3]\ntemp_array = np.array(temp)  # 리스트에서 배열로 변환\n\nprint(type(temp))\nprint(type(temp_array))\n```\n\n    <class 'list'>\n    <class 'numpy.ndarray'>\n    \n\n## 사칙연산\n\n\n```python\nmath_score = [90,85,95]\neng_score = [83, 77, 80]\n\n# math_score + eng_score              # 단순 리스트 추가\nmath_array = np.array(math_score)\neng_array = np.array(eng_score)\n\ntotal = math_array + eng_array        # 리스트 안의 변수 값을 더하는 과정\nprint(total)\nprint(type(total))\n```\n\n    [173 162 175]\n    <class 'numpy.ndarray'>\n    \n\n## 집계함수\n\n\n```python\nprint(np.min(total))    # total 함수의 최솟값\nprint(np.max(total))    # total 함수의 최댓값\nprint(np.sum(total))    # total 함수의 모든 변수를 더한 값\n```\n\n    162\n    175\n    510\n    \n\n## 차원 확인\n- shape 함수 사용\n- 배열의 차원 확인 필요(함수명.ndim)\n\n\n```python\n# 1차원 배열 생상\ntemp_arr = np.array([1, 2, 3])\nprint(temp_arr.shape)     # [1], [2], [3] 이라서 3\nprint(temp_arr.ndim)      # temp_arr 함수의 차원\nprint(temp_arr)\n```\n\n    (3,)\n    1\n    [1 2 3]\n    \n\n\n```python\n# 2차원 배열 생성\ntemp_arr = np.array([[1, 2, 3], [4, 5, 6]])\nprint(temp_arr.shape)   \nprint(temp_arr.ndim)    # temp_arr 함수의 차원\nprint(temp_arr)\n# [[1, 2, 3], [4, 5, 6]] 2개 라서 2\n# 그 속에 각각 [1], [2], [3] 3개 라서 3\n```\n\n    (2, 3)\n    2\n    [[1 2 3]\n     [4 5 6]]\n    \n\n\n```python\n# 3차원 배열 생성 -> 이미지\ntemp_arr = np.array([[[1, 2, 3], [4, 5, 6]],[[7, 8, 9], [10, 11, 12]]])\nprint(temp_arr.shape)\nprint(temp_arr.ndim)\n# [[1, 2, 3],[4, 5, 6]]이랑 [[7, 8, 9], [10, 11, 12]]라서 2\n# 그 속에 [1, 2, 3]이랑 [4, 5, 6] 이라서 2\n# 그 속에 [1],[2],[3] 이라서 3\n```\n\n    (2, 2, 3)\n    3\n    \n## 배열 생성의 다양한 방법들\n- 모두 0으로 채운다. \n\n\n```python\nimport numpy as np \nprint(np.__version__)\n```\n\n    1.21.6\n    \n\n\n```python\ntemp_arr = np.zeros((2, 3))\ntemp_arr\n```\n\n\n\n\n    array([[0., 0., 0.],\n           [0., 0., 0.]])\n\n\n\n- 모두 1로 채운다. \n\n\n```python\ntemp_arr = np.ones((2, 3))\ntemp_arr\n```\n\n\n\n\n    array([[1., 1., 1.],\n           [1., 1., 1.]])\n\n\n\n- 임의의 상수값으로 채운다. \n\n\n```python\ntemp_arr = np.full((3, 3), 100)\ntemp_arr\n```\n\n\n\n\n    array([[100, 100, 100],\n           [100, 100, 100],\n           [100, 100, 100]])\n\n\n\n- 최소, 최대 숫자의 범위를 정해두고, 각 구간별로 값을 생성\n\n\n```python\ntemp_arr = np.linspace(5, 10, 10)\ntemp_arr\n```\n\n\n\n\n    array([ 5.        ,  5.55555556,  6.11111111,  6.66666667,  7.22222222,\n            7.77777778,  8.33333333,  8.88888889,  9.44444444, 10.        ])\n\n\n\n- 반복문 시, 자주 등장하는 배열\n\n\n```python\ntemp_arr = np.arange(1, 11, 1)\ntemp_arr\n```\n\n\n\n\n    array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])\n\n\n\n## 난수 생성\n\n\n```python\nfrom numpy import random\nx = random.rand()\nprint(x)\n```\n\n    0.11621638529248979\n    \n\n\n```python\nimport numpy \nx = numpy.random.rand()\nprint(x)\n```\n\n    0.3315584451465583\n    \n\n- 랜덤 정수값 추출\n\n\n```python\nfrom numpy import random \n# x = random.randint(100, size = (5))\nx = random.randint(100, size = (3, 5))\nprint(x)\nprint(type(x))\n```\n\n    [[88  2 19 78 13]\n     [92 80 62 22 96]\n     [66 71 89 62 76]]\n    <class 'numpy.ndarray'>\n    \n\n- 랜덤 배열, 실숫값 추출\n\n\n```python\nfrom numpy import random \nx = random.rand(2, 5)\nprint(x)\nprint(type(x))\n```\n\n    [[0.06336531 0.34486775 0.66923826 0.31566607 0.84566463]\n     [0.61713876 0.67541796 0.65161201 0.04912466 0.45433901]]\n    <class 'numpy.ndarray'>\n    \n\n## NumPy 사칙 연산\n\n\n```python\nimport numpy as np\narray_01 = np.array([1, 2, 3])\narray_02 = np.array([10, 20, 30])\n```\n\n\n```python\n# 덧셈\nnewArr = np.add(array_01, array_02)\nprint(newArr)\n\n# 뺄셈\nnewArr = np.subtract(array_01, array_02)\nprint(newArr)\n\n# 곱셈\nnewArr = np.multiply(array_01, array_02)\nprint(newArr)\n\n# 나누기\nnewArr = np.divide(array_01, array_02)\nprint(newArr)\n\n# 거듭제곱\narray_01 = np.array([1, 2, 3])\narray_02 = np.array([2, 4, 2])\nnewArr = np.power(array_01, array_02)\nprint(newArr)\n```\n\n    [3 5 5]\n    [-1 -1  1]\n    [2 6 6]\n    [0.5        0.66666667 1.5       ]\n    [ 1 16  9]\n    \n\n## 소숫점 정렬\n- 소숫점을 정렬하는 다양한 방법\n\n\n```python\n# 소숫점 제거 \nimport numpy as np\ntemp_arr = np.trunc([-1.23, 1.23])\nprint(temp_arr)\n\ntemp_arr = np.fix([-1.23, 1.23])\nprint(temp_arr)\n```\n\n    [-1.  1.]\n    [-1.  1.]\n    \n\n\n```python\n# 임의의 소숫점 자리에서 반올림\ntemp_arr = np.around([-1.234546123, 1.238791631], 5)\nprint(temp_arr)\n```\n\n    [-1.23455  1.23879]\n    \n\n\n```python\n# 소숫점 모두 내림\ntemp_arr = np.floor([-1.234546123, 1.238791631])\nprint(temp_arr)\n```\n\n    [-2.  1.]\n    \n\n\n\n\n```python\n# 소숫점 모두 올림\ntemp_arr = np.ceil([-1.234546123, 1.238791631])\nprint(temp_arr)\n```\n\n    [-1.  2.]\n    \n\n## 조건식\n- pandas 가공\n- numpy\n- 조건식\n  + 하나의 조건식 (= np.where)\n  + 다중 조건식\n\n\n\n```python\ntemp_arr = np.arange(10)\ntemp_arr\n```\n\n\n\n\n    array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n\n\n\n\n```python\n# 5보다 작으면 원 값 유지\n# 5보다 크면 곱하기 10을 해줌\n```\n\n\n```python\n# np.where(조건식, 참일 때, 거짓일 때)\nnp.where(temp_arr < 5, temp_arr, temp_arr * 10)\n```\n\n\n\n\n    array([ 0,  1,  2,  3,  4, 50, 60, 70, 80, 90])\n\n\n\n\n\n\n```python\ntemp_arr = np.arange(10)\n# temp_arr\ncond_list   = [temp_arr > 5 , temp_arr < 2]\nchoice_list = [temp_arr  * 2, temp_arr + 100]\n\n# np.select(조건식 리스트, 결괏값 리스트, default = )\nnp.select(cond_list, choice_list, default = temp_arr)\n```\n\n\n\n\n    array([100, 101,   2,   3,   4,   5,  12,  14,  16,  18])\n\n\n\n## Reshape\n- 배열의 차원 또는 크기를 바꾼다. \n- 곱셈만 할줄 알면 끝. \n\n\n```python\nimport numpy as np \ntemp_array = np.ones((3, 4))\nprint(temp_array.shape)\nprint(temp_array)\n```\n\n    (3, 4)\n    [[1. 1. 1. 1.]\n     [1. 1. 1. 1.]\n     [1. 1. 1. 1.]]\n    \n\n\n```python\nafter_reshape = temp_array.reshape(2, 2, 5)\nprint(after_reshape.shape)\nprint(after_reshape)\n```\n\n\n    ---------------------------------------------------------------------------\n\n    ValueError                                Traceback (most recent call last)\n\n    <ipython-input-50-d57dd065a075> in <module>()\n    ----> 1 after_reshape = temp_array.reshape(2, 2, 5)\n          2 print(after_reshape.shape)\n          3 print(after_reshape)\n    \n\n    ValueError: cannot reshape array of size 12 into shape (2,2,5)\n\n\n\n```python\nafter_reshape = temp_array.reshape(7, -1)\nprint(after_reshape.shape)\nprint(after_reshape)\n```\n\n\n    ---------------------------------------------------------------------------\n\n    ValueError                                Traceback (most recent call last)\n\n    <ipython-input-53-00ad0ee6a004> in <module>()\n    ----> 1 after_reshape = temp_array.reshape(7, -1)\n          2 print(after_reshape.shape)\n          3 print(after_reshape)\n    \n\n    ValueError: cannot reshape array of size 12 into shape (7,newaxis)\n\n\n# 브로드 캐스팅 \n\n# pandas 튜토리얼\n\n\n```python\nimport pandas as pd \nprint(pd.__version__)\n```\n\n    1.3.5\n    \n\n\n```python\ntemp_dict = {\n    'col1' : [1, 2], \n    'col2' : [3, 4]\n}\n\ndf = pd.DataFrame(temp_dict)\nprint(df)\nprint(type(df))\n```\n\n       col1  col2\n    0     1     3\n    1     2     4\n    <class 'pandas.core.frame.DataFrame'>\n    \n\n## 구글 드라이브 연동\n\n\n\n```python\nfrom google.colab import drive \ndrive.mount('/content/drive')\n```\n\n    Mounted at /content/drive\n    \n\n\n```python\nDATA_PATH = '/content/drive/MyDrive/Colab Notebooks/human_AI/Basic/Chapter 3. pandas/data/'\nprint(DATA_PATH + 'Lemonade2016.csv')\n\nlemonade = pd.read_csv(DATA_PATH + 'Lemonade2016.csv')\n# covid_df = pd.read_csv(DATA_PATH + 'owid-covid-data.csv')\n\nlemonade.info() # str()\n```\n\n    /content/drive/MyDrive/Colab Notebooks/human_AI/Basic/Chapter 3. pandas/data/Lemonade2016.csv\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 32 entries, 0 to 31\n    Data columns (total 7 columns):\n     #   Column       Non-Null Count  Dtype  \n    ---  ------       --------------  -----  \n     0   Date         31 non-null     object \n     1   Location     32 non-null     object \n     2   Lemon        32 non-null     int64  \n     3   Orange       32 non-null     int64  \n     4   Temperature  32 non-null     int64  \n     5   Leaflets     31 non-null     float64\n     6   Price        32 non-null     float64\n    dtypes: float64(2), int64(3), object(2)\n    memory usage: 1.9+ KB\n    \n\n\n","source":"_posts/day0628.md","raw":"---\ntitle: \"day 0628\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: Python\nclearReading: true\nthumbnailImage: python.png\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-06-28 11:31:30'\n---\n\n공부하자\n<!-- excerpt -->\n\n## 반복문 복습\n- for loop and while loop\n\n\n```python\nfor i in range(3):\n  print(\"Hello World\")\n  print(\"안녕하세요\")\n```\n\n    Hello World\n    안녕하세요\n    Hello World\n    안녕하세요\n    Hello World\n    안녕하세요\n    \n\n\n```python\nfor i in range(1000):\n  print(\"No.\", i+1)\n  if i == 10:\n    break                  # Hello World, 안녕하세요 가 10번 출력 됨\n  print(\"Hello World\")\n  print(\"안녕하세요\")      # i 값이 11이라서 \"No. 11\" 까지는 출력 되지만 if문 조건에서 통과 안됨\n```\n\n    No. 1\n    Hello World\n    안녕하세요\n    No. 2\n    Hello World\n    안녕하세요\n    No. 3\n    Hello World\n    안녕하세요\n    No. 4\n    Hello World\n    안녕하세요\n    No. 5\n    Hello World\n    안녕하세요\n    No. 6\n    Hello World\n    안녕하세요\n    No. 7\n    Hello World\n    안녕하세요\n    No. 8\n    Hello World\n    안녕하세요\n    No. 9\n    Hello World\n    안녕하세요\n    No. 10\n    Hello World\n    안녕하세요\n    No. 11\n    \n\n\n```python\n\n```\n\n\n```python\na = \"Kaggle\"\n\nfor i in a:\n  print(i)\n  if i == \"a\":\n    break\n    #print(i)  # 이 위치에 print가 있다면 어떻게 출력될까?\n```\n\n    K\n    a\n    \n\n- 리스트의 값이 존재\n- 전체 총합 구하기\n\n\n```python\nnumbers = [1, 2, 3, 4, 5]\nsum = 0\n\nfor num in numbers:\n  print(\"numbers: \", num)   # num 1 일때 sum = 1,  num 2 일때 sum = 2 + 1 = 3,   num 3 일때 sum = 3 + 3 = 6\n  sum = sum+num\n  print(\"total:\", sum)\n\nprint(\"----최종 결괏값----\")\nprint(sum)\n```\n\n    numbers:  1\n    total: 1\n    numbers:  2\n    total: 3\n    numbers:  3\n    total: 6\n    numbers:  4\n    total: 10\n    numbers:  5\n    total: 15\n    ----최종 결괏값----\n    15\n    \n\n\n```python\nfruits = ['apple', 'kiwi', 'mango']\nnewlist = []\n\n'''\napple : a가 있나요? 있네요, newlist에 추가하세요.\nkiwi : a가 있나요? 없네요. 그럼 넘어가요.\nmango : a가 있나요? 있네요. newlist에 추가하세요.\n'''\nfor fruit in fruits:\n  print(\"조건문 밖 : \", fruit)\n  if \"a\" in fruit:\n    print(\"조건문 안쪽 : \", fruit)\n    newlist.append(fruit)\n\nprint(newlist)\n```\n\n    조건문 밖 :  apple\n    조건문 안쪽 :  apple\n    조건문 밖 :  kiwi\n    조건문 밖 :  mango\n    조건문 안쪽 :  mango\n    ['apple', 'mango']\n    \n\n### While Loop\n\n- while문 : 분석할 때는 거의 쓸 일이 없음(분석할 때는 거의 틀이 정해져 있음)\n개발할 때는 많이 씀\n\n\n```python\ni = 1\nwhile i < 10: #참일때만 반복문 코드가 돌아감\n  # 코드\n  print(i)\n  i += 1          # 1씩 증감\n  #i -= 1         # 1씩 감소\n```\n\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    \n\n## 사용자 정의 함수\n- 내가 필요에 의해 직접 함수를 작성(취업 준비)\n\n\n```python\ndef 함수명(param1, param2):      # 함수 정의\n  # 코드\n  return None\n```\n\n\n```python\ndef add(a = 0, b = 1):\n  c = a + b\n  return c\n  return a + b\n\nprint(add(a = 5, b =4))\nprint(add())\n```\n\n    9\n    1\n    \n\n- 사칙연산 사용자 정의 함수 만들기\n- 함수 문서화\n  + print(함수명.__doc__)\n  + 키워드 : Docstring\n\n\n```python\ndef code(a, b, c):\n  d =  (b - c) * a / 10\n  return d\n\n'''\na = 10회 뽑기에 필요한 다이아\nb = 확정 뽑기 횟수\nc = 현재 누적 뽑기 횟수\n'''\nprint(\"확정 뽑기에 필요한 다이아 수 : \", code(a = 2700, b = 200, c = 40))\n```\n\n    확정 뽑기에 필요한 다이아 수 :  43200.0\n    \n\n\n```python\ndef subtract(a, b):\n  \"\"\"a, b를 빼는 함수\n\n  Parameters:\n  a (int): int형 숫자 a가 입력\n\n  b (int): int형 숫자 b가 입력\n\n  Returns:\n  int : 반환값\n  \n\n  \"\"\"\n  return a-b\n\nprint(subtract(a = 5, b= 10))\nprint(subtract.__doc__)\n```\n\n    -5\n    a, b를 빼는 함수\n    \n      Parameters:\n      a (int): int형 숫자 a가 입력\n      \n      b (int): int형 숫자 b가 입력\n    \n      Returns:\n        int : 반환값\n    \n      \n```\n\n## NumPy\n- 내장 모듈(=라이브러리=패키지) (X)\n- 별도 라이브러리 설치\n\n\n```python\nimport numpy as np\nprint(np.__version__)\n```\n\n    1.21.6\n    \n\n\n```python\ntemp = [1, 2, 3]\ntemp_array = np.array(temp)  # 리스트에서 배열로 변환\n\nprint(type(temp))\nprint(type(temp_array))\n```\n\n    <class 'list'>\n    <class 'numpy.ndarray'>\n    \n\n## 사칙연산\n\n\n```python\nmath_score = [90,85,95]\neng_score = [83, 77, 80]\n\n# math_score + eng_score              # 단순 리스트 추가\nmath_array = np.array(math_score)\neng_array = np.array(eng_score)\n\ntotal = math_array + eng_array        # 리스트 안의 변수 값을 더하는 과정\nprint(total)\nprint(type(total))\n```\n\n    [173 162 175]\n    <class 'numpy.ndarray'>\n    \n\n## 집계함수\n\n\n```python\nprint(np.min(total))    # total 함수의 최솟값\nprint(np.max(total))    # total 함수의 최댓값\nprint(np.sum(total))    # total 함수의 모든 변수를 더한 값\n```\n\n    162\n    175\n    510\n    \n\n## 차원 확인\n- shape 함수 사용\n- 배열의 차원 확인 필요(함수명.ndim)\n\n\n```python\n# 1차원 배열 생상\ntemp_arr = np.array([1, 2, 3])\nprint(temp_arr.shape)     # [1], [2], [3] 이라서 3\nprint(temp_arr.ndim)      # temp_arr 함수의 차원\nprint(temp_arr)\n```\n\n    (3,)\n    1\n    [1 2 3]\n    \n\n\n```python\n# 2차원 배열 생성\ntemp_arr = np.array([[1, 2, 3], [4, 5, 6]])\nprint(temp_arr.shape)   \nprint(temp_arr.ndim)    # temp_arr 함수의 차원\nprint(temp_arr)\n# [[1, 2, 3], [4, 5, 6]] 2개 라서 2\n# 그 속에 각각 [1], [2], [3] 3개 라서 3\n```\n\n    (2, 3)\n    2\n    [[1 2 3]\n     [4 5 6]]\n    \n\n\n```python\n# 3차원 배열 생성 -> 이미지\ntemp_arr = np.array([[[1, 2, 3], [4, 5, 6]],[[7, 8, 9], [10, 11, 12]]])\nprint(temp_arr.shape)\nprint(temp_arr.ndim)\n# [[1, 2, 3],[4, 5, 6]]이랑 [[7, 8, 9], [10, 11, 12]]라서 2\n# 그 속에 [1, 2, 3]이랑 [4, 5, 6] 이라서 2\n# 그 속에 [1],[2],[3] 이라서 3\n```\n\n    (2, 2, 3)\n    3\n    \n## 배열 생성의 다양한 방법들\n- 모두 0으로 채운다. \n\n\n```python\nimport numpy as np \nprint(np.__version__)\n```\n\n    1.21.6\n    \n\n\n```python\ntemp_arr = np.zeros((2, 3))\ntemp_arr\n```\n\n\n\n\n    array([[0., 0., 0.],\n           [0., 0., 0.]])\n\n\n\n- 모두 1로 채운다. \n\n\n```python\ntemp_arr = np.ones((2, 3))\ntemp_arr\n```\n\n\n\n\n    array([[1., 1., 1.],\n           [1., 1., 1.]])\n\n\n\n- 임의의 상수값으로 채운다. \n\n\n```python\ntemp_arr = np.full((3, 3), 100)\ntemp_arr\n```\n\n\n\n\n    array([[100, 100, 100],\n           [100, 100, 100],\n           [100, 100, 100]])\n\n\n\n- 최소, 최대 숫자의 범위를 정해두고, 각 구간별로 값을 생성\n\n\n```python\ntemp_arr = np.linspace(5, 10, 10)\ntemp_arr\n```\n\n\n\n\n    array([ 5.        ,  5.55555556,  6.11111111,  6.66666667,  7.22222222,\n            7.77777778,  8.33333333,  8.88888889,  9.44444444, 10.        ])\n\n\n\n- 반복문 시, 자주 등장하는 배열\n\n\n```python\ntemp_arr = np.arange(1, 11, 1)\ntemp_arr\n```\n\n\n\n\n    array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])\n\n\n\n## 난수 생성\n\n\n```python\nfrom numpy import random\nx = random.rand()\nprint(x)\n```\n\n    0.11621638529248979\n    \n\n\n```python\nimport numpy \nx = numpy.random.rand()\nprint(x)\n```\n\n    0.3315584451465583\n    \n\n- 랜덤 정수값 추출\n\n\n```python\nfrom numpy import random \n# x = random.randint(100, size = (5))\nx = random.randint(100, size = (3, 5))\nprint(x)\nprint(type(x))\n```\n\n    [[88  2 19 78 13]\n     [92 80 62 22 96]\n     [66 71 89 62 76]]\n    <class 'numpy.ndarray'>\n    \n\n- 랜덤 배열, 실숫값 추출\n\n\n```python\nfrom numpy import random \nx = random.rand(2, 5)\nprint(x)\nprint(type(x))\n```\n\n    [[0.06336531 0.34486775 0.66923826 0.31566607 0.84566463]\n     [0.61713876 0.67541796 0.65161201 0.04912466 0.45433901]]\n    <class 'numpy.ndarray'>\n    \n\n## NumPy 사칙 연산\n\n\n```python\nimport numpy as np\narray_01 = np.array([1, 2, 3])\narray_02 = np.array([10, 20, 30])\n```\n\n\n```python\n# 덧셈\nnewArr = np.add(array_01, array_02)\nprint(newArr)\n\n# 뺄셈\nnewArr = np.subtract(array_01, array_02)\nprint(newArr)\n\n# 곱셈\nnewArr = np.multiply(array_01, array_02)\nprint(newArr)\n\n# 나누기\nnewArr = np.divide(array_01, array_02)\nprint(newArr)\n\n# 거듭제곱\narray_01 = np.array([1, 2, 3])\narray_02 = np.array([2, 4, 2])\nnewArr = np.power(array_01, array_02)\nprint(newArr)\n```\n\n    [3 5 5]\n    [-1 -1  1]\n    [2 6 6]\n    [0.5        0.66666667 1.5       ]\n    [ 1 16  9]\n    \n\n## 소숫점 정렬\n- 소숫점을 정렬하는 다양한 방법\n\n\n```python\n# 소숫점 제거 \nimport numpy as np\ntemp_arr = np.trunc([-1.23, 1.23])\nprint(temp_arr)\n\ntemp_arr = np.fix([-1.23, 1.23])\nprint(temp_arr)\n```\n\n    [-1.  1.]\n    [-1.  1.]\n    \n\n\n```python\n# 임의의 소숫점 자리에서 반올림\ntemp_arr = np.around([-1.234546123, 1.238791631], 5)\nprint(temp_arr)\n```\n\n    [-1.23455  1.23879]\n    \n\n\n```python\n# 소숫점 모두 내림\ntemp_arr = np.floor([-1.234546123, 1.238791631])\nprint(temp_arr)\n```\n\n    [-2.  1.]\n    \n\n\n\n\n```python\n# 소숫점 모두 올림\ntemp_arr = np.ceil([-1.234546123, 1.238791631])\nprint(temp_arr)\n```\n\n    [-1.  2.]\n    \n\n## 조건식\n- pandas 가공\n- numpy\n- 조건식\n  + 하나의 조건식 (= np.where)\n  + 다중 조건식\n\n\n\n```python\ntemp_arr = np.arange(10)\ntemp_arr\n```\n\n\n\n\n    array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n\n\n\n\n```python\n# 5보다 작으면 원 값 유지\n# 5보다 크면 곱하기 10을 해줌\n```\n\n\n```python\n# np.where(조건식, 참일 때, 거짓일 때)\nnp.where(temp_arr < 5, temp_arr, temp_arr * 10)\n```\n\n\n\n\n    array([ 0,  1,  2,  3,  4, 50, 60, 70, 80, 90])\n\n\n\n\n\n\n```python\ntemp_arr = np.arange(10)\n# temp_arr\ncond_list   = [temp_arr > 5 , temp_arr < 2]\nchoice_list = [temp_arr  * 2, temp_arr + 100]\n\n# np.select(조건식 리스트, 결괏값 리스트, default = )\nnp.select(cond_list, choice_list, default = temp_arr)\n```\n\n\n\n\n    array([100, 101,   2,   3,   4,   5,  12,  14,  16,  18])\n\n\n\n## Reshape\n- 배열의 차원 또는 크기를 바꾼다. \n- 곱셈만 할줄 알면 끝. \n\n\n```python\nimport numpy as np \ntemp_array = np.ones((3, 4))\nprint(temp_array.shape)\nprint(temp_array)\n```\n\n    (3, 4)\n    [[1. 1. 1. 1.]\n     [1. 1. 1. 1.]\n     [1. 1. 1. 1.]]\n    \n\n\n```python\nafter_reshape = temp_array.reshape(2, 2, 5)\nprint(after_reshape.shape)\nprint(after_reshape)\n```\n\n\n    ---------------------------------------------------------------------------\n\n    ValueError                                Traceback (most recent call last)\n\n    <ipython-input-50-d57dd065a075> in <module>()\n    ----> 1 after_reshape = temp_array.reshape(2, 2, 5)\n          2 print(after_reshape.shape)\n          3 print(after_reshape)\n    \n\n    ValueError: cannot reshape array of size 12 into shape (2,2,5)\n\n\n\n```python\nafter_reshape = temp_array.reshape(7, -1)\nprint(after_reshape.shape)\nprint(after_reshape)\n```\n\n\n    ---------------------------------------------------------------------------\n\n    ValueError                                Traceback (most recent call last)\n\n    <ipython-input-53-00ad0ee6a004> in <module>()\n    ----> 1 after_reshape = temp_array.reshape(7, -1)\n          2 print(after_reshape.shape)\n          3 print(after_reshape)\n    \n\n    ValueError: cannot reshape array of size 12 into shape (7,newaxis)\n\n\n# 브로드 캐스팅 \n\n# pandas 튜토리얼\n\n\n```python\nimport pandas as pd \nprint(pd.__version__)\n```\n\n    1.3.5\n    \n\n\n```python\ntemp_dict = {\n    'col1' : [1, 2], \n    'col2' : [3, 4]\n}\n\ndf = pd.DataFrame(temp_dict)\nprint(df)\nprint(type(df))\n```\n\n       col1  col2\n    0     1     3\n    1     2     4\n    <class 'pandas.core.frame.DataFrame'>\n    \n\n## 구글 드라이브 연동\n\n\n\n```python\nfrom google.colab import drive \ndrive.mount('/content/drive')\n```\n\n    Mounted at /content/drive\n    \n\n\n```python\nDATA_PATH = '/content/drive/MyDrive/Colab Notebooks/human_AI/Basic/Chapter 3. pandas/data/'\nprint(DATA_PATH + 'Lemonade2016.csv')\n\nlemonade = pd.read_csv(DATA_PATH + 'Lemonade2016.csv')\n# covid_df = pd.read_csv(DATA_PATH + 'owid-covid-data.csv')\n\nlemonade.info() # str()\n```\n\n    /content/drive/MyDrive/Colab Notebooks/human_AI/Basic/Chapter 3. pandas/data/Lemonade2016.csv\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 32 entries, 0 to 31\n    Data columns (total 7 columns):\n     #   Column       Non-Null Count  Dtype  \n    ---  ------       --------------  -----  \n     0   Date         31 non-null     object \n     1   Location     32 non-null     object \n     2   Lemon        32 non-null     int64  \n     3   Orange       32 non-null     int64  \n     4   Temperature  32 non-null     int64  \n     5   Leaflets     31 non-null     float64\n     6   Price        32 non-null     float64\n    dtypes: float64(2), int64(3), object(2)\n    memory usage: 1.9+ KB\n    \n\n\n","slug":"day0628","published":1,"updated":"2022-08-06T13:49:49.687Z","_id":"cl5fcok7s000ojku0d6rsdkmv","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n<h2 id=\"반복문-복습\"><a href=\"#반복문-복습\" class=\"headerlink\" title=\"반복문 복습\"></a>반복문 복습</h2><ul>\n<li>for loop and while loop</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">3</span>):</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Hello World&quot;</span>)</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;안녕하세요&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Hello World\n안녕하세요\nHello World\n안녕하세요\nHello World\n안녕하세요\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1000</span>):</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;No.&quot;</span>, i+<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> i == <span class=\"number\">10</span>:</span><br><span class=\"line\">    <span class=\"keyword\">break</span>                  <span class=\"comment\"># Hello World, 안녕하세요 가 10번 출력 됨</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Hello World&quot;</span>)</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;안녕하세요&quot;</span>)      <span class=\"comment\"># i 값이 11이라서 &quot;No. 11&quot; 까지는 출력 되지만 if문 조건에서 통과 안됨</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>No. 1\nHello World\n안녕하세요\nNo. 2\nHello World\n안녕하세요\nNo. 3\nHello World\n안녕하세요\nNo. 4\nHello World\n안녕하세요\nNo. 5\nHello World\n안녕하세요\nNo. 6\nHello World\n안녕하세요\nNo. 7\nHello World\n안녕하세요\nNo. 8\nHello World\n안녕하세요\nNo. 9\nHello World\n안녕하세요\nNo. 10\nHello World\n안녕하세요\nNo. 11\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&quot;Kaggle&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> a:</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> i == <span class=\"string\">&quot;a&quot;</span>:</span><br><span class=\"line\">    <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"comment\">#print(i)  # 이 위치에 print가 있다면 어떻게 출력될까?</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>K\na\n</code></pre>\n<ul>\n<li>리스트의 값이 존재</li>\n<li>전체 총합 구하기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">numbers = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\"><span class=\"built_in\">sum</span> = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> num <span class=\"keyword\">in</span> numbers:</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;numbers: &quot;</span>, num)   <span class=\"comment\"># num 1 일때 sum = 1,  num 2 일때 sum = 2 + 1 = 3,   num 3 일때 sum = 3 + 3 = 6</span></span><br><span class=\"line\">  <span class=\"built_in\">sum</span> = <span class=\"built_in\">sum</span>+num</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;total:&quot;</span>, <span class=\"built_in\">sum</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;----최종 결괏값----&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">sum</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>numbers:  1\ntotal: 1\nnumbers:  2\ntotal: 3\nnumbers:  3\ntotal: 6\nnumbers:  4\ntotal: 10\nnumbers:  5\ntotal: 15\n----최종 결괏값----\n15\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fruits = [<span class=\"string\">&#x27;apple&#x27;</span>, <span class=\"string\">&#x27;kiwi&#x27;</span>, <span class=\"string\">&#x27;mango&#x27;</span>]</span><br><span class=\"line\">newlist = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">apple : a가 있나요? 있네요, newlist에 추가하세요.</span></span><br><span class=\"line\"><span class=\"string\">kiwi : a가 있나요? 없네요. 그럼 넘어가요.</span></span><br><span class=\"line\"><span class=\"string\">mango : a가 있나요? 있네요. newlist에 추가하세요.</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> fruit <span class=\"keyword\">in</span> fruits:</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;조건문 밖 : &quot;</span>, fruit)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"string\">&quot;a&quot;</span> <span class=\"keyword\">in</span> fruit:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;조건문 안쪽 : &quot;</span>, fruit)</span><br><span class=\"line\">    newlist.append(fruit)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(newlist)</span><br></pre></td></tr></table></figure>\n\n<pre><code>조건문 밖 :  apple\n조건문 안쪽 :  apple\n조건문 밖 :  kiwi\n조건문 밖 :  mango\n조건문 안쪽 :  mango\n[&#39;apple&#39;, &#39;mango&#39;]\n</code></pre>\n<h3 id=\"While-Loop\"><a href=\"#While-Loop\" class=\"headerlink\" title=\"While Loop\"></a>While Loop</h3><ul>\n<li>while문 : 분석할 때는 거의 쓸 일이 없음(분석할 때는 거의 틀이 정해져 있음)<br>개발할 때는 많이 씀</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> i &lt; <span class=\"number\">10</span>: <span class=\"comment\">#참일때만 반복문 코드가 돌아감</span></span><br><span class=\"line\">  <span class=\"comment\"># 코드</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">  i += <span class=\"number\">1</span>          <span class=\"comment\"># 1씩 증감</span></span><br><span class=\"line\">  <span class=\"comment\">#i -= 1         # 1씩 감소</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>1\n2\n3\n4\n5\n6\n7\n8\n9\n</code></pre>\n<h2 id=\"사용자-정의-함수\"><a href=\"#사용자-정의-함수\" class=\"headerlink\" title=\"사용자 정의 함수\"></a>사용자 정의 함수</h2><ul>\n<li>내가 필요에 의해 직접 함수를 작성(취업 준비)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">함수명</span>(<span class=\"params\">param1, param2</span>):      <span class=\"comment\"># 함수 정의</span></span><br><span class=\"line\">  <span class=\"comment\"># 코드</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">None</span></span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add</span>(<span class=\"params\">a = <span class=\"number\">0</span>, b = <span class=\"number\">1</span></span>):</span><br><span class=\"line\">  c = a + b</span><br><span class=\"line\">  <span class=\"keyword\">return</span> c</span><br><span class=\"line\">  <span class=\"keyword\">return</span> a + b</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(add(a = <span class=\"number\">5</span>, b =<span class=\"number\">4</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(add())</span><br></pre></td></tr></table></figure>\n\n<pre><code>9\n1\n</code></pre>\n<ul>\n<li>사칙연산 사용자 정의 함수 만들기</li>\n<li>함수 문서화<ul>\n<li>print(함수명.<strong>doc</strong>)</li>\n<li>키워드 : Docstring</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">code</span>(<span class=\"params\">a, b, c</span>):</span><br><span class=\"line\">  d =  (b - c) * a / <span class=\"number\">10</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> d</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">a = 10회 뽑기에 필요한 다이아</span></span><br><span class=\"line\"><span class=\"string\">b = 확정 뽑기 횟수</span></span><br><span class=\"line\"><span class=\"string\">c = 현재 누적 뽑기 횟수</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;확정 뽑기에 필요한 다이아 수 : &quot;</span>, code(a = <span class=\"number\">2700</span>, b = <span class=\"number\">200</span>, c = <span class=\"number\">40</span>))</span><br></pre></td></tr></table></figure>\n\n<pre><code>확정 뽑기에 필요한 다이아 수 :  43200.0\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">subtract</span>(<span class=\"params\">a, b</span>):</span><br><span class=\"line\">  <span class=\"string\">&quot;&quot;&quot;a, b를 빼는 함수</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  Parameters:</span></span><br><span class=\"line\"><span class=\"string\">  a (int): int형 숫자 a가 입력</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  b (int): int형 숫자 b가 입력</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  Returns:</span></span><br><span class=\"line\"><span class=\"string\">  int : 반환값</span></span><br><span class=\"line\"><span class=\"string\">  </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  &quot;&quot;&quot;</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> a-b</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(subtract(a = <span class=\"number\">5</span>, b= <span class=\"number\">10</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(subtract.__doc__)</span><br></pre></td></tr></table></figure>\n\n<pre><code>-5\na, b를 빼는 함수\n\n  Parameters:\n  a (int): int형 숫자 a가 입력\n  \n  b (int): int형 숫자 b가 입력\n\n  Returns:\n    int : 반환값\n\n  \n</code></pre>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## NumPy</span><br><span class=\"line\">- 내장 모듈(=라이브러리=패키지) (X)</span><br><span class=\"line\">- 별도 라이브러리 설치</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">```python</span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\">print(np.__version__)</span><br></pre></td></tr></table></figure>\n\n<pre><code>1.21.6\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\">temp_array = np.array(temp)  <span class=\"comment\"># 리스트에서 배열로 변환</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(temp))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(temp_array))</span><br></pre></td></tr></table></figure>\n\n<pre><code>&lt;class &#39;list&#39;&gt;\n&lt;class &#39;numpy.ndarray&#39;&gt;\n</code></pre>\n<h2 id=\"사칙연산\"><a href=\"#사칙연산\" class=\"headerlink\" title=\"사칙연산\"></a>사칙연산</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">math_score = [<span class=\"number\">90</span>,<span class=\"number\">85</span>,<span class=\"number\">95</span>]</span><br><span class=\"line\">eng_score = [<span class=\"number\">83</span>, <span class=\"number\">77</span>, <span class=\"number\">80</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># math_score + eng_score              # 단순 리스트 추가</span></span><br><span class=\"line\">math_array = np.array(math_score)</span><br><span class=\"line\">eng_array = np.array(eng_score)</span><br><span class=\"line\"></span><br><span class=\"line\">total = math_array + eng_array        <span class=\"comment\"># 리스트 안의 변수 값을 더하는 과정</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(total)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(total))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[173 162 175]\n&lt;class &#39;numpy.ndarray&#39;&gt;\n</code></pre>\n<h2 id=\"집계함수\"><a href=\"#집계함수\" class=\"headerlink\" title=\"집계함수\"></a>집계함수</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(np.<span class=\"built_in\">min</span>(total))    <span class=\"comment\"># total 함수의 최솟값</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.<span class=\"built_in\">max</span>(total))    <span class=\"comment\"># total 함수의 최댓값</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.<span class=\"built_in\">sum</span>(total))    <span class=\"comment\"># total 함수의 모든 변수를 더한 값</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>162\n175\n510\n</code></pre>\n<h2 id=\"차원-확인\"><a href=\"#차원-확인\" class=\"headerlink\" title=\"차원 확인\"></a>차원 확인</h2><ul>\n<li>shape 함수 사용</li>\n<li>배열의 차원 확인 필요(함수명.ndim)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1차원 배열 생상</span></span><br><span class=\"line\">temp_arr = np.array([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr.shape)     <span class=\"comment\"># [1], [2], [3] 이라서 3</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr.ndim)      <span class=\"comment\"># temp_arr 함수의 차원</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(3,)\n1\n[1 2 3]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 2차원 배열 생성</span></span><br><span class=\"line\">temp_arr = np.array([[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr.shape)   </span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr.ndim)    <span class=\"comment\"># temp_arr 함수의 차원</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr)</span><br><span class=\"line\"><span class=\"comment\"># [[1, 2, 3], [4, 5, 6]] 2개 라서 2</span></span><br><span class=\"line\"><span class=\"comment\"># 그 속에 각각 [1], [2], [3] 3개 라서 3</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>(2, 3)\n2\n[[1 2 3]\n [4 5 6]]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 3차원 배열 생성 -&gt; 이미지</span></span><br><span class=\"line\">temp_arr = np.array([[[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]],[[<span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>], [<span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>]]])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr.ndim)</span><br><span class=\"line\"><span class=\"comment\"># [[1, 2, 3],[4, 5, 6]]이랑 [[7, 8, 9], [10, 11, 12]]라서 2</span></span><br><span class=\"line\"><span class=\"comment\"># 그 속에 [1, 2, 3]이랑 [4, 5, 6] 이라서 2</span></span><br><span class=\"line\"><span class=\"comment\"># 그 속에 [1],[2],[3] 이라서 3</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>(2, 2, 3)\n3\n</code></pre>\n<h2 id=\"배열-생성의-다양한-방법들\"><a href=\"#배열-생성의-다양한-방법들\" class=\"headerlink\" title=\"배열 생성의 다양한 방법들\"></a>배열 생성의 다양한 방법들</h2><ul>\n<li>모두 0으로 채운다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np </span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.__version__)</span><br></pre></td></tr></table></figure>\n\n<pre><code>1.21.6\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_arr = np.zeros((<span class=\"number\">2</span>, <span class=\"number\">3</span>))</span><br><span class=\"line\">temp_arr</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([[0., 0., 0.],\n       [0., 0., 0.]])\n</code></pre>\n<ul>\n<li>모두 1로 채운다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_arr = np.ones((<span class=\"number\">2</span>, <span class=\"number\">3</span>))</span><br><span class=\"line\">temp_arr</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([[1., 1., 1.],\n       [1., 1., 1.]])\n</code></pre>\n<ul>\n<li>임의의 상수값으로 채운다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_arr = np.full((<span class=\"number\">3</span>, <span class=\"number\">3</span>), <span class=\"number\">100</span>)</span><br><span class=\"line\">temp_arr</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([[100, 100, 100],\n       [100, 100, 100],\n       [100, 100, 100]])\n</code></pre>\n<ul>\n<li>최소, 최대 숫자의 범위를 정해두고, 각 구간별로 값을 생성</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_arr = np.linspace(<span class=\"number\">5</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">temp_arr</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([ 5.        ,  5.55555556,  6.11111111,  6.66666667,  7.22222222,\n        7.77777778,  8.33333333,  8.88888889,  9.44444444, 10.        ])\n</code></pre>\n<ul>\n<li>반복문 시, 자주 등장하는 배열</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_arr = np.arange(<span class=\"number\">1</span>, <span class=\"number\">11</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">temp_arr</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])\n</code></pre>\n<h2 id=\"난수-생성\"><a href=\"#난수-생성\" class=\"headerlink\" title=\"난수 생성\"></a>난수 생성</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> numpy <span class=\"keyword\">import</span> random</span><br><span class=\"line\">x = random.rand()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x)</span><br></pre></td></tr></table></figure>\n\n<pre><code>0.11621638529248979\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy </span><br><span class=\"line\">x = numpy.random.rand()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x)</span><br></pre></td></tr></table></figure>\n\n<pre><code>0.3315584451465583\n</code></pre>\n<ul>\n<li>랜덤 정수값 추출</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> numpy <span class=\"keyword\">import</span> random </span><br><span class=\"line\"><span class=\"comment\"># x = random.randint(100, size = (5))</span></span><br><span class=\"line\">x = random.randint(<span class=\"number\">100</span>, size = (<span class=\"number\">3</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(x))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[[88  2 19 78 13]\n [92 80 62 22 96]\n [66 71 89 62 76]]\n&lt;class &#39;numpy.ndarray&#39;&gt;\n</code></pre>\n<ul>\n<li>랜덤 배열, 실숫값 추출</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> numpy <span class=\"keyword\">import</span> random </span><br><span class=\"line\">x = random.rand(<span class=\"number\">2</span>, <span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(x))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[[0.06336531 0.34486775 0.66923826 0.31566607 0.84566463]\n [0.61713876 0.67541796 0.65161201 0.04912466 0.45433901]]\n&lt;class &#39;numpy.ndarray&#39;&gt;\n</code></pre>\n<h2 id=\"NumPy-사칙-연산\"><a href=\"#NumPy-사칙-연산\" class=\"headerlink\" title=\"NumPy 사칙 연산\"></a>NumPy 사칙 연산</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\">array_01 = np.array([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>])</span><br><span class=\"line\">array_02 = np.array([<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span>])</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 덧셈</span></span><br><span class=\"line\">newArr = np.add(array_01, array_02)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(newArr)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 뺄셈</span></span><br><span class=\"line\">newArr = np.subtract(array_01, array_02)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(newArr)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 곱셈</span></span><br><span class=\"line\">newArr = np.multiply(array_01, array_02)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(newArr)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 나누기</span></span><br><span class=\"line\">newArr = np.divide(array_01, array_02)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(newArr)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 거듭제곱</span></span><br><span class=\"line\">array_01 = np.array([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>])</span><br><span class=\"line\">array_02 = np.array([<span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>])</span><br><span class=\"line\">newArr = np.power(array_01, array_02)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(newArr)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[3 5 5]\n[-1 -1  1]\n[2 6 6]\n[0.5        0.66666667 1.5       ]\n[ 1 16  9]\n</code></pre>\n<h2 id=\"소숫점-정렬\"><a href=\"#소숫점-정렬\" class=\"headerlink\" title=\"소숫점 정렬\"></a>소숫점 정렬</h2><ul>\n<li>소숫점을 정렬하는 다양한 방법</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 소숫점 제거 </span></span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\">temp_arr = np.trunc([-<span class=\"number\">1.23</span>, <span class=\"number\">1.23</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr)</span><br><span class=\"line\"></span><br><span class=\"line\">temp_arr = np.fix([-<span class=\"number\">1.23</span>, <span class=\"number\">1.23</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[-1.  1.]\n[-1.  1.]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 임의의 소숫점 자리에서 반올림</span></span><br><span class=\"line\">temp_arr = np.around([-<span class=\"number\">1.234546123</span>, <span class=\"number\">1.238791631</span>], <span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[-1.23455  1.23879]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 소숫점 모두 내림</span></span><br><span class=\"line\">temp_arr = np.floor([-<span class=\"number\">1.234546123</span>, <span class=\"number\">1.238791631</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[-2.  1.]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 소숫점 모두 올림</span></span><br><span class=\"line\">temp_arr = np.ceil([-<span class=\"number\">1.234546123</span>, <span class=\"number\">1.238791631</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[-1.  2.]\n</code></pre>\n<h2 id=\"조건식\"><a href=\"#조건식\" class=\"headerlink\" title=\"조건식\"></a>조건식</h2><ul>\n<li>pandas 가공</li>\n<li>numpy</li>\n<li>조건식<ul>\n<li>하나의 조건식 (&#x3D; np.where)</li>\n<li>다중 조건식</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_arr = np.arange(<span class=\"number\">10</span>)</span><br><span class=\"line\">temp_arr</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 5보다 작으면 원 값 유지</span></span><br><span class=\"line\"><span class=\"comment\"># 5보다 크면 곱하기 10을 해줌</span></span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># np.where(조건식, 참일 때, 거짓일 때)</span></span><br><span class=\"line\">np.where(temp_arr &lt; <span class=\"number\">5</span>, temp_arr, temp_arr * <span class=\"number\">10</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([ 0,  1,  2,  3,  4, 50, 60, 70, 80, 90])\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_arr = np.arange(<span class=\"number\">10</span>)</span><br><span class=\"line\"><span class=\"comment\"># temp_arr</span></span><br><span class=\"line\">cond_list   = [temp_arr &gt; <span class=\"number\">5</span> , temp_arr &lt; <span class=\"number\">2</span>]</span><br><span class=\"line\">choice_list = [temp_arr  * <span class=\"number\">2</span>, temp_arr + <span class=\"number\">100</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># np.select(조건식 리스트, 결괏값 리스트, default = )</span></span><br><span class=\"line\">np.select(cond_list, choice_list, default = temp_arr)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([100, 101,   2,   3,   4,   5,  12,  14,  16,  18])\n</code></pre>\n<h2 id=\"Reshape\"><a href=\"#Reshape\" class=\"headerlink\" title=\"Reshape\"></a>Reshape</h2><ul>\n<li>배열의 차원 또는 크기를 바꾼다. </li>\n<li>곱셈만 할줄 알면 끝.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np </span><br><span class=\"line\">temp_array = np.ones((<span class=\"number\">3</span>, <span class=\"number\">4</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_array.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_array)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(3, 4)\n[[1. 1. 1. 1.]\n [1. 1. 1. 1.]\n [1. 1. 1. 1.]]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">after_reshape = temp_array.reshape(<span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(after_reshape.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(after_reshape)</span><br></pre></td></tr></table></figure>\n\n\n<pre><code>---------------------------------------------------------------------------\n\nValueError                                Traceback (most recent call last)\n\n&lt;ipython-input-50-d57dd065a075&gt; in &lt;module&gt;()\n----&gt; 1 after_reshape = temp_array.reshape(2, 2, 5)\n      2 print(after_reshape.shape)\n      3 print(after_reshape)\n\n\nValueError: cannot reshape array of size 12 into shape (2,2,5)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">after_reshape = temp_array.reshape(<span class=\"number\">7</span>, -<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(after_reshape.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(after_reshape)</span><br></pre></td></tr></table></figure>\n\n\n<pre><code>---------------------------------------------------------------------------\n\nValueError                                Traceback (most recent call last)\n\n&lt;ipython-input-53-00ad0ee6a004&gt; in &lt;module&gt;()\n----&gt; 1 after_reshape = temp_array.reshape(7, -1)\n      2 print(after_reshape.shape)\n      3 print(after_reshape)\n\n\nValueError: cannot reshape array of size 12 into shape (7,newaxis)\n</code></pre>\n<h1 id=\"브로드-캐스팅\"><a href=\"#브로드-캐스팅\" class=\"headerlink\" title=\"브로드 캐스팅\"></a>브로드 캐스팅</h1><h1 id=\"pandas-튜토리얼\"><a href=\"#pandas-튜토리얼\" class=\"headerlink\" title=\"pandas 튜토리얼\"></a>pandas 튜토리얼</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd </span><br><span class=\"line\"><span class=\"built_in\">print</span>(pd.__version__)</span><br></pre></td></tr></table></figure>\n\n<pre><code>1.3.5\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_dict = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;col1&#x27;</span> : [<span class=\"number\">1</span>, <span class=\"number\">2</span>], </span><br><span class=\"line\">    <span class=\"string\">&#x27;col2&#x27;</span> : [<span class=\"number\">3</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">df = pd.DataFrame(temp_dict)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(df))</span><br></pre></td></tr></table></figure>\n\n<pre><code>   col1  col2\n0     1     3\n1     2     4\n&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\n</code></pre>\n<h2 id=\"구글-드라이브-연동\"><a href=\"#구글-드라이브-연동\" class=\"headerlink\" title=\"구글 드라이브 연동\"></a>구글 드라이브 연동</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> google.colab <span class=\"keyword\">import</span> drive </span><br><span class=\"line\">drive.mount(<span class=\"string\">&#x27;/content/drive&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Mounted at /content/drive\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DATA_PATH = <span class=\"string\">&#x27;/content/drive/MyDrive/Colab Notebooks/human_AI/Basic/Chapter 3. pandas/data/&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(DATA_PATH + <span class=\"string\">&#x27;Lemonade2016.csv&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">lemonade = pd.read_csv(DATA_PATH + <span class=\"string\">&#x27;Lemonade2016.csv&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># covid_df = pd.read_csv(DATA_PATH + &#x27;owid-covid-data.csv&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\">lemonade.info() <span class=\"comment\"># str()</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>/content/drive/MyDrive/Colab Notebooks/human_AI/Basic/Chapter 3. pandas/data/Lemonade2016.csv\n&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 32 entries, 0 to 31\nData columns (total 7 columns):\n #   Column       Non-Null Count  Dtype  \n---  ------       --------------  -----  \n 0   Date         31 non-null     object \n 1   Location     32 non-null     object \n 2   Lemon        32 non-null     int64  \n 3   Orange       32 non-null     int64  \n 4   Temperature  32 non-null     int64  \n 5   Leaflets     31 non-null     float64\n 6   Price        32 non-null     float64\ndtypes: float64(2), int64(3), object(2)\nmemory usage: 1.9+ KB\n</code></pre>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/06/28/day0628/python.png","excerpt":"<p>공부하자</p>","more":"<p>공부하자</p>\n<!-- excerpt -->\n\n<h2 id=\"반복문-복습\"><a href=\"#반복문-복습\" class=\"headerlink\" title=\"반복문 복습\"></a>반복문 복습</h2><ul>\n<li>for loop and while loop</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">3</span>):</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Hello World&quot;</span>)</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;안녕하세요&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Hello World\n안녕하세요\nHello World\n안녕하세요\nHello World\n안녕하세요\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1000</span>):</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;No.&quot;</span>, i+<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> i == <span class=\"number\">10</span>:</span><br><span class=\"line\">    <span class=\"keyword\">break</span>                  <span class=\"comment\"># Hello World, 안녕하세요 가 10번 출력 됨</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Hello World&quot;</span>)</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;안녕하세요&quot;</span>)      <span class=\"comment\"># i 값이 11이라서 &quot;No. 11&quot; 까지는 출력 되지만 if문 조건에서 통과 안됨</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>No. 1\nHello World\n안녕하세요\nNo. 2\nHello World\n안녕하세요\nNo. 3\nHello World\n안녕하세요\nNo. 4\nHello World\n안녕하세요\nNo. 5\nHello World\n안녕하세요\nNo. 6\nHello World\n안녕하세요\nNo. 7\nHello World\n안녕하세요\nNo. 8\nHello World\n안녕하세요\nNo. 9\nHello World\n안녕하세요\nNo. 10\nHello World\n안녕하세요\nNo. 11\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&quot;Kaggle&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> a:</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> i == <span class=\"string\">&quot;a&quot;</span>:</span><br><span class=\"line\">    <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"comment\">#print(i)  # 이 위치에 print가 있다면 어떻게 출력될까?</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>K\na\n</code></pre>\n<ul>\n<li>리스트의 값이 존재</li>\n<li>전체 총합 구하기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">numbers = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\"><span class=\"built_in\">sum</span> = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> num <span class=\"keyword\">in</span> numbers:</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;numbers: &quot;</span>, num)   <span class=\"comment\"># num 1 일때 sum = 1,  num 2 일때 sum = 2 + 1 = 3,   num 3 일때 sum = 3 + 3 = 6</span></span><br><span class=\"line\">  <span class=\"built_in\">sum</span> = <span class=\"built_in\">sum</span>+num</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;total:&quot;</span>, <span class=\"built_in\">sum</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;----최종 결괏값----&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">sum</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>numbers:  1\ntotal: 1\nnumbers:  2\ntotal: 3\nnumbers:  3\ntotal: 6\nnumbers:  4\ntotal: 10\nnumbers:  5\ntotal: 15\n----최종 결괏값----\n15\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fruits = [<span class=\"string\">&#x27;apple&#x27;</span>, <span class=\"string\">&#x27;kiwi&#x27;</span>, <span class=\"string\">&#x27;mango&#x27;</span>]</span><br><span class=\"line\">newlist = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">apple : a가 있나요? 있네요, newlist에 추가하세요.</span></span><br><span class=\"line\"><span class=\"string\">kiwi : a가 있나요? 없네요. 그럼 넘어가요.</span></span><br><span class=\"line\"><span class=\"string\">mango : a가 있나요? 있네요. newlist에 추가하세요.</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> fruit <span class=\"keyword\">in</span> fruits:</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;조건문 밖 : &quot;</span>, fruit)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"string\">&quot;a&quot;</span> <span class=\"keyword\">in</span> fruit:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;조건문 안쪽 : &quot;</span>, fruit)</span><br><span class=\"line\">    newlist.append(fruit)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(newlist)</span><br></pre></td></tr></table></figure>\n\n<pre><code>조건문 밖 :  apple\n조건문 안쪽 :  apple\n조건문 밖 :  kiwi\n조건문 밖 :  mango\n조건문 안쪽 :  mango\n[&#39;apple&#39;, &#39;mango&#39;]\n</code></pre>\n<h3 id=\"While-Loop\"><a href=\"#While-Loop\" class=\"headerlink\" title=\"While Loop\"></a>While Loop</h3><ul>\n<li>while문 : 분석할 때는 거의 쓸 일이 없음(분석할 때는 거의 틀이 정해져 있음)<br>개발할 때는 많이 씀</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> i &lt; <span class=\"number\">10</span>: <span class=\"comment\">#참일때만 반복문 코드가 돌아감</span></span><br><span class=\"line\">  <span class=\"comment\"># 코드</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">  i += <span class=\"number\">1</span>          <span class=\"comment\"># 1씩 증감</span></span><br><span class=\"line\">  <span class=\"comment\">#i -= 1         # 1씩 감소</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>1\n2\n3\n4\n5\n6\n7\n8\n9\n</code></pre>\n<h2 id=\"사용자-정의-함수\"><a href=\"#사용자-정의-함수\" class=\"headerlink\" title=\"사용자 정의 함수\"></a>사용자 정의 함수</h2><ul>\n<li>내가 필요에 의해 직접 함수를 작성(취업 준비)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">함수명</span>(<span class=\"params\">param1, param2</span>):      <span class=\"comment\"># 함수 정의</span></span><br><span class=\"line\">  <span class=\"comment\"># 코드</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">None</span></span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add</span>(<span class=\"params\">a = <span class=\"number\">0</span>, b = <span class=\"number\">1</span></span>):</span><br><span class=\"line\">  c = a + b</span><br><span class=\"line\">  <span class=\"keyword\">return</span> c</span><br><span class=\"line\">  <span class=\"keyword\">return</span> a + b</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(add(a = <span class=\"number\">5</span>, b =<span class=\"number\">4</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(add())</span><br></pre></td></tr></table></figure>\n\n<pre><code>9\n1\n</code></pre>\n<ul>\n<li>사칙연산 사용자 정의 함수 만들기</li>\n<li>함수 문서화<ul>\n<li>print(함수명.<strong>doc</strong>)</li>\n<li>키워드 : Docstring</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">code</span>(<span class=\"params\">a, b, c</span>):</span><br><span class=\"line\">  d =  (b - c) * a / <span class=\"number\">10</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> d</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">a = 10회 뽑기에 필요한 다이아</span></span><br><span class=\"line\"><span class=\"string\">b = 확정 뽑기 횟수</span></span><br><span class=\"line\"><span class=\"string\">c = 현재 누적 뽑기 횟수</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;확정 뽑기에 필요한 다이아 수 : &quot;</span>, code(a = <span class=\"number\">2700</span>, b = <span class=\"number\">200</span>, c = <span class=\"number\">40</span>))</span><br></pre></td></tr></table></figure>\n\n<pre><code>확정 뽑기에 필요한 다이아 수 :  43200.0\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">subtract</span>(<span class=\"params\">a, b</span>):</span><br><span class=\"line\">  <span class=\"string\">&quot;&quot;&quot;a, b를 빼는 함수</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  Parameters:</span></span><br><span class=\"line\"><span class=\"string\">  a (int): int형 숫자 a가 입력</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  b (int): int형 숫자 b가 입력</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  Returns:</span></span><br><span class=\"line\"><span class=\"string\">  int : 반환값</span></span><br><span class=\"line\"><span class=\"string\">  </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  &quot;&quot;&quot;</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> a-b</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(subtract(a = <span class=\"number\">5</span>, b= <span class=\"number\">10</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(subtract.__doc__)</span><br></pre></td></tr></table></figure>\n\n<pre><code>-5\na, b를 빼는 함수\n\n  Parameters:\n  a (int): int형 숫자 a가 입력\n  \n  b (int): int형 숫자 b가 입력\n\n  Returns:\n    int : 반환값\n\n  \n</code></pre>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## NumPy</span><br><span class=\"line\">- 내장 모듈(=라이브러리=패키지) (X)</span><br><span class=\"line\">- 별도 라이브러리 설치</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">```python</span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\">print(np.__version__)</span><br></pre></td></tr></table></figure>\n\n<pre><code>1.21.6\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\">temp_array = np.array(temp)  <span class=\"comment\"># 리스트에서 배열로 변환</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(temp))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(temp_array))</span><br></pre></td></tr></table></figure>\n\n<pre><code>&lt;class &#39;list&#39;&gt;\n&lt;class &#39;numpy.ndarray&#39;&gt;\n</code></pre>\n<h2 id=\"사칙연산\"><a href=\"#사칙연산\" class=\"headerlink\" title=\"사칙연산\"></a>사칙연산</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">math_score = [<span class=\"number\">90</span>,<span class=\"number\">85</span>,<span class=\"number\">95</span>]</span><br><span class=\"line\">eng_score = [<span class=\"number\">83</span>, <span class=\"number\">77</span>, <span class=\"number\">80</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># math_score + eng_score              # 단순 리스트 추가</span></span><br><span class=\"line\">math_array = np.array(math_score)</span><br><span class=\"line\">eng_array = np.array(eng_score)</span><br><span class=\"line\"></span><br><span class=\"line\">total = math_array + eng_array        <span class=\"comment\"># 리스트 안의 변수 값을 더하는 과정</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(total)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(total))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[173 162 175]\n&lt;class &#39;numpy.ndarray&#39;&gt;\n</code></pre>\n<h2 id=\"집계함수\"><a href=\"#집계함수\" class=\"headerlink\" title=\"집계함수\"></a>집계함수</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(np.<span class=\"built_in\">min</span>(total))    <span class=\"comment\"># total 함수의 최솟값</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.<span class=\"built_in\">max</span>(total))    <span class=\"comment\"># total 함수의 최댓값</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.<span class=\"built_in\">sum</span>(total))    <span class=\"comment\"># total 함수의 모든 변수를 더한 값</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>162\n175\n510\n</code></pre>\n<h2 id=\"차원-확인\"><a href=\"#차원-확인\" class=\"headerlink\" title=\"차원 확인\"></a>차원 확인</h2><ul>\n<li>shape 함수 사용</li>\n<li>배열의 차원 확인 필요(함수명.ndim)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1차원 배열 생상</span></span><br><span class=\"line\">temp_arr = np.array([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr.shape)     <span class=\"comment\"># [1], [2], [3] 이라서 3</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr.ndim)      <span class=\"comment\"># temp_arr 함수의 차원</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(3,)\n1\n[1 2 3]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 2차원 배열 생성</span></span><br><span class=\"line\">temp_arr = np.array([[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr.shape)   </span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr.ndim)    <span class=\"comment\"># temp_arr 함수의 차원</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr)</span><br><span class=\"line\"><span class=\"comment\"># [[1, 2, 3], [4, 5, 6]] 2개 라서 2</span></span><br><span class=\"line\"><span class=\"comment\"># 그 속에 각각 [1], [2], [3] 3개 라서 3</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>(2, 3)\n2\n[[1 2 3]\n [4 5 6]]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 3차원 배열 생성 -&gt; 이미지</span></span><br><span class=\"line\">temp_arr = np.array([[[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]],[[<span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>], [<span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>]]])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr.ndim)</span><br><span class=\"line\"><span class=\"comment\"># [[1, 2, 3],[4, 5, 6]]이랑 [[7, 8, 9], [10, 11, 12]]라서 2</span></span><br><span class=\"line\"><span class=\"comment\"># 그 속에 [1, 2, 3]이랑 [4, 5, 6] 이라서 2</span></span><br><span class=\"line\"><span class=\"comment\"># 그 속에 [1],[2],[3] 이라서 3</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>(2, 2, 3)\n3\n</code></pre>\n<h2 id=\"배열-생성의-다양한-방법들\"><a href=\"#배열-생성의-다양한-방법들\" class=\"headerlink\" title=\"배열 생성의 다양한 방법들\"></a>배열 생성의 다양한 방법들</h2><ul>\n<li>모두 0으로 채운다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np </span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.__version__)</span><br></pre></td></tr></table></figure>\n\n<pre><code>1.21.6\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_arr = np.zeros((<span class=\"number\">2</span>, <span class=\"number\">3</span>))</span><br><span class=\"line\">temp_arr</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([[0., 0., 0.],\n       [0., 0., 0.]])\n</code></pre>\n<ul>\n<li>모두 1로 채운다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_arr = np.ones((<span class=\"number\">2</span>, <span class=\"number\">3</span>))</span><br><span class=\"line\">temp_arr</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([[1., 1., 1.],\n       [1., 1., 1.]])\n</code></pre>\n<ul>\n<li>임의의 상수값으로 채운다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_arr = np.full((<span class=\"number\">3</span>, <span class=\"number\">3</span>), <span class=\"number\">100</span>)</span><br><span class=\"line\">temp_arr</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([[100, 100, 100],\n       [100, 100, 100],\n       [100, 100, 100]])\n</code></pre>\n<ul>\n<li>최소, 최대 숫자의 범위를 정해두고, 각 구간별로 값을 생성</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_arr = np.linspace(<span class=\"number\">5</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">temp_arr</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([ 5.        ,  5.55555556,  6.11111111,  6.66666667,  7.22222222,\n        7.77777778,  8.33333333,  8.88888889,  9.44444444, 10.        ])\n</code></pre>\n<ul>\n<li>반복문 시, 자주 등장하는 배열</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_arr = np.arange(<span class=\"number\">1</span>, <span class=\"number\">11</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">temp_arr</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])\n</code></pre>\n<h2 id=\"난수-생성\"><a href=\"#난수-생성\" class=\"headerlink\" title=\"난수 생성\"></a>난수 생성</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> numpy <span class=\"keyword\">import</span> random</span><br><span class=\"line\">x = random.rand()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x)</span><br></pre></td></tr></table></figure>\n\n<pre><code>0.11621638529248979\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy </span><br><span class=\"line\">x = numpy.random.rand()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x)</span><br></pre></td></tr></table></figure>\n\n<pre><code>0.3315584451465583\n</code></pre>\n<ul>\n<li>랜덤 정수값 추출</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> numpy <span class=\"keyword\">import</span> random </span><br><span class=\"line\"><span class=\"comment\"># x = random.randint(100, size = (5))</span></span><br><span class=\"line\">x = random.randint(<span class=\"number\">100</span>, size = (<span class=\"number\">3</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(x))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[[88  2 19 78 13]\n [92 80 62 22 96]\n [66 71 89 62 76]]\n&lt;class &#39;numpy.ndarray&#39;&gt;\n</code></pre>\n<ul>\n<li>랜덤 배열, 실숫값 추출</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> numpy <span class=\"keyword\">import</span> random </span><br><span class=\"line\">x = random.rand(<span class=\"number\">2</span>, <span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(x))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[[0.06336531 0.34486775 0.66923826 0.31566607 0.84566463]\n [0.61713876 0.67541796 0.65161201 0.04912466 0.45433901]]\n&lt;class &#39;numpy.ndarray&#39;&gt;\n</code></pre>\n<h2 id=\"NumPy-사칙-연산\"><a href=\"#NumPy-사칙-연산\" class=\"headerlink\" title=\"NumPy 사칙 연산\"></a>NumPy 사칙 연산</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\">array_01 = np.array([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>])</span><br><span class=\"line\">array_02 = np.array([<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span>])</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 덧셈</span></span><br><span class=\"line\">newArr = np.add(array_01, array_02)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(newArr)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 뺄셈</span></span><br><span class=\"line\">newArr = np.subtract(array_01, array_02)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(newArr)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 곱셈</span></span><br><span class=\"line\">newArr = np.multiply(array_01, array_02)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(newArr)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 나누기</span></span><br><span class=\"line\">newArr = np.divide(array_01, array_02)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(newArr)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 거듭제곱</span></span><br><span class=\"line\">array_01 = np.array([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>])</span><br><span class=\"line\">array_02 = np.array([<span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>])</span><br><span class=\"line\">newArr = np.power(array_01, array_02)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(newArr)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[3 5 5]\n[-1 -1  1]\n[2 6 6]\n[0.5        0.66666667 1.5       ]\n[ 1 16  9]\n</code></pre>\n<h2 id=\"소숫점-정렬\"><a href=\"#소숫점-정렬\" class=\"headerlink\" title=\"소숫점 정렬\"></a>소숫점 정렬</h2><ul>\n<li>소숫점을 정렬하는 다양한 방법</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 소숫점 제거 </span></span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\">temp_arr = np.trunc([-<span class=\"number\">1.23</span>, <span class=\"number\">1.23</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr)</span><br><span class=\"line\"></span><br><span class=\"line\">temp_arr = np.fix([-<span class=\"number\">1.23</span>, <span class=\"number\">1.23</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[-1.  1.]\n[-1.  1.]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 임의의 소숫점 자리에서 반올림</span></span><br><span class=\"line\">temp_arr = np.around([-<span class=\"number\">1.234546123</span>, <span class=\"number\">1.238791631</span>], <span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[-1.23455  1.23879]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 소숫점 모두 내림</span></span><br><span class=\"line\">temp_arr = np.floor([-<span class=\"number\">1.234546123</span>, <span class=\"number\">1.238791631</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[-2.  1.]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 소숫점 모두 올림</span></span><br><span class=\"line\">temp_arr = np.ceil([-<span class=\"number\">1.234546123</span>, <span class=\"number\">1.238791631</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[-1.  2.]\n</code></pre>\n<h2 id=\"조건식\"><a href=\"#조건식\" class=\"headerlink\" title=\"조건식\"></a>조건식</h2><ul>\n<li>pandas 가공</li>\n<li>numpy</li>\n<li>조건식<ul>\n<li>하나의 조건식 (&#x3D; np.where)</li>\n<li>다중 조건식</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_arr = np.arange(<span class=\"number\">10</span>)</span><br><span class=\"line\">temp_arr</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 5보다 작으면 원 값 유지</span></span><br><span class=\"line\"><span class=\"comment\"># 5보다 크면 곱하기 10을 해줌</span></span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># np.where(조건식, 참일 때, 거짓일 때)</span></span><br><span class=\"line\">np.where(temp_arr &lt; <span class=\"number\">5</span>, temp_arr, temp_arr * <span class=\"number\">10</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([ 0,  1,  2,  3,  4, 50, 60, 70, 80, 90])\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_arr = np.arange(<span class=\"number\">10</span>)</span><br><span class=\"line\"><span class=\"comment\"># temp_arr</span></span><br><span class=\"line\">cond_list   = [temp_arr &gt; <span class=\"number\">5</span> , temp_arr &lt; <span class=\"number\">2</span>]</span><br><span class=\"line\">choice_list = [temp_arr  * <span class=\"number\">2</span>, temp_arr + <span class=\"number\">100</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># np.select(조건식 리스트, 결괏값 리스트, default = )</span></span><br><span class=\"line\">np.select(cond_list, choice_list, default = temp_arr)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([100, 101,   2,   3,   4,   5,  12,  14,  16,  18])\n</code></pre>\n<h2 id=\"Reshape\"><a href=\"#Reshape\" class=\"headerlink\" title=\"Reshape\"></a>Reshape</h2><ul>\n<li>배열의 차원 또는 크기를 바꾼다. </li>\n<li>곱셈만 할줄 알면 끝.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np </span><br><span class=\"line\">temp_array = np.ones((<span class=\"number\">3</span>, <span class=\"number\">4</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_array.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_array)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(3, 4)\n[[1. 1. 1. 1.]\n [1. 1. 1. 1.]\n [1. 1. 1. 1.]]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">after_reshape = temp_array.reshape(<span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(after_reshape.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(after_reshape)</span><br></pre></td></tr></table></figure>\n\n\n<pre><code>---------------------------------------------------------------------------\n\nValueError                                Traceback (most recent call last)\n\n&lt;ipython-input-50-d57dd065a075&gt; in &lt;module&gt;()\n----&gt; 1 after_reshape = temp_array.reshape(2, 2, 5)\n      2 print(after_reshape.shape)\n      3 print(after_reshape)\n\n\nValueError: cannot reshape array of size 12 into shape (2,2,5)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">after_reshape = temp_array.reshape(<span class=\"number\">7</span>, -<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(after_reshape.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(after_reshape)</span><br></pre></td></tr></table></figure>\n\n\n<pre><code>---------------------------------------------------------------------------\n\nValueError                                Traceback (most recent call last)\n\n&lt;ipython-input-53-00ad0ee6a004&gt; in &lt;module&gt;()\n----&gt; 1 after_reshape = temp_array.reshape(7, -1)\n      2 print(after_reshape.shape)\n      3 print(after_reshape)\n\n\nValueError: cannot reshape array of size 12 into shape (7,newaxis)\n</code></pre>\n<h1 id=\"브로드-캐스팅\"><a href=\"#브로드-캐스팅\" class=\"headerlink\" title=\"브로드 캐스팅\"></a>브로드 캐스팅</h1><h1 id=\"pandas-튜토리얼\"><a href=\"#pandas-튜토리얼\" class=\"headerlink\" title=\"pandas 튜토리얼\"></a>pandas 튜토리얼</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd </span><br><span class=\"line\"><span class=\"built_in\">print</span>(pd.__version__)</span><br></pre></td></tr></table></figure>\n\n<pre><code>1.3.5\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_dict = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;col1&#x27;</span> : [<span class=\"number\">1</span>, <span class=\"number\">2</span>], </span><br><span class=\"line\">    <span class=\"string\">&#x27;col2&#x27;</span> : [<span class=\"number\">3</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">df = pd.DataFrame(temp_dict)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(df))</span><br></pre></td></tr></table></figure>\n\n<pre><code>   col1  col2\n0     1     3\n1     2     4\n&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\n</code></pre>\n<h2 id=\"구글-드라이브-연동\"><a href=\"#구글-드라이브-연동\" class=\"headerlink\" title=\"구글 드라이브 연동\"></a>구글 드라이브 연동</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> google.colab <span class=\"keyword\">import</span> drive </span><br><span class=\"line\">drive.mount(<span class=\"string\">&#x27;/content/drive&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Mounted at /content/drive\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DATA_PATH = <span class=\"string\">&#x27;/content/drive/MyDrive/Colab Notebooks/human_AI/Basic/Chapter 3. pandas/data/&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(DATA_PATH + <span class=\"string\">&#x27;Lemonade2016.csv&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">lemonade = pd.read_csv(DATA_PATH + <span class=\"string\">&#x27;Lemonade2016.csv&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># covid_df = pd.read_csv(DATA_PATH + &#x27;owid-covid-data.csv&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\">lemonade.info() <span class=\"comment\"># str()</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>/content/drive/MyDrive/Colab Notebooks/human_AI/Basic/Chapter 3. pandas/data/Lemonade2016.csv\n&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 32 entries, 0 to 31\nData columns (total 7 columns):\n #   Column       Non-Null Count  Dtype  \n---  ------       --------------  -----  \n 0   Date         31 non-null     object \n 1   Location     32 non-null     object \n 2   Lemon        32 non-null     int64  \n 3   Orange       32 non-null     int64  \n 4   Temperature  32 non-null     int64  \n 5   Leaflets     31 non-null     float64\n 6   Price        32 non-null     float64\ndtypes: float64(2), int64(3), object(2)\nmemory usage: 1.9+ KB\n</code></pre>\n"},{"title":"day 0629 개인복습","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","thumbnailImage":"python.png","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-06-29T09:59:30.000Z","_content":"\n데이터 시각화\n<!-- excerpt -->\n\n## 파이썬 주요 라이브러리\n- Machine Learning\n  + 정형데이터 \n  + 사이킷런 (Scikit-Learn)\n- Deep Learning\n  + 비정형데이터\n  + Tensorflow(구글) vs Pytorch(페이스북)\n  + 혼공머 : Tensorflow \n  + 실제 상용서비스 - Tensorflow vs R&D - Pytorch\n\n## 생선분류 \n- p.45\n- 도미, 곤들매기, 농어, 등등 \n- 이 생선들을 프로그램으로 분류한다. \n\n- 30cm 도미라고 알려줘라\n\n\n```python\nfish_length = 31\nif fish_length >= 30:\n    print(\"도미\")\n```\n\n    도미\n    \n\n- p.47\n- 도미데이터\n\n## 데이터 수집\n\n\n```python\n# 도미의 길이\nbream_length = [25.4, 26.3, 26.5, 29.0, 29.0, 29.7, 29.7, 30.0, 30.0, 30.7, 31.0, 31.0, 31.5, 32.0, 32.0, 32.0, 33.0, 33.0, 33.5, 33.5, 34.0, 34.0, 34.5, 35.0, 35.0, 35.0, 35.0, 36.0, 36.0, 37.0, 38.5, 38.5, 39.5, 41.0, 41.0]\n\n# 도미의 무게\nbream_weight = [242.0, 290.0, 340.0, 363.0, 430.0, 450.0, 500.0, 390.0, 450.0, 500.0, 475.0, 500.0, 500.0, 340.0, 600.0, 600.0, 700.0, 700.0, 610.0, 650.0, 575.0, 685.0, 620.0, 680.0, 700.0, 725.0, 720.0, 714.0, 850.0, 1000.0, 920.0, 955.0, 925.0, 975.0, 950.0]\n```\n\n## 데이터 가공\n- 여기서는 생략\n\n## 데이터 시각화\n- 여러 인사이트 확인 위해 시각화, 통계 수치 계산\n- 탐색적 자료 분석(EDA : Exploratory Data Analysis)\n- 얘는 참고만 한다. \n\n\n```python\nimport matplotlib.pyplot as plt\n\nplt.scatter(bream_length, bream_weight)\nplt.xlabel('length')\nplt.ylabel('weight')\nplt.show()\n```\n\n\n    \n![png](/images/0629/output_9_0.png)\n    \n\n\n- 파이썬 시각화는 객체지향으로 한다. \n- 이유 : 좀 더 이쁘고, 아름답게 다듬으려면... \n- 캐글 시각화, 참고할 때, 아래와 같이 하는 분들이 많음\n\n\n```python\nimport matplotlib.pyplot as plt\n\nfig, ax = plt.subplots()\nax.scatter(bream_length, bream_weight)\nax.set_xlabel('length')\nax.set_ylabel('weight')\nplt.show()\n```\n\n\n    \n![png](/images/0629/output_11_0.png)\n    \n\n\n- 빙어 데이터 준비하기\n\n\n```python\nsmelt_length = [9.8, 10.5, 10.6, 11.0, 11.2, 11.3, 11.8, 11.8, 12.0, 12.2, 12.4, 13.0, 14.3, 15.0]\nsmelt_weight = [6.7, 7.5, 7.0, 9.7, 9.8, 8.7, 10.0, 9.9, 9.8, 12.2, 13.4, 12.2, 19.7, 19.9]\n```\n\n- 시각화 \n- p.50 시각화\n\n\n```python\nfig, ax = plt.subplots()\nax.scatter(bream_length, bream_weight)\nax.scatter(smelt_length, smelt_weight)\nax.set_xlabel('length')\nax.set_ylabel('weight')\nplt.show()\n```\n\n\n    \n![png](/images/0629/output_15_0.png)\n    \n\n\n- 두개의 리스트 합치기\n\n\n```python\nlength = bream_length + smelt_length \nweight = bream_weight + smelt_weight \n```\n\n- 2차원 리스트로 만든다. \n\n\n```python\nfish_data = [[l, w] for l, w in zip(length, weight)]\nfish_data[0:5]\n```\n\n\n\n\n    [[25.4, 242.0], [26.3, 290.0], [26.5, 340.0], [29.0, 363.0], [29.0, 430.0]]\n\n\n\n- 라벨링을 해준다 = 지도 해준다 = 지도학습\n\n\n```python\nfish_target = [1] * 35 + [0] * 14\nprint(fish_target)\n```\n\n    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    \n\n## 모델링\n\n\n```python\nfrom sklearn.neighbors import KNeighborsClassifier\n\n# 클래스 인스턴스화\nkn = KNeighborsClassifier()\n\n# 모형 학습\nkn.fit(fish_data, fish_target)\n```\n\n\n\n\n    1.0\n\n\n\n\n```python\n# 예측 정확도\nkn.score(fish_data, fish_target)\n```\n\n\n\n\n    1.0\n\n\n\n- 실제 예측을 해보자\n- 새로운 물고기 도착했습니다. \n  + 길이 : 30, 몸무게 : 600\n\n\n```python\nac_length = int(input(\"물고기 길이를 입력하세요...\"))\nac_weight = int(input(\"물고기 무게를 입력하세요...\"))\n\npreds = int(kn.predict([[ac_length, ac_weight]]))\nprint(preds)\n\nif preds == 1:\n  print(\"도미\")\nelse:\n  print(\"빙어\")\n\n```\n\n    물고기 길이를 입력하세요...30\n    물고기 무게를 입력하세요...600\n    1\n    도미\n    \n","source":"_posts/day0629_ml.md","raw":"---\ntitle: \"day 0629 개인복습\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: 복습할 것들\nthumbnailImage: python.png\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-06-29 18:59:30'\n---\n\n데이터 시각화\n<!-- excerpt -->\n\n## 파이썬 주요 라이브러리\n- Machine Learning\n  + 정형데이터 \n  + 사이킷런 (Scikit-Learn)\n- Deep Learning\n  + 비정형데이터\n  + Tensorflow(구글) vs Pytorch(페이스북)\n  + 혼공머 : Tensorflow \n  + 실제 상용서비스 - Tensorflow vs R&D - Pytorch\n\n## 생선분류 \n- p.45\n- 도미, 곤들매기, 농어, 등등 \n- 이 생선들을 프로그램으로 분류한다. \n\n- 30cm 도미라고 알려줘라\n\n\n```python\nfish_length = 31\nif fish_length >= 30:\n    print(\"도미\")\n```\n\n    도미\n    \n\n- p.47\n- 도미데이터\n\n## 데이터 수집\n\n\n```python\n# 도미의 길이\nbream_length = [25.4, 26.3, 26.5, 29.0, 29.0, 29.7, 29.7, 30.0, 30.0, 30.7, 31.0, 31.0, 31.5, 32.0, 32.0, 32.0, 33.0, 33.0, 33.5, 33.5, 34.0, 34.0, 34.5, 35.0, 35.0, 35.0, 35.0, 36.0, 36.0, 37.0, 38.5, 38.5, 39.5, 41.0, 41.0]\n\n# 도미의 무게\nbream_weight = [242.0, 290.0, 340.0, 363.0, 430.0, 450.0, 500.0, 390.0, 450.0, 500.0, 475.0, 500.0, 500.0, 340.0, 600.0, 600.0, 700.0, 700.0, 610.0, 650.0, 575.0, 685.0, 620.0, 680.0, 700.0, 725.0, 720.0, 714.0, 850.0, 1000.0, 920.0, 955.0, 925.0, 975.0, 950.0]\n```\n\n## 데이터 가공\n- 여기서는 생략\n\n## 데이터 시각화\n- 여러 인사이트 확인 위해 시각화, 통계 수치 계산\n- 탐색적 자료 분석(EDA : Exploratory Data Analysis)\n- 얘는 참고만 한다. \n\n\n```python\nimport matplotlib.pyplot as plt\n\nplt.scatter(bream_length, bream_weight)\nplt.xlabel('length')\nplt.ylabel('weight')\nplt.show()\n```\n\n\n    \n![png](/images/0629/output_9_0.png)\n    \n\n\n- 파이썬 시각화는 객체지향으로 한다. \n- 이유 : 좀 더 이쁘고, 아름답게 다듬으려면... \n- 캐글 시각화, 참고할 때, 아래와 같이 하는 분들이 많음\n\n\n```python\nimport matplotlib.pyplot as plt\n\nfig, ax = plt.subplots()\nax.scatter(bream_length, bream_weight)\nax.set_xlabel('length')\nax.set_ylabel('weight')\nplt.show()\n```\n\n\n    \n![png](/images/0629/output_11_0.png)\n    \n\n\n- 빙어 데이터 준비하기\n\n\n```python\nsmelt_length = [9.8, 10.5, 10.6, 11.0, 11.2, 11.3, 11.8, 11.8, 12.0, 12.2, 12.4, 13.0, 14.3, 15.0]\nsmelt_weight = [6.7, 7.5, 7.0, 9.7, 9.8, 8.7, 10.0, 9.9, 9.8, 12.2, 13.4, 12.2, 19.7, 19.9]\n```\n\n- 시각화 \n- p.50 시각화\n\n\n```python\nfig, ax = plt.subplots()\nax.scatter(bream_length, bream_weight)\nax.scatter(smelt_length, smelt_weight)\nax.set_xlabel('length')\nax.set_ylabel('weight')\nplt.show()\n```\n\n\n    \n![png](/images/0629/output_15_0.png)\n    \n\n\n- 두개의 리스트 합치기\n\n\n```python\nlength = bream_length + smelt_length \nweight = bream_weight + smelt_weight \n```\n\n- 2차원 리스트로 만든다. \n\n\n```python\nfish_data = [[l, w] for l, w in zip(length, weight)]\nfish_data[0:5]\n```\n\n\n\n\n    [[25.4, 242.0], [26.3, 290.0], [26.5, 340.0], [29.0, 363.0], [29.0, 430.0]]\n\n\n\n- 라벨링을 해준다 = 지도 해준다 = 지도학습\n\n\n```python\nfish_target = [1] * 35 + [0] * 14\nprint(fish_target)\n```\n\n    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    \n\n## 모델링\n\n\n```python\nfrom sklearn.neighbors import KNeighborsClassifier\n\n# 클래스 인스턴스화\nkn = KNeighborsClassifier()\n\n# 모형 학습\nkn.fit(fish_data, fish_target)\n```\n\n\n\n\n    1.0\n\n\n\n\n```python\n# 예측 정확도\nkn.score(fish_data, fish_target)\n```\n\n\n\n\n    1.0\n\n\n\n- 실제 예측을 해보자\n- 새로운 물고기 도착했습니다. \n  + 길이 : 30, 몸무게 : 600\n\n\n```python\nac_length = int(input(\"물고기 길이를 입력하세요...\"))\nac_weight = int(input(\"물고기 무게를 입력하세요...\"))\n\npreds = int(kn.predict([[ac_length, ac_weight]]))\nprint(preds)\n\nif preds == 1:\n  print(\"도미\")\nelse:\n  print(\"빙어\")\n\n```\n\n    물고기 길이를 입력하세요...30\n    물고기 무게를 입력하세요...600\n    1\n    도미\n    \n","slug":"day0629_ml","published":1,"updated":"2022-07-21T12:49:59.647Z","_id":"cl5fcok7t000qjku0cu9x2s66","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n<h2 id=\"파이썬-주요-라이브러리\"><a href=\"#파이썬-주요-라이브러리\" class=\"headerlink\" title=\"파이썬 주요 라이브러리\"></a>파이썬 주요 라이브러리</h2><ul>\n<li>Machine Learning<ul>\n<li>정형데이터 </li>\n<li>사이킷런 (Scikit-Learn)</li>\n</ul>\n</li>\n<li>Deep Learning<ul>\n<li>비정형데이터</li>\n<li>Tensorflow(구글) vs Pytorch(페이스북)</li>\n<li>혼공머 : Tensorflow </li>\n<li>실제 상용서비스 - Tensorflow vs R&amp;D - Pytorch</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"생선분류\"><a href=\"#생선분류\" class=\"headerlink\" title=\"생선분류\"></a>생선분류</h2><ul>\n<li><p>p.45</p>\n</li>\n<li><p>도미, 곤들매기, 농어, 등등 </p>\n</li>\n<li><p>이 생선들을 프로그램으로 분류한다. </p>\n</li>\n<li><p>30cm 도미라고 알려줘라</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fish_length = <span class=\"number\">31</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> fish_length &gt;= <span class=\"number\">30</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;도미&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>도미\n</code></pre>\n<ul>\n<li>p.47</li>\n<li>도미데이터</li>\n</ul>\n<h2 id=\"데이터-수집\"><a href=\"#데이터-수집\" class=\"headerlink\" title=\"데이터 수집\"></a>데이터 수집</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 도미의 길이</span></span><br><span class=\"line\">bream_length = [<span class=\"number\">25.4</span>, <span class=\"number\">26.3</span>, <span class=\"number\">26.5</span>, <span class=\"number\">29.0</span>, <span class=\"number\">29.0</span>, <span class=\"number\">29.7</span>, <span class=\"number\">29.7</span>, <span class=\"number\">30.0</span>, <span class=\"number\">30.0</span>, <span class=\"number\">30.7</span>, <span class=\"number\">31.0</span>, <span class=\"number\">31.0</span>, <span class=\"number\">31.5</span>, <span class=\"number\">32.0</span>, <span class=\"number\">32.0</span>, <span class=\"number\">32.0</span>, <span class=\"number\">33.0</span>, <span class=\"number\">33.0</span>, <span class=\"number\">33.5</span>, <span class=\"number\">33.5</span>, <span class=\"number\">34.0</span>, <span class=\"number\">34.0</span>, <span class=\"number\">34.5</span>, <span class=\"number\">35.0</span>, <span class=\"number\">35.0</span>, <span class=\"number\">35.0</span>, <span class=\"number\">35.0</span>, <span class=\"number\">36.0</span>, <span class=\"number\">36.0</span>, <span class=\"number\">37.0</span>, <span class=\"number\">38.5</span>, <span class=\"number\">38.5</span>, <span class=\"number\">39.5</span>, <span class=\"number\">41.0</span>, <span class=\"number\">41.0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 도미의 무게</span></span><br><span class=\"line\">bream_weight = [<span class=\"number\">242.0</span>, <span class=\"number\">290.0</span>, <span class=\"number\">340.0</span>, <span class=\"number\">363.0</span>, <span class=\"number\">430.0</span>, <span class=\"number\">450.0</span>, <span class=\"number\">500.0</span>, <span class=\"number\">390.0</span>, <span class=\"number\">450.0</span>, <span class=\"number\">500.0</span>, <span class=\"number\">475.0</span>, <span class=\"number\">500.0</span>, <span class=\"number\">500.0</span>, <span class=\"number\">340.0</span>, <span class=\"number\">600.0</span>, <span class=\"number\">600.0</span>, <span class=\"number\">700.0</span>, <span class=\"number\">700.0</span>, <span class=\"number\">610.0</span>, <span class=\"number\">650.0</span>, <span class=\"number\">575.0</span>, <span class=\"number\">685.0</span>, <span class=\"number\">620.0</span>, <span class=\"number\">680.0</span>, <span class=\"number\">700.0</span>, <span class=\"number\">725.0</span>, <span class=\"number\">720.0</span>, <span class=\"number\">714.0</span>, <span class=\"number\">850.0</span>, <span class=\"number\">1000.0</span>, <span class=\"number\">920.0</span>, <span class=\"number\">955.0</span>, <span class=\"number\">925.0</span>, <span class=\"number\">975.0</span>, <span class=\"number\">950.0</span>]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"데이터-가공\"><a href=\"#데이터-가공\" class=\"headerlink\" title=\"데이터 가공\"></a>데이터 가공</h2><ul>\n<li>여기서는 생략</li>\n</ul>\n<h2 id=\"데이터-시각화\"><a href=\"#데이터-시각화\" class=\"headerlink\" title=\"데이터 시각화\"></a>데이터 시각화</h2><ul>\n<li>여러 인사이트 확인 위해 시각화, 통계 수치 계산</li>\n<li>탐색적 자료 분석(EDA : Exploratory Data Analysis)</li>\n<li>얘는 참고만 한다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\">plt.scatter(bream_length, bream_weight)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;length&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;weight&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0629/output_9_0.png\" alt=\"png\"></p>\n<ul>\n<li>파이썬 시각화는 객체지향으로 한다. </li>\n<li>이유 : 좀 더 이쁘고, 아름답게 다듬으려면… </li>\n<li>캐글 시각화, 참고할 때, 아래와 같이 하는 분들이 많음</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\">fig, ax = plt.subplots()</span><br><span class=\"line\">ax.scatter(bream_length, bream_weight)</span><br><span class=\"line\">ax.set_xlabel(<span class=\"string\">&#x27;length&#x27;</span>)</span><br><span class=\"line\">ax.set_ylabel(<span class=\"string\">&#x27;weight&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0629/output_11_0.png\" alt=\"png\"></p>\n<ul>\n<li>빙어 데이터 준비하기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">smelt_length = [<span class=\"number\">9.8</span>, <span class=\"number\">10.5</span>, <span class=\"number\">10.6</span>, <span class=\"number\">11.0</span>, <span class=\"number\">11.2</span>, <span class=\"number\">11.3</span>, <span class=\"number\">11.8</span>, <span class=\"number\">11.8</span>, <span class=\"number\">12.0</span>, <span class=\"number\">12.2</span>, <span class=\"number\">12.4</span>, <span class=\"number\">13.0</span>, <span class=\"number\">14.3</span>, <span class=\"number\">15.0</span>]</span><br><span class=\"line\">smelt_weight = [<span class=\"number\">6.7</span>, <span class=\"number\">7.5</span>, <span class=\"number\">7.0</span>, <span class=\"number\">9.7</span>, <span class=\"number\">9.8</span>, <span class=\"number\">8.7</span>, <span class=\"number\">10.0</span>, <span class=\"number\">9.9</span>, <span class=\"number\">9.8</span>, <span class=\"number\">12.2</span>, <span class=\"number\">13.4</span>, <span class=\"number\">12.2</span>, <span class=\"number\">19.7</span>, <span class=\"number\">19.9</span>]</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>시각화 </li>\n<li>p.50 시각화</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fig, ax = plt.subplots()</span><br><span class=\"line\">ax.scatter(bream_length, bream_weight)</span><br><span class=\"line\">ax.scatter(smelt_length, smelt_weight)</span><br><span class=\"line\">ax.set_xlabel(<span class=\"string\">&#x27;length&#x27;</span>)</span><br><span class=\"line\">ax.set_ylabel(<span class=\"string\">&#x27;weight&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0629/output_15_0.png\" alt=\"png\"></p>\n<ul>\n<li>두개의 리스트 합치기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">length = bream_length + smelt_length </span><br><span class=\"line\">weight = bream_weight + smelt_weight </span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>2차원 리스트로 만든다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fish_data = [[l, w] <span class=\"keyword\">for</span> l, w <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(length, weight)]</span><br><span class=\"line\">fish_data[<span class=\"number\">0</span>:<span class=\"number\">5</span>]</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>[[25.4, 242.0], [26.3, 290.0], [26.5, 340.0], [29.0, 363.0], [29.0, 430.0]]\n</code></pre>\n<ul>\n<li>라벨링을 해준다 &#x3D; 지도 해준다 &#x3D; 지도학습</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fish_target = [<span class=\"number\">1</span>] * <span class=\"number\">35</span> + [<span class=\"number\">0</span>] * <span class=\"number\">14</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(fish_target)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n</code></pre>\n<h2 id=\"모델링\"><a href=\"#모델링\" class=\"headerlink\" title=\"모델링\"></a>모델링</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.neighbors <span class=\"keyword\">import</span> KNeighborsClassifier</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 클래스 인스턴스화</span></span><br><span class=\"line\">kn = KNeighborsClassifier()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 모형 학습</span></span><br><span class=\"line\">kn.fit(fish_data, fish_target)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>1.0\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 예측 정확도</span></span><br><span class=\"line\">kn.score(fish_data, fish_target)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>1.0\n</code></pre>\n<ul>\n<li>실제 예측을 해보자</li>\n<li>새로운 물고기 도착했습니다. <ul>\n<li>길이 : 30, 몸무게 : 600</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ac_length = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;물고기 길이를 입력하세요...&quot;</span>))</span><br><span class=\"line\">ac_weight = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;물고기 무게를 입력하세요...&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">preds = <span class=\"built_in\">int</span>(kn.predict([[ac_length, ac_weight]]))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(preds)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> preds == <span class=\"number\">1</span>:</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;도미&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;빙어&quot;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<pre><code>물고기 길이를 입력하세요...30\n물고기 무게를 입력하세요...600\n1\n도미\n</code></pre>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/06/29/day0629_ml/python.png","excerpt":"<p>데이터 시각화</p>","more":"<p>데이터 시각화</p>\n<!-- excerpt -->\n\n<h2 id=\"파이썬-주요-라이브러리\"><a href=\"#파이썬-주요-라이브러리\" class=\"headerlink\" title=\"파이썬 주요 라이브러리\"></a>파이썬 주요 라이브러리</h2><ul>\n<li>Machine Learning<ul>\n<li>정형데이터 </li>\n<li>사이킷런 (Scikit-Learn)</li>\n</ul>\n</li>\n<li>Deep Learning<ul>\n<li>비정형데이터</li>\n<li>Tensorflow(구글) vs Pytorch(페이스북)</li>\n<li>혼공머 : Tensorflow </li>\n<li>실제 상용서비스 - Tensorflow vs R&amp;D - Pytorch</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"생선분류\"><a href=\"#생선분류\" class=\"headerlink\" title=\"생선분류\"></a>생선분류</h2><ul>\n<li><p>p.45</p>\n</li>\n<li><p>도미, 곤들매기, 농어, 등등 </p>\n</li>\n<li><p>이 생선들을 프로그램으로 분류한다. </p>\n</li>\n<li><p>30cm 도미라고 알려줘라</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fish_length = <span class=\"number\">31</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> fish_length &gt;= <span class=\"number\">30</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;도미&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>도미\n</code></pre>\n<ul>\n<li>p.47</li>\n<li>도미데이터</li>\n</ul>\n<h2 id=\"데이터-수집\"><a href=\"#데이터-수집\" class=\"headerlink\" title=\"데이터 수집\"></a>데이터 수집</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 도미의 길이</span></span><br><span class=\"line\">bream_length = [<span class=\"number\">25.4</span>, <span class=\"number\">26.3</span>, <span class=\"number\">26.5</span>, <span class=\"number\">29.0</span>, <span class=\"number\">29.0</span>, <span class=\"number\">29.7</span>, <span class=\"number\">29.7</span>, <span class=\"number\">30.0</span>, <span class=\"number\">30.0</span>, <span class=\"number\">30.7</span>, <span class=\"number\">31.0</span>, <span class=\"number\">31.0</span>, <span class=\"number\">31.5</span>, <span class=\"number\">32.0</span>, <span class=\"number\">32.0</span>, <span class=\"number\">32.0</span>, <span class=\"number\">33.0</span>, <span class=\"number\">33.0</span>, <span class=\"number\">33.5</span>, <span class=\"number\">33.5</span>, <span class=\"number\">34.0</span>, <span class=\"number\">34.0</span>, <span class=\"number\">34.5</span>, <span class=\"number\">35.0</span>, <span class=\"number\">35.0</span>, <span class=\"number\">35.0</span>, <span class=\"number\">35.0</span>, <span class=\"number\">36.0</span>, <span class=\"number\">36.0</span>, <span class=\"number\">37.0</span>, <span class=\"number\">38.5</span>, <span class=\"number\">38.5</span>, <span class=\"number\">39.5</span>, <span class=\"number\">41.0</span>, <span class=\"number\">41.0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 도미의 무게</span></span><br><span class=\"line\">bream_weight = [<span class=\"number\">242.0</span>, <span class=\"number\">290.0</span>, <span class=\"number\">340.0</span>, <span class=\"number\">363.0</span>, <span class=\"number\">430.0</span>, <span class=\"number\">450.0</span>, <span class=\"number\">500.0</span>, <span class=\"number\">390.0</span>, <span class=\"number\">450.0</span>, <span class=\"number\">500.0</span>, <span class=\"number\">475.0</span>, <span class=\"number\">500.0</span>, <span class=\"number\">500.0</span>, <span class=\"number\">340.0</span>, <span class=\"number\">600.0</span>, <span class=\"number\">600.0</span>, <span class=\"number\">700.0</span>, <span class=\"number\">700.0</span>, <span class=\"number\">610.0</span>, <span class=\"number\">650.0</span>, <span class=\"number\">575.0</span>, <span class=\"number\">685.0</span>, <span class=\"number\">620.0</span>, <span class=\"number\">680.0</span>, <span class=\"number\">700.0</span>, <span class=\"number\">725.0</span>, <span class=\"number\">720.0</span>, <span class=\"number\">714.0</span>, <span class=\"number\">850.0</span>, <span class=\"number\">1000.0</span>, <span class=\"number\">920.0</span>, <span class=\"number\">955.0</span>, <span class=\"number\">925.0</span>, <span class=\"number\">975.0</span>, <span class=\"number\">950.0</span>]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"데이터-가공\"><a href=\"#데이터-가공\" class=\"headerlink\" title=\"데이터 가공\"></a>데이터 가공</h2><ul>\n<li>여기서는 생략</li>\n</ul>\n<h2 id=\"데이터-시각화\"><a href=\"#데이터-시각화\" class=\"headerlink\" title=\"데이터 시각화\"></a>데이터 시각화</h2><ul>\n<li>여러 인사이트 확인 위해 시각화, 통계 수치 계산</li>\n<li>탐색적 자료 분석(EDA : Exploratory Data Analysis)</li>\n<li>얘는 참고만 한다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\">plt.scatter(bream_length, bream_weight)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;length&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;weight&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0629/output_9_0.png\" alt=\"png\"></p>\n<ul>\n<li>파이썬 시각화는 객체지향으로 한다. </li>\n<li>이유 : 좀 더 이쁘고, 아름답게 다듬으려면… </li>\n<li>캐글 시각화, 참고할 때, 아래와 같이 하는 분들이 많음</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\">fig, ax = plt.subplots()</span><br><span class=\"line\">ax.scatter(bream_length, bream_weight)</span><br><span class=\"line\">ax.set_xlabel(<span class=\"string\">&#x27;length&#x27;</span>)</span><br><span class=\"line\">ax.set_ylabel(<span class=\"string\">&#x27;weight&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0629/output_11_0.png\" alt=\"png\"></p>\n<ul>\n<li>빙어 데이터 준비하기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">smelt_length = [<span class=\"number\">9.8</span>, <span class=\"number\">10.5</span>, <span class=\"number\">10.6</span>, <span class=\"number\">11.0</span>, <span class=\"number\">11.2</span>, <span class=\"number\">11.3</span>, <span class=\"number\">11.8</span>, <span class=\"number\">11.8</span>, <span class=\"number\">12.0</span>, <span class=\"number\">12.2</span>, <span class=\"number\">12.4</span>, <span class=\"number\">13.0</span>, <span class=\"number\">14.3</span>, <span class=\"number\">15.0</span>]</span><br><span class=\"line\">smelt_weight = [<span class=\"number\">6.7</span>, <span class=\"number\">7.5</span>, <span class=\"number\">7.0</span>, <span class=\"number\">9.7</span>, <span class=\"number\">9.8</span>, <span class=\"number\">8.7</span>, <span class=\"number\">10.0</span>, <span class=\"number\">9.9</span>, <span class=\"number\">9.8</span>, <span class=\"number\">12.2</span>, <span class=\"number\">13.4</span>, <span class=\"number\">12.2</span>, <span class=\"number\">19.7</span>, <span class=\"number\">19.9</span>]</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>시각화 </li>\n<li>p.50 시각화</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fig, ax = plt.subplots()</span><br><span class=\"line\">ax.scatter(bream_length, bream_weight)</span><br><span class=\"line\">ax.scatter(smelt_length, smelt_weight)</span><br><span class=\"line\">ax.set_xlabel(<span class=\"string\">&#x27;length&#x27;</span>)</span><br><span class=\"line\">ax.set_ylabel(<span class=\"string\">&#x27;weight&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0629/output_15_0.png\" alt=\"png\"></p>\n<ul>\n<li>두개의 리스트 합치기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">length = bream_length + smelt_length </span><br><span class=\"line\">weight = bream_weight + smelt_weight </span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>2차원 리스트로 만든다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fish_data = [[l, w] <span class=\"keyword\">for</span> l, w <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(length, weight)]</span><br><span class=\"line\">fish_data[<span class=\"number\">0</span>:<span class=\"number\">5</span>]</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>[[25.4, 242.0], [26.3, 290.0], [26.5, 340.0], [29.0, 363.0], [29.0, 430.0]]\n</code></pre>\n<ul>\n<li>라벨링을 해준다 &#x3D; 지도 해준다 &#x3D; 지도학습</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fish_target = [<span class=\"number\">1</span>] * <span class=\"number\">35</span> + [<span class=\"number\">0</span>] * <span class=\"number\">14</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(fish_target)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n</code></pre>\n<h2 id=\"모델링\"><a href=\"#모델링\" class=\"headerlink\" title=\"모델링\"></a>모델링</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.neighbors <span class=\"keyword\">import</span> KNeighborsClassifier</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 클래스 인스턴스화</span></span><br><span class=\"line\">kn = KNeighborsClassifier()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 모형 학습</span></span><br><span class=\"line\">kn.fit(fish_data, fish_target)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>1.0\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 예측 정확도</span></span><br><span class=\"line\">kn.score(fish_data, fish_target)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>1.0\n</code></pre>\n<ul>\n<li>실제 예측을 해보자</li>\n<li>새로운 물고기 도착했습니다. <ul>\n<li>길이 : 30, 몸무게 : 600</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ac_length = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;물고기 길이를 입력하세요...&quot;</span>))</span><br><span class=\"line\">ac_weight = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;물고기 무게를 입력하세요...&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">preds = <span class=\"built_in\">int</span>(kn.predict([[ac_length, ac_weight]]))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(preds)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> preds == <span class=\"number\">1</span>:</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;도미&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;빙어&quot;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<pre><code>물고기 길이를 입력하세요...30\n물고기 무게를 입력하세요...600\n1\n도미\n</code></pre>\n"},{"title":"day 0630_1","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","thumbnailImage":"python.png","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-06-30T08:53:30.000Z","_content":"\n- 최근접 이웃회귀, 과대적합, 과소적합\n<!-- excerpt -->\n\n## K-최근접 이웃 회귀\n- 지도 학습 알고리즘은 크게 분류와 회귀\n- 지도 학습 : 종속변수 존재\n  + 분류 : 도미와 빙어를 분류하는 작업 해결\n  + 회귀 : 통계 회귀분석 y = ax + b / 수치 예측\n\n## 데이터 불러오기\n\n\n```python\nimport numpy as np\nprint(np.__version__)\n```\n\n    1.21.6\n    \n\n\n```python\nperch_length = np.array(\n    [8.4, 13.7, 15.0, 16.2, 17.4, 18.0, 18.7, 19.0, 19.6, 20.0, \n     21.0, 21.0, 21.0, 21.3, 22.0, 22.0, 22.0, 22.0, 22.0, 22.5, \n     22.5, 22.7, 23.0, 23.5, 24.0, 24.0, 24.6, 25.0, 25.6, 26.5, \n     27.3, 27.5, 27.5, 27.5, 28.0, 28.7, 30.0, 32.8, 34.5, 35.0, \n     36.5, 36.0, 37.0, 37.0, 39.0, 39.0, 39.0, 40.0, 40.0, 40.0, \n     40.0, 42.0, 43.0, 43.0, 43.5, 44.0]\n     )\nperch_weight = np.array(\n    [5.9, 32.0, 40.0, 51.5, 70.0, 100.0, 78.0, 80.0, 85.0, 85.0, \n     110.0, 115.0, 125.0, 130.0, 120.0, 120.0, 130.0, 135.0, 110.0, \n     130.0, 150.0, 145.0, 150.0, 170.0, 225.0, 145.0, 188.0, 180.0, \n     197.0, 218.0, 300.0, 260.0, 265.0, 250.0, 250.0, 300.0, 320.0, \n     514.0, 556.0, 840.0, 685.0, 700.0, 700.0, 690.0, 900.0, 650.0, \n     820.0, 850.0, 900.0, 1015.0, 820.0, 1100.0, 1000.0, 1100.0, \n     1000.0, 1000.0]\n     )\n```\n\n\n```python\nimport matplotlib.pyplot as plt\nfig, ax = plt.subplots()  # 객체지향의 시작\nax.scatter(perch_length, perch_weight)\nax.set_xlabel('length')\nax.set_ylabel('weight')\nplt.show()\n```\n\n\n    \n![png](/images/0630/output_4_0.png)\n    \n\n\n\n```python\nfrom sklearn.model_selection import train_test_split\ntrain_input, test_input, train_target, test_target = train_test_split(\n    perch_length, perch_weight, random_state = 42\n)\n\ntrain_input.shape, test_input.shape, train_target.shape, test_target.shape\nprint(train_input.ndim)\n```\n\n    1\n    \n\n- 1차원 배열.. --> 2차원 배열\n\n\n```python\ntrain_input = train_input.reshape(-1, 1)\ntest_input = test_input.reshape(-1, 1)\nprint(train_input.shape, test_input.shape)\nprint(train_input.ndim)\n```\n\n    (42, 1) (14, 1)\n    2\n    \n\n## 결정계수\n- Adjusted-R Squared \n- 정확한 지표\n- 0 ~ 1 사이의 지표\n- 1에 가까울수록, 예측 모형이 잘 맞는다.\n\n\n```python\nfrom sklearn.neighbors import KNeighborsRegressor\n\nknr = KNeighborsRegressor()\n\n# 모형학습\nknr.fit(train_input, train_target)\n\n# 테스트 세트의 점수를 확인한다.\nprint(knr.score(test_input, test_target))\n```\n\n    0.992809406101064\n    \n\n\n```python\ntest_target\n```\n\n\n\n\n    array([  5.9, 100. , 250. , 130. , 130. ])\n\n\n\n- mae : 실제데이터 - 예측데이터 해서 나온 오차 값을 절댓값 해서 모두 더한 값\n\n\n```python\nfrom sklearn.metrics import mean_absolute_error\n\n# 예측 데이터\ntest_prediction = knr.predict(test_input)\n\n# 테스트 세트에 대한 평균 절댓값 오차를\nmae = mean_absolute_error(test_target, test_prediction)\nprint(mae)\n```\n\n    19.157142857142862\n    \n\n- 예측이 평균적으로 19g 정도 다르다.\n  + 확실한 건 오차가 존재한다.\n  + 19g 정도가 의미하는 게 무엇인가?\n  + 개선해서 17g 이라도 오차는 존재하는 것\n  + 개선해서 15g...13g...0g 에 가까워질 때 까지 반복\n\n\n```python\nprint(knr.score(train_input, train_target))\n```\n\n    0.9698823289099254\n    \n\n## 과대적합 vs 과소적합\n- 매우 힘듬. 도망 가고 싶음....\n- 과대적합 : 훈련세트 점수 좋음, 테스트 점수 (매우) 안 좋음\n- 과소적합 : 테스트 세트의 점수가 매우 좋음\n- 결론 : 제대로 모형이 훈련이 안된 것이다.\n  + 모형을 서비스에 탑재 시킬 수 없음.\n  + 테스트 세트의 점수가 훈련 점수보다 높아도 안되고, 약간만 낮아야 함\n\n\n```python\nprint(\"훈련 평가:\", knr.score(train_input, train_target))\nprint(\"테스트 평가:\", knr.score(test_input, test_target))\n```\n\n    훈련 평가: 0.9698823289099254\n    테스트 평가: 0.992809406101064\n    \n\n- 모형 개선\n\n\n```python\n# 이웃의 개수를 3으로 재 지정\nknr.n_neighbors = 3\n\n# 모형 다시 훈련\nknr.fit(train_input, train_target)\nprint(\"훈련 평가:\", knr.score(train_input, train_target))\nprint(\"테스트 평가:\", knr.score(test_input, test_target))\n```\n\n    훈련 평가: 0.9804899950518966\n    테스트 평가: 0.9746459963987609\n    \n","source":"_posts/day0630_ch3.md","raw":"---\ntitle: \"day 0630_1\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: Python\nthumbnailImage: python.png\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-06-30 17:53:30'\n---\n\n- 최근접 이웃회귀, 과대적합, 과소적합\n<!-- excerpt -->\n\n## K-최근접 이웃 회귀\n- 지도 학습 알고리즘은 크게 분류와 회귀\n- 지도 학습 : 종속변수 존재\n  + 분류 : 도미와 빙어를 분류하는 작업 해결\n  + 회귀 : 통계 회귀분석 y = ax + b / 수치 예측\n\n## 데이터 불러오기\n\n\n```python\nimport numpy as np\nprint(np.__version__)\n```\n\n    1.21.6\n    \n\n\n```python\nperch_length = np.array(\n    [8.4, 13.7, 15.0, 16.2, 17.4, 18.0, 18.7, 19.0, 19.6, 20.0, \n     21.0, 21.0, 21.0, 21.3, 22.0, 22.0, 22.0, 22.0, 22.0, 22.5, \n     22.5, 22.7, 23.0, 23.5, 24.0, 24.0, 24.6, 25.0, 25.6, 26.5, \n     27.3, 27.5, 27.5, 27.5, 28.0, 28.7, 30.0, 32.8, 34.5, 35.0, \n     36.5, 36.0, 37.0, 37.0, 39.0, 39.0, 39.0, 40.0, 40.0, 40.0, \n     40.0, 42.0, 43.0, 43.0, 43.5, 44.0]\n     )\nperch_weight = np.array(\n    [5.9, 32.0, 40.0, 51.5, 70.0, 100.0, 78.0, 80.0, 85.0, 85.0, \n     110.0, 115.0, 125.0, 130.0, 120.0, 120.0, 130.0, 135.0, 110.0, \n     130.0, 150.0, 145.0, 150.0, 170.0, 225.0, 145.0, 188.0, 180.0, \n     197.0, 218.0, 300.0, 260.0, 265.0, 250.0, 250.0, 300.0, 320.0, \n     514.0, 556.0, 840.0, 685.0, 700.0, 700.0, 690.0, 900.0, 650.0, \n     820.0, 850.0, 900.0, 1015.0, 820.0, 1100.0, 1000.0, 1100.0, \n     1000.0, 1000.0]\n     )\n```\n\n\n```python\nimport matplotlib.pyplot as plt\nfig, ax = plt.subplots()  # 객체지향의 시작\nax.scatter(perch_length, perch_weight)\nax.set_xlabel('length')\nax.set_ylabel('weight')\nplt.show()\n```\n\n\n    \n![png](/images/0630/output_4_0.png)\n    \n\n\n\n```python\nfrom sklearn.model_selection import train_test_split\ntrain_input, test_input, train_target, test_target = train_test_split(\n    perch_length, perch_weight, random_state = 42\n)\n\ntrain_input.shape, test_input.shape, train_target.shape, test_target.shape\nprint(train_input.ndim)\n```\n\n    1\n    \n\n- 1차원 배열.. --> 2차원 배열\n\n\n```python\ntrain_input = train_input.reshape(-1, 1)\ntest_input = test_input.reshape(-1, 1)\nprint(train_input.shape, test_input.shape)\nprint(train_input.ndim)\n```\n\n    (42, 1) (14, 1)\n    2\n    \n\n## 결정계수\n- Adjusted-R Squared \n- 정확한 지표\n- 0 ~ 1 사이의 지표\n- 1에 가까울수록, 예측 모형이 잘 맞는다.\n\n\n```python\nfrom sklearn.neighbors import KNeighborsRegressor\n\nknr = KNeighborsRegressor()\n\n# 모형학습\nknr.fit(train_input, train_target)\n\n# 테스트 세트의 점수를 확인한다.\nprint(knr.score(test_input, test_target))\n```\n\n    0.992809406101064\n    \n\n\n```python\ntest_target\n```\n\n\n\n\n    array([  5.9, 100. , 250. , 130. , 130. ])\n\n\n\n- mae : 실제데이터 - 예측데이터 해서 나온 오차 값을 절댓값 해서 모두 더한 값\n\n\n```python\nfrom sklearn.metrics import mean_absolute_error\n\n# 예측 데이터\ntest_prediction = knr.predict(test_input)\n\n# 테스트 세트에 대한 평균 절댓값 오차를\nmae = mean_absolute_error(test_target, test_prediction)\nprint(mae)\n```\n\n    19.157142857142862\n    \n\n- 예측이 평균적으로 19g 정도 다르다.\n  + 확실한 건 오차가 존재한다.\n  + 19g 정도가 의미하는 게 무엇인가?\n  + 개선해서 17g 이라도 오차는 존재하는 것\n  + 개선해서 15g...13g...0g 에 가까워질 때 까지 반복\n\n\n```python\nprint(knr.score(train_input, train_target))\n```\n\n    0.9698823289099254\n    \n\n## 과대적합 vs 과소적합\n- 매우 힘듬. 도망 가고 싶음....\n- 과대적합 : 훈련세트 점수 좋음, 테스트 점수 (매우) 안 좋음\n- 과소적합 : 테스트 세트의 점수가 매우 좋음\n- 결론 : 제대로 모형이 훈련이 안된 것이다.\n  + 모형을 서비스에 탑재 시킬 수 없음.\n  + 테스트 세트의 점수가 훈련 점수보다 높아도 안되고, 약간만 낮아야 함\n\n\n```python\nprint(\"훈련 평가:\", knr.score(train_input, train_target))\nprint(\"테스트 평가:\", knr.score(test_input, test_target))\n```\n\n    훈련 평가: 0.9698823289099254\n    테스트 평가: 0.992809406101064\n    \n\n- 모형 개선\n\n\n```python\n# 이웃의 개수를 3으로 재 지정\nknr.n_neighbors = 3\n\n# 모형 다시 훈련\nknr.fit(train_input, train_target)\nprint(\"훈련 평가:\", knr.score(train_input, train_target))\nprint(\"테스트 평가:\", knr.score(test_input, test_target))\n```\n\n    훈련 평가: 0.9804899950518966\n    테스트 평가: 0.9746459963987609\n    \n","slug":"day0630_ch3","published":1,"updated":"2022-07-21T12:49:59.660Z","_id":"cl5fcok7t000sjku0brpabwsw","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt --></li>\n</ul>\n<h2 id=\"K-최근접-이웃-회귀\"><a href=\"#K-최근접-이웃-회귀\" class=\"headerlink\" title=\"K-최근접 이웃 회귀\"></a>K-최근접 이웃 회귀</h2><ul>\n<li>지도 학습 알고리즘은 크게 분류와 회귀</li>\n<li>지도 학습 : 종속변수 존재<ul>\n<li>분류 : 도미와 빙어를 분류하는 작업 해결</li>\n<li>회귀 : 통계 회귀분석 y &#x3D; ax + b &#x2F; 수치 예측</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"데이터-불러오기\"><a href=\"#데이터-불러오기\" class=\"headerlink\" title=\"데이터 불러오기\"></a>데이터 불러오기</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.__version__)</span><br></pre></td></tr></table></figure>\n\n<pre><code>1.21.6\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perch_length = np.array(</span><br><span class=\"line\">    [<span class=\"number\">8.4</span>, <span class=\"number\">13.7</span>, <span class=\"number\">15.0</span>, <span class=\"number\">16.2</span>, <span class=\"number\">17.4</span>, <span class=\"number\">18.0</span>, <span class=\"number\">18.7</span>, <span class=\"number\">19.0</span>, <span class=\"number\">19.6</span>, <span class=\"number\">20.0</span>, </span><br><span class=\"line\">     <span class=\"number\">21.0</span>, <span class=\"number\">21.0</span>, <span class=\"number\">21.0</span>, <span class=\"number\">21.3</span>, <span class=\"number\">22.0</span>, <span class=\"number\">22.0</span>, <span class=\"number\">22.0</span>, <span class=\"number\">22.0</span>, <span class=\"number\">22.0</span>, <span class=\"number\">22.5</span>, </span><br><span class=\"line\">     <span class=\"number\">22.5</span>, <span class=\"number\">22.7</span>, <span class=\"number\">23.0</span>, <span class=\"number\">23.5</span>, <span class=\"number\">24.0</span>, <span class=\"number\">24.0</span>, <span class=\"number\">24.6</span>, <span class=\"number\">25.0</span>, <span class=\"number\">25.6</span>, <span class=\"number\">26.5</span>, </span><br><span class=\"line\">     <span class=\"number\">27.3</span>, <span class=\"number\">27.5</span>, <span class=\"number\">27.5</span>, <span class=\"number\">27.5</span>, <span class=\"number\">28.0</span>, <span class=\"number\">28.7</span>, <span class=\"number\">30.0</span>, <span class=\"number\">32.8</span>, <span class=\"number\">34.5</span>, <span class=\"number\">35.0</span>, </span><br><span class=\"line\">     <span class=\"number\">36.5</span>, <span class=\"number\">36.0</span>, <span class=\"number\">37.0</span>, <span class=\"number\">37.0</span>, <span class=\"number\">39.0</span>, <span class=\"number\">39.0</span>, <span class=\"number\">39.0</span>, <span class=\"number\">40.0</span>, <span class=\"number\">40.0</span>, <span class=\"number\">40.0</span>, </span><br><span class=\"line\">     <span class=\"number\">40.0</span>, <span class=\"number\">42.0</span>, <span class=\"number\">43.0</span>, <span class=\"number\">43.0</span>, <span class=\"number\">43.5</span>, <span class=\"number\">44.0</span>]</span><br><span class=\"line\">     )</span><br><span class=\"line\">perch_weight = np.array(</span><br><span class=\"line\">    [<span class=\"number\">5.9</span>, <span class=\"number\">32.0</span>, <span class=\"number\">40.0</span>, <span class=\"number\">51.5</span>, <span class=\"number\">70.0</span>, <span class=\"number\">100.0</span>, <span class=\"number\">78.0</span>, <span class=\"number\">80.0</span>, <span class=\"number\">85.0</span>, <span class=\"number\">85.0</span>, </span><br><span class=\"line\">     <span class=\"number\">110.0</span>, <span class=\"number\">115.0</span>, <span class=\"number\">125.0</span>, <span class=\"number\">130.0</span>, <span class=\"number\">120.0</span>, <span class=\"number\">120.0</span>, <span class=\"number\">130.0</span>, <span class=\"number\">135.0</span>, <span class=\"number\">110.0</span>, </span><br><span class=\"line\">     <span class=\"number\">130.0</span>, <span class=\"number\">150.0</span>, <span class=\"number\">145.0</span>, <span class=\"number\">150.0</span>, <span class=\"number\">170.0</span>, <span class=\"number\">225.0</span>, <span class=\"number\">145.0</span>, <span class=\"number\">188.0</span>, <span class=\"number\">180.0</span>, </span><br><span class=\"line\">     <span class=\"number\">197.0</span>, <span class=\"number\">218.0</span>, <span class=\"number\">300.0</span>, <span class=\"number\">260.0</span>, <span class=\"number\">265.0</span>, <span class=\"number\">250.0</span>, <span class=\"number\">250.0</span>, <span class=\"number\">300.0</span>, <span class=\"number\">320.0</span>, </span><br><span class=\"line\">     <span class=\"number\">514.0</span>, <span class=\"number\">556.0</span>, <span class=\"number\">840.0</span>, <span class=\"number\">685.0</span>, <span class=\"number\">700.0</span>, <span class=\"number\">700.0</span>, <span class=\"number\">690.0</span>, <span class=\"number\">900.0</span>, <span class=\"number\">650.0</span>, </span><br><span class=\"line\">     <span class=\"number\">820.0</span>, <span class=\"number\">850.0</span>, <span class=\"number\">900.0</span>, <span class=\"number\">1015.0</span>, <span class=\"number\">820.0</span>, <span class=\"number\">1100.0</span>, <span class=\"number\">1000.0</span>, <span class=\"number\">1100.0</span>, </span><br><span class=\"line\">     <span class=\"number\">1000.0</span>, <span class=\"number\">1000.0</span>]</span><br><span class=\"line\">     )</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\">fig, ax = plt.subplots()  <span class=\"comment\"># 객체지향의 시작</span></span><br><span class=\"line\">ax.scatter(perch_length, perch_weight)</span><br><span class=\"line\">ax.set_xlabel(<span class=\"string\">&#x27;length&#x27;</span>)</span><br><span class=\"line\">ax.set_ylabel(<span class=\"string\">&#x27;weight&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0630/output_4_0.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\">train_input, test_input, train_target, test_target = train_test_split(</span><br><span class=\"line\">    perch_length, perch_weight, random_state = <span class=\"number\">42</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">train_input.shape, test_input.shape, train_target.shape, test_target.shape</span><br><span class=\"line\"><span class=\"built_in\">print</span>(train_input.ndim)</span><br></pre></td></tr></table></figure>\n\n<pre><code>1\n</code></pre>\n<ul>\n<li>1차원 배열.. –&gt; 2차원 배열</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">train_input = train_input.reshape(-<span class=\"number\">1</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">test_input = test_input.reshape(-<span class=\"number\">1</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(train_input.shape, test_input.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(train_input.ndim)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(42, 1) (14, 1)\n2\n</code></pre>\n<h2 id=\"결정계수\"><a href=\"#결정계수\" class=\"headerlink\" title=\"결정계수\"></a>결정계수</h2><ul>\n<li>Adjusted-R Squared </li>\n<li>정확한 지표</li>\n<li>0 ~ 1 사이의 지표</li>\n<li>1에 가까울수록, 예측 모형이 잘 맞는다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.neighbors <span class=\"keyword\">import</span> KNeighborsRegressor</span><br><span class=\"line\"></span><br><span class=\"line\">knr = KNeighborsRegressor()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 모형학습</span></span><br><span class=\"line\">knr.fit(train_input, train_target)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 테스트 세트의 점수를 확인한다.</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(knr.score(test_input, test_target))</span><br></pre></td></tr></table></figure>\n\n<pre><code>0.992809406101064\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">test_target</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([  5.9, 100. , 250. , 130. , 130. ])\n</code></pre>\n<ul>\n<li>mae : 실제데이터 - 예측데이터 해서 나온 오차 값을 절댓값 해서 모두 더한 값</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> mean_absolute_error</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 예측 데이터</span></span><br><span class=\"line\">test_prediction = knr.predict(test_input)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 테스트 세트에 대한 평균 절댓값 오차를</span></span><br><span class=\"line\">mae = mean_absolute_error(test_target, test_prediction)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(mae)</span><br></pre></td></tr></table></figure>\n\n<pre><code>19.157142857142862\n</code></pre>\n<ul>\n<li>예측이 평균적으로 19g 정도 다르다.<ul>\n<li>확실한 건 오차가 존재한다.</li>\n<li>19g 정도가 의미하는 게 무엇인가?</li>\n<li>개선해서 17g 이라도 오차는 존재하는 것</li>\n<li>개선해서 15g…13g…0g 에 가까워질 때 까지 반복</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(knr.score(train_input, train_target))</span><br></pre></td></tr></table></figure>\n\n<pre><code>0.9698823289099254\n</code></pre>\n<h2 id=\"과대적합-vs-과소적합\"><a href=\"#과대적합-vs-과소적합\" class=\"headerlink\" title=\"과대적합 vs 과소적합\"></a>과대적합 vs 과소적합</h2><ul>\n<li>매우 힘듬. 도망 가고 싶음….</li>\n<li>과대적합 : 훈련세트 점수 좋음, 테스트 점수 (매우) 안 좋음</li>\n<li>과소적합 : 테스트 세트의 점수가 매우 좋음</li>\n<li>결론 : 제대로 모형이 훈련이 안된 것이다.<ul>\n<li>모형을 서비스에 탑재 시킬 수 없음.</li>\n<li>테스트 세트의 점수가 훈련 점수보다 높아도 안되고, 약간만 낮아야 함</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;훈련 평가:&quot;</span>, knr.score(train_input, train_target))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;테스트 평가:&quot;</span>, knr.score(test_input, test_target))</span><br></pre></td></tr></table></figure>\n\n<pre><code>훈련 평가: 0.9698823289099254\n테스트 평가: 0.992809406101064\n</code></pre>\n<ul>\n<li>모형 개선</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 이웃의 개수를 3으로 재 지정</span></span><br><span class=\"line\">knr.n_neighbors = <span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 모형 다시 훈련</span></span><br><span class=\"line\">knr.fit(train_input, train_target)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;훈련 평가:&quot;</span>, knr.score(train_input, train_target))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;테스트 평가:&quot;</span>, knr.score(test_input, test_target))</span><br></pre></td></tr></table></figure>\n\n<pre><code>훈련 평가: 0.9804899950518966\n테스트 평가: 0.9746459963987609\n</code></pre>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/06/30/day0630_ch3/python.png","excerpt":"<ul>\n<li>최근접 이웃회귀, 과대적합, 과소적합","more":"<ul>\n<li>최근접 이웃회귀, 과대적합, 과소적합<!-- excerpt --></li>\n</ul>\n<h2 id=\"K-최근접-이웃-회귀\"><a href=\"#K-최근접-이웃-회귀\" class=\"headerlink\" title=\"K-최근접 이웃 회귀\"></a>K-최근접 이웃 회귀</h2><ul>\n<li>지도 학습 알고리즘은 크게 분류와 회귀</li>\n<li>지도 학습 : 종속변수 존재<ul>\n<li>분류 : 도미와 빙어를 분류하는 작업 해결</li>\n<li>회귀 : 통계 회귀분석 y &#x3D; ax + b &#x2F; 수치 예측</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"데이터-불러오기\"><a href=\"#데이터-불러오기\" class=\"headerlink\" title=\"데이터 불러오기\"></a>데이터 불러오기</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.__version__)</span><br></pre></td></tr></table></figure>\n\n<pre><code>1.21.6\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perch_length = np.array(</span><br><span class=\"line\">    [<span class=\"number\">8.4</span>, <span class=\"number\">13.7</span>, <span class=\"number\">15.0</span>, <span class=\"number\">16.2</span>, <span class=\"number\">17.4</span>, <span class=\"number\">18.0</span>, <span class=\"number\">18.7</span>, <span class=\"number\">19.0</span>, <span class=\"number\">19.6</span>, <span class=\"number\">20.0</span>, </span><br><span class=\"line\">     <span class=\"number\">21.0</span>, <span class=\"number\">21.0</span>, <span class=\"number\">21.0</span>, <span class=\"number\">21.3</span>, <span class=\"number\">22.0</span>, <span class=\"number\">22.0</span>, <span class=\"number\">22.0</span>, <span class=\"number\">22.0</span>, <span class=\"number\">22.0</span>, <span class=\"number\">22.5</span>, </span><br><span class=\"line\">     <span class=\"number\">22.5</span>, <span class=\"number\">22.7</span>, <span class=\"number\">23.0</span>, <span class=\"number\">23.5</span>, <span class=\"number\">24.0</span>, <span class=\"number\">24.0</span>, <span class=\"number\">24.6</span>, <span class=\"number\">25.0</span>, <span class=\"number\">25.6</span>, <span class=\"number\">26.5</span>, </span><br><span class=\"line\">     <span class=\"number\">27.3</span>, <span class=\"number\">27.5</span>, <span class=\"number\">27.5</span>, <span class=\"number\">27.5</span>, <span class=\"number\">28.0</span>, <span class=\"number\">28.7</span>, <span class=\"number\">30.0</span>, <span class=\"number\">32.8</span>, <span class=\"number\">34.5</span>, <span class=\"number\">35.0</span>, </span><br><span class=\"line\">     <span class=\"number\">36.5</span>, <span class=\"number\">36.0</span>, <span class=\"number\">37.0</span>, <span class=\"number\">37.0</span>, <span class=\"number\">39.0</span>, <span class=\"number\">39.0</span>, <span class=\"number\">39.0</span>, <span class=\"number\">40.0</span>, <span class=\"number\">40.0</span>, <span class=\"number\">40.0</span>, </span><br><span class=\"line\">     <span class=\"number\">40.0</span>, <span class=\"number\">42.0</span>, <span class=\"number\">43.0</span>, <span class=\"number\">43.0</span>, <span class=\"number\">43.5</span>, <span class=\"number\">44.0</span>]</span><br><span class=\"line\">     )</span><br><span class=\"line\">perch_weight = np.array(</span><br><span class=\"line\">    [<span class=\"number\">5.9</span>, <span class=\"number\">32.0</span>, <span class=\"number\">40.0</span>, <span class=\"number\">51.5</span>, <span class=\"number\">70.0</span>, <span class=\"number\">100.0</span>, <span class=\"number\">78.0</span>, <span class=\"number\">80.0</span>, <span class=\"number\">85.0</span>, <span class=\"number\">85.0</span>, </span><br><span class=\"line\">     <span class=\"number\">110.0</span>, <span class=\"number\">115.0</span>, <span class=\"number\">125.0</span>, <span class=\"number\">130.0</span>, <span class=\"number\">120.0</span>, <span class=\"number\">120.0</span>, <span class=\"number\">130.0</span>, <span class=\"number\">135.0</span>, <span class=\"number\">110.0</span>, </span><br><span class=\"line\">     <span class=\"number\">130.0</span>, <span class=\"number\">150.0</span>, <span class=\"number\">145.0</span>, <span class=\"number\">150.0</span>, <span class=\"number\">170.0</span>, <span class=\"number\">225.0</span>, <span class=\"number\">145.0</span>, <span class=\"number\">188.0</span>, <span class=\"number\">180.0</span>, </span><br><span class=\"line\">     <span class=\"number\">197.0</span>, <span class=\"number\">218.0</span>, <span class=\"number\">300.0</span>, <span class=\"number\">260.0</span>, <span class=\"number\">265.0</span>, <span class=\"number\">250.0</span>, <span class=\"number\">250.0</span>, <span class=\"number\">300.0</span>, <span class=\"number\">320.0</span>, </span><br><span class=\"line\">     <span class=\"number\">514.0</span>, <span class=\"number\">556.0</span>, <span class=\"number\">840.0</span>, <span class=\"number\">685.0</span>, <span class=\"number\">700.0</span>, <span class=\"number\">700.0</span>, <span class=\"number\">690.0</span>, <span class=\"number\">900.0</span>, <span class=\"number\">650.0</span>, </span><br><span class=\"line\">     <span class=\"number\">820.0</span>, <span class=\"number\">850.0</span>, <span class=\"number\">900.0</span>, <span class=\"number\">1015.0</span>, <span class=\"number\">820.0</span>, <span class=\"number\">1100.0</span>, <span class=\"number\">1000.0</span>, <span class=\"number\">1100.0</span>, </span><br><span class=\"line\">     <span class=\"number\">1000.0</span>, <span class=\"number\">1000.0</span>]</span><br><span class=\"line\">     )</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\">fig, ax = plt.subplots()  <span class=\"comment\"># 객체지향의 시작</span></span><br><span class=\"line\">ax.scatter(perch_length, perch_weight)</span><br><span class=\"line\">ax.set_xlabel(<span class=\"string\">&#x27;length&#x27;</span>)</span><br><span class=\"line\">ax.set_ylabel(<span class=\"string\">&#x27;weight&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0630/output_4_0.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\">train_input, test_input, train_target, test_target = train_test_split(</span><br><span class=\"line\">    perch_length, perch_weight, random_state = <span class=\"number\">42</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">train_input.shape, test_input.shape, train_target.shape, test_target.shape</span><br><span class=\"line\"><span class=\"built_in\">print</span>(train_input.ndim)</span><br></pre></td></tr></table></figure>\n\n<pre><code>1\n</code></pre>\n<ul>\n<li>1차원 배열.. –&gt; 2차원 배열</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">train_input = train_input.reshape(-<span class=\"number\">1</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">test_input = test_input.reshape(-<span class=\"number\">1</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(train_input.shape, test_input.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(train_input.ndim)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(42, 1) (14, 1)\n2\n</code></pre>\n<h2 id=\"결정계수\"><a href=\"#결정계수\" class=\"headerlink\" title=\"결정계수\"></a>결정계수</h2><ul>\n<li>Adjusted-R Squared </li>\n<li>정확한 지표</li>\n<li>0 ~ 1 사이의 지표</li>\n<li>1에 가까울수록, 예측 모형이 잘 맞는다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.neighbors <span class=\"keyword\">import</span> KNeighborsRegressor</span><br><span class=\"line\"></span><br><span class=\"line\">knr = KNeighborsRegressor()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 모형학습</span></span><br><span class=\"line\">knr.fit(train_input, train_target)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 테스트 세트의 점수를 확인한다.</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(knr.score(test_input, test_target))</span><br></pre></td></tr></table></figure>\n\n<pre><code>0.992809406101064\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">test_target</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([  5.9, 100. , 250. , 130. , 130. ])\n</code></pre>\n<ul>\n<li>mae : 실제데이터 - 예측데이터 해서 나온 오차 값을 절댓값 해서 모두 더한 값</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> mean_absolute_error</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 예측 데이터</span></span><br><span class=\"line\">test_prediction = knr.predict(test_input)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 테스트 세트에 대한 평균 절댓값 오차를</span></span><br><span class=\"line\">mae = mean_absolute_error(test_target, test_prediction)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(mae)</span><br></pre></td></tr></table></figure>\n\n<pre><code>19.157142857142862\n</code></pre>\n<ul>\n<li>예측이 평균적으로 19g 정도 다르다.<ul>\n<li>확실한 건 오차가 존재한다.</li>\n<li>19g 정도가 의미하는 게 무엇인가?</li>\n<li>개선해서 17g 이라도 오차는 존재하는 것</li>\n<li>개선해서 15g…13g…0g 에 가까워질 때 까지 반복</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(knr.score(train_input, train_target))</span><br></pre></td></tr></table></figure>\n\n<pre><code>0.9698823289099254\n</code></pre>\n<h2 id=\"과대적합-vs-과소적합\"><a href=\"#과대적합-vs-과소적합\" class=\"headerlink\" title=\"과대적합 vs 과소적합\"></a>과대적합 vs 과소적합</h2><ul>\n<li>매우 힘듬. 도망 가고 싶음….</li>\n<li>과대적합 : 훈련세트 점수 좋음, 테스트 점수 (매우) 안 좋음</li>\n<li>과소적합 : 테스트 세트의 점수가 매우 좋음</li>\n<li>결론 : 제대로 모형이 훈련이 안된 것이다.<ul>\n<li>모형을 서비스에 탑재 시킬 수 없음.</li>\n<li>테스트 세트의 점수가 훈련 점수보다 높아도 안되고, 약간만 낮아야 함</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;훈련 평가:&quot;</span>, knr.score(train_input, train_target))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;테스트 평가:&quot;</span>, knr.score(test_input, test_target))</span><br></pre></td></tr></table></figure>\n\n<pre><code>훈련 평가: 0.9698823289099254\n테스트 평가: 0.992809406101064\n</code></pre>\n<ul>\n<li>모형 개선</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 이웃의 개수를 3으로 재 지정</span></span><br><span class=\"line\">knr.n_neighbors = <span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 모형 다시 훈련</span></span><br><span class=\"line\">knr.fit(train_input, train_target)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;훈련 평가:&quot;</span>, knr.score(train_input, train_target))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;테스트 평가:&quot;</span>, knr.score(test_input, test_target))</span><br></pre></td></tr></table></figure>\n\n<pre><code>훈련 평가: 0.9804899950518966\n테스트 평가: 0.9746459963987609\n</code></pre>\n"},{"title":"day 0629","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","thumbnailImage":"python.png","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-06-29T02:59:30.000Z","_content":"\npython 통계 각종 조건식\n<!-- excerpt -->\n\n\n# pandas\n- pandas 에서 Index 값은 중복값을 허용하지 않는다.\n\n![](/images/0629/Untitled.png)\n\n- DataFrame, Series는 같아 보이지만 다르다(DataFrame 에는 info 메소드가 있지만, Series에는 info 메소드가 없다).\n- 데이터프레임.groupby() —> groupby 클래스\n- A가 클래스 정의한 메소드\n    - 예) 데이터 프레임 info()\n- B의 클래스 정의한 메소드\n    - 예) info() 메소드 존재 하지 않음\n- 클래스는 패키지의 하위호환 개념이다.\n\n\n```python\ntemp_dict = {\n    'col1' : [1, 2], \n    'col2' : [3, 4]\n}\n\ndf = pd.DataFrame(temp_dict)\nprint(df)\nprint(type(df))\n```\n\n       col1  col2\n    0     1     3\n    1     2     4\n    <class 'pandas.core.frame.DataFrame'>\n    \n\n\n```python\nimport pandas as pd \nprint(pd.__version__)\n```\n\n    1.3.5\n    \n\n\n```python\nfrom google.colab import drive \ndrive.mount('/content/drive')\n```\n\n    Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n    \n\n\n```python\nDATA_PATH = '/content/drive/MyDrive/Colab Notebooks/human_ai/Basic/Chapter 3. pandas/data/'\nprint(DATA_PATH + 'Lemonade2016.csv')\n\nlemonade = pd.read_csv(DATA_PATH + 'Lemonade2016.csv')\n# covid_df = pd.read_csv(DATA_PATH + 'owid-covid-data.csv')\n\nlemonade.info() # str()\n```\n\n    /content/drive/MyDrive/Colab Notebooks/human_ai/Basic/Chapter 3. pandas/data/Lemonade2016.csv\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 32 entries, 0 to 31\n    Data columns (total 7 columns):\n     #   Column       Non-Null Count  Dtype  \n    ---  ------       --------------  -----  \n     0   Date         31 non-null     object \n     1   Location     32 non-null     object \n     2   Lemon        32 non-null     int64  \n     3   Orange       32 non-null     int64  \n     4   Temperature  32 non-null     int64  \n     5   Leaflets     31 non-null     float64\n     6   Price        32 non-null     float64\n    dtypes: float64(2), int64(3), object(2)\n    memory usage: 1.9+ KB\n    \n\n## 라이브러리 불러오기\n\n\n```python\nimport pandas as pd\nimport numpy as np\nprint(\"pandas version : \", pd.__version__)\nprint(\"numpy version : \", np.__version__)\n```\n\n    pandas version :  1.3.5\n    numpy version :  1.21.6\n    \n\n## 구글 드라이브 연결하기\n#### Series 클래스인지 DataFrame 클래스인지 신경 쓰기\n\n\n```python\nfrom google.colab import drive\ndrive.mount('/content/drive')\n```\n\n    Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n    \n\n\n```python\nDATA_PATH = '/content/drive/MyDrive/Colab Notebooks/human_ai/Basic/Chapter 3. pandas/data/Lemonade2016.csv'\nlomonade = pd.read_csv(DATA_PATH)\n\nprint(type(lemonade))\nprint(lemonade.info())\n# Dtype 은 데이터 타입인데 'int64'에서 64는 64비트를 의미한다.\n# 데이터가 너무 커지면 64비트를 8비트로 조절하든지 해서 데이터를 줄인다.\n```\n\n    <class 'pandas.core.frame.DataFrame'>\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 32 entries, 0 to 31\n    Data columns (total 7 columns):\n     #   Column       Non-Null Count  Dtype  \n    ---  ------       --------------  -----  \n     0   Date         31 non-null     object \n     1   Location     32 non-null     object \n     2   Lemon        32 non-null     int64  \n     3   Orange       32 non-null     int64  \n     4   Temperature  32 non-null     int64  \n     5   Leaflets     31 non-null     float64\n     6   Price        32 non-null     float64\n    dtypes: float64(2), int64(3), object(2)\n    memory usage: 1.9+ KB\n    \n\n- 데이터 맛보기\n\n\n```python\nprint(lemonade.head())\n```\n\n           Date Location  Lemon  Orange  Temperature  Leaflets  Price\n    0  7/1/2016     Park     97      67           70      90.0   0.25\n    1  7/2/2016     Park     98      67           72      90.0   0.25\n    2  7/3/2016     Park    110      77           71     104.0   0.25\n    3  7/4/2016    Beach    134      99           76      98.0   0.25\n    4  7/5/2016    Beach    159     118           78     135.0   0.25\n    \n\n\n```python\nprint(lemonade.tail())\n```\n\n             Date Location  Lemon  Orange  Temperature  Leaflets  Price\n    27  7/27/2016     Park    104      68           80      99.0   0.35\n    28  7/28/2016     Park     96      63           82      90.0   0.35\n    29  7/29/2016     Park    100      66           81      95.0   0.35\n    30  7/30/2016    Beach     88      57           82      81.0   0.35\n    31  7/31/2016    Beach     76      47           82      68.0   0.35\n    \n\n- 기술통계량 보는 함수\n- describe()\n\n\n```python\nprint(lemonade.describe())\n'''\nstd = 표준편차\n사분위값, 평균 등등 볼 수 있다.\n'''\n```\n\n                Lemon      Orange  Temperature    Leaflets      Price\n    count   32.000000   32.000000    32.000000   31.000000  32.000000\n    mean   116.156250   80.000000    78.968750  108.548387   0.354688\n    std     25.823357   21.863211     4.067847   20.117718   0.113137\n    min     71.000000   42.000000    70.000000   68.000000   0.250000\n    25%     98.000000   66.750000    77.000000   90.000000   0.250000\n    50%    113.500000   76.500000    80.500000  108.000000   0.350000\n    75%    131.750000   95.000000    82.000000  124.000000   0.500000\n    max    176.000000  129.000000    84.000000  158.000000   0.500000\n    \n\n- 범주형 데이터 빈도수 구하기\n\n\n```python\nprint(lemonade['Location'].value_counts())   # .value_counts() : \"lemonade['Location']\" 함수의 숫자를 세준다는 뜻\n```\n\n    Beach    17\n    Park     15\n    Name: Location, dtype: int64\n    \n\n## 행과 열 다루기\n- Sold(판매량) 컬럼\n(=피처=feature)을 추가\n\n\n```python\nlemonade['Sold'] = 0     # Sold 라는 새로운 변수 추가\nprint(lemonade.head(3))  # 데이터 확인\n```\n\n           Date Location  Lemon  Orange  Temperature  Leaflets  Price  Sold\n    0  7/1/2016     Park     97      67           70      90.0   0.25     0\n    1  7/2/2016     Park     98      67           72      90.0   0.25     0\n    2  7/3/2016     Park    110      77           71     104.0   0.25     0\n    \n\n\n```python\nlemonade['Sold'] = lemonade['Lemon'] + lemonade['Orange']   # Sold 값 정의 (오렌지 + 레몬)\nprint(lemonade.head(3))\n```\n\n           Date Location  Lemon  Orange  Temperature  Leaflets  Price  Sold\n    0  7/1/2016     Park     97      67           70      90.0   0.25   164\n    1  7/2/2016     Park     98      67           72      90.0   0.25   165\n    2  7/3/2016     Park    110      77           71     104.0   0.25   187\n    \n\n- Revenue(매출) = 단가 x 판매량   변수 만들어보기\n\n\n```python\nlemonade['Lemon Revenue'] = lemonade['Price'] * lemonade['Lemon']\nlemonade['Orange Revenue'] = lemonade['Price'] * lemonade['Orange']\nprint(lemonade.head())\n# print(lemonade[['Lemon Revenue', 'Orange Revenue', 'Price', 'Sold']])\n```\n\n           Date Location  Lemon  Orange  Temperature  Leaflets  Price  Sold  \\\n    0  7/1/2016     Park     97      67           70      90.0   0.25   164   \n    1  7/2/2016     Park     98      67           72      90.0   0.25   165   \n    2  7/3/2016     Park    110      77           71     104.0   0.25   187   \n    3  7/4/2016    Beach    134      99           76      98.0   0.25   233   \n    4  7/5/2016    Beach    159     118           78     135.0   0.25   277   \n    \n       Lemon Revenue  Orange Revenue  \n    0          24.25           16.75  \n    1          24.50           16.75  \n    2          27.50           19.25  \n    3          33.50           24.75  \n    4          39.75           29.50  \n    \n\n- drop() 함수 사용해서 열 제거(axis 값을 1로 둔다)\n\n\n```python\n# 컬럼 제거\ncol_drop = lemonade.drop('Sold', axis = 1)   # Sold 열을 제거한다.\nprint(col_drop.head())\n```\n\n           Date Location  Lemon  Orange  Temperature  Leaflets  Price  \\\n    0  7/1/2016     Park     97      67           70      90.0   0.25   \n    1  7/2/2016     Park     98      67           72      90.0   0.25   \n    2  7/3/2016     Park    110      77           71     104.0   0.25   \n    3  7/4/2016    Beach    134      99           76      98.0   0.25   \n    4  7/5/2016    Beach    159     118           78     135.0   0.25   \n    \n       Lemon Revenue  Orange Revenue  \n    0          24.25           16.75  \n    1          24.50           16.75  \n    2          27.50           19.25  \n    3          33.50           24.75  \n    4          39.75           29.50  \n    \n\n- drop() 함수 사용해서 행 제거(axis 값을 0으로 둔다)\n\n\n```python\n# 행 제거\nrow_drop = lomonade.drop([0, 1, 3], axis = 0)   # 0, 1, 3의 행을 제거한다.\nprint(row_drop.head())\n```\n\n           Date Location  Lemon  Orange  Temperature  Leaflets  Price\n    2  7/3/2016     Park    110      77           71     104.0   0.25\n    4  7/5/2016    Beach    159     118           78     135.0   0.25\n    5  7/6/2016    Beach    103      69           82      90.0   0.25\n    6  7/6/2016    Beach    103      69           82      90.0   0.25\n    7  7/7/2016    Beach    143     101           81     135.0   0.25\n    \n\n## 데이터 인덱싱\n\n\n```python\nprint(lemonade[4:7])\n```\n\n           Date Location  Lemon  Orange  Temperature  Leaflets  Price  Sold  \\\n    4  7/5/2016    Beach    159     118           78     135.0   0.25   277   \n    5  7/6/2016    Beach    103      69           82      90.0   0.25   172   \n    6  7/6/2016    Beach    103      69           82      90.0   0.25   172   \n    \n       Lemon Revenue  Orange Revenue  \n    4          39.75           29.50  \n    5          25.75           17.25  \n    6          25.75           17.25  \n    \n\n- 특정 값만 추출 (필터링)\n\n\n```python\nlemonade['Location'] == 'Beach'\n```\n\n\n\n\n    0     False\n    1     False\n    2     False\n    3      True\n    4      True\n    5      True\n    6      True\n    7      True\n    8      True\n    9      True\n    10     True\n    11     True\n    12     True\n    13     True\n    14     True\n    15     True\n    16     True\n    17     True\n    18    False\n    19    False\n    20    False\n    21    False\n    22    False\n    23    False\n    24    False\n    25    False\n    26    False\n    27    False\n    28    False\n    29    False\n    30     True\n    31     True\n    Name: Location, dtype: bool\n\n\n\n\n```python\n# 데이터[데이터 컬럼 == 특정값]\nlemonade[lemonade['Location'] == 'Beach']   # lemonade['Location'] == 'Beach' 이 True인 값만 가져오는 식\n```\n\n\n\n\n\n  <div id=\"df-eb442b9f-c5c8-44b1-b3bd-9dd7b0012761\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date</th>\n      <th>Location</th>\n      <th>Lemon</th>\n      <th>Orange</th>\n      <th>Temperature</th>\n      <th>Leaflets</th>\n      <th>Price</th>\n      <th>Sold</th>\n      <th>Lemon Revenue</th>\n      <th>Orange Revenue</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>3</th>\n      <td>7/4/2016</td>\n      <td>Beach</td>\n      <td>134</td>\n      <td>99</td>\n      <td>76</td>\n      <td>98.0</td>\n      <td>0.25</td>\n      <td>233</td>\n      <td>33.50</td>\n      <td>24.75</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>7/5/2016</td>\n      <td>Beach</td>\n      <td>159</td>\n      <td>118</td>\n      <td>78</td>\n      <td>135.0</td>\n      <td>0.25</td>\n      <td>277</td>\n      <td>39.75</td>\n      <td>29.50</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>7/6/2016</td>\n      <td>Beach</td>\n      <td>103</td>\n      <td>69</td>\n      <td>82</td>\n      <td>90.0</td>\n      <td>0.25</td>\n      <td>172</td>\n      <td>25.75</td>\n      <td>17.25</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>7/6/2016</td>\n      <td>Beach</td>\n      <td>103</td>\n      <td>69</td>\n      <td>82</td>\n      <td>90.0</td>\n      <td>0.25</td>\n      <td>172</td>\n      <td>25.75</td>\n      <td>17.25</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>7/7/2016</td>\n      <td>Beach</td>\n      <td>143</td>\n      <td>101</td>\n      <td>81</td>\n      <td>135.0</td>\n      <td>0.25</td>\n      <td>244</td>\n      <td>35.75</td>\n      <td>25.25</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>NaN</td>\n      <td>Beach</td>\n      <td>123</td>\n      <td>86</td>\n      <td>82</td>\n      <td>113.0</td>\n      <td>0.25</td>\n      <td>209</td>\n      <td>30.75</td>\n      <td>21.50</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>7/9/2016</td>\n      <td>Beach</td>\n      <td>134</td>\n      <td>95</td>\n      <td>80</td>\n      <td>126.0</td>\n      <td>0.25</td>\n      <td>229</td>\n      <td>33.50</td>\n      <td>23.75</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>7/10/2016</td>\n      <td>Beach</td>\n      <td>140</td>\n      <td>98</td>\n      <td>82</td>\n      <td>131.0</td>\n      <td>0.25</td>\n      <td>238</td>\n      <td>35.00</td>\n      <td>24.50</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>7/11/2016</td>\n      <td>Beach</td>\n      <td>162</td>\n      <td>120</td>\n      <td>83</td>\n      <td>135.0</td>\n      <td>0.25</td>\n      <td>282</td>\n      <td>40.50</td>\n      <td>30.00</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>7/12/2016</td>\n      <td>Beach</td>\n      <td>130</td>\n      <td>95</td>\n      <td>84</td>\n      <td>99.0</td>\n      <td>0.25</td>\n      <td>225</td>\n      <td>32.50</td>\n      <td>23.75</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>7/13/2016</td>\n      <td>Beach</td>\n      <td>109</td>\n      <td>75</td>\n      <td>77</td>\n      <td>99.0</td>\n      <td>0.25</td>\n      <td>184</td>\n      <td>27.25</td>\n      <td>18.75</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>7/14/2016</td>\n      <td>Beach</td>\n      <td>122</td>\n      <td>85</td>\n      <td>78</td>\n      <td>113.0</td>\n      <td>0.25</td>\n      <td>207</td>\n      <td>30.50</td>\n      <td>21.25</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>7/15/2016</td>\n      <td>Beach</td>\n      <td>98</td>\n      <td>62</td>\n      <td>75</td>\n      <td>108.0</td>\n      <td>0.50</td>\n      <td>160</td>\n      <td>49.00</td>\n      <td>31.00</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>7/16/2016</td>\n      <td>Beach</td>\n      <td>81</td>\n      <td>50</td>\n      <td>74</td>\n      <td>90.0</td>\n      <td>0.50</td>\n      <td>131</td>\n      <td>40.50</td>\n      <td>25.00</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>7/17/2016</td>\n      <td>Beach</td>\n      <td>115</td>\n      <td>76</td>\n      <td>77</td>\n      <td>126.0</td>\n      <td>0.50</td>\n      <td>191</td>\n      <td>57.50</td>\n      <td>38.00</td>\n    </tr>\n    <tr>\n      <th>30</th>\n      <td>7/30/2016</td>\n      <td>Beach</td>\n      <td>88</td>\n      <td>57</td>\n      <td>82</td>\n      <td>81.0</td>\n      <td>0.35</td>\n      <td>145</td>\n      <td>30.80</td>\n      <td>19.95</td>\n    </tr>\n    <tr>\n      <th>31</th>\n      <td>7/31/2016</td>\n      <td>Beach</td>\n      <td>76</td>\n      <td>47</td>\n      <td>82</td>\n      <td>68.0</td>\n      <td>0.35</td>\n      <td>123</td>\n      <td>26.60</td>\n      <td>16.45</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eb442b9f-c5c8-44b1-b3bd-9dd7b0012761')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n       width=\"24px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n  </svg>\n      </button>\n\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n      <script>\n        const buttonEl =\n          document.querySelector('#df-eb442b9f-c5c8-44b1-b3bd-9dd7b0012761 button.colab-df-convert');\n        buttonEl.style.display =\n          google.colab.kernel.accessAllowed ? 'block' : 'none';\n\n        async function convertToInteractive(key) {\n          const element = document.querySelector('#df-eb442b9f-c5c8-44b1-b3bd-9dd7b0012761');\n          const dataTable =\n            await google.colab.kernel.invokeFunction('convertToInteractive',\n                                                     [key], {});\n          if (!dataTable) return;\n\n          const docLinkHtml = 'Like what you see? Visit the ' +\n            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n            + ' to learn more about interactive tables.';\n          element.innerHTML = '';\n          dataTable['output_type'] = 'display_data';\n          await google.colab.output.renderOutput(dataTable, element);\n          const docLink = document.createElement('div');\n          docLink.innerHTML = docLinkHtml;\n          element.appendChild(docLink);\n        }\n      </script>\n    </div>\n  </div>\n\n\n\n\n\n```python\n# lemonade[(조건식1) &/| (조건식2) &/| (조건식3) ....]   \n# &/| 에서 \"|\"은 \\표시 위에 있는키다\nlemonade[(lemonade['Price'] >= 0.35) & (lemonade['Temperature'] >= 80) & (lemonade['Sold'] >= 220)]\n# Price >= 0.35 이고 Temperature >= 80 이고 Sold >= 220 이 True & True & True 인 값을 도출하는 식\n```\n\n\n\n\n\n  <div id=\"df-19a1d4f9-6805-45a9-9054-6cb00682f880\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date</th>\n      <th>Location</th>\n      <th>Lemon</th>\n      <th>Orange</th>\n      <th>Temperature</th>\n      <th>Leaflets</th>\n      <th>Price</th>\n      <th>Sold</th>\n      <th>Lemon Revenue</th>\n      <th>Orange Revenue</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>18</th>\n      <td>7/18/2016</td>\n      <td>Park</td>\n      <td>131</td>\n      <td>92</td>\n      <td>81</td>\n      <td>122.0</td>\n      <td>0.50</td>\n      <td>223</td>\n      <td>65.5</td>\n      <td>46.00</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>7/25/2016</td>\n      <td>Park</td>\n      <td>156</td>\n      <td>113</td>\n      <td>84</td>\n      <td>135.0</td>\n      <td>0.50</td>\n      <td>269</td>\n      <td>78.0</td>\n      <td>56.50</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>7/26/2016</td>\n      <td>Park</td>\n      <td>176</td>\n      <td>129</td>\n      <td>83</td>\n      <td>158.0</td>\n      <td>0.35</td>\n      <td>305</td>\n      <td>61.6</td>\n      <td>45.15</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-19a1d4f9-6805-45a9-9054-6cb00682f880')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n       width=\"24px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n  </svg>\n      </button>\n\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n      <script>\n        const buttonEl =\n          document.querySelector('#df-19a1d4f9-6805-45a9-9054-6cb00682f880 button.colab-df-convert');\n        buttonEl.style.display =\n          google.colab.kernel.accessAllowed ? 'block' : 'none';\n\n        async function convertToInteractive(key) {\n          const element = document.querySelector('#df-19a1d4f9-6805-45a9-9054-6cb00682f880');\n          const dataTable =\n            await google.colab.kernel.invokeFunction('convertToInteractive',\n                                                     [key], {});\n          if (!dataTable) return;\n\n          const docLinkHtml = 'Like what you see? Visit the ' +\n            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n            + ' to learn more about interactive tables.';\n          element.innerHTML = '';\n          dataTable['output_type'] = 'display_data';\n          await google.colab.output.renderOutput(dataTable, element);\n          const docLink = document.createElement('div');\n          docLink.innerHTML = docLinkHtml;\n          element.appendChild(docLink);\n        }\n      </script>\n    </div>\n  </div>\n\n\n\n\n\n```python\nlemonade[lemonade['Temperature'] >= 80]   # lemonade['Temperature'] >= 80 이 True인 값만 가져오는 식\n# 즉, 조건 맞춰서 True, False 짜고 맘대로 가져올 수 있다.\n```\n\n## iloc와 loc의 차이(데이터 추출하는 함수)\n- iloc = 컬럼명이 숫자일 때\n- loc = 컬럼명이 문자일 때\n- 대부분 loc를 쓰면 된다.\n\n\n```python\n# 데이터.loc[데이터 컬럼 == 특정값]\nlemonade.loc[lemonade['Temperature'] >= 80, ['Date', 'Sold']]\n```\n\n\n\n\n\n  <div id=\"df-2e605a53-7a9f-4358-b1fb-d00205464d2f\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date</th>\n      <th>Sold</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>5</th>\n      <td>7/6/2016</td>\n      <td>172</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>7/6/2016</td>\n      <td>172</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>7/7/2016</td>\n      <td>244</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>NaN</td>\n      <td>209</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>7/9/2016</td>\n      <td>229</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>7/10/2016</td>\n      <td>238</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>7/11/2016</td>\n      <td>282</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>7/12/2016</td>\n      <td>225</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>7/18/2016</td>\n      <td>223</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>7/22/2016</td>\n      <td>187</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>7/23/2016</td>\n      <td>202</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>7/24/2016</td>\n      <td>203</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>7/25/2016</td>\n      <td>269</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>7/26/2016</td>\n      <td>305</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>7/27/2016</td>\n      <td>172</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>7/28/2016</td>\n      <td>159</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>7/29/2016</td>\n      <td>166</td>\n    </tr>\n    <tr>\n      <th>30</th>\n      <td>7/30/2016</td>\n      <td>145</td>\n    </tr>\n    <tr>\n      <th>31</th>\n      <td>7/31/2016</td>\n      <td>123</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2e605a53-7a9f-4358-b1fb-d00205464d2f')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n       width=\"24px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n  </svg>\n      </button>\n\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n      <script>\n        const buttonEl =\n          document.querySelector('#df-2e605a53-7a9f-4358-b1fb-d00205464d2f button.colab-df-convert');\n        buttonEl.style.display =\n          google.colab.kernel.accessAllowed ? 'block' : 'none';\n\n        async function convertToInteractive(key) {\n          const element = document.querySelector('#df-2e605a53-7a9f-4358-b1fb-d00205464d2f');\n          const dataTable =\n            await google.colab.kernel.invokeFunction('convertToInteractive',\n                                                     [key], {});\n          if (!dataTable) return;\n\n          const docLinkHtml = 'Like what you see? Visit the ' +\n            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n            + ' to learn more about interactive tables.';\n          element.innerHTML = '';\n          dataTable['output_type'] = 'display_data';\n          await google.colab.output.renderOutput(dataTable, element);\n          const docLink = document.createElement('div');\n          docLink.innerHTML = docLinkHtml;\n          element.appendChild(docLink);\n        }\n      </script>\n    </div>\n  </div>\n\n\n\n","source":"_posts/day0629.md","raw":"---\ntitle: \"day 0629\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: Python\nthumbnailImage: python.png\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-06-29 11:59:30'\n---\n\npython 통계 각종 조건식\n<!-- excerpt -->\n\n\n# pandas\n- pandas 에서 Index 값은 중복값을 허용하지 않는다.\n\n![](/images/0629/Untitled.png)\n\n- DataFrame, Series는 같아 보이지만 다르다(DataFrame 에는 info 메소드가 있지만, Series에는 info 메소드가 없다).\n- 데이터프레임.groupby() —> groupby 클래스\n- A가 클래스 정의한 메소드\n    - 예) 데이터 프레임 info()\n- B의 클래스 정의한 메소드\n    - 예) info() 메소드 존재 하지 않음\n- 클래스는 패키지의 하위호환 개념이다.\n\n\n```python\ntemp_dict = {\n    'col1' : [1, 2], \n    'col2' : [3, 4]\n}\n\ndf = pd.DataFrame(temp_dict)\nprint(df)\nprint(type(df))\n```\n\n       col1  col2\n    0     1     3\n    1     2     4\n    <class 'pandas.core.frame.DataFrame'>\n    \n\n\n```python\nimport pandas as pd \nprint(pd.__version__)\n```\n\n    1.3.5\n    \n\n\n```python\nfrom google.colab import drive \ndrive.mount('/content/drive')\n```\n\n    Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n    \n\n\n```python\nDATA_PATH = '/content/drive/MyDrive/Colab Notebooks/human_ai/Basic/Chapter 3. pandas/data/'\nprint(DATA_PATH + 'Lemonade2016.csv')\n\nlemonade = pd.read_csv(DATA_PATH + 'Lemonade2016.csv')\n# covid_df = pd.read_csv(DATA_PATH + 'owid-covid-data.csv')\n\nlemonade.info() # str()\n```\n\n    /content/drive/MyDrive/Colab Notebooks/human_ai/Basic/Chapter 3. pandas/data/Lemonade2016.csv\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 32 entries, 0 to 31\n    Data columns (total 7 columns):\n     #   Column       Non-Null Count  Dtype  \n    ---  ------       --------------  -----  \n     0   Date         31 non-null     object \n     1   Location     32 non-null     object \n     2   Lemon        32 non-null     int64  \n     3   Orange       32 non-null     int64  \n     4   Temperature  32 non-null     int64  \n     5   Leaflets     31 non-null     float64\n     6   Price        32 non-null     float64\n    dtypes: float64(2), int64(3), object(2)\n    memory usage: 1.9+ KB\n    \n\n## 라이브러리 불러오기\n\n\n```python\nimport pandas as pd\nimport numpy as np\nprint(\"pandas version : \", pd.__version__)\nprint(\"numpy version : \", np.__version__)\n```\n\n    pandas version :  1.3.5\n    numpy version :  1.21.6\n    \n\n## 구글 드라이브 연결하기\n#### Series 클래스인지 DataFrame 클래스인지 신경 쓰기\n\n\n```python\nfrom google.colab import drive\ndrive.mount('/content/drive')\n```\n\n    Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n    \n\n\n```python\nDATA_PATH = '/content/drive/MyDrive/Colab Notebooks/human_ai/Basic/Chapter 3. pandas/data/Lemonade2016.csv'\nlomonade = pd.read_csv(DATA_PATH)\n\nprint(type(lemonade))\nprint(lemonade.info())\n# Dtype 은 데이터 타입인데 'int64'에서 64는 64비트를 의미한다.\n# 데이터가 너무 커지면 64비트를 8비트로 조절하든지 해서 데이터를 줄인다.\n```\n\n    <class 'pandas.core.frame.DataFrame'>\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 32 entries, 0 to 31\n    Data columns (total 7 columns):\n     #   Column       Non-Null Count  Dtype  \n    ---  ------       --------------  -----  \n     0   Date         31 non-null     object \n     1   Location     32 non-null     object \n     2   Lemon        32 non-null     int64  \n     3   Orange       32 non-null     int64  \n     4   Temperature  32 non-null     int64  \n     5   Leaflets     31 non-null     float64\n     6   Price        32 non-null     float64\n    dtypes: float64(2), int64(3), object(2)\n    memory usage: 1.9+ KB\n    \n\n- 데이터 맛보기\n\n\n```python\nprint(lemonade.head())\n```\n\n           Date Location  Lemon  Orange  Temperature  Leaflets  Price\n    0  7/1/2016     Park     97      67           70      90.0   0.25\n    1  7/2/2016     Park     98      67           72      90.0   0.25\n    2  7/3/2016     Park    110      77           71     104.0   0.25\n    3  7/4/2016    Beach    134      99           76      98.0   0.25\n    4  7/5/2016    Beach    159     118           78     135.0   0.25\n    \n\n\n```python\nprint(lemonade.tail())\n```\n\n             Date Location  Lemon  Orange  Temperature  Leaflets  Price\n    27  7/27/2016     Park    104      68           80      99.0   0.35\n    28  7/28/2016     Park     96      63           82      90.0   0.35\n    29  7/29/2016     Park    100      66           81      95.0   0.35\n    30  7/30/2016    Beach     88      57           82      81.0   0.35\n    31  7/31/2016    Beach     76      47           82      68.0   0.35\n    \n\n- 기술통계량 보는 함수\n- describe()\n\n\n```python\nprint(lemonade.describe())\n'''\nstd = 표준편차\n사분위값, 평균 등등 볼 수 있다.\n'''\n```\n\n                Lemon      Orange  Temperature    Leaflets      Price\n    count   32.000000   32.000000    32.000000   31.000000  32.000000\n    mean   116.156250   80.000000    78.968750  108.548387   0.354688\n    std     25.823357   21.863211     4.067847   20.117718   0.113137\n    min     71.000000   42.000000    70.000000   68.000000   0.250000\n    25%     98.000000   66.750000    77.000000   90.000000   0.250000\n    50%    113.500000   76.500000    80.500000  108.000000   0.350000\n    75%    131.750000   95.000000    82.000000  124.000000   0.500000\n    max    176.000000  129.000000    84.000000  158.000000   0.500000\n    \n\n- 범주형 데이터 빈도수 구하기\n\n\n```python\nprint(lemonade['Location'].value_counts())   # .value_counts() : \"lemonade['Location']\" 함수의 숫자를 세준다는 뜻\n```\n\n    Beach    17\n    Park     15\n    Name: Location, dtype: int64\n    \n\n## 행과 열 다루기\n- Sold(판매량) 컬럼\n(=피처=feature)을 추가\n\n\n```python\nlemonade['Sold'] = 0     # Sold 라는 새로운 변수 추가\nprint(lemonade.head(3))  # 데이터 확인\n```\n\n           Date Location  Lemon  Orange  Temperature  Leaflets  Price  Sold\n    0  7/1/2016     Park     97      67           70      90.0   0.25     0\n    1  7/2/2016     Park     98      67           72      90.0   0.25     0\n    2  7/3/2016     Park    110      77           71     104.0   0.25     0\n    \n\n\n```python\nlemonade['Sold'] = lemonade['Lemon'] + lemonade['Orange']   # Sold 값 정의 (오렌지 + 레몬)\nprint(lemonade.head(3))\n```\n\n           Date Location  Lemon  Orange  Temperature  Leaflets  Price  Sold\n    0  7/1/2016     Park     97      67           70      90.0   0.25   164\n    1  7/2/2016     Park     98      67           72      90.0   0.25   165\n    2  7/3/2016     Park    110      77           71     104.0   0.25   187\n    \n\n- Revenue(매출) = 단가 x 판매량   변수 만들어보기\n\n\n```python\nlemonade['Lemon Revenue'] = lemonade['Price'] * lemonade['Lemon']\nlemonade['Orange Revenue'] = lemonade['Price'] * lemonade['Orange']\nprint(lemonade.head())\n# print(lemonade[['Lemon Revenue', 'Orange Revenue', 'Price', 'Sold']])\n```\n\n           Date Location  Lemon  Orange  Temperature  Leaflets  Price  Sold  \\\n    0  7/1/2016     Park     97      67           70      90.0   0.25   164   \n    1  7/2/2016     Park     98      67           72      90.0   0.25   165   \n    2  7/3/2016     Park    110      77           71     104.0   0.25   187   \n    3  7/4/2016    Beach    134      99           76      98.0   0.25   233   \n    4  7/5/2016    Beach    159     118           78     135.0   0.25   277   \n    \n       Lemon Revenue  Orange Revenue  \n    0          24.25           16.75  \n    1          24.50           16.75  \n    2          27.50           19.25  \n    3          33.50           24.75  \n    4          39.75           29.50  \n    \n\n- drop() 함수 사용해서 열 제거(axis 값을 1로 둔다)\n\n\n```python\n# 컬럼 제거\ncol_drop = lemonade.drop('Sold', axis = 1)   # Sold 열을 제거한다.\nprint(col_drop.head())\n```\n\n           Date Location  Lemon  Orange  Temperature  Leaflets  Price  \\\n    0  7/1/2016     Park     97      67           70      90.0   0.25   \n    1  7/2/2016     Park     98      67           72      90.0   0.25   \n    2  7/3/2016     Park    110      77           71     104.0   0.25   \n    3  7/4/2016    Beach    134      99           76      98.0   0.25   \n    4  7/5/2016    Beach    159     118           78     135.0   0.25   \n    \n       Lemon Revenue  Orange Revenue  \n    0          24.25           16.75  \n    1          24.50           16.75  \n    2          27.50           19.25  \n    3          33.50           24.75  \n    4          39.75           29.50  \n    \n\n- drop() 함수 사용해서 행 제거(axis 값을 0으로 둔다)\n\n\n```python\n# 행 제거\nrow_drop = lomonade.drop([0, 1, 3], axis = 0)   # 0, 1, 3의 행을 제거한다.\nprint(row_drop.head())\n```\n\n           Date Location  Lemon  Orange  Temperature  Leaflets  Price\n    2  7/3/2016     Park    110      77           71     104.0   0.25\n    4  7/5/2016    Beach    159     118           78     135.0   0.25\n    5  7/6/2016    Beach    103      69           82      90.0   0.25\n    6  7/6/2016    Beach    103      69           82      90.0   0.25\n    7  7/7/2016    Beach    143     101           81     135.0   0.25\n    \n\n## 데이터 인덱싱\n\n\n```python\nprint(lemonade[4:7])\n```\n\n           Date Location  Lemon  Orange  Temperature  Leaflets  Price  Sold  \\\n    4  7/5/2016    Beach    159     118           78     135.0   0.25   277   \n    5  7/6/2016    Beach    103      69           82      90.0   0.25   172   \n    6  7/6/2016    Beach    103      69           82      90.0   0.25   172   \n    \n       Lemon Revenue  Orange Revenue  \n    4          39.75           29.50  \n    5          25.75           17.25  \n    6          25.75           17.25  \n    \n\n- 특정 값만 추출 (필터링)\n\n\n```python\nlemonade['Location'] == 'Beach'\n```\n\n\n\n\n    0     False\n    1     False\n    2     False\n    3      True\n    4      True\n    5      True\n    6      True\n    7      True\n    8      True\n    9      True\n    10     True\n    11     True\n    12     True\n    13     True\n    14     True\n    15     True\n    16     True\n    17     True\n    18    False\n    19    False\n    20    False\n    21    False\n    22    False\n    23    False\n    24    False\n    25    False\n    26    False\n    27    False\n    28    False\n    29    False\n    30     True\n    31     True\n    Name: Location, dtype: bool\n\n\n\n\n```python\n# 데이터[데이터 컬럼 == 특정값]\nlemonade[lemonade['Location'] == 'Beach']   # lemonade['Location'] == 'Beach' 이 True인 값만 가져오는 식\n```\n\n\n\n\n\n  <div id=\"df-eb442b9f-c5c8-44b1-b3bd-9dd7b0012761\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date</th>\n      <th>Location</th>\n      <th>Lemon</th>\n      <th>Orange</th>\n      <th>Temperature</th>\n      <th>Leaflets</th>\n      <th>Price</th>\n      <th>Sold</th>\n      <th>Lemon Revenue</th>\n      <th>Orange Revenue</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>3</th>\n      <td>7/4/2016</td>\n      <td>Beach</td>\n      <td>134</td>\n      <td>99</td>\n      <td>76</td>\n      <td>98.0</td>\n      <td>0.25</td>\n      <td>233</td>\n      <td>33.50</td>\n      <td>24.75</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>7/5/2016</td>\n      <td>Beach</td>\n      <td>159</td>\n      <td>118</td>\n      <td>78</td>\n      <td>135.0</td>\n      <td>0.25</td>\n      <td>277</td>\n      <td>39.75</td>\n      <td>29.50</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>7/6/2016</td>\n      <td>Beach</td>\n      <td>103</td>\n      <td>69</td>\n      <td>82</td>\n      <td>90.0</td>\n      <td>0.25</td>\n      <td>172</td>\n      <td>25.75</td>\n      <td>17.25</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>7/6/2016</td>\n      <td>Beach</td>\n      <td>103</td>\n      <td>69</td>\n      <td>82</td>\n      <td>90.0</td>\n      <td>0.25</td>\n      <td>172</td>\n      <td>25.75</td>\n      <td>17.25</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>7/7/2016</td>\n      <td>Beach</td>\n      <td>143</td>\n      <td>101</td>\n      <td>81</td>\n      <td>135.0</td>\n      <td>0.25</td>\n      <td>244</td>\n      <td>35.75</td>\n      <td>25.25</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>NaN</td>\n      <td>Beach</td>\n      <td>123</td>\n      <td>86</td>\n      <td>82</td>\n      <td>113.0</td>\n      <td>0.25</td>\n      <td>209</td>\n      <td>30.75</td>\n      <td>21.50</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>7/9/2016</td>\n      <td>Beach</td>\n      <td>134</td>\n      <td>95</td>\n      <td>80</td>\n      <td>126.0</td>\n      <td>0.25</td>\n      <td>229</td>\n      <td>33.50</td>\n      <td>23.75</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>7/10/2016</td>\n      <td>Beach</td>\n      <td>140</td>\n      <td>98</td>\n      <td>82</td>\n      <td>131.0</td>\n      <td>0.25</td>\n      <td>238</td>\n      <td>35.00</td>\n      <td>24.50</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>7/11/2016</td>\n      <td>Beach</td>\n      <td>162</td>\n      <td>120</td>\n      <td>83</td>\n      <td>135.0</td>\n      <td>0.25</td>\n      <td>282</td>\n      <td>40.50</td>\n      <td>30.00</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>7/12/2016</td>\n      <td>Beach</td>\n      <td>130</td>\n      <td>95</td>\n      <td>84</td>\n      <td>99.0</td>\n      <td>0.25</td>\n      <td>225</td>\n      <td>32.50</td>\n      <td>23.75</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>7/13/2016</td>\n      <td>Beach</td>\n      <td>109</td>\n      <td>75</td>\n      <td>77</td>\n      <td>99.0</td>\n      <td>0.25</td>\n      <td>184</td>\n      <td>27.25</td>\n      <td>18.75</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>7/14/2016</td>\n      <td>Beach</td>\n      <td>122</td>\n      <td>85</td>\n      <td>78</td>\n      <td>113.0</td>\n      <td>0.25</td>\n      <td>207</td>\n      <td>30.50</td>\n      <td>21.25</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>7/15/2016</td>\n      <td>Beach</td>\n      <td>98</td>\n      <td>62</td>\n      <td>75</td>\n      <td>108.0</td>\n      <td>0.50</td>\n      <td>160</td>\n      <td>49.00</td>\n      <td>31.00</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>7/16/2016</td>\n      <td>Beach</td>\n      <td>81</td>\n      <td>50</td>\n      <td>74</td>\n      <td>90.0</td>\n      <td>0.50</td>\n      <td>131</td>\n      <td>40.50</td>\n      <td>25.00</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>7/17/2016</td>\n      <td>Beach</td>\n      <td>115</td>\n      <td>76</td>\n      <td>77</td>\n      <td>126.0</td>\n      <td>0.50</td>\n      <td>191</td>\n      <td>57.50</td>\n      <td>38.00</td>\n    </tr>\n    <tr>\n      <th>30</th>\n      <td>7/30/2016</td>\n      <td>Beach</td>\n      <td>88</td>\n      <td>57</td>\n      <td>82</td>\n      <td>81.0</td>\n      <td>0.35</td>\n      <td>145</td>\n      <td>30.80</td>\n      <td>19.95</td>\n    </tr>\n    <tr>\n      <th>31</th>\n      <td>7/31/2016</td>\n      <td>Beach</td>\n      <td>76</td>\n      <td>47</td>\n      <td>82</td>\n      <td>68.0</td>\n      <td>0.35</td>\n      <td>123</td>\n      <td>26.60</td>\n      <td>16.45</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eb442b9f-c5c8-44b1-b3bd-9dd7b0012761')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n       width=\"24px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n  </svg>\n      </button>\n\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n      <script>\n        const buttonEl =\n          document.querySelector('#df-eb442b9f-c5c8-44b1-b3bd-9dd7b0012761 button.colab-df-convert');\n        buttonEl.style.display =\n          google.colab.kernel.accessAllowed ? 'block' : 'none';\n\n        async function convertToInteractive(key) {\n          const element = document.querySelector('#df-eb442b9f-c5c8-44b1-b3bd-9dd7b0012761');\n          const dataTable =\n            await google.colab.kernel.invokeFunction('convertToInteractive',\n                                                     [key], {});\n          if (!dataTable) return;\n\n          const docLinkHtml = 'Like what you see? Visit the ' +\n            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n            + ' to learn more about interactive tables.';\n          element.innerHTML = '';\n          dataTable['output_type'] = 'display_data';\n          await google.colab.output.renderOutput(dataTable, element);\n          const docLink = document.createElement('div');\n          docLink.innerHTML = docLinkHtml;\n          element.appendChild(docLink);\n        }\n      </script>\n    </div>\n  </div>\n\n\n\n\n\n```python\n# lemonade[(조건식1) &/| (조건식2) &/| (조건식3) ....]   \n# &/| 에서 \"|\"은 \\표시 위에 있는키다\nlemonade[(lemonade['Price'] >= 0.35) & (lemonade['Temperature'] >= 80) & (lemonade['Sold'] >= 220)]\n# Price >= 0.35 이고 Temperature >= 80 이고 Sold >= 220 이 True & True & True 인 값을 도출하는 식\n```\n\n\n\n\n\n  <div id=\"df-19a1d4f9-6805-45a9-9054-6cb00682f880\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date</th>\n      <th>Location</th>\n      <th>Lemon</th>\n      <th>Orange</th>\n      <th>Temperature</th>\n      <th>Leaflets</th>\n      <th>Price</th>\n      <th>Sold</th>\n      <th>Lemon Revenue</th>\n      <th>Orange Revenue</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>18</th>\n      <td>7/18/2016</td>\n      <td>Park</td>\n      <td>131</td>\n      <td>92</td>\n      <td>81</td>\n      <td>122.0</td>\n      <td>0.50</td>\n      <td>223</td>\n      <td>65.5</td>\n      <td>46.00</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>7/25/2016</td>\n      <td>Park</td>\n      <td>156</td>\n      <td>113</td>\n      <td>84</td>\n      <td>135.0</td>\n      <td>0.50</td>\n      <td>269</td>\n      <td>78.0</td>\n      <td>56.50</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>7/26/2016</td>\n      <td>Park</td>\n      <td>176</td>\n      <td>129</td>\n      <td>83</td>\n      <td>158.0</td>\n      <td>0.35</td>\n      <td>305</td>\n      <td>61.6</td>\n      <td>45.15</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-19a1d4f9-6805-45a9-9054-6cb00682f880')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n       width=\"24px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n  </svg>\n      </button>\n\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n      <script>\n        const buttonEl =\n          document.querySelector('#df-19a1d4f9-6805-45a9-9054-6cb00682f880 button.colab-df-convert');\n        buttonEl.style.display =\n          google.colab.kernel.accessAllowed ? 'block' : 'none';\n\n        async function convertToInteractive(key) {\n          const element = document.querySelector('#df-19a1d4f9-6805-45a9-9054-6cb00682f880');\n          const dataTable =\n            await google.colab.kernel.invokeFunction('convertToInteractive',\n                                                     [key], {});\n          if (!dataTable) return;\n\n          const docLinkHtml = 'Like what you see? Visit the ' +\n            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n            + ' to learn more about interactive tables.';\n          element.innerHTML = '';\n          dataTable['output_type'] = 'display_data';\n          await google.colab.output.renderOutput(dataTable, element);\n          const docLink = document.createElement('div');\n          docLink.innerHTML = docLinkHtml;\n          element.appendChild(docLink);\n        }\n      </script>\n    </div>\n  </div>\n\n\n\n\n\n```python\nlemonade[lemonade['Temperature'] >= 80]   # lemonade['Temperature'] >= 80 이 True인 값만 가져오는 식\n# 즉, 조건 맞춰서 True, False 짜고 맘대로 가져올 수 있다.\n```\n\n## iloc와 loc의 차이(데이터 추출하는 함수)\n- iloc = 컬럼명이 숫자일 때\n- loc = 컬럼명이 문자일 때\n- 대부분 loc를 쓰면 된다.\n\n\n```python\n# 데이터.loc[데이터 컬럼 == 특정값]\nlemonade.loc[lemonade['Temperature'] >= 80, ['Date', 'Sold']]\n```\n\n\n\n\n\n  <div id=\"df-2e605a53-7a9f-4358-b1fb-d00205464d2f\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date</th>\n      <th>Sold</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>5</th>\n      <td>7/6/2016</td>\n      <td>172</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>7/6/2016</td>\n      <td>172</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>7/7/2016</td>\n      <td>244</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>NaN</td>\n      <td>209</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>7/9/2016</td>\n      <td>229</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>7/10/2016</td>\n      <td>238</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>7/11/2016</td>\n      <td>282</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>7/12/2016</td>\n      <td>225</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>7/18/2016</td>\n      <td>223</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>7/22/2016</td>\n      <td>187</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>7/23/2016</td>\n      <td>202</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>7/24/2016</td>\n      <td>203</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>7/25/2016</td>\n      <td>269</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>7/26/2016</td>\n      <td>305</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>7/27/2016</td>\n      <td>172</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>7/28/2016</td>\n      <td>159</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>7/29/2016</td>\n      <td>166</td>\n    </tr>\n    <tr>\n      <th>30</th>\n      <td>7/30/2016</td>\n      <td>145</td>\n    </tr>\n    <tr>\n      <th>31</th>\n      <td>7/31/2016</td>\n      <td>123</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2e605a53-7a9f-4358-b1fb-d00205464d2f')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n       width=\"24px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n  </svg>\n      </button>\n\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n      <script>\n        const buttonEl =\n          document.querySelector('#df-2e605a53-7a9f-4358-b1fb-d00205464d2f button.colab-df-convert');\n        buttonEl.style.display =\n          google.colab.kernel.accessAllowed ? 'block' : 'none';\n\n        async function convertToInteractive(key) {\n          const element = document.querySelector('#df-2e605a53-7a9f-4358-b1fb-d00205464d2f');\n          const dataTable =\n            await google.colab.kernel.invokeFunction('convertToInteractive',\n                                                     [key], {});\n          if (!dataTable) return;\n\n          const docLinkHtml = 'Like what you see? Visit the ' +\n            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n            + ' to learn more about interactive tables.';\n          element.innerHTML = '';\n          dataTable['output_type'] = 'display_data';\n          await google.colab.output.renderOutput(dataTable, element);\n          const docLink = document.createElement('div');\n          docLink.innerHTML = docLinkHtml;\n          element.appendChild(docLink);\n        }\n      </script>\n    </div>\n  </div>\n\n\n\n","slug":"day0629","published":1,"updated":"2022-07-21T12:49:59.635Z","_id":"cl5fcok7u000ujku0hesoczfz","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n\n<h1 id=\"pandas\"><a href=\"#pandas\" class=\"headerlink\" title=\"pandas\"></a>pandas</h1><ul>\n<li>pandas 에서 Index 값은 중복값을 허용하지 않는다.</li>\n</ul>\n<p><img src=\"/images/0629/Untitled.png\"></p>\n<ul>\n<li>DataFrame, Series는 같아 보이지만 다르다(DataFrame 에는 info 메소드가 있지만, Series에는 info 메소드가 없다).</li>\n<li>데이터프레임.groupby() —&gt; groupby 클래스</li>\n<li>A가 클래스 정의한 메소드<ul>\n<li>예) 데이터 프레임 info()</li>\n</ul>\n</li>\n<li>B의 클래스 정의한 메소드<ul>\n<li>예) info() 메소드 존재 하지 않음</li>\n</ul>\n</li>\n<li>클래스는 패키지의 하위호환 개념이다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_dict = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;col1&#x27;</span> : [<span class=\"number\">1</span>, <span class=\"number\">2</span>], </span><br><span class=\"line\">    <span class=\"string\">&#x27;col2&#x27;</span> : [<span class=\"number\">3</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">df = pd.DataFrame(temp_dict)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(df))</span><br></pre></td></tr></table></figure>\n\n<pre><code>   col1  col2\n0     1     3\n1     2     4\n&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd </span><br><span class=\"line\"><span class=\"built_in\">print</span>(pd.__version__)</span><br></pre></td></tr></table></figure>\n\n<pre><code>1.3.5\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> google.colab <span class=\"keyword\">import</span> drive </span><br><span class=\"line\">drive.mount(<span class=\"string\">&#x27;/content/drive&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(&quot;/content/drive&quot;, force_remount=True).\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DATA_PATH = <span class=\"string\">&#x27;/content/drive/MyDrive/Colab Notebooks/human_ai/Basic/Chapter 3. pandas/data/&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(DATA_PATH + <span class=\"string\">&#x27;Lemonade2016.csv&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">lemonade = pd.read_csv(DATA_PATH + <span class=\"string\">&#x27;Lemonade2016.csv&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># covid_df = pd.read_csv(DATA_PATH + &#x27;owid-covid-data.csv&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\">lemonade.info() <span class=\"comment\"># str()</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>/content/drive/MyDrive/Colab Notebooks/human_ai/Basic/Chapter 3. pandas/data/Lemonade2016.csv\n&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 32 entries, 0 to 31\nData columns (total 7 columns):\n #   Column       Non-Null Count  Dtype  \n---  ------       --------------  -----  \n 0   Date         31 non-null     object \n 1   Location     32 non-null     object \n 2   Lemon        32 non-null     int64  \n 3   Orange       32 non-null     int64  \n 4   Temperature  32 non-null     int64  \n 5   Leaflets     31 non-null     float64\n 6   Price        32 non-null     float64\ndtypes: float64(2), int64(3), object(2)\nmemory usage: 1.9+ KB\n</code></pre>\n<h2 id=\"라이브러리-불러오기\"><a href=\"#라이브러리-불러오기\" class=\"headerlink\" title=\"라이브러리 불러오기\"></a>라이브러리 불러오기</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;pandas version : &quot;</span>, pd.__version__)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;numpy version : &quot;</span>, np.__version__)</span><br></pre></td></tr></table></figure>\n\n<pre><code>pandas version :  1.3.5\nnumpy version :  1.21.6\n</code></pre>\n<h2 id=\"구글-드라이브-연결하기\"><a href=\"#구글-드라이브-연결하기\" class=\"headerlink\" title=\"구글 드라이브 연결하기\"></a>구글 드라이브 연결하기</h2><h4 id=\"Series-클래스인지-DataFrame-클래스인지-신경-쓰기\"><a href=\"#Series-클래스인지-DataFrame-클래스인지-신경-쓰기\" class=\"headerlink\" title=\"Series 클래스인지 DataFrame 클래스인지 신경 쓰기\"></a>Series 클래스인지 DataFrame 클래스인지 신경 쓰기</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> google.colab <span class=\"keyword\">import</span> drive</span><br><span class=\"line\">drive.mount(<span class=\"string\">&#x27;/content/drive&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(&quot;/content/drive&quot;, force_remount=True).\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DATA_PATH = <span class=\"string\">&#x27;/content/drive/MyDrive/Colab Notebooks/human_ai/Basic/Chapter 3. pandas/data/Lemonade2016.csv&#x27;</span></span><br><span class=\"line\">lomonade = pd.read_csv(DATA_PATH)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(lemonade))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(lemonade.info())</span><br><span class=\"line\"><span class=\"comment\"># Dtype 은 데이터 타입인데 &#x27;int64&#x27;에서 64는 64비트를 의미한다.</span></span><br><span class=\"line\"><span class=\"comment\"># 데이터가 너무 커지면 64비트를 8비트로 조절하든지 해서 데이터를 줄인다.</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\n&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 32 entries, 0 to 31\nData columns (total 7 columns):\n #   Column       Non-Null Count  Dtype  \n---  ------       --------------  -----  \n 0   Date         31 non-null     object \n 1   Location     32 non-null     object \n 2   Lemon        32 non-null     int64  \n 3   Orange       32 non-null     int64  \n 4   Temperature  32 non-null     int64  \n 5   Leaflets     31 non-null     float64\n 6   Price        32 non-null     float64\ndtypes: float64(2), int64(3), object(2)\nmemory usage: 1.9+ KB\n</code></pre>\n<ul>\n<li>데이터 맛보기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(lemonade.head())</span><br></pre></td></tr></table></figure>\n\n<pre><code>       Date Location  Lemon  Orange  Temperature  Leaflets  Price\n0  7/1/2016     Park     97      67           70      90.0   0.25\n1  7/2/2016     Park     98      67           72      90.0   0.25\n2  7/3/2016     Park    110      77           71     104.0   0.25\n3  7/4/2016    Beach    134      99           76      98.0   0.25\n4  7/5/2016    Beach    159     118           78     135.0   0.25\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(lemonade.tail())</span><br></pre></td></tr></table></figure>\n\n<pre><code>         Date Location  Lemon  Orange  Temperature  Leaflets  Price\n27  7/27/2016     Park    104      68           80      99.0   0.35\n28  7/28/2016     Park     96      63           82      90.0   0.35\n29  7/29/2016     Park    100      66           81      95.0   0.35\n30  7/30/2016    Beach     88      57           82      81.0   0.35\n31  7/31/2016    Beach     76      47           82      68.0   0.35\n</code></pre>\n<ul>\n<li>기술통계량 보는 함수</li>\n<li>describe()</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(lemonade.describe())</span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">std = 표준편차</span></span><br><span class=\"line\"><span class=\"string\">사분위값, 평균 등등 볼 수 있다.</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>            Lemon      Orange  Temperature    Leaflets      Price\ncount   32.000000   32.000000    32.000000   31.000000  32.000000\nmean   116.156250   80.000000    78.968750  108.548387   0.354688\nstd     25.823357   21.863211     4.067847   20.117718   0.113137\nmin     71.000000   42.000000    70.000000   68.000000   0.250000\n25%     98.000000   66.750000    77.000000   90.000000   0.250000\n50%    113.500000   76.500000    80.500000  108.000000   0.350000\n75%    131.750000   95.000000    82.000000  124.000000   0.500000\nmax    176.000000  129.000000    84.000000  158.000000   0.500000\n</code></pre>\n<ul>\n<li>범주형 데이터 빈도수 구하기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(lemonade[<span class=\"string\">&#x27;Location&#x27;</span>].value_counts())   <span class=\"comment\"># .value_counts() : &quot;lemonade[&#x27;Location&#x27;]&quot; 함수의 숫자를 세준다는 뜻</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>Beach    17\nPark     15\nName: Location, dtype: int64\n</code></pre>\n<h2 id=\"행과-열-다루기\"><a href=\"#행과-열-다루기\" class=\"headerlink\" title=\"행과 열 다루기\"></a>행과 열 다루기</h2><ul>\n<li>Sold(판매량) 컬럼<br>(&#x3D;피처&#x3D;feature)을 추가</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lemonade[<span class=\"string\">&#x27;Sold&#x27;</span>] = <span class=\"number\">0</span>     <span class=\"comment\"># Sold 라는 새로운 변수 추가</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(lemonade.head(<span class=\"number\">3</span>))  <span class=\"comment\"># 데이터 확인</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>       Date Location  Lemon  Orange  Temperature  Leaflets  Price  Sold\n0  7/1/2016     Park     97      67           70      90.0   0.25     0\n1  7/2/2016     Park     98      67           72      90.0   0.25     0\n2  7/3/2016     Park    110      77           71     104.0   0.25     0\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lemonade[<span class=\"string\">&#x27;Sold&#x27;</span>] = lemonade[<span class=\"string\">&#x27;Lemon&#x27;</span>] + lemonade[<span class=\"string\">&#x27;Orange&#x27;</span>]   <span class=\"comment\"># Sold 값 정의 (오렌지 + 레몬)</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(lemonade.head(<span class=\"number\">3</span>))</span><br></pre></td></tr></table></figure>\n\n<pre><code>       Date Location  Lemon  Orange  Temperature  Leaflets  Price  Sold\n0  7/1/2016     Park     97      67           70      90.0   0.25   164\n1  7/2/2016     Park     98      67           72      90.0   0.25   165\n2  7/3/2016     Park    110      77           71     104.0   0.25   187\n</code></pre>\n<ul>\n<li>Revenue(매출) &#x3D; 단가 x 판매량   변수 만들어보기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lemonade[<span class=\"string\">&#x27;Lemon Revenue&#x27;</span>] = lemonade[<span class=\"string\">&#x27;Price&#x27;</span>] * lemonade[<span class=\"string\">&#x27;Lemon&#x27;</span>]</span><br><span class=\"line\">lemonade[<span class=\"string\">&#x27;Orange Revenue&#x27;</span>] = lemonade[<span class=\"string\">&#x27;Price&#x27;</span>] * lemonade[<span class=\"string\">&#x27;Orange&#x27;</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(lemonade.head())</span><br><span class=\"line\"><span class=\"comment\"># print(lemonade[[&#x27;Lemon Revenue&#x27;, &#x27;Orange Revenue&#x27;, &#x27;Price&#x27;, &#x27;Sold&#x27;]])</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>       Date Location  Lemon  Orange  Temperature  Leaflets  Price  Sold  \\\n0  7/1/2016     Park     97      67           70      90.0   0.25   164   \n1  7/2/2016     Park     98      67           72      90.0   0.25   165   \n2  7/3/2016     Park    110      77           71     104.0   0.25   187   \n3  7/4/2016    Beach    134      99           76      98.0   0.25   233   \n4  7/5/2016    Beach    159     118           78     135.0   0.25   277   \n\n   Lemon Revenue  Orange Revenue  \n0          24.25           16.75  \n1          24.50           16.75  \n2          27.50           19.25  \n3          33.50           24.75  \n4          39.75           29.50  \n</code></pre>\n<ul>\n<li>drop() 함수 사용해서 열 제거(axis 값을 1로 둔다)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 컬럼 제거</span></span><br><span class=\"line\">col_drop = lemonade.drop(<span class=\"string\">&#x27;Sold&#x27;</span>, axis = <span class=\"number\">1</span>)   <span class=\"comment\"># Sold 열을 제거한다.</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(col_drop.head())</span><br></pre></td></tr></table></figure>\n\n<pre><code>       Date Location  Lemon  Orange  Temperature  Leaflets  Price  \\\n0  7/1/2016     Park     97      67           70      90.0   0.25   \n1  7/2/2016     Park     98      67           72      90.0   0.25   \n2  7/3/2016     Park    110      77           71     104.0   0.25   \n3  7/4/2016    Beach    134      99           76      98.0   0.25   \n4  7/5/2016    Beach    159     118           78     135.0   0.25   \n\n   Lemon Revenue  Orange Revenue  \n0          24.25           16.75  \n1          24.50           16.75  \n2          27.50           19.25  \n3          33.50           24.75  \n4          39.75           29.50  \n</code></pre>\n<ul>\n<li>drop() 함수 사용해서 행 제거(axis 값을 0으로 둔다)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 행 제거</span></span><br><span class=\"line\">row_drop = lomonade.drop([<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>], axis = <span class=\"number\">0</span>)   <span class=\"comment\"># 0, 1, 3의 행을 제거한다.</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(row_drop.head())</span><br></pre></td></tr></table></figure>\n\n<pre><code>       Date Location  Lemon  Orange  Temperature  Leaflets  Price\n2  7/3/2016     Park    110      77           71     104.0   0.25\n4  7/5/2016    Beach    159     118           78     135.0   0.25\n5  7/6/2016    Beach    103      69           82      90.0   0.25\n6  7/6/2016    Beach    103      69           82      90.0   0.25\n7  7/7/2016    Beach    143     101           81     135.0   0.25\n</code></pre>\n<h2 id=\"데이터-인덱싱\"><a href=\"#데이터-인덱싱\" class=\"headerlink\" title=\"데이터 인덱싱\"></a>데이터 인덱싱</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(lemonade[<span class=\"number\">4</span>:<span class=\"number\">7</span>])</span><br></pre></td></tr></table></figure>\n\n<pre><code>       Date Location  Lemon  Orange  Temperature  Leaflets  Price  Sold  \\\n4  7/5/2016    Beach    159     118           78     135.0   0.25   277   \n5  7/6/2016    Beach    103      69           82      90.0   0.25   172   \n6  7/6/2016    Beach    103      69           82      90.0   0.25   172   \n\n   Lemon Revenue  Orange Revenue  \n4          39.75           29.50  \n5          25.75           17.25  \n6          25.75           17.25  \n</code></pre>\n<ul>\n<li>특정 값만 추출 (필터링)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lemonade[<span class=\"string\">&#x27;Location&#x27;</span>] == <span class=\"string\">&#x27;Beach&#x27;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>0     False\n1     False\n2     False\n3      True\n4      True\n5      True\n6      True\n7      True\n8      True\n9      True\n10     True\n11     True\n12     True\n13     True\n14     True\n15     True\n16     True\n17     True\n18    False\n19    False\n20    False\n21    False\n22    False\n23    False\n24    False\n25    False\n26    False\n27    False\n28    False\n29    False\n30     True\n31     True\nName: Location, dtype: bool\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 데이터[데이터 컬럼 == 특정값]</span></span><br><span class=\"line\">lemonade[lemonade[<span class=\"string\">&#x27;Location&#x27;</span>] == <span class=\"string\">&#x27;Beach&#x27;</span>]   <span class=\"comment\"># lemonade[&#x27;Location&#x27;] == &#x27;Beach&#x27; 이 True인 값만 가져오는 식</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n  <div id=\"df-eb442b9f-c5c8-44b1-b3bd-9dd7b0012761\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date</th>\n      <th>Location</th>\n      <th>Lemon</th>\n      <th>Orange</th>\n      <th>Temperature</th>\n      <th>Leaflets</th>\n      <th>Price</th>\n      <th>Sold</th>\n      <th>Lemon Revenue</th>\n      <th>Orange Revenue</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>3</th>\n      <td>7/4/2016</td>\n      <td>Beach</td>\n      <td>134</td>\n      <td>99</td>\n      <td>76</td>\n      <td>98.0</td>\n      <td>0.25</td>\n      <td>233</td>\n      <td>33.50</td>\n      <td>24.75</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>7/5/2016</td>\n      <td>Beach</td>\n      <td>159</td>\n      <td>118</td>\n      <td>78</td>\n      <td>135.0</td>\n      <td>0.25</td>\n      <td>277</td>\n      <td>39.75</td>\n      <td>29.50</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>7/6/2016</td>\n      <td>Beach</td>\n      <td>103</td>\n      <td>69</td>\n      <td>82</td>\n      <td>90.0</td>\n      <td>0.25</td>\n      <td>172</td>\n      <td>25.75</td>\n      <td>17.25</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>7/6/2016</td>\n      <td>Beach</td>\n      <td>103</td>\n      <td>69</td>\n      <td>82</td>\n      <td>90.0</td>\n      <td>0.25</td>\n      <td>172</td>\n      <td>25.75</td>\n      <td>17.25</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>7/7/2016</td>\n      <td>Beach</td>\n      <td>143</td>\n      <td>101</td>\n      <td>81</td>\n      <td>135.0</td>\n      <td>0.25</td>\n      <td>244</td>\n      <td>35.75</td>\n      <td>25.25</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>NaN</td>\n      <td>Beach</td>\n      <td>123</td>\n      <td>86</td>\n      <td>82</td>\n      <td>113.0</td>\n      <td>0.25</td>\n      <td>209</td>\n      <td>30.75</td>\n      <td>21.50</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>7/9/2016</td>\n      <td>Beach</td>\n      <td>134</td>\n      <td>95</td>\n      <td>80</td>\n      <td>126.0</td>\n      <td>0.25</td>\n      <td>229</td>\n      <td>33.50</td>\n      <td>23.75</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>7/10/2016</td>\n      <td>Beach</td>\n      <td>140</td>\n      <td>98</td>\n      <td>82</td>\n      <td>131.0</td>\n      <td>0.25</td>\n      <td>238</td>\n      <td>35.00</td>\n      <td>24.50</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>7/11/2016</td>\n      <td>Beach</td>\n      <td>162</td>\n      <td>120</td>\n      <td>83</td>\n      <td>135.0</td>\n      <td>0.25</td>\n      <td>282</td>\n      <td>40.50</td>\n      <td>30.00</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>7/12/2016</td>\n      <td>Beach</td>\n      <td>130</td>\n      <td>95</td>\n      <td>84</td>\n      <td>99.0</td>\n      <td>0.25</td>\n      <td>225</td>\n      <td>32.50</td>\n      <td>23.75</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>7/13/2016</td>\n      <td>Beach</td>\n      <td>109</td>\n      <td>75</td>\n      <td>77</td>\n      <td>99.0</td>\n      <td>0.25</td>\n      <td>184</td>\n      <td>27.25</td>\n      <td>18.75</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>7/14/2016</td>\n      <td>Beach</td>\n      <td>122</td>\n      <td>85</td>\n      <td>78</td>\n      <td>113.0</td>\n      <td>0.25</td>\n      <td>207</td>\n      <td>30.50</td>\n      <td>21.25</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>7/15/2016</td>\n      <td>Beach</td>\n      <td>98</td>\n      <td>62</td>\n      <td>75</td>\n      <td>108.0</td>\n      <td>0.50</td>\n      <td>160</td>\n      <td>49.00</td>\n      <td>31.00</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>7/16/2016</td>\n      <td>Beach</td>\n      <td>81</td>\n      <td>50</td>\n      <td>74</td>\n      <td>90.0</td>\n      <td>0.50</td>\n      <td>131</td>\n      <td>40.50</td>\n      <td>25.00</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>7/17/2016</td>\n      <td>Beach</td>\n      <td>115</td>\n      <td>76</td>\n      <td>77</td>\n      <td>126.0</td>\n      <td>0.50</td>\n      <td>191</td>\n      <td>57.50</td>\n      <td>38.00</td>\n    </tr>\n    <tr>\n      <th>30</th>\n      <td>7/30/2016</td>\n      <td>Beach</td>\n      <td>88</td>\n      <td>57</td>\n      <td>82</td>\n      <td>81.0</td>\n      <td>0.35</td>\n      <td>145</td>\n      <td>30.80</td>\n      <td>19.95</td>\n    </tr>\n    <tr>\n      <th>31</th>\n      <td>7/31/2016</td>\n      <td>Beach</td>\n      <td>76</td>\n      <td>47</td>\n      <td>82</td>\n      <td>68.0</td>\n      <td>0.35</td>\n      <td>123</td>\n      <td>26.60</td>\n      <td>16.45</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eb442b9f-c5c8-44b1-b3bd-9dd7b0012761')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n<p>  &lt;svg xmlns&#x3D;”<a href=\"http://www.w3.org/2000/svg&quot;\">http://www.w3.org/2000/svg&quot;</a> height&#x3D;”24px”viewBox&#x3D;”0 0 24 24”<br>       width&#x3D;”24px”&gt;<br>    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><br>    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/><br>  </svg><br>      </button></p>\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n<pre><code>  &lt;script&gt;\n    const buttonEl =\n      document.querySelector(&#39;#df-eb442b9f-c5c8-44b1-b3bd-9dd7b0012761 button.colab-df-convert&#39;);\n    buttonEl.style.display =\n      google.colab.kernel.accessAllowed ? &#39;block&#39; : &#39;none&#39;;\n\n    async function convertToInteractive(key) &#123;\n      const element = document.querySelector(&#39;#df-eb442b9f-c5c8-44b1-b3bd-9dd7b0012761&#39;);\n      const dataTable =\n        await google.colab.kernel.invokeFunction(&#39;convertToInteractive&#39;,\n                                                 [key], &#123;&#125;);\n      if (!dataTable) return;\n\n      const docLinkHtml = &#39;Like what you see? Visit the &#39; +\n        &#39;&lt;a target=&quot;_blank&quot; href=https://colab.research.google.com/notebooks/data_table.ipynb&gt;data table notebook&lt;/a&gt;&#39;\n        + &#39; to learn more about interactive tables.&#39;;\n      element.innerHTML = &#39;&#39;;\n      dataTable[&#39;output_type&#39;] = &#39;display_data&#39;;\n      await google.colab.output.renderOutput(dataTable, element);\n      const docLink = document.createElement(&#39;div&#39;);\n      docLink.innerHTML = docLinkHtml;\n      element.appendChild(docLink);\n    &#125;\n  &lt;/script&gt;\n&lt;/div&gt;\n</code></pre>\n  </div>\n\n\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># lemonade[(조건식1) &amp;/| (조건식2) &amp;/| (조건식3) ....]   </span></span><br><span class=\"line\"><span class=\"comment\"># &amp;/| 에서 &quot;|&quot;은 \\표시 위에 있는키다</span></span><br><span class=\"line\">lemonade[(lemonade[<span class=\"string\">&#x27;Price&#x27;</span>] &gt;= <span class=\"number\">0.35</span>) &amp; (lemonade[<span class=\"string\">&#x27;Temperature&#x27;</span>] &gt;= <span class=\"number\">80</span>) &amp; (lemonade[<span class=\"string\">&#x27;Sold&#x27;</span>] &gt;= <span class=\"number\">220</span>)]</span><br><span class=\"line\"><span class=\"comment\"># Price &gt;= 0.35 이고 Temperature &gt;= 80 이고 Sold &gt;= 220 이 True &amp; True &amp; True 인 값을 도출하는 식</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n  <div id=\"df-19a1d4f9-6805-45a9-9054-6cb00682f880\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date</th>\n      <th>Location</th>\n      <th>Lemon</th>\n      <th>Orange</th>\n      <th>Temperature</th>\n      <th>Leaflets</th>\n      <th>Price</th>\n      <th>Sold</th>\n      <th>Lemon Revenue</th>\n      <th>Orange Revenue</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>18</th>\n      <td>7/18/2016</td>\n      <td>Park</td>\n      <td>131</td>\n      <td>92</td>\n      <td>81</td>\n      <td>122.0</td>\n      <td>0.50</td>\n      <td>223</td>\n      <td>65.5</td>\n      <td>46.00</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>7/25/2016</td>\n      <td>Park</td>\n      <td>156</td>\n      <td>113</td>\n      <td>84</td>\n      <td>135.0</td>\n      <td>0.50</td>\n      <td>269</td>\n      <td>78.0</td>\n      <td>56.50</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>7/26/2016</td>\n      <td>Park</td>\n      <td>176</td>\n      <td>129</td>\n      <td>83</td>\n      <td>158.0</td>\n      <td>0.35</td>\n      <td>305</td>\n      <td>61.6</td>\n      <td>45.15</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-19a1d4f9-6805-45a9-9054-6cb00682f880')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n<p>  &lt;svg xmlns&#x3D;”<a href=\"http://www.w3.org/2000/svg&quot;\">http://www.w3.org/2000/svg&quot;</a> height&#x3D;”24px”viewBox&#x3D;”0 0 24 24”<br>       width&#x3D;”24px”&gt;<br>    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><br>    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/><br>  </svg><br>      </button></p>\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n<pre><code>  &lt;script&gt;\n    const buttonEl =\n      document.querySelector(&#39;#df-19a1d4f9-6805-45a9-9054-6cb00682f880 button.colab-df-convert&#39;);\n    buttonEl.style.display =\n      google.colab.kernel.accessAllowed ? &#39;block&#39; : &#39;none&#39;;\n\n    async function convertToInteractive(key) &#123;\n      const element = document.querySelector(&#39;#df-19a1d4f9-6805-45a9-9054-6cb00682f880&#39;);\n      const dataTable =\n        await google.colab.kernel.invokeFunction(&#39;convertToInteractive&#39;,\n                                                 [key], &#123;&#125;);\n      if (!dataTable) return;\n\n      const docLinkHtml = &#39;Like what you see? Visit the &#39; +\n        &#39;&lt;a target=&quot;_blank&quot; href=https://colab.research.google.com/notebooks/data_table.ipynb&gt;data table notebook&lt;/a&gt;&#39;\n        + &#39; to learn more about interactive tables.&#39;;\n      element.innerHTML = &#39;&#39;;\n      dataTable[&#39;output_type&#39;] = &#39;display_data&#39;;\n      await google.colab.output.renderOutput(dataTable, element);\n      const docLink = document.createElement(&#39;div&#39;);\n      docLink.innerHTML = docLinkHtml;\n      element.appendChild(docLink);\n    &#125;\n  &lt;/script&gt;\n&lt;/div&gt;\n</code></pre>\n  </div>\n\n\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lemonade[lemonade[<span class=\"string\">&#x27;Temperature&#x27;</span>] &gt;= <span class=\"number\">80</span>]   <span class=\"comment\"># lemonade[&#x27;Temperature&#x27;] &gt;= 80 이 True인 값만 가져오는 식</span></span><br><span class=\"line\"><span class=\"comment\"># 즉, 조건 맞춰서 True, False 짜고 맘대로 가져올 수 있다.</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"iloc와-loc의-차이-데이터-추출하는-함수\"><a href=\"#iloc와-loc의-차이-데이터-추출하는-함수\" class=\"headerlink\" title=\"iloc와 loc의 차이(데이터 추출하는 함수)\"></a>iloc와 loc의 차이(데이터 추출하는 함수)</h2><ul>\n<li>iloc &#x3D; 컬럼명이 숫자일 때</li>\n<li>loc &#x3D; 컬럼명이 문자일 때</li>\n<li>대부분 loc를 쓰면 된다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 데이터.loc[데이터 컬럼 == 특정값]</span></span><br><span class=\"line\">lemonade.loc[lemonade[<span class=\"string\">&#x27;Temperature&#x27;</span>] &gt;= <span class=\"number\">80</span>, [<span class=\"string\">&#x27;Date&#x27;</span>, <span class=\"string\">&#x27;Sold&#x27;</span>]]</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n  <div id=\"df-2e605a53-7a9f-4358-b1fb-d00205464d2f\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date</th>\n      <th>Sold</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>5</th>\n      <td>7/6/2016</td>\n      <td>172</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>7/6/2016</td>\n      <td>172</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>7/7/2016</td>\n      <td>244</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>NaN</td>\n      <td>209</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>7/9/2016</td>\n      <td>229</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>7/10/2016</td>\n      <td>238</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>7/11/2016</td>\n      <td>282</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>7/12/2016</td>\n      <td>225</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>7/18/2016</td>\n      <td>223</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>7/22/2016</td>\n      <td>187</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>7/23/2016</td>\n      <td>202</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>7/24/2016</td>\n      <td>203</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>7/25/2016</td>\n      <td>269</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>7/26/2016</td>\n      <td>305</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>7/27/2016</td>\n      <td>172</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>7/28/2016</td>\n      <td>159</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>7/29/2016</td>\n      <td>166</td>\n    </tr>\n    <tr>\n      <th>30</th>\n      <td>7/30/2016</td>\n      <td>145</td>\n    </tr>\n    <tr>\n      <th>31</th>\n      <td>7/31/2016</td>\n      <td>123</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2e605a53-7a9f-4358-b1fb-d00205464d2f')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n<p>  &lt;svg xmlns&#x3D;”<a href=\"http://www.w3.org/2000/svg&quot;\">http://www.w3.org/2000/svg&quot;</a> height&#x3D;”24px”viewBox&#x3D;”0 0 24 24”<br>       width&#x3D;”24px”&gt;<br>    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><br>    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/><br>  </svg><br>      </button></p>\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n<pre><code>  &lt;script&gt;\n    const buttonEl =\n      document.querySelector(&#39;#df-2e605a53-7a9f-4358-b1fb-d00205464d2f button.colab-df-convert&#39;);\n    buttonEl.style.display =\n      google.colab.kernel.accessAllowed ? &#39;block&#39; : &#39;none&#39;;\n\n    async function convertToInteractive(key) &#123;\n      const element = document.querySelector(&#39;#df-2e605a53-7a9f-4358-b1fb-d00205464d2f&#39;);\n      const dataTable =\n        await google.colab.kernel.invokeFunction(&#39;convertToInteractive&#39;,\n                                                 [key], &#123;&#125;);\n      if (!dataTable) return;\n\n      const docLinkHtml = &#39;Like what you see? Visit the &#39; +\n        &#39;&lt;a target=&quot;_blank&quot; href=https://colab.research.google.com/notebooks/data_table.ipynb&gt;data table notebook&lt;/a&gt;&#39;\n        + &#39; to learn more about interactive tables.&#39;;\n      element.innerHTML = &#39;&#39;;\n      dataTable[&#39;output_type&#39;] = &#39;display_data&#39;;\n      await google.colab.output.renderOutput(dataTable, element);\n      const docLink = document.createElement(&#39;div&#39;);\n      docLink.innerHTML = docLinkHtml;\n      element.appendChild(docLink);\n    &#125;\n  &lt;/script&gt;\n&lt;/div&gt;\n</code></pre>\n  </div>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/06/29/day0629/python.png","excerpt":"<p>python 통계 각종 조건식</p>","more":"<p>python 통계 각종 조건식</p>\n<!-- excerpt -->\n\n\n<h1 id=\"pandas\"><a href=\"#pandas\" class=\"headerlink\" title=\"pandas\"></a>pandas</h1><ul>\n<li>pandas 에서 Index 값은 중복값을 허용하지 않는다.</li>\n</ul>\n<p><img src=\"/images/0629/Untitled.png\"></p>\n<ul>\n<li>DataFrame, Series는 같아 보이지만 다르다(DataFrame 에는 info 메소드가 있지만, Series에는 info 메소드가 없다).</li>\n<li>데이터프레임.groupby() —&gt; groupby 클래스</li>\n<li>A가 클래스 정의한 메소드<ul>\n<li>예) 데이터 프레임 info()</li>\n</ul>\n</li>\n<li>B의 클래스 정의한 메소드<ul>\n<li>예) info() 메소드 존재 하지 않음</li>\n</ul>\n</li>\n<li>클래스는 패키지의 하위호환 개념이다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_dict = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;col1&#x27;</span> : [<span class=\"number\">1</span>, <span class=\"number\">2</span>], </span><br><span class=\"line\">    <span class=\"string\">&#x27;col2&#x27;</span> : [<span class=\"number\">3</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">df = pd.DataFrame(temp_dict)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(df))</span><br></pre></td></tr></table></figure>\n\n<pre><code>   col1  col2\n0     1     3\n1     2     4\n&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd </span><br><span class=\"line\"><span class=\"built_in\">print</span>(pd.__version__)</span><br></pre></td></tr></table></figure>\n\n<pre><code>1.3.5\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> google.colab <span class=\"keyword\">import</span> drive </span><br><span class=\"line\">drive.mount(<span class=\"string\">&#x27;/content/drive&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(&quot;/content/drive&quot;, force_remount=True).\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DATA_PATH = <span class=\"string\">&#x27;/content/drive/MyDrive/Colab Notebooks/human_ai/Basic/Chapter 3. pandas/data/&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(DATA_PATH + <span class=\"string\">&#x27;Lemonade2016.csv&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">lemonade = pd.read_csv(DATA_PATH + <span class=\"string\">&#x27;Lemonade2016.csv&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># covid_df = pd.read_csv(DATA_PATH + &#x27;owid-covid-data.csv&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\">lemonade.info() <span class=\"comment\"># str()</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>/content/drive/MyDrive/Colab Notebooks/human_ai/Basic/Chapter 3. pandas/data/Lemonade2016.csv\n&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 32 entries, 0 to 31\nData columns (total 7 columns):\n #   Column       Non-Null Count  Dtype  \n---  ------       --------------  -----  \n 0   Date         31 non-null     object \n 1   Location     32 non-null     object \n 2   Lemon        32 non-null     int64  \n 3   Orange       32 non-null     int64  \n 4   Temperature  32 non-null     int64  \n 5   Leaflets     31 non-null     float64\n 6   Price        32 non-null     float64\ndtypes: float64(2), int64(3), object(2)\nmemory usage: 1.9+ KB\n</code></pre>\n<h2 id=\"라이브러리-불러오기\"><a href=\"#라이브러리-불러오기\" class=\"headerlink\" title=\"라이브러리 불러오기\"></a>라이브러리 불러오기</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;pandas version : &quot;</span>, pd.__version__)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;numpy version : &quot;</span>, np.__version__)</span><br></pre></td></tr></table></figure>\n\n<pre><code>pandas version :  1.3.5\nnumpy version :  1.21.6\n</code></pre>\n<h2 id=\"구글-드라이브-연결하기\"><a href=\"#구글-드라이브-연결하기\" class=\"headerlink\" title=\"구글 드라이브 연결하기\"></a>구글 드라이브 연결하기</h2><h4 id=\"Series-클래스인지-DataFrame-클래스인지-신경-쓰기\"><a href=\"#Series-클래스인지-DataFrame-클래스인지-신경-쓰기\" class=\"headerlink\" title=\"Series 클래스인지 DataFrame 클래스인지 신경 쓰기\"></a>Series 클래스인지 DataFrame 클래스인지 신경 쓰기</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> google.colab <span class=\"keyword\">import</span> drive</span><br><span class=\"line\">drive.mount(<span class=\"string\">&#x27;/content/drive&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(&quot;/content/drive&quot;, force_remount=True).\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DATA_PATH = <span class=\"string\">&#x27;/content/drive/MyDrive/Colab Notebooks/human_ai/Basic/Chapter 3. pandas/data/Lemonade2016.csv&#x27;</span></span><br><span class=\"line\">lomonade = pd.read_csv(DATA_PATH)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(lemonade))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(lemonade.info())</span><br><span class=\"line\"><span class=\"comment\"># Dtype 은 데이터 타입인데 &#x27;int64&#x27;에서 64는 64비트를 의미한다.</span></span><br><span class=\"line\"><span class=\"comment\"># 데이터가 너무 커지면 64비트를 8비트로 조절하든지 해서 데이터를 줄인다.</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\n&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 32 entries, 0 to 31\nData columns (total 7 columns):\n #   Column       Non-Null Count  Dtype  \n---  ------       --------------  -----  \n 0   Date         31 non-null     object \n 1   Location     32 non-null     object \n 2   Lemon        32 non-null     int64  \n 3   Orange       32 non-null     int64  \n 4   Temperature  32 non-null     int64  \n 5   Leaflets     31 non-null     float64\n 6   Price        32 non-null     float64\ndtypes: float64(2), int64(3), object(2)\nmemory usage: 1.9+ KB\n</code></pre>\n<ul>\n<li>데이터 맛보기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(lemonade.head())</span><br></pre></td></tr></table></figure>\n\n<pre><code>       Date Location  Lemon  Orange  Temperature  Leaflets  Price\n0  7/1/2016     Park     97      67           70      90.0   0.25\n1  7/2/2016     Park     98      67           72      90.0   0.25\n2  7/3/2016     Park    110      77           71     104.0   0.25\n3  7/4/2016    Beach    134      99           76      98.0   0.25\n4  7/5/2016    Beach    159     118           78     135.0   0.25\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(lemonade.tail())</span><br></pre></td></tr></table></figure>\n\n<pre><code>         Date Location  Lemon  Orange  Temperature  Leaflets  Price\n27  7/27/2016     Park    104      68           80      99.0   0.35\n28  7/28/2016     Park     96      63           82      90.0   0.35\n29  7/29/2016     Park    100      66           81      95.0   0.35\n30  7/30/2016    Beach     88      57           82      81.0   0.35\n31  7/31/2016    Beach     76      47           82      68.0   0.35\n</code></pre>\n<ul>\n<li>기술통계량 보는 함수</li>\n<li>describe()</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(lemonade.describe())</span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">std = 표준편차</span></span><br><span class=\"line\"><span class=\"string\">사분위값, 평균 등등 볼 수 있다.</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>            Lemon      Orange  Temperature    Leaflets      Price\ncount   32.000000   32.000000    32.000000   31.000000  32.000000\nmean   116.156250   80.000000    78.968750  108.548387   0.354688\nstd     25.823357   21.863211     4.067847   20.117718   0.113137\nmin     71.000000   42.000000    70.000000   68.000000   0.250000\n25%     98.000000   66.750000    77.000000   90.000000   0.250000\n50%    113.500000   76.500000    80.500000  108.000000   0.350000\n75%    131.750000   95.000000    82.000000  124.000000   0.500000\nmax    176.000000  129.000000    84.000000  158.000000   0.500000\n</code></pre>\n<ul>\n<li>범주형 데이터 빈도수 구하기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(lemonade[<span class=\"string\">&#x27;Location&#x27;</span>].value_counts())   <span class=\"comment\"># .value_counts() : &quot;lemonade[&#x27;Location&#x27;]&quot; 함수의 숫자를 세준다는 뜻</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>Beach    17\nPark     15\nName: Location, dtype: int64\n</code></pre>\n<h2 id=\"행과-열-다루기\"><a href=\"#행과-열-다루기\" class=\"headerlink\" title=\"행과 열 다루기\"></a>행과 열 다루기</h2><ul>\n<li>Sold(판매량) 컬럼<br>(&#x3D;피처&#x3D;feature)을 추가</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lemonade[<span class=\"string\">&#x27;Sold&#x27;</span>] = <span class=\"number\">0</span>     <span class=\"comment\"># Sold 라는 새로운 변수 추가</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(lemonade.head(<span class=\"number\">3</span>))  <span class=\"comment\"># 데이터 확인</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>       Date Location  Lemon  Orange  Temperature  Leaflets  Price  Sold\n0  7/1/2016     Park     97      67           70      90.0   0.25     0\n1  7/2/2016     Park     98      67           72      90.0   0.25     0\n2  7/3/2016     Park    110      77           71     104.0   0.25     0\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lemonade[<span class=\"string\">&#x27;Sold&#x27;</span>] = lemonade[<span class=\"string\">&#x27;Lemon&#x27;</span>] + lemonade[<span class=\"string\">&#x27;Orange&#x27;</span>]   <span class=\"comment\"># Sold 값 정의 (오렌지 + 레몬)</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(lemonade.head(<span class=\"number\">3</span>))</span><br></pre></td></tr></table></figure>\n\n<pre><code>       Date Location  Lemon  Orange  Temperature  Leaflets  Price  Sold\n0  7/1/2016     Park     97      67           70      90.0   0.25   164\n1  7/2/2016     Park     98      67           72      90.0   0.25   165\n2  7/3/2016     Park    110      77           71     104.0   0.25   187\n</code></pre>\n<ul>\n<li>Revenue(매출) &#x3D; 단가 x 판매량   변수 만들어보기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lemonade[<span class=\"string\">&#x27;Lemon Revenue&#x27;</span>] = lemonade[<span class=\"string\">&#x27;Price&#x27;</span>] * lemonade[<span class=\"string\">&#x27;Lemon&#x27;</span>]</span><br><span class=\"line\">lemonade[<span class=\"string\">&#x27;Orange Revenue&#x27;</span>] = lemonade[<span class=\"string\">&#x27;Price&#x27;</span>] * lemonade[<span class=\"string\">&#x27;Orange&#x27;</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(lemonade.head())</span><br><span class=\"line\"><span class=\"comment\"># print(lemonade[[&#x27;Lemon Revenue&#x27;, &#x27;Orange Revenue&#x27;, &#x27;Price&#x27;, &#x27;Sold&#x27;]])</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>       Date Location  Lemon  Orange  Temperature  Leaflets  Price  Sold  \\\n0  7/1/2016     Park     97      67           70      90.0   0.25   164   \n1  7/2/2016     Park     98      67           72      90.0   0.25   165   \n2  7/3/2016     Park    110      77           71     104.0   0.25   187   \n3  7/4/2016    Beach    134      99           76      98.0   0.25   233   \n4  7/5/2016    Beach    159     118           78     135.0   0.25   277   \n\n   Lemon Revenue  Orange Revenue  \n0          24.25           16.75  \n1          24.50           16.75  \n2          27.50           19.25  \n3          33.50           24.75  \n4          39.75           29.50  \n</code></pre>\n<ul>\n<li>drop() 함수 사용해서 열 제거(axis 값을 1로 둔다)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 컬럼 제거</span></span><br><span class=\"line\">col_drop = lemonade.drop(<span class=\"string\">&#x27;Sold&#x27;</span>, axis = <span class=\"number\">1</span>)   <span class=\"comment\"># Sold 열을 제거한다.</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(col_drop.head())</span><br></pre></td></tr></table></figure>\n\n<pre><code>       Date Location  Lemon  Orange  Temperature  Leaflets  Price  \\\n0  7/1/2016     Park     97      67           70      90.0   0.25   \n1  7/2/2016     Park     98      67           72      90.0   0.25   \n2  7/3/2016     Park    110      77           71     104.0   0.25   \n3  7/4/2016    Beach    134      99           76      98.0   0.25   \n4  7/5/2016    Beach    159     118           78     135.0   0.25   \n\n   Lemon Revenue  Orange Revenue  \n0          24.25           16.75  \n1          24.50           16.75  \n2          27.50           19.25  \n3          33.50           24.75  \n4          39.75           29.50  \n</code></pre>\n<ul>\n<li>drop() 함수 사용해서 행 제거(axis 값을 0으로 둔다)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 행 제거</span></span><br><span class=\"line\">row_drop = lomonade.drop([<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>], axis = <span class=\"number\">0</span>)   <span class=\"comment\"># 0, 1, 3의 행을 제거한다.</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(row_drop.head())</span><br></pre></td></tr></table></figure>\n\n<pre><code>       Date Location  Lemon  Orange  Temperature  Leaflets  Price\n2  7/3/2016     Park    110      77           71     104.0   0.25\n4  7/5/2016    Beach    159     118           78     135.0   0.25\n5  7/6/2016    Beach    103      69           82      90.0   0.25\n6  7/6/2016    Beach    103      69           82      90.0   0.25\n7  7/7/2016    Beach    143     101           81     135.0   0.25\n</code></pre>\n<h2 id=\"데이터-인덱싱\"><a href=\"#데이터-인덱싱\" class=\"headerlink\" title=\"데이터 인덱싱\"></a>데이터 인덱싱</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(lemonade[<span class=\"number\">4</span>:<span class=\"number\">7</span>])</span><br></pre></td></tr></table></figure>\n\n<pre><code>       Date Location  Lemon  Orange  Temperature  Leaflets  Price  Sold  \\\n4  7/5/2016    Beach    159     118           78     135.0   0.25   277   \n5  7/6/2016    Beach    103      69           82      90.0   0.25   172   \n6  7/6/2016    Beach    103      69           82      90.0   0.25   172   \n\n   Lemon Revenue  Orange Revenue  \n4          39.75           29.50  \n5          25.75           17.25  \n6          25.75           17.25  \n</code></pre>\n<ul>\n<li>특정 값만 추출 (필터링)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lemonade[<span class=\"string\">&#x27;Location&#x27;</span>] == <span class=\"string\">&#x27;Beach&#x27;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>0     False\n1     False\n2     False\n3      True\n4      True\n5      True\n6      True\n7      True\n8      True\n9      True\n10     True\n11     True\n12     True\n13     True\n14     True\n15     True\n16     True\n17     True\n18    False\n19    False\n20    False\n21    False\n22    False\n23    False\n24    False\n25    False\n26    False\n27    False\n28    False\n29    False\n30     True\n31     True\nName: Location, dtype: bool\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 데이터[데이터 컬럼 == 특정값]</span></span><br><span class=\"line\">lemonade[lemonade[<span class=\"string\">&#x27;Location&#x27;</span>] == <span class=\"string\">&#x27;Beach&#x27;</span>]   <span class=\"comment\"># lemonade[&#x27;Location&#x27;] == &#x27;Beach&#x27; 이 True인 값만 가져오는 식</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n  <div id=\"df-eb442b9f-c5c8-44b1-b3bd-9dd7b0012761\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date</th>\n      <th>Location</th>\n      <th>Lemon</th>\n      <th>Orange</th>\n      <th>Temperature</th>\n      <th>Leaflets</th>\n      <th>Price</th>\n      <th>Sold</th>\n      <th>Lemon Revenue</th>\n      <th>Orange Revenue</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>3</th>\n      <td>7/4/2016</td>\n      <td>Beach</td>\n      <td>134</td>\n      <td>99</td>\n      <td>76</td>\n      <td>98.0</td>\n      <td>0.25</td>\n      <td>233</td>\n      <td>33.50</td>\n      <td>24.75</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>7/5/2016</td>\n      <td>Beach</td>\n      <td>159</td>\n      <td>118</td>\n      <td>78</td>\n      <td>135.0</td>\n      <td>0.25</td>\n      <td>277</td>\n      <td>39.75</td>\n      <td>29.50</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>7/6/2016</td>\n      <td>Beach</td>\n      <td>103</td>\n      <td>69</td>\n      <td>82</td>\n      <td>90.0</td>\n      <td>0.25</td>\n      <td>172</td>\n      <td>25.75</td>\n      <td>17.25</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>7/6/2016</td>\n      <td>Beach</td>\n      <td>103</td>\n      <td>69</td>\n      <td>82</td>\n      <td>90.0</td>\n      <td>0.25</td>\n      <td>172</td>\n      <td>25.75</td>\n      <td>17.25</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>7/7/2016</td>\n      <td>Beach</td>\n      <td>143</td>\n      <td>101</td>\n      <td>81</td>\n      <td>135.0</td>\n      <td>0.25</td>\n      <td>244</td>\n      <td>35.75</td>\n      <td>25.25</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>NaN</td>\n      <td>Beach</td>\n      <td>123</td>\n      <td>86</td>\n      <td>82</td>\n      <td>113.0</td>\n      <td>0.25</td>\n      <td>209</td>\n      <td>30.75</td>\n      <td>21.50</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>7/9/2016</td>\n      <td>Beach</td>\n      <td>134</td>\n      <td>95</td>\n      <td>80</td>\n      <td>126.0</td>\n      <td>0.25</td>\n      <td>229</td>\n      <td>33.50</td>\n      <td>23.75</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>7/10/2016</td>\n      <td>Beach</td>\n      <td>140</td>\n      <td>98</td>\n      <td>82</td>\n      <td>131.0</td>\n      <td>0.25</td>\n      <td>238</td>\n      <td>35.00</td>\n      <td>24.50</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>7/11/2016</td>\n      <td>Beach</td>\n      <td>162</td>\n      <td>120</td>\n      <td>83</td>\n      <td>135.0</td>\n      <td>0.25</td>\n      <td>282</td>\n      <td>40.50</td>\n      <td>30.00</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>7/12/2016</td>\n      <td>Beach</td>\n      <td>130</td>\n      <td>95</td>\n      <td>84</td>\n      <td>99.0</td>\n      <td>0.25</td>\n      <td>225</td>\n      <td>32.50</td>\n      <td>23.75</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>7/13/2016</td>\n      <td>Beach</td>\n      <td>109</td>\n      <td>75</td>\n      <td>77</td>\n      <td>99.0</td>\n      <td>0.25</td>\n      <td>184</td>\n      <td>27.25</td>\n      <td>18.75</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>7/14/2016</td>\n      <td>Beach</td>\n      <td>122</td>\n      <td>85</td>\n      <td>78</td>\n      <td>113.0</td>\n      <td>0.25</td>\n      <td>207</td>\n      <td>30.50</td>\n      <td>21.25</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>7/15/2016</td>\n      <td>Beach</td>\n      <td>98</td>\n      <td>62</td>\n      <td>75</td>\n      <td>108.0</td>\n      <td>0.50</td>\n      <td>160</td>\n      <td>49.00</td>\n      <td>31.00</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>7/16/2016</td>\n      <td>Beach</td>\n      <td>81</td>\n      <td>50</td>\n      <td>74</td>\n      <td>90.0</td>\n      <td>0.50</td>\n      <td>131</td>\n      <td>40.50</td>\n      <td>25.00</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>7/17/2016</td>\n      <td>Beach</td>\n      <td>115</td>\n      <td>76</td>\n      <td>77</td>\n      <td>126.0</td>\n      <td>0.50</td>\n      <td>191</td>\n      <td>57.50</td>\n      <td>38.00</td>\n    </tr>\n    <tr>\n      <th>30</th>\n      <td>7/30/2016</td>\n      <td>Beach</td>\n      <td>88</td>\n      <td>57</td>\n      <td>82</td>\n      <td>81.0</td>\n      <td>0.35</td>\n      <td>145</td>\n      <td>30.80</td>\n      <td>19.95</td>\n    </tr>\n    <tr>\n      <th>31</th>\n      <td>7/31/2016</td>\n      <td>Beach</td>\n      <td>76</td>\n      <td>47</td>\n      <td>82</td>\n      <td>68.0</td>\n      <td>0.35</td>\n      <td>123</td>\n      <td>26.60</td>\n      <td>16.45</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eb442b9f-c5c8-44b1-b3bd-9dd7b0012761')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n<p>  &lt;svg xmlns&#x3D;”<a href=\"http://www.w3.org/2000/svg&quot;\">http://www.w3.org/2000/svg&quot;</a> height&#x3D;”24px”viewBox&#x3D;”0 0 24 24”<br>       width&#x3D;”24px”&gt;<br>    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><br>    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/><br>  </svg><br>      </button></p>\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n<pre><code>  &lt;script&gt;\n    const buttonEl =\n      document.querySelector(&#39;#df-eb442b9f-c5c8-44b1-b3bd-9dd7b0012761 button.colab-df-convert&#39;);\n    buttonEl.style.display =\n      google.colab.kernel.accessAllowed ? &#39;block&#39; : &#39;none&#39;;\n\n    async function convertToInteractive(key) &#123;\n      const element = document.querySelector(&#39;#df-eb442b9f-c5c8-44b1-b3bd-9dd7b0012761&#39;);\n      const dataTable =\n        await google.colab.kernel.invokeFunction(&#39;convertToInteractive&#39;,\n                                                 [key], &#123;&#125;);\n      if (!dataTable) return;\n\n      const docLinkHtml = &#39;Like what you see? Visit the &#39; +\n        &#39;&lt;a target=&quot;_blank&quot; href=https://colab.research.google.com/notebooks/data_table.ipynb&gt;data table notebook&lt;/a&gt;&#39;\n        + &#39; to learn more about interactive tables.&#39;;\n      element.innerHTML = &#39;&#39;;\n      dataTable[&#39;output_type&#39;] = &#39;display_data&#39;;\n      await google.colab.output.renderOutput(dataTable, element);\n      const docLink = document.createElement(&#39;div&#39;);\n      docLink.innerHTML = docLinkHtml;\n      element.appendChild(docLink);\n    &#125;\n  &lt;/script&gt;\n&lt;/div&gt;\n</code></pre>\n  </div>\n\n\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># lemonade[(조건식1) &amp;/| (조건식2) &amp;/| (조건식3) ....]   </span></span><br><span class=\"line\"><span class=\"comment\"># &amp;/| 에서 &quot;|&quot;은 \\표시 위에 있는키다</span></span><br><span class=\"line\">lemonade[(lemonade[<span class=\"string\">&#x27;Price&#x27;</span>] &gt;= <span class=\"number\">0.35</span>) &amp; (lemonade[<span class=\"string\">&#x27;Temperature&#x27;</span>] &gt;= <span class=\"number\">80</span>) &amp; (lemonade[<span class=\"string\">&#x27;Sold&#x27;</span>] &gt;= <span class=\"number\">220</span>)]</span><br><span class=\"line\"><span class=\"comment\"># Price &gt;= 0.35 이고 Temperature &gt;= 80 이고 Sold &gt;= 220 이 True &amp; True &amp; True 인 값을 도출하는 식</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n  <div id=\"df-19a1d4f9-6805-45a9-9054-6cb00682f880\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date</th>\n      <th>Location</th>\n      <th>Lemon</th>\n      <th>Orange</th>\n      <th>Temperature</th>\n      <th>Leaflets</th>\n      <th>Price</th>\n      <th>Sold</th>\n      <th>Lemon Revenue</th>\n      <th>Orange Revenue</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>18</th>\n      <td>7/18/2016</td>\n      <td>Park</td>\n      <td>131</td>\n      <td>92</td>\n      <td>81</td>\n      <td>122.0</td>\n      <td>0.50</td>\n      <td>223</td>\n      <td>65.5</td>\n      <td>46.00</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>7/25/2016</td>\n      <td>Park</td>\n      <td>156</td>\n      <td>113</td>\n      <td>84</td>\n      <td>135.0</td>\n      <td>0.50</td>\n      <td>269</td>\n      <td>78.0</td>\n      <td>56.50</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>7/26/2016</td>\n      <td>Park</td>\n      <td>176</td>\n      <td>129</td>\n      <td>83</td>\n      <td>158.0</td>\n      <td>0.35</td>\n      <td>305</td>\n      <td>61.6</td>\n      <td>45.15</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-19a1d4f9-6805-45a9-9054-6cb00682f880')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n<p>  &lt;svg xmlns&#x3D;”<a href=\"http://www.w3.org/2000/svg&quot;\">http://www.w3.org/2000/svg&quot;</a> height&#x3D;”24px”viewBox&#x3D;”0 0 24 24”<br>       width&#x3D;”24px”&gt;<br>    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><br>    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/><br>  </svg><br>      </button></p>\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n<pre><code>  &lt;script&gt;\n    const buttonEl =\n      document.querySelector(&#39;#df-19a1d4f9-6805-45a9-9054-6cb00682f880 button.colab-df-convert&#39;);\n    buttonEl.style.display =\n      google.colab.kernel.accessAllowed ? &#39;block&#39; : &#39;none&#39;;\n\n    async function convertToInteractive(key) &#123;\n      const element = document.querySelector(&#39;#df-19a1d4f9-6805-45a9-9054-6cb00682f880&#39;);\n      const dataTable =\n        await google.colab.kernel.invokeFunction(&#39;convertToInteractive&#39;,\n                                                 [key], &#123;&#125;);\n      if (!dataTable) return;\n\n      const docLinkHtml = &#39;Like what you see? Visit the &#39; +\n        &#39;&lt;a target=&quot;_blank&quot; href=https://colab.research.google.com/notebooks/data_table.ipynb&gt;data table notebook&lt;/a&gt;&#39;\n        + &#39; to learn more about interactive tables.&#39;;\n      element.innerHTML = &#39;&#39;;\n      dataTable[&#39;output_type&#39;] = &#39;display_data&#39;;\n      await google.colab.output.renderOutput(dataTable, element);\n      const docLink = document.createElement(&#39;div&#39;);\n      docLink.innerHTML = docLinkHtml;\n      element.appendChild(docLink);\n    &#125;\n  &lt;/script&gt;\n&lt;/div&gt;\n</code></pre>\n  </div>\n\n\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lemonade[lemonade[<span class=\"string\">&#x27;Temperature&#x27;</span>] &gt;= <span class=\"number\">80</span>]   <span class=\"comment\"># lemonade[&#x27;Temperature&#x27;] &gt;= 80 이 True인 값만 가져오는 식</span></span><br><span class=\"line\"><span class=\"comment\"># 즉, 조건 맞춰서 True, False 짜고 맘대로 가져올 수 있다.</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"iloc와-loc의-차이-데이터-추출하는-함수\"><a href=\"#iloc와-loc의-차이-데이터-추출하는-함수\" class=\"headerlink\" title=\"iloc와 loc의 차이(데이터 추출하는 함수)\"></a>iloc와 loc의 차이(데이터 추출하는 함수)</h2><ul>\n<li>iloc &#x3D; 컬럼명이 숫자일 때</li>\n<li>loc &#x3D; 컬럼명이 문자일 때</li>\n<li>대부분 loc를 쓰면 된다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 데이터.loc[데이터 컬럼 == 특정값]</span></span><br><span class=\"line\">lemonade.loc[lemonade[<span class=\"string\">&#x27;Temperature&#x27;</span>] &gt;= <span class=\"number\">80</span>, [<span class=\"string\">&#x27;Date&#x27;</span>, <span class=\"string\">&#x27;Sold&#x27;</span>]]</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n  <div id=\"df-2e605a53-7a9f-4358-b1fb-d00205464d2f\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date</th>\n      <th>Sold</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>5</th>\n      <td>7/6/2016</td>\n      <td>172</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>7/6/2016</td>\n      <td>172</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>7/7/2016</td>\n      <td>244</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>NaN</td>\n      <td>209</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>7/9/2016</td>\n      <td>229</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>7/10/2016</td>\n      <td>238</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>7/11/2016</td>\n      <td>282</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>7/12/2016</td>\n      <td>225</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>7/18/2016</td>\n      <td>223</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>7/22/2016</td>\n      <td>187</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>7/23/2016</td>\n      <td>202</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>7/24/2016</td>\n      <td>203</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>7/25/2016</td>\n      <td>269</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>7/26/2016</td>\n      <td>305</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>7/27/2016</td>\n      <td>172</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>7/28/2016</td>\n      <td>159</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>7/29/2016</td>\n      <td>166</td>\n    </tr>\n    <tr>\n      <th>30</th>\n      <td>7/30/2016</td>\n      <td>145</td>\n    </tr>\n    <tr>\n      <th>31</th>\n      <td>7/31/2016</td>\n      <td>123</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2e605a53-7a9f-4358-b1fb-d00205464d2f')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n<p>  &lt;svg xmlns&#x3D;”<a href=\"http://www.w3.org/2000/svg&quot;\">http://www.w3.org/2000/svg&quot;</a> height&#x3D;”24px”viewBox&#x3D;”0 0 24 24”<br>       width&#x3D;”24px”&gt;<br>    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><br>    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/><br>  </svg><br>      </button></p>\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n<pre><code>  &lt;script&gt;\n    const buttonEl =\n      document.querySelector(&#39;#df-2e605a53-7a9f-4358-b1fb-d00205464d2f button.colab-df-convert&#39;);\n    buttonEl.style.display =\n      google.colab.kernel.accessAllowed ? &#39;block&#39; : &#39;none&#39;;\n\n    async function convertToInteractive(key) &#123;\n      const element = document.querySelector(&#39;#df-2e605a53-7a9f-4358-b1fb-d00205464d2f&#39;);\n      const dataTable =\n        await google.colab.kernel.invokeFunction(&#39;convertToInteractive&#39;,\n                                                 [key], &#123;&#125;);\n      if (!dataTable) return;\n\n      const docLinkHtml = &#39;Like what you see? Visit the &#39; +\n        &#39;&lt;a target=&quot;_blank&quot; href=https://colab.research.google.com/notebooks/data_table.ipynb&gt;data table notebook&lt;/a&gt;&#39;\n        + &#39; to learn more about interactive tables.&#39;;\n      element.innerHTML = &#39;&#39;;\n      dataTable[&#39;output_type&#39;] = &#39;display_data&#39;;\n      await google.colab.output.renderOutput(dataTable, element);\n      const docLink = document.createElement(&#39;div&#39;);\n      docLink.innerHTML = docLinkHtml;\n      element.appendChild(docLink);\n    &#125;\n  &lt;/script&gt;\n&lt;/div&gt;\n</code></pre>\n  </div>\n\n\n\n"},{"title":"day 0630","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","thumbnailImage":"python.png","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-06-30T08:45:30.000Z","_content":"\n## 머신러닝 진행시 습관적으로 사용할 순서\n  + 전체데이터 전처리(결측치 처리, 이상치 처리)\n  + 데이터 분리 (임의 샘플링 < 층화 샘플링)\n  + Feature Engineering\n<!-- excerpt -->\n## 새로운 모델 제안\n- Default : 정확도 100%\n- 새롭게 제안 : 정확도 71%\n\n--> 실험단계 --> 이것저것 다 해보고 정확도가 가장 높은 모델 채택\n\n- 하이퍼 파라미터 세팅\n  + n_neighbors = 49\n\n- default : 100%\n- default 값은 KNeighborsClassifier default 이런식으로 구글링 하면 나옴\n\n## 머신러닝 알고리즘 두개의 흐름\n- 인공지능 → 머신러닝 → 딥러닝\n- 머신러닝 알고리즘\n    - 선형회귀, 결정트리\n    - 결과에 대한 해석 요구\n    - 통계분석 같이 해야함\n    - 정형데이터(=엑셀 데이터, 테이블)\n- 딥러닝 알고리즘(p.340~)\n    - 인공신경망\n    - 이미지(=영상인식), 자연어(=음성인식)\n    - 성능이 좋은지?\n    \n- 분석의 흐름\n1. 데이터 수집\n2. 데이터 가공\n3. 데이터 시각화\n4. 데이터 (예측)모델링 \n    \n    ⇒ 예측 평가지표가 중요함\n    \n    ⇒ 알고리즘 공부\n    \n    ⇒ 알고리즘 종류 수백가지\n    \n    R : 데이터 (통계)모델링 \n    \n    ⇒ 해석에 포커싱 \n    \n    ⇒ 변수(=컬럼=피처)간의 관계\n    \n    ⇒ 가설 검정이 중요\n    \n5. 보고서를 작성(상사, 갑, 의사결정자)\n    - 면접자료 : 소스코드 & PPT\n\n\n- 선형모델 : 선형회귀, 로지스틱 회귀, 서포트 벡터 머신\n- 의사결정트리 모델 : 1975년 의사결정트리 모델, KNN\n  + Kaggle에서 자주쓰는 모델 \n  + 랜덤포레스트\n  + 부스팅계열 : LightGBM(2017), XGBoost(2016)\n\n- 알고리즘 공부를 꼭 해야겠다 => 선형회귀, 로지스틱회귀, 랜덤포레스트, ***LightGBM(=XGBoost)***\n\n\n```python\nkn49 = KNeighborsClassifier(n_neighbors=49)   # default 값을 49로 한 kn49모델\nkn49.fit(fish_data, fish_target)\nkn49.score(fish_data, fish_target)\n```\n\n\n\n\n    0.7142857142857143\n\n\n\n## 훈련 세트와 테스트 세트\n- 이미 도미 / 빙어 박스가 분류가 되어 있음\n- 두 박스를 섞었을 때도 분류가 되는지 확인\n- 처음에 바로 하기는 힘드니 샘플링을 통해 학습\n\n\n```python\nfish_length = [25.4, 26.3, 26.5, 29.0, 29.0, 29.7, 29.7, 30.0, 30.0, 30.7, 31.0, 31.0, \n                31.5, 32.0, 32.0, 32.0, 33.0, 33.0, 33.5, 33.5, 34.0, 34.0, 34.5, 35.0, \n                35.0, 35.0, 35.0, 36.0, 36.0, 37.0, 38.5, 38.5, 39.5, 41.0, 41.0, 9.8, \n                10.5, 10.6, 11.0, 11.2, 11.3, 11.8, 11.8, 12.0, 12.2, 12.4, 13.0, 14.3, 15.0]\nfish_weight = [242.0, 290.0, 340.0, 363.0, 430.0, 450.0, 500.0, 390.0, 450.0, 500.0, 475.0, 500.0, \n                500.0, 340.0, 600.0, 600.0, 700.0, 700.0, 610.0, 650.0, 575.0, 685.0, 620.0, 680.0, \n                700.0, 725.0, 720.0, 714.0, 850.0, 1000.0, 920.0, 955.0, 925.0, 975.0, 950.0, 6.7, \n                7.5, 7.0, 9.7, 9.8, 8.7, 10.0, 9.9, 9.8, 12.2, 13.4, 12.2, 19.7, 19.9]\n```\n\n- 2차원 파이썬 리스트\n- 라벨링\n\n\n```python\nfish_data = [[l, w] for l, w in zip(fish_length, fish_weight)]\nfish_target = [1] * 35 + [0] * 14\nprint(fish_target[0:40:5])\nprint(fish_data[0:40:5])\n```\n\n    [1, 1, 1, 1, 1, 1, 1, 0]\n    [[25.4, 242.0], [29.7, 450.0], [31.0, 475.0], [32.0, 600.0], [34.0, 575.0], [35.0, 725.0], [38.5, 920.0], [9.8, 6.7]]\n    \n\n- Sample (모든 도미, 빙어가 아니라 일부만 추출한 것)\n- 도미 35마리, 빙어 14마리\n- 49개의 샘플 존재\n- 처음 35개를 훈련 / 나머지 14개를 테스트\n\n\n```python\nfrom sklearn.neighbors import KNeighborsClassifier\n\n# 클래스 인스턴스화 (kn 으로 안 써도 됨)\nkn = KNeighborsClassifier()\n\n# 훈련 세트로 0:34 인덱스 활용\ntrain_input = fish_data[:35]\ntrain_target = fish_target[:35]\n\n# 테스트 세트로 35:마지막 인덱스 활용\ntest_input = fish_data[35:]\ntest_target = fish_target[35:]\n\n# 모형 학습\nkn = kn.fit(train_input, train_target)\nprint(kn.score(test_input, test_target))\n```\n\n    0.0\n    \n\n- 도미만 35개 보여주고 빙어 14개를 테스트 해버림..\n- 샘플링 편향\n=> 훈련세트와 테스트 세트가 골고루 섞이지 않음\n\n## 샘플링 작업\n\n\n```python\nimport numpy as np\n\ninput_arr = np.array(fish_data)\ntarget_arr = np.array(fish_target)\nprint(input_arr[0:49:7])\nprint(input_arr.shape, target_arr.shape)\n```\n\n    [[ 25.4 242. ]\n     [ 30.  390. ]\n     [ 32.  600. ]\n     [ 34.  685. ]\n     [ 36.  850. ]\n     [  9.8   6.7]\n     [ 11.8   9.9]]\n    (49, 2) (49,)\n    \n\n\n```python\nnp.random.seed(42)    # 42seed로 무작위로 계속 섞는 함수(seed 번호가 달라지면 index 순서도 바뀜)\nindex = np.arange(49)\nnp.random.shuffle(index)\nprint(index)\n```\n\n    [13 45 47 44 17 27 26 25 31 19 12  4 34  8  3  6 40 41 46 15  9 16 24 33\n     30  0 43 32  5 29 11 36  1 21  2 37 35 23 39 10 22 18 48 20  7 42 14 28\n     38]\n    \n\n\n```python\ntrain_input = input_arr[index[:35]]\ntrain_target = target_arr[index[:35]]\n\ntest_input = input_arr[index[35:]]\ntest_target = target_arr[index[35:]]\n```\n\n## 시각화\n\n\n```python\nprint(train_input[:,0], train_input[:,1])\n```\n\n    [32.  12.4 14.3 12.2 33.  36.  35.  35.  38.5 33.5 31.5 29.  41.  30.\n     29.  29.7 11.3 11.8 13.  32.  30.7 33.  35.  41.  38.5 25.4 12.  39.5\n     29.7 37.  31.  10.5 26.3 34.  26.5] [ 340.    13.4   19.7   12.2  700.   714.   720.   725.   955.   650.\n      500.   430.   950.   450.   363.   500.     8.7   10.    12.2  600.\n      500.   700.   700.   975.   920.   242.     9.8  925.   450.  1000.\n      500.     7.5  290.   685.   340. ]\n    \n\n\n```python\nimport matplotlib.pyplot as plt\nfig, ax = plt.subplots()\nax.scatter(train_input[:,0], train_input[:,1])\nax.scatter(test_input[:,0], test_input[:,1])\nax.set_xlabel(\"length\")\nax.set_ylabel(\"weight\")\nplt.show()\n```\n\n\n    \n![png](/images/0630/output_45_0.png)\n    \n\n\n## 두번째 머신러닝 프로그램\n\n\n```python\nkn.fit(train_input, train_target)\nkn.score(test_input, test_target)\n```\n\n\n\n\n    1.0\n\n\n\n\n```python\nkn.predict(test_input)  # 예측 데이터\n```\n\n\n\n\n    array([0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0])\n\n\n\n\n```python\ntest_target  # 실제 데이터\n```\n\n\n\n\n    array([0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0])\n\n\n\n## 데이터 전처리\n- 머신러닝 시, 데이터 전처리\n- 결측치 처리, 이상치 처리\n\n## 데이터 불러오기\n\n\n```python\nfish_length = [25.4, 26.3, 26.5, 29.0, 29.0, 29.7, 29.7, 30.0, 30.0, 30.7, 31.0, 31.0, \n                31.5, 32.0, 32.0, 32.0, 33.0, 33.0, 33.5, 33.5, 34.0, 34.0, 34.5, 35.0, \n                35.0, 35.0, 35.0, 36.0, 36.0, 37.0, 38.5, 38.5, 39.5, 41.0, 41.0, 9.8, \n                10.5, 10.6, 11.0, 11.2, 11.3, 11.8, 11.8, 12.0, 12.2, 12.4, 13.0, 14.3, 15.0]\nfish_weight = [242.0, 290.0, 340.0, 363.0, 430.0, 450.0, 500.0, 390.0, 450.0, 500.0, 475.0, 500.0, \n                500.0, 340.0, 600.0, 600.0, 700.0, 700.0, 610.0, 650.0, 575.0, 685.0, 620.0, 680.0, \n                700.0, 725.0, 720.0, 714.0, 850.0, 1000.0, 920.0, 955.0, 925.0, 975.0, 950.0, 6.7, \n                7.5, 7.0, 9.7, 9.8, 8.7, 10.0, 9.9, 9.8, 12.2, 13.4, 12.2, 19.7, 19.9]\n```\n\n\n```python\n# column_stack() 활용\n# 리스트 만들고 2차원 변형하고 배열하는 그 과정들을 생략\nnp.column_stack(([1, 2, 3], [4 ,5 ,6]))\n```\n\n\n\n\n    array([[1, 4],\n           [2, 5],\n           [3, 6]])\n\n\n\n\n```python\nfish_data = np.column_stack((fish_length, fish_weight))\nprint(fish_data[:5])\n```\n\n    [[ 25.4 242. ]\n     [ 26.3 290. ]\n     [ 26.5 340. ]\n     [ 29.  363. ]\n     [ 29.  430. ]]\n    \n\n- 종속변수 = Y = 타겟 데이터 = Target\n\n\n```python\nfish_target = np.concatenate((np.ones(35),np.zeros(14)))\nprint(fish_target)\n```\n\n    [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n     1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n     0.]\n    \n\n### scikit-learn 훈련세트와 테스트 세트 나누기\n\n\n```python\n# 위에 두줄은 암기!!\nfrom sklearn.model_selection import train_test_split\ntrain_input, test_input, train_target, test_target = train_test_split(\n    # 독립변수, 종속변수, 난수 고정\n    fish_data, fish_target, random_state = 42\n)\n\ntrain_input.shape, test_input.shape, train_target.shape, test_target.shape\n# 항상 변수가 같은지 체크(2, 2, 0, 0 등)\n```\n\n\n\n\n    ((36, 2), (13, 2), (36,), (13,))\n\n\n\n- 도미와 빙어가 잘 섞여 있는지 확인하기\n\n\n```python\nprint(test_target)\n```\n\n    [1. 0. 0. 0. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n    \n\n- 35(도미) : 14(빙어)\n  + 2.5 : 1 비율\n- 테스트 셋\n  + 3.3 : 1 비율\n- 비율이 맞지 않으면 최종적인 머신러닝 결괏값이 왜곡될 수 있다.\n\n## 층화 샘플링\n- 기초 통계, 설문조사\n- 비율\n- 여론조사\n  + 남성 속옷 판매회사에서는 속옷을 구매하는 비율(남자 9, 여자1)\n  + 그런데 신제품 출시시 (남자 5, 여자 5) 비율의 설문이면 결과가 왜곡될 수 있다.\n- stratify = y, 옵션 함수 사용\n\n\n```python\ntrain_input, test_input, train_target, test_target = train_test_split(\n    # 독립변수, 종속변수, 난수 고정\n    fish_data, fish_target, stratify = fish_target, random_state = 42\n)\n\ntrain_input.shape, test_input.shape, train_target.shape, test_target.shape\n# 항상 변수가 같은지 체크(2, 2, 0, 0 등)\n```\n\n\n```python\nprint(test_target)\n```\n\n    [1. 0. 0. 0. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n    \n\n- 테스트 세트의 비율이 2.25:1\n\n\n## 수상한 도미 한 마리\n\n\n```python\nfrom sklearn.neighbors import KNeighborsClassifier\nkn = KNeighborsClassifier()\nkn.fit(train_input, train_target)\nkn.score(test_input, test_target)\n```\n\n\n\n\n    1.0\n\n\n\n\n```python\nprint(kn.predict([[25,150]]))\n```\n\n    [0.]\n    \n\n\n```python\nimport matplotlib.pyplot as plt\nfig, ax = plt.subplots()\nax.scatter(train_input[:,0], train_input[:,1])\nax.scatter(25, 150, marker='^')     # marker = '^' 매개변수 모양을 지정하는 것(주황색 삼각형)\nax.set_xlabel(\"length\")\nax.set_ylabel(\"weight\")\nplt.show()\n```\n\n\n    \n![png](/images/0630/output_69_0.png)\n    \n\n\n- 왜 도미 쪽 데이터가 더 가까운데 빙어로 인식했을까?\n- 알고리즘 문제\n\n\n```python\ndistances, indexes = kn.kneighbors([[25,150,]])\nimport matplotlib.pyplot as plt\nfig, ax = plt.subplots()\nax.scatter(train_input[:,0], train_input[:,1])\nax.scatter(25, 150, marker='^')     # marker = '^' 매개변수 모양을 지정하는 것(주황색 삼각형)\nax.scatter(train_input[indexes,0], train_input[indexes,1], marker='D')  # 이웃 샘플 5개를 다이아몬드로 표시\nax.set_xlabel(\"length\")\nax.set_ylabel(\"weight\")\nplt.show()\n```\n\n\n    \n![png](/images/0630/output_71_0.png)\n    \n\n\n- 두 특성(길이와 무게)의 값이 놓인 범위가 매우다름\n- 알고리즘은 두 특성(길이, 무게)을 같다고 판단함\n- 두 특성의 스케일이 같도록 통계 처리가 필요\n  + Feature Engineering\n## 머신러닝 진행시 습관적으로 사용할 순서\n  + 전체데이터 전처리(결측치 처리, 이상치 처리)\n  + 데이터 분리 (임의 샘플링 < 층화 샘플링)\n  + Feature Engineering\n\n### 표준점수\n- z 점수\n- (산술식 찾아 채워보기)\n\n\n```python\nmean = np.mean(train_input, axis = 0)\nstd = np.std(train_input, axis = 0)\n\nprint(mean, std)\n```\n\n    [ 26.175      418.08888889] [ 10.21073441 321.67847023]\n    \n\n- 표준 점수 구하기\n\n\n```python\n# 브로드캐스팅 서로 다른 배열을 계산할 때\nprint(train_input.shape, mean.shape, std.shape)\ntrain_scaled = (train_input - mean) / std     # train_scaled 로 데이터 전처리 진행\n```\n\n    (36, 2) (2,) (2,)\n    \n\n\n```python\nnew = ([25, 150] - mean) / std\nplt.scatter(train_scaled[:,0], train_scaled[:,1])\nplt.scatter(new[0], new[1], marker='^')     # marker = '^' 매개변수 모양을 지정하는 것(주황색 삼각형)\nplt.xlabel(\"length\")\nplt.ylabel(\"weight\")\nplt.show()\n```\n\n\n    \n![png](/images/0630/output_77_0.png)\n    \n\n\n- 통계처리 전 : KNN --> 예측이 틀렸음\n- 통계처리 후 : KNN --> 예측이 정확하게 맞음\n-- 통계처리 --> Feature Engineering\n\n- 모형학습\n\n\n```python\nkn.fit(train_scaled, train_target)\n```\n\n\n\n\n    KNeighborsClassifier()\n\n\n\n\n```python\ntest_scaled = (test_input -mean) / std\nkn.score(test_scaled, test_target)\n```\n\n\n\n\n    1.0\n\n\n\n- 예측 해보기\n\n\n```python\nprint(kn.predict([new]))\ndistances, indexes = kn.kneighbors([new])\nplt.scatter(train_scaled[:,0], train_scaled[:,1])\nplt.scatter(new[0], new[1], marker='^')\nplt.scatter(train_scaled[indexes,0], train_scaled[indexes,1], marker='D')\nplt.xlabel('length')\nplt.ylabel('weight')\nplt.show()\n```\n\n    [1.]\n    \n\n\n    \n![png](/images/0630/output_83_1.png)\n    \n\n","source":"_posts/day0630_ml.md","raw":"---\ntitle: \"day 0630\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: Python\nthumbnailImage: python.png\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-06-30 17:45:30'\n---\n\n## 머신러닝 진행시 습관적으로 사용할 순서\n  + 전체데이터 전처리(결측치 처리, 이상치 처리)\n  + 데이터 분리 (임의 샘플링 < 층화 샘플링)\n  + Feature Engineering\n<!-- excerpt -->\n## 새로운 모델 제안\n- Default : 정확도 100%\n- 새롭게 제안 : 정확도 71%\n\n--> 실험단계 --> 이것저것 다 해보고 정확도가 가장 높은 모델 채택\n\n- 하이퍼 파라미터 세팅\n  + n_neighbors = 49\n\n- default : 100%\n- default 값은 KNeighborsClassifier default 이런식으로 구글링 하면 나옴\n\n## 머신러닝 알고리즘 두개의 흐름\n- 인공지능 → 머신러닝 → 딥러닝\n- 머신러닝 알고리즘\n    - 선형회귀, 결정트리\n    - 결과에 대한 해석 요구\n    - 통계분석 같이 해야함\n    - 정형데이터(=엑셀 데이터, 테이블)\n- 딥러닝 알고리즘(p.340~)\n    - 인공신경망\n    - 이미지(=영상인식), 자연어(=음성인식)\n    - 성능이 좋은지?\n    \n- 분석의 흐름\n1. 데이터 수집\n2. 데이터 가공\n3. 데이터 시각화\n4. 데이터 (예측)모델링 \n    \n    ⇒ 예측 평가지표가 중요함\n    \n    ⇒ 알고리즘 공부\n    \n    ⇒ 알고리즘 종류 수백가지\n    \n    R : 데이터 (통계)모델링 \n    \n    ⇒ 해석에 포커싱 \n    \n    ⇒ 변수(=컬럼=피처)간의 관계\n    \n    ⇒ 가설 검정이 중요\n    \n5. 보고서를 작성(상사, 갑, 의사결정자)\n    - 면접자료 : 소스코드 & PPT\n\n\n- 선형모델 : 선형회귀, 로지스틱 회귀, 서포트 벡터 머신\n- 의사결정트리 모델 : 1975년 의사결정트리 모델, KNN\n  + Kaggle에서 자주쓰는 모델 \n  + 랜덤포레스트\n  + 부스팅계열 : LightGBM(2017), XGBoost(2016)\n\n- 알고리즘 공부를 꼭 해야겠다 => 선형회귀, 로지스틱회귀, 랜덤포레스트, ***LightGBM(=XGBoost)***\n\n\n```python\nkn49 = KNeighborsClassifier(n_neighbors=49)   # default 값을 49로 한 kn49모델\nkn49.fit(fish_data, fish_target)\nkn49.score(fish_data, fish_target)\n```\n\n\n\n\n    0.7142857142857143\n\n\n\n## 훈련 세트와 테스트 세트\n- 이미 도미 / 빙어 박스가 분류가 되어 있음\n- 두 박스를 섞었을 때도 분류가 되는지 확인\n- 처음에 바로 하기는 힘드니 샘플링을 통해 학습\n\n\n```python\nfish_length = [25.4, 26.3, 26.5, 29.0, 29.0, 29.7, 29.7, 30.0, 30.0, 30.7, 31.0, 31.0, \n                31.5, 32.0, 32.0, 32.0, 33.0, 33.0, 33.5, 33.5, 34.0, 34.0, 34.5, 35.0, \n                35.0, 35.0, 35.0, 36.0, 36.0, 37.0, 38.5, 38.5, 39.5, 41.0, 41.0, 9.8, \n                10.5, 10.6, 11.0, 11.2, 11.3, 11.8, 11.8, 12.0, 12.2, 12.4, 13.0, 14.3, 15.0]\nfish_weight = [242.0, 290.0, 340.0, 363.0, 430.0, 450.0, 500.0, 390.0, 450.0, 500.0, 475.0, 500.0, \n                500.0, 340.0, 600.0, 600.0, 700.0, 700.0, 610.0, 650.0, 575.0, 685.0, 620.0, 680.0, \n                700.0, 725.0, 720.0, 714.0, 850.0, 1000.0, 920.0, 955.0, 925.0, 975.0, 950.0, 6.7, \n                7.5, 7.0, 9.7, 9.8, 8.7, 10.0, 9.9, 9.8, 12.2, 13.4, 12.2, 19.7, 19.9]\n```\n\n- 2차원 파이썬 리스트\n- 라벨링\n\n\n```python\nfish_data = [[l, w] for l, w in zip(fish_length, fish_weight)]\nfish_target = [1] * 35 + [0] * 14\nprint(fish_target[0:40:5])\nprint(fish_data[0:40:5])\n```\n\n    [1, 1, 1, 1, 1, 1, 1, 0]\n    [[25.4, 242.0], [29.7, 450.0], [31.0, 475.0], [32.0, 600.0], [34.0, 575.0], [35.0, 725.0], [38.5, 920.0], [9.8, 6.7]]\n    \n\n- Sample (모든 도미, 빙어가 아니라 일부만 추출한 것)\n- 도미 35마리, 빙어 14마리\n- 49개의 샘플 존재\n- 처음 35개를 훈련 / 나머지 14개를 테스트\n\n\n```python\nfrom sklearn.neighbors import KNeighborsClassifier\n\n# 클래스 인스턴스화 (kn 으로 안 써도 됨)\nkn = KNeighborsClassifier()\n\n# 훈련 세트로 0:34 인덱스 활용\ntrain_input = fish_data[:35]\ntrain_target = fish_target[:35]\n\n# 테스트 세트로 35:마지막 인덱스 활용\ntest_input = fish_data[35:]\ntest_target = fish_target[35:]\n\n# 모형 학습\nkn = kn.fit(train_input, train_target)\nprint(kn.score(test_input, test_target))\n```\n\n    0.0\n    \n\n- 도미만 35개 보여주고 빙어 14개를 테스트 해버림..\n- 샘플링 편향\n=> 훈련세트와 테스트 세트가 골고루 섞이지 않음\n\n## 샘플링 작업\n\n\n```python\nimport numpy as np\n\ninput_arr = np.array(fish_data)\ntarget_arr = np.array(fish_target)\nprint(input_arr[0:49:7])\nprint(input_arr.shape, target_arr.shape)\n```\n\n    [[ 25.4 242. ]\n     [ 30.  390. ]\n     [ 32.  600. ]\n     [ 34.  685. ]\n     [ 36.  850. ]\n     [  9.8   6.7]\n     [ 11.8   9.9]]\n    (49, 2) (49,)\n    \n\n\n```python\nnp.random.seed(42)    # 42seed로 무작위로 계속 섞는 함수(seed 번호가 달라지면 index 순서도 바뀜)\nindex = np.arange(49)\nnp.random.shuffle(index)\nprint(index)\n```\n\n    [13 45 47 44 17 27 26 25 31 19 12  4 34  8  3  6 40 41 46 15  9 16 24 33\n     30  0 43 32  5 29 11 36  1 21  2 37 35 23 39 10 22 18 48 20  7 42 14 28\n     38]\n    \n\n\n```python\ntrain_input = input_arr[index[:35]]\ntrain_target = target_arr[index[:35]]\n\ntest_input = input_arr[index[35:]]\ntest_target = target_arr[index[35:]]\n```\n\n## 시각화\n\n\n```python\nprint(train_input[:,0], train_input[:,1])\n```\n\n    [32.  12.4 14.3 12.2 33.  36.  35.  35.  38.5 33.5 31.5 29.  41.  30.\n     29.  29.7 11.3 11.8 13.  32.  30.7 33.  35.  41.  38.5 25.4 12.  39.5\n     29.7 37.  31.  10.5 26.3 34.  26.5] [ 340.    13.4   19.7   12.2  700.   714.   720.   725.   955.   650.\n      500.   430.   950.   450.   363.   500.     8.7   10.    12.2  600.\n      500.   700.   700.   975.   920.   242.     9.8  925.   450.  1000.\n      500.     7.5  290.   685.   340. ]\n    \n\n\n```python\nimport matplotlib.pyplot as plt\nfig, ax = plt.subplots()\nax.scatter(train_input[:,0], train_input[:,1])\nax.scatter(test_input[:,0], test_input[:,1])\nax.set_xlabel(\"length\")\nax.set_ylabel(\"weight\")\nplt.show()\n```\n\n\n    \n![png](/images/0630/output_45_0.png)\n    \n\n\n## 두번째 머신러닝 프로그램\n\n\n```python\nkn.fit(train_input, train_target)\nkn.score(test_input, test_target)\n```\n\n\n\n\n    1.0\n\n\n\n\n```python\nkn.predict(test_input)  # 예측 데이터\n```\n\n\n\n\n    array([0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0])\n\n\n\n\n```python\ntest_target  # 실제 데이터\n```\n\n\n\n\n    array([0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0])\n\n\n\n## 데이터 전처리\n- 머신러닝 시, 데이터 전처리\n- 결측치 처리, 이상치 처리\n\n## 데이터 불러오기\n\n\n```python\nfish_length = [25.4, 26.3, 26.5, 29.0, 29.0, 29.7, 29.7, 30.0, 30.0, 30.7, 31.0, 31.0, \n                31.5, 32.0, 32.0, 32.0, 33.0, 33.0, 33.5, 33.5, 34.0, 34.0, 34.5, 35.0, \n                35.0, 35.0, 35.0, 36.0, 36.0, 37.0, 38.5, 38.5, 39.5, 41.0, 41.0, 9.8, \n                10.5, 10.6, 11.0, 11.2, 11.3, 11.8, 11.8, 12.0, 12.2, 12.4, 13.0, 14.3, 15.0]\nfish_weight = [242.0, 290.0, 340.0, 363.0, 430.0, 450.0, 500.0, 390.0, 450.0, 500.0, 475.0, 500.0, \n                500.0, 340.0, 600.0, 600.0, 700.0, 700.0, 610.0, 650.0, 575.0, 685.0, 620.0, 680.0, \n                700.0, 725.0, 720.0, 714.0, 850.0, 1000.0, 920.0, 955.0, 925.0, 975.0, 950.0, 6.7, \n                7.5, 7.0, 9.7, 9.8, 8.7, 10.0, 9.9, 9.8, 12.2, 13.4, 12.2, 19.7, 19.9]\n```\n\n\n```python\n# column_stack() 활용\n# 리스트 만들고 2차원 변형하고 배열하는 그 과정들을 생략\nnp.column_stack(([1, 2, 3], [4 ,5 ,6]))\n```\n\n\n\n\n    array([[1, 4],\n           [2, 5],\n           [3, 6]])\n\n\n\n\n```python\nfish_data = np.column_stack((fish_length, fish_weight))\nprint(fish_data[:5])\n```\n\n    [[ 25.4 242. ]\n     [ 26.3 290. ]\n     [ 26.5 340. ]\n     [ 29.  363. ]\n     [ 29.  430. ]]\n    \n\n- 종속변수 = Y = 타겟 데이터 = Target\n\n\n```python\nfish_target = np.concatenate((np.ones(35),np.zeros(14)))\nprint(fish_target)\n```\n\n    [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n     1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n     0.]\n    \n\n### scikit-learn 훈련세트와 테스트 세트 나누기\n\n\n```python\n# 위에 두줄은 암기!!\nfrom sklearn.model_selection import train_test_split\ntrain_input, test_input, train_target, test_target = train_test_split(\n    # 독립변수, 종속변수, 난수 고정\n    fish_data, fish_target, random_state = 42\n)\n\ntrain_input.shape, test_input.shape, train_target.shape, test_target.shape\n# 항상 변수가 같은지 체크(2, 2, 0, 0 등)\n```\n\n\n\n\n    ((36, 2), (13, 2), (36,), (13,))\n\n\n\n- 도미와 빙어가 잘 섞여 있는지 확인하기\n\n\n```python\nprint(test_target)\n```\n\n    [1. 0. 0. 0. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n    \n\n- 35(도미) : 14(빙어)\n  + 2.5 : 1 비율\n- 테스트 셋\n  + 3.3 : 1 비율\n- 비율이 맞지 않으면 최종적인 머신러닝 결괏값이 왜곡될 수 있다.\n\n## 층화 샘플링\n- 기초 통계, 설문조사\n- 비율\n- 여론조사\n  + 남성 속옷 판매회사에서는 속옷을 구매하는 비율(남자 9, 여자1)\n  + 그런데 신제품 출시시 (남자 5, 여자 5) 비율의 설문이면 결과가 왜곡될 수 있다.\n- stratify = y, 옵션 함수 사용\n\n\n```python\ntrain_input, test_input, train_target, test_target = train_test_split(\n    # 독립변수, 종속변수, 난수 고정\n    fish_data, fish_target, stratify = fish_target, random_state = 42\n)\n\ntrain_input.shape, test_input.shape, train_target.shape, test_target.shape\n# 항상 변수가 같은지 체크(2, 2, 0, 0 등)\n```\n\n\n```python\nprint(test_target)\n```\n\n    [1. 0. 0. 0. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n    \n\n- 테스트 세트의 비율이 2.25:1\n\n\n## 수상한 도미 한 마리\n\n\n```python\nfrom sklearn.neighbors import KNeighborsClassifier\nkn = KNeighborsClassifier()\nkn.fit(train_input, train_target)\nkn.score(test_input, test_target)\n```\n\n\n\n\n    1.0\n\n\n\n\n```python\nprint(kn.predict([[25,150]]))\n```\n\n    [0.]\n    \n\n\n```python\nimport matplotlib.pyplot as plt\nfig, ax = plt.subplots()\nax.scatter(train_input[:,0], train_input[:,1])\nax.scatter(25, 150, marker='^')     # marker = '^' 매개변수 모양을 지정하는 것(주황색 삼각형)\nax.set_xlabel(\"length\")\nax.set_ylabel(\"weight\")\nplt.show()\n```\n\n\n    \n![png](/images/0630/output_69_0.png)\n    \n\n\n- 왜 도미 쪽 데이터가 더 가까운데 빙어로 인식했을까?\n- 알고리즘 문제\n\n\n```python\ndistances, indexes = kn.kneighbors([[25,150,]])\nimport matplotlib.pyplot as plt\nfig, ax = plt.subplots()\nax.scatter(train_input[:,0], train_input[:,1])\nax.scatter(25, 150, marker='^')     # marker = '^' 매개변수 모양을 지정하는 것(주황색 삼각형)\nax.scatter(train_input[indexes,0], train_input[indexes,1], marker='D')  # 이웃 샘플 5개를 다이아몬드로 표시\nax.set_xlabel(\"length\")\nax.set_ylabel(\"weight\")\nplt.show()\n```\n\n\n    \n![png](/images/0630/output_71_0.png)\n    \n\n\n- 두 특성(길이와 무게)의 값이 놓인 범위가 매우다름\n- 알고리즘은 두 특성(길이, 무게)을 같다고 판단함\n- 두 특성의 스케일이 같도록 통계 처리가 필요\n  + Feature Engineering\n## 머신러닝 진행시 습관적으로 사용할 순서\n  + 전체데이터 전처리(결측치 처리, 이상치 처리)\n  + 데이터 분리 (임의 샘플링 < 층화 샘플링)\n  + Feature Engineering\n\n### 표준점수\n- z 점수\n- (산술식 찾아 채워보기)\n\n\n```python\nmean = np.mean(train_input, axis = 0)\nstd = np.std(train_input, axis = 0)\n\nprint(mean, std)\n```\n\n    [ 26.175      418.08888889] [ 10.21073441 321.67847023]\n    \n\n- 표준 점수 구하기\n\n\n```python\n# 브로드캐스팅 서로 다른 배열을 계산할 때\nprint(train_input.shape, mean.shape, std.shape)\ntrain_scaled = (train_input - mean) / std     # train_scaled 로 데이터 전처리 진행\n```\n\n    (36, 2) (2,) (2,)\n    \n\n\n```python\nnew = ([25, 150] - mean) / std\nplt.scatter(train_scaled[:,0], train_scaled[:,1])\nplt.scatter(new[0], new[1], marker='^')     # marker = '^' 매개변수 모양을 지정하는 것(주황색 삼각형)\nplt.xlabel(\"length\")\nplt.ylabel(\"weight\")\nplt.show()\n```\n\n\n    \n![png](/images/0630/output_77_0.png)\n    \n\n\n- 통계처리 전 : KNN --> 예측이 틀렸음\n- 통계처리 후 : KNN --> 예측이 정확하게 맞음\n-- 통계처리 --> Feature Engineering\n\n- 모형학습\n\n\n```python\nkn.fit(train_scaled, train_target)\n```\n\n\n\n\n    KNeighborsClassifier()\n\n\n\n\n```python\ntest_scaled = (test_input -mean) / std\nkn.score(test_scaled, test_target)\n```\n\n\n\n\n    1.0\n\n\n\n- 예측 해보기\n\n\n```python\nprint(kn.predict([new]))\ndistances, indexes = kn.kneighbors([new])\nplt.scatter(train_scaled[:,0], train_scaled[:,1])\nplt.scatter(new[0], new[1], marker='^')\nplt.scatter(train_scaled[indexes,0], train_scaled[indexes,1], marker='D')\nplt.xlabel('length')\nplt.ylabel('weight')\nplt.show()\n```\n\n    [1.]\n    \n\n\n    \n![png](/images/0630/output_83_1.png)\n    \n\n","slug":"day0630_ml","published":1,"updated":"2022-07-21T12:49:59.668Z","_id":"cl5fcok7u000vjku014vsgp0r","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt --></li>\n</ul>\n<h2 id=\"새로운-모델-제안\"><a href=\"#새로운-모델-제안\" class=\"headerlink\" title=\"새로운 모델 제안\"></a>새로운 모델 제안</h2><ul>\n<li>Default : 정확도 100%</li>\n<li>새롭게 제안 : 정확도 71%</li>\n</ul>\n<p>–&gt; 실험단계 –&gt; 이것저것 다 해보고 정확도가 가장 높은 모델 채택</p>\n<ul>\n<li><p>하이퍼 파라미터 세팅</p>\n<ul>\n<li>n_neighbors &#x3D; 49</li>\n</ul>\n</li>\n<li><p>default : 100%</p>\n</li>\n<li><p>default 값은 KNeighborsClassifier default 이런식으로 구글링 하면 나옴</p>\n</li>\n</ul>\n<h2 id=\"머신러닝-알고리즘-두개의-흐름\"><a href=\"#머신러닝-알고리즘-두개의-흐름\" class=\"headerlink\" title=\"머신러닝 알고리즘 두개의 흐름\"></a>머신러닝 알고리즘 두개의 흐름</h2><ul>\n<li><p>인공지능 → 머신러닝 → 딥러닝</p>\n</li>\n<li><p>머신러닝 알고리즘</p>\n<ul>\n<li>선형회귀, 결정트리</li>\n<li>결과에 대한 해석 요구</li>\n<li>통계분석 같이 해야함</li>\n<li>정형데이터(&#x3D;엑셀 데이터, 테이블)</li>\n</ul>\n</li>\n<li><p>딥러닝 알고리즘(p.340~)</p>\n<ul>\n<li>인공신경망</li>\n<li>이미지(&#x3D;영상인식), 자연어(&#x3D;음성인식)</li>\n<li>성능이 좋은지?</li>\n</ul>\n</li>\n<li><p>분석의 흐름</p>\n</li>\n</ul>\n<ol>\n<li><p>데이터 수집</p>\n</li>\n<li><p>데이터 가공</p>\n</li>\n<li><p>데이터 시각화</p>\n</li>\n<li><p>데이터 (예측)모델링 </p>\n<p> ⇒ 예측 평가지표가 중요함</p>\n<p> ⇒ 알고리즘 공부</p>\n<p> ⇒ 알고리즘 종류 수백가지</p>\n<p> R : 데이터 (통계)모델링 </p>\n<p> ⇒ 해석에 포커싱 </p>\n<p> ⇒ 변수(&#x3D;컬럼&#x3D;피처)간의 관계</p>\n<p> ⇒ 가설 검정이 중요</p>\n</li>\n<li><p>보고서를 작성(상사, 갑, 의사결정자)</p>\n<ul>\n<li>면접자료 : 소스코드 &amp; PPT</li>\n</ul>\n</li>\n</ol>\n<ul>\n<li><p>선형모델 : 선형회귀, 로지스틱 회귀, 서포트 벡터 머신</p>\n</li>\n<li><p>의사결정트리 모델 : 1975년 의사결정트리 모델, KNN</p>\n<ul>\n<li>Kaggle에서 자주쓰는 모델 </li>\n<li>랜덤포레스트</li>\n<li>부스팅계열 : LightGBM(2017), XGBoost(2016)</li>\n</ul>\n</li>\n<li><p>알고리즘 공부를 꼭 해야겠다 &#x3D;&gt; 선형회귀, 로지스틱회귀, 랜덤포레스트, <em><strong>LightGBM(&#x3D;XGBoost)</strong></em></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kn49 = KNeighborsClassifier(n_neighbors=<span class=\"number\">49</span>)   <span class=\"comment\"># default 값을 49로 한 kn49모델</span></span><br><span class=\"line\">kn49.fit(fish_data, fish_target)</span><br><span class=\"line\">kn49.score(fish_data, fish_target)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>0.7142857142857143\n</code></pre>\n<h2 id=\"훈련-세트와-테스트-세트\"><a href=\"#훈련-세트와-테스트-세트\" class=\"headerlink\" title=\"훈련 세트와 테스트 세트\"></a>훈련 세트와 테스트 세트</h2><ul>\n<li>이미 도미 &#x2F; 빙어 박스가 분류가 되어 있음</li>\n<li>두 박스를 섞었을 때도 분류가 되는지 확인</li>\n<li>처음에 바로 하기는 힘드니 샘플링을 통해 학습</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fish_length = [<span class=\"number\">25.4</span>, <span class=\"number\">26.3</span>, <span class=\"number\">26.5</span>, <span class=\"number\">29.0</span>, <span class=\"number\">29.0</span>, <span class=\"number\">29.7</span>, <span class=\"number\">29.7</span>, <span class=\"number\">30.0</span>, <span class=\"number\">30.0</span>, <span class=\"number\">30.7</span>, <span class=\"number\">31.0</span>, <span class=\"number\">31.0</span>, </span><br><span class=\"line\">                <span class=\"number\">31.5</span>, <span class=\"number\">32.0</span>, <span class=\"number\">32.0</span>, <span class=\"number\">32.0</span>, <span class=\"number\">33.0</span>, <span class=\"number\">33.0</span>, <span class=\"number\">33.5</span>, <span class=\"number\">33.5</span>, <span class=\"number\">34.0</span>, <span class=\"number\">34.0</span>, <span class=\"number\">34.5</span>, <span class=\"number\">35.0</span>, </span><br><span class=\"line\">                <span class=\"number\">35.0</span>, <span class=\"number\">35.0</span>, <span class=\"number\">35.0</span>, <span class=\"number\">36.0</span>, <span class=\"number\">36.0</span>, <span class=\"number\">37.0</span>, <span class=\"number\">38.5</span>, <span class=\"number\">38.5</span>, <span class=\"number\">39.5</span>, <span class=\"number\">41.0</span>, <span class=\"number\">41.0</span>, <span class=\"number\">9.8</span>, </span><br><span class=\"line\">                <span class=\"number\">10.5</span>, <span class=\"number\">10.6</span>, <span class=\"number\">11.0</span>, <span class=\"number\">11.2</span>, <span class=\"number\">11.3</span>, <span class=\"number\">11.8</span>, <span class=\"number\">11.8</span>, <span class=\"number\">12.0</span>, <span class=\"number\">12.2</span>, <span class=\"number\">12.4</span>, <span class=\"number\">13.0</span>, <span class=\"number\">14.3</span>, <span class=\"number\">15.0</span>]</span><br><span class=\"line\">fish_weight = [<span class=\"number\">242.0</span>, <span class=\"number\">290.0</span>, <span class=\"number\">340.0</span>, <span class=\"number\">363.0</span>, <span class=\"number\">430.0</span>, <span class=\"number\">450.0</span>, <span class=\"number\">500.0</span>, <span class=\"number\">390.0</span>, <span class=\"number\">450.0</span>, <span class=\"number\">500.0</span>, <span class=\"number\">475.0</span>, <span class=\"number\">500.0</span>, </span><br><span class=\"line\">                <span class=\"number\">500.0</span>, <span class=\"number\">340.0</span>, <span class=\"number\">600.0</span>, <span class=\"number\">600.0</span>, <span class=\"number\">700.0</span>, <span class=\"number\">700.0</span>, <span class=\"number\">610.0</span>, <span class=\"number\">650.0</span>, <span class=\"number\">575.0</span>, <span class=\"number\">685.0</span>, <span class=\"number\">620.0</span>, <span class=\"number\">680.0</span>, </span><br><span class=\"line\">                <span class=\"number\">700.0</span>, <span class=\"number\">725.0</span>, <span class=\"number\">720.0</span>, <span class=\"number\">714.0</span>, <span class=\"number\">850.0</span>, <span class=\"number\">1000.0</span>, <span class=\"number\">920.0</span>, <span class=\"number\">955.0</span>, <span class=\"number\">925.0</span>, <span class=\"number\">975.0</span>, <span class=\"number\">950.0</span>, <span class=\"number\">6.7</span>, </span><br><span class=\"line\">                <span class=\"number\">7.5</span>, <span class=\"number\">7.0</span>, <span class=\"number\">9.7</span>, <span class=\"number\">9.8</span>, <span class=\"number\">8.7</span>, <span class=\"number\">10.0</span>, <span class=\"number\">9.9</span>, <span class=\"number\">9.8</span>, <span class=\"number\">12.2</span>, <span class=\"number\">13.4</span>, <span class=\"number\">12.2</span>, <span class=\"number\">19.7</span>, <span class=\"number\">19.9</span>]</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>2차원 파이썬 리스트</li>\n<li>라벨링</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fish_data = [[l, w] <span class=\"keyword\">for</span> l, w <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(fish_length, fish_weight)]</span><br><span class=\"line\">fish_target = [<span class=\"number\">1</span>] * <span class=\"number\">35</span> + [<span class=\"number\">0</span>] * <span class=\"number\">14</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(fish_target[<span class=\"number\">0</span>:<span class=\"number\">40</span>:<span class=\"number\">5</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(fish_data[<span class=\"number\">0</span>:<span class=\"number\">40</span>:<span class=\"number\">5</span>])</span><br></pre></td></tr></table></figure>\n\n<pre><code>[1, 1, 1, 1, 1, 1, 1, 0]\n[[25.4, 242.0], [29.7, 450.0], [31.0, 475.0], [32.0, 600.0], [34.0, 575.0], [35.0, 725.0], [38.5, 920.0], [9.8, 6.7]]\n</code></pre>\n<ul>\n<li>Sample (모든 도미, 빙어가 아니라 일부만 추출한 것)</li>\n<li>도미 35마리, 빙어 14마리</li>\n<li>49개의 샘플 존재</li>\n<li>처음 35개를 훈련 &#x2F; 나머지 14개를 테스트</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.neighbors <span class=\"keyword\">import</span> KNeighborsClassifier</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 클래스 인스턴스화 (kn 으로 안 써도 됨)</span></span><br><span class=\"line\">kn = KNeighborsClassifier()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 훈련 세트로 0:34 인덱스 활용</span></span><br><span class=\"line\">train_input = fish_data[:<span class=\"number\">35</span>]</span><br><span class=\"line\">train_target = fish_target[:<span class=\"number\">35</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 테스트 세트로 35:마지막 인덱스 활용</span></span><br><span class=\"line\">test_input = fish_data[<span class=\"number\">35</span>:]</span><br><span class=\"line\">test_target = fish_target[<span class=\"number\">35</span>:]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 모형 학습</span></span><br><span class=\"line\">kn = kn.fit(train_input, train_target)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(kn.score(test_input, test_target))</span><br></pre></td></tr></table></figure>\n\n<pre><code>0.0\n</code></pre>\n<ul>\n<li>도미만 35개 보여주고 빙어 14개를 테스트 해버림..</li>\n<li>샘플링 편향<br>&#x3D;&gt; 훈련세트와 테스트 세트가 골고루 섞이지 않음</li>\n</ul>\n<h2 id=\"샘플링-작업\"><a href=\"#샘플링-작업\" class=\"headerlink\" title=\"샘플링 작업\"></a>샘플링 작업</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\">input_arr = np.array(fish_data)</span><br><span class=\"line\">target_arr = np.array(fish_target)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(input_arr[<span class=\"number\">0</span>:<span class=\"number\">49</span>:<span class=\"number\">7</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(input_arr.shape, target_arr.shape)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[[ 25.4 242. ]\n [ 30.  390. ]\n [ 32.  600. ]\n [ 34.  685. ]\n [ 36.  850. ]\n [  9.8   6.7]\n [ 11.8   9.9]]\n(49, 2) (49,)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">np.random.seed(<span class=\"number\">42</span>)    <span class=\"comment\"># 42seed로 무작위로 계속 섞는 함수(seed 번호가 달라지면 index 순서도 바뀜)</span></span><br><span class=\"line\">index = np.arange(<span class=\"number\">49</span>)</span><br><span class=\"line\">np.random.shuffle(index)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(index)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[13 45 47 44 17 27 26 25 31 19 12  4 34  8  3  6 40 41 46 15  9 16 24 33\n 30  0 43 32  5 29 11 36  1 21  2 37 35 23 39 10 22 18 48 20  7 42 14 28\n 38]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">train_input = input_arr[index[:<span class=\"number\">35</span>]]</span><br><span class=\"line\">train_target = target_arr[index[:<span class=\"number\">35</span>]]</span><br><span class=\"line\"></span><br><span class=\"line\">test_input = input_arr[index[<span class=\"number\">35</span>:]]</span><br><span class=\"line\">test_target = target_arr[index[<span class=\"number\">35</span>:]]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"시각화\"><a href=\"#시각화\" class=\"headerlink\" title=\"시각화\"></a>시각화</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(train_input[:,<span class=\"number\">0</span>], train_input[:,<span class=\"number\">1</span>])</span><br></pre></td></tr></table></figure>\n\n<pre><code>[32.  12.4 14.3 12.2 33.  36.  35.  35.  38.5 33.5 31.5 29.  41.  30.\n 29.  29.7 11.3 11.8 13.  32.  30.7 33.  35.  41.  38.5 25.4 12.  39.5\n 29.7 37.  31.  10.5 26.3 34.  26.5] [ 340.    13.4   19.7   12.2  700.   714.   720.   725.   955.   650.\n  500.   430.   950.   450.   363.   500.     8.7   10.    12.2  600.\n  500.   700.   700.   975.   920.   242.     9.8  925.   450.  1000.\n  500.     7.5  290.   685.   340. ]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\">fig, ax = plt.subplots()</span><br><span class=\"line\">ax.scatter(train_input[:,<span class=\"number\">0</span>], train_input[:,<span class=\"number\">1</span>])</span><br><span class=\"line\">ax.scatter(test_input[:,<span class=\"number\">0</span>], test_input[:,<span class=\"number\">1</span>])</span><br><span class=\"line\">ax.set_xlabel(<span class=\"string\">&quot;length&quot;</span>)</span><br><span class=\"line\">ax.set_ylabel(<span class=\"string\">&quot;weight&quot;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0630/output_45_0.png\" alt=\"png\"></p>\n<h2 id=\"두번째-머신러닝-프로그램\"><a href=\"#두번째-머신러닝-프로그램\" class=\"headerlink\" title=\"두번째 머신러닝 프로그램\"></a>두번째 머신러닝 프로그램</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kn.fit(train_input, train_target)</span><br><span class=\"line\">kn.score(test_input, test_target)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>1.0\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kn.predict(test_input)  <span class=\"comment\"># 예측 데이터</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0])\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">test_target  <span class=\"comment\"># 실제 데이터</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0])\n</code></pre>\n<h2 id=\"데이터-전처리\"><a href=\"#데이터-전처리\" class=\"headerlink\" title=\"데이터 전처리\"></a>데이터 전처리</h2><ul>\n<li>머신러닝 시, 데이터 전처리</li>\n<li>결측치 처리, 이상치 처리</li>\n</ul>\n<h2 id=\"데이터-불러오기\"><a href=\"#데이터-불러오기\" class=\"headerlink\" title=\"데이터 불러오기\"></a>데이터 불러오기</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fish_length = [<span class=\"number\">25.4</span>, <span class=\"number\">26.3</span>, <span class=\"number\">26.5</span>, <span class=\"number\">29.0</span>, <span class=\"number\">29.0</span>, <span class=\"number\">29.7</span>, <span class=\"number\">29.7</span>, <span class=\"number\">30.0</span>, <span class=\"number\">30.0</span>, <span class=\"number\">30.7</span>, <span class=\"number\">31.0</span>, <span class=\"number\">31.0</span>, </span><br><span class=\"line\">                <span class=\"number\">31.5</span>, <span class=\"number\">32.0</span>, <span class=\"number\">32.0</span>, <span class=\"number\">32.0</span>, <span class=\"number\">33.0</span>, <span class=\"number\">33.0</span>, <span class=\"number\">33.5</span>, <span class=\"number\">33.5</span>, <span class=\"number\">34.0</span>, <span class=\"number\">34.0</span>, <span class=\"number\">34.5</span>, <span class=\"number\">35.0</span>, </span><br><span class=\"line\">                <span class=\"number\">35.0</span>, <span class=\"number\">35.0</span>, <span class=\"number\">35.0</span>, <span class=\"number\">36.0</span>, <span class=\"number\">36.0</span>, <span class=\"number\">37.0</span>, <span class=\"number\">38.5</span>, <span class=\"number\">38.5</span>, <span class=\"number\">39.5</span>, <span class=\"number\">41.0</span>, <span class=\"number\">41.0</span>, <span class=\"number\">9.8</span>, </span><br><span class=\"line\">                <span class=\"number\">10.5</span>, <span class=\"number\">10.6</span>, <span class=\"number\">11.0</span>, <span class=\"number\">11.2</span>, <span class=\"number\">11.3</span>, <span class=\"number\">11.8</span>, <span class=\"number\">11.8</span>, <span class=\"number\">12.0</span>, <span class=\"number\">12.2</span>, <span class=\"number\">12.4</span>, <span class=\"number\">13.0</span>, <span class=\"number\">14.3</span>, <span class=\"number\">15.0</span>]</span><br><span class=\"line\">fish_weight = [<span class=\"number\">242.0</span>, <span class=\"number\">290.0</span>, <span class=\"number\">340.0</span>, <span class=\"number\">363.0</span>, <span class=\"number\">430.0</span>, <span class=\"number\">450.0</span>, <span class=\"number\">500.0</span>, <span class=\"number\">390.0</span>, <span class=\"number\">450.0</span>, <span class=\"number\">500.0</span>, <span class=\"number\">475.0</span>, <span class=\"number\">500.0</span>, </span><br><span class=\"line\">                <span class=\"number\">500.0</span>, <span class=\"number\">340.0</span>, <span class=\"number\">600.0</span>, <span class=\"number\">600.0</span>, <span class=\"number\">700.0</span>, <span class=\"number\">700.0</span>, <span class=\"number\">610.0</span>, <span class=\"number\">650.0</span>, <span class=\"number\">575.0</span>, <span class=\"number\">685.0</span>, <span class=\"number\">620.0</span>, <span class=\"number\">680.0</span>, </span><br><span class=\"line\">                <span class=\"number\">700.0</span>, <span class=\"number\">725.0</span>, <span class=\"number\">720.0</span>, <span class=\"number\">714.0</span>, <span class=\"number\">850.0</span>, <span class=\"number\">1000.0</span>, <span class=\"number\">920.0</span>, <span class=\"number\">955.0</span>, <span class=\"number\">925.0</span>, <span class=\"number\">975.0</span>, <span class=\"number\">950.0</span>, <span class=\"number\">6.7</span>, </span><br><span class=\"line\">                <span class=\"number\">7.5</span>, <span class=\"number\">7.0</span>, <span class=\"number\">9.7</span>, <span class=\"number\">9.8</span>, <span class=\"number\">8.7</span>, <span class=\"number\">10.0</span>, <span class=\"number\">9.9</span>, <span class=\"number\">9.8</span>, <span class=\"number\">12.2</span>, <span class=\"number\">13.4</span>, <span class=\"number\">12.2</span>, <span class=\"number\">19.7</span>, <span class=\"number\">19.9</span>]</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># column_stack() 활용</span></span><br><span class=\"line\"><span class=\"comment\"># 리스트 만들고 2차원 변형하고 배열하는 그 과정들을 생략</span></span><br><span class=\"line\">np.column_stack(([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span> ,<span class=\"number\">5</span> ,<span class=\"number\">6</span>]))</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([[1, 4],\n       [2, 5],\n       [3, 6]])\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fish_data = np.column_stack((fish_length, fish_weight))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(fish_data[:<span class=\"number\">5</span>])</span><br></pre></td></tr></table></figure>\n\n<pre><code>[[ 25.4 242. ]\n [ 26.3 290. ]\n [ 26.5 340. ]\n [ 29.  363. ]\n [ 29.  430. ]]\n</code></pre>\n<ul>\n<li>종속변수 &#x3D; Y &#x3D; 타겟 데이터 &#x3D; Target</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fish_target = np.concatenate((np.ones(<span class=\"number\">35</span>),np.zeros(<span class=\"number\">14</span>)))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(fish_target)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n 0.]\n</code></pre>\n<h3 id=\"scikit-learn-훈련세트와-테스트-세트-나누기\"><a href=\"#scikit-learn-훈련세트와-테스트-세트-나누기\" class=\"headerlink\" title=\"scikit-learn 훈련세트와 테스트 세트 나누기\"></a>scikit-learn 훈련세트와 테스트 세트 나누기</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 위에 두줄은 암기!!</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\">train_input, test_input, train_target, test_target = train_test_split(</span><br><span class=\"line\">    <span class=\"comment\"># 독립변수, 종속변수, 난수 고정</span></span><br><span class=\"line\">    fish_data, fish_target, random_state = <span class=\"number\">42</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">train_input.shape, test_input.shape, train_target.shape, test_target.shape</span><br><span class=\"line\"><span class=\"comment\"># 항상 변수가 같은지 체크(2, 2, 0, 0 등)</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>((36, 2), (13, 2), (36,), (13,))\n</code></pre>\n<ul>\n<li>도미와 빙어가 잘 섞여 있는지 확인하기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(test_target)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[1. 0. 0. 0. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n</code></pre>\n<ul>\n<li>35(도미) : 14(빙어)<ul>\n<li>2.5 : 1 비율</li>\n</ul>\n</li>\n<li>테스트 셋<ul>\n<li>3.3 : 1 비율</li>\n</ul>\n</li>\n<li>비율이 맞지 않으면 최종적인 머신러닝 결괏값이 왜곡될 수 있다.</li>\n</ul>\n<h2 id=\"층화-샘플링\"><a href=\"#층화-샘플링\" class=\"headerlink\" title=\"층화 샘플링\"></a>층화 샘플링</h2><ul>\n<li>기초 통계, 설문조사</li>\n<li>비율</li>\n<li>여론조사<ul>\n<li>남성 속옷 판매회사에서는 속옷을 구매하는 비율(남자 9, 여자1)</li>\n<li>그런데 신제품 출시시 (남자 5, 여자 5) 비율의 설문이면 결과가 왜곡될 수 있다.</li>\n</ul>\n</li>\n<li>stratify &#x3D; y, 옵션 함수 사용</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">train_input, test_input, train_target, test_target = train_test_split(</span><br><span class=\"line\">    <span class=\"comment\"># 독립변수, 종속변수, 난수 고정</span></span><br><span class=\"line\">    fish_data, fish_target, stratify = fish_target, random_state = <span class=\"number\">42</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">train_input.shape, test_input.shape, train_target.shape, test_target.shape</span><br><span class=\"line\"><span class=\"comment\"># 항상 변수가 같은지 체크(2, 2, 0, 0 등)</span></span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(test_target)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[1. 0. 0. 0. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n</code></pre>\n<ul>\n<li>테스트 세트의 비율이 2.25:1</li>\n</ul>\n<h2 id=\"수상한-도미-한-마리\"><a href=\"#수상한-도미-한-마리\" class=\"headerlink\" title=\"수상한 도미 한 마리\"></a>수상한 도미 한 마리</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.neighbors <span class=\"keyword\">import</span> KNeighborsClassifier</span><br><span class=\"line\">kn = KNeighborsClassifier()</span><br><span class=\"line\">kn.fit(train_input, train_target)</span><br><span class=\"line\">kn.score(test_input, test_target)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>1.0\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(kn.predict([[<span class=\"number\">25</span>,<span class=\"number\">150</span>]]))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[0.]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\">fig, ax = plt.subplots()</span><br><span class=\"line\">ax.scatter(train_input[:,<span class=\"number\">0</span>], train_input[:,<span class=\"number\">1</span>])</span><br><span class=\"line\">ax.scatter(<span class=\"number\">25</span>, <span class=\"number\">150</span>, marker=<span class=\"string\">&#x27;^&#x27;</span>)     <span class=\"comment\"># marker = &#x27;^&#x27; 매개변수 모양을 지정하는 것(주황색 삼각형)</span></span><br><span class=\"line\">ax.set_xlabel(<span class=\"string\">&quot;length&quot;</span>)</span><br><span class=\"line\">ax.set_ylabel(<span class=\"string\">&quot;weight&quot;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0630/output_69_0.png\" alt=\"png\"></p>\n<ul>\n<li>왜 도미 쪽 데이터가 더 가까운데 빙어로 인식했을까?</li>\n<li>알고리즘 문제</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">distances, indexes = kn.kneighbors([[<span class=\"number\">25</span>,<span class=\"number\">150</span>,]])</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\">fig, ax = plt.subplots()</span><br><span class=\"line\">ax.scatter(train_input[:,<span class=\"number\">0</span>], train_input[:,<span class=\"number\">1</span>])</span><br><span class=\"line\">ax.scatter(<span class=\"number\">25</span>, <span class=\"number\">150</span>, marker=<span class=\"string\">&#x27;^&#x27;</span>)     <span class=\"comment\"># marker = &#x27;^&#x27; 매개변수 모양을 지정하는 것(주황색 삼각형)</span></span><br><span class=\"line\">ax.scatter(train_input[indexes,<span class=\"number\">0</span>], train_input[indexes,<span class=\"number\">1</span>], marker=<span class=\"string\">&#x27;D&#x27;</span>)  <span class=\"comment\"># 이웃 샘플 5개를 다이아몬드로 표시</span></span><br><span class=\"line\">ax.set_xlabel(<span class=\"string\">&quot;length&quot;</span>)</span><br><span class=\"line\">ax.set_ylabel(<span class=\"string\">&quot;weight&quot;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0630/output_71_0.png\" alt=\"png\"></p>\n<ul>\n<li>두 특성(길이와 무게)의 값이 놓인 범위가 매우다름</li>\n<li>알고리즘은 두 특성(길이, 무게)을 같다고 판단함</li>\n<li>두 특성의 스케일이 같도록 통계 처리가 필요<ul>\n<li>Feature Engineering</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"머신러닝-진행시-습관적으로-사용할-순서-1\"><a href=\"#머신러닝-진행시-습관적으로-사용할-순서-1\" class=\"headerlink\" title=\"머신러닝 진행시 습관적으로 사용할 순서\"></a>머신러닝 진행시 습관적으로 사용할 순서</h2><ul>\n<li>전체데이터 전처리(결측치 처리, 이상치 처리)</li>\n<li>데이터 분리 (임의 샘플링 &lt; 층화 샘플링)</li>\n<li>Feature Engineering</li>\n</ul>\n<h3 id=\"표준점수\"><a href=\"#표준점수\" class=\"headerlink\" title=\"표준점수\"></a>표준점수</h3><ul>\n<li>z 점수</li>\n<li>(산술식 찾아 채워보기)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mean = np.mean(train_input, axis = <span class=\"number\">0</span>)</span><br><span class=\"line\">std = np.std(train_input, axis = <span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mean, std)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[ 26.175      418.08888889] [ 10.21073441 321.67847023]\n</code></pre>\n<ul>\n<li>표준 점수 구하기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 브로드캐스팅 서로 다른 배열을 계산할 때</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(train_input.shape, mean.shape, std.shape)</span><br><span class=\"line\">train_scaled = (train_input - mean) / std     <span class=\"comment\"># train_scaled 로 데이터 전처리 진행</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>(36, 2) (2,) (2,)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new = ([<span class=\"number\">25</span>, <span class=\"number\">150</span>] - mean) / std</span><br><span class=\"line\">plt.scatter(train_scaled[:,<span class=\"number\">0</span>], train_scaled[:,<span class=\"number\">1</span>])</span><br><span class=\"line\">plt.scatter(new[<span class=\"number\">0</span>], new[<span class=\"number\">1</span>], marker=<span class=\"string\">&#x27;^&#x27;</span>)     <span class=\"comment\"># marker = &#x27;^&#x27; 매개변수 모양을 지정하는 것(주황색 삼각형)</span></span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&quot;length&quot;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&quot;weight&quot;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0630/output_77_0.png\" alt=\"png\"></p>\n<ul>\n<li><p>통계처리 전 : KNN –&gt; 예측이 틀렸음</p>\n</li>\n<li><p>통계처리 후 : KNN –&gt; 예측이 정확하게 맞음<br>– 통계처리 –&gt; Feature Engineering</p>\n</li>\n<li><p>모형학습</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kn.fit(train_scaled, train_target)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>KNeighborsClassifier()\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">test_scaled = (test_input -mean) / std</span><br><span class=\"line\">kn.score(test_scaled, test_target)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>1.0\n</code></pre>\n<ul>\n<li>예측 해보기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(kn.predict([new]))</span><br><span class=\"line\">distances, indexes = kn.kneighbors([new])</span><br><span class=\"line\">plt.scatter(train_scaled[:,<span class=\"number\">0</span>], train_scaled[:,<span class=\"number\">1</span>])</span><br><span class=\"line\">plt.scatter(new[<span class=\"number\">0</span>], new[<span class=\"number\">1</span>], marker=<span class=\"string\">&#x27;^&#x27;</span>)</span><br><span class=\"line\">plt.scatter(train_scaled[indexes,<span class=\"number\">0</span>], train_scaled[indexes,<span class=\"number\">1</span>], marker=<span class=\"string\">&#x27;D&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;length&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;weight&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n<pre><code>[1.]\n</code></pre>\n<p><img src=\"/images/0630/output_83_1.png\" alt=\"png\"></p>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/06/30/day0630_ml/python.png","excerpt":"<h2 id=\"머신러닝-진행시-습관적으로-사용할-순서\"><a href=\"#머신러닝-진행시-습관적으로-사용할-순서\" class=\"headerlink\" title=\"머신러닝 진행시 습관적으로 사용할 순서\"></a>머신러닝 진행시 습관적으로 사용할 순서</h2><ul>\n<li>전체데이터 전처리(결측치 처리, 이상치 처리)</li>\n<li>데이터 분리 (임의 샘플링 &lt; 층화 샘플링)</li>\n<li>Feature Engineering","more":"<h2 id=\"머신러닝-진행시-습관적으로-사용할-순서\"><a href=\"#머신러닝-진행시-습관적으로-사용할-순서\" class=\"headerlink\" title=\"머신러닝 진행시 습관적으로 사용할 순서\"></a>머신러닝 진행시 습관적으로 사용할 순서</h2><ul>\n<li>전체데이터 전처리(결측치 처리, 이상치 처리)</li>\n<li>데이터 분리 (임의 샘플링 &lt; 층화 샘플링)</li>\n<li>Feature Engineering<!-- excerpt --></li>\n</ul>\n<h2 id=\"새로운-모델-제안\"><a href=\"#새로운-모델-제안\" class=\"headerlink\" title=\"새로운 모델 제안\"></a>새로운 모델 제안</h2><ul>\n<li>Default : 정확도 100%</li>\n<li>새롭게 제안 : 정확도 71%</li>\n</ul>\n<p>–&gt; 실험단계 –&gt; 이것저것 다 해보고 정확도가 가장 높은 모델 채택</p>\n<ul>\n<li><p>하이퍼 파라미터 세팅</p>\n<ul>\n<li>n_neighbors &#x3D; 49</li>\n</ul>\n</li>\n<li><p>default : 100%</p>\n</li>\n<li><p>default 값은 KNeighborsClassifier default 이런식으로 구글링 하면 나옴</p>\n</li>\n</ul>\n<h2 id=\"머신러닝-알고리즘-두개의-흐름\"><a href=\"#머신러닝-알고리즘-두개의-흐름\" class=\"headerlink\" title=\"머신러닝 알고리즘 두개의 흐름\"></a>머신러닝 알고리즘 두개의 흐름</h2><ul>\n<li><p>인공지능 → 머신러닝 → 딥러닝</p>\n</li>\n<li><p>머신러닝 알고리즘</p>\n<ul>\n<li>선형회귀, 결정트리</li>\n<li>결과에 대한 해석 요구</li>\n<li>통계분석 같이 해야함</li>\n<li>정형데이터(&#x3D;엑셀 데이터, 테이블)</li>\n</ul>\n</li>\n<li><p>딥러닝 알고리즘(p.340~)</p>\n<ul>\n<li>인공신경망</li>\n<li>이미지(&#x3D;영상인식), 자연어(&#x3D;음성인식)</li>\n<li>성능이 좋은지?</li>\n</ul>\n</li>\n<li><p>분석의 흐름</p>\n</li>\n</ul>\n<ol>\n<li><p>데이터 수집</p>\n</li>\n<li><p>데이터 가공</p>\n</li>\n<li><p>데이터 시각화</p>\n</li>\n<li><p>데이터 (예측)모델링 </p>\n<p> ⇒ 예측 평가지표가 중요함</p>\n<p> ⇒ 알고리즘 공부</p>\n<p> ⇒ 알고리즘 종류 수백가지</p>\n<p> R : 데이터 (통계)모델링 </p>\n<p> ⇒ 해석에 포커싱 </p>\n<p> ⇒ 변수(&#x3D;컬럼&#x3D;피처)간의 관계</p>\n<p> ⇒ 가설 검정이 중요</p>\n</li>\n<li><p>보고서를 작성(상사, 갑, 의사결정자)</p>\n<ul>\n<li>면접자료 : 소스코드 &amp; PPT</li>\n</ul>\n</li>\n</ol>\n<ul>\n<li><p>선형모델 : 선형회귀, 로지스틱 회귀, 서포트 벡터 머신</p>\n</li>\n<li><p>의사결정트리 모델 : 1975년 의사결정트리 모델, KNN</p>\n<ul>\n<li>Kaggle에서 자주쓰는 모델 </li>\n<li>랜덤포레스트</li>\n<li>부스팅계열 : LightGBM(2017), XGBoost(2016)</li>\n</ul>\n</li>\n<li><p>알고리즘 공부를 꼭 해야겠다 &#x3D;&gt; 선형회귀, 로지스틱회귀, 랜덤포레스트, <em><strong>LightGBM(&#x3D;XGBoost)</strong></em></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kn49 = KNeighborsClassifier(n_neighbors=<span class=\"number\">49</span>)   <span class=\"comment\"># default 값을 49로 한 kn49모델</span></span><br><span class=\"line\">kn49.fit(fish_data, fish_target)</span><br><span class=\"line\">kn49.score(fish_data, fish_target)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>0.7142857142857143\n</code></pre>\n<h2 id=\"훈련-세트와-테스트-세트\"><a href=\"#훈련-세트와-테스트-세트\" class=\"headerlink\" title=\"훈련 세트와 테스트 세트\"></a>훈련 세트와 테스트 세트</h2><ul>\n<li>이미 도미 &#x2F; 빙어 박스가 분류가 되어 있음</li>\n<li>두 박스를 섞었을 때도 분류가 되는지 확인</li>\n<li>처음에 바로 하기는 힘드니 샘플링을 통해 학습</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fish_length = [<span class=\"number\">25.4</span>, <span class=\"number\">26.3</span>, <span class=\"number\">26.5</span>, <span class=\"number\">29.0</span>, <span class=\"number\">29.0</span>, <span class=\"number\">29.7</span>, <span class=\"number\">29.7</span>, <span class=\"number\">30.0</span>, <span class=\"number\">30.0</span>, <span class=\"number\">30.7</span>, <span class=\"number\">31.0</span>, <span class=\"number\">31.0</span>, </span><br><span class=\"line\">                <span class=\"number\">31.5</span>, <span class=\"number\">32.0</span>, <span class=\"number\">32.0</span>, <span class=\"number\">32.0</span>, <span class=\"number\">33.0</span>, <span class=\"number\">33.0</span>, <span class=\"number\">33.5</span>, <span class=\"number\">33.5</span>, <span class=\"number\">34.0</span>, <span class=\"number\">34.0</span>, <span class=\"number\">34.5</span>, <span class=\"number\">35.0</span>, </span><br><span class=\"line\">                <span class=\"number\">35.0</span>, <span class=\"number\">35.0</span>, <span class=\"number\">35.0</span>, <span class=\"number\">36.0</span>, <span class=\"number\">36.0</span>, <span class=\"number\">37.0</span>, <span class=\"number\">38.5</span>, <span class=\"number\">38.5</span>, <span class=\"number\">39.5</span>, <span class=\"number\">41.0</span>, <span class=\"number\">41.0</span>, <span class=\"number\">9.8</span>, </span><br><span class=\"line\">                <span class=\"number\">10.5</span>, <span class=\"number\">10.6</span>, <span class=\"number\">11.0</span>, <span class=\"number\">11.2</span>, <span class=\"number\">11.3</span>, <span class=\"number\">11.8</span>, <span class=\"number\">11.8</span>, <span class=\"number\">12.0</span>, <span class=\"number\">12.2</span>, <span class=\"number\">12.4</span>, <span class=\"number\">13.0</span>, <span class=\"number\">14.3</span>, <span class=\"number\">15.0</span>]</span><br><span class=\"line\">fish_weight = [<span class=\"number\">242.0</span>, <span class=\"number\">290.0</span>, <span class=\"number\">340.0</span>, <span class=\"number\">363.0</span>, <span class=\"number\">430.0</span>, <span class=\"number\">450.0</span>, <span class=\"number\">500.0</span>, <span class=\"number\">390.0</span>, <span class=\"number\">450.0</span>, <span class=\"number\">500.0</span>, <span class=\"number\">475.0</span>, <span class=\"number\">500.0</span>, </span><br><span class=\"line\">                <span class=\"number\">500.0</span>, <span class=\"number\">340.0</span>, <span class=\"number\">600.0</span>, <span class=\"number\">600.0</span>, <span class=\"number\">700.0</span>, <span class=\"number\">700.0</span>, <span class=\"number\">610.0</span>, <span class=\"number\">650.0</span>, <span class=\"number\">575.0</span>, <span class=\"number\">685.0</span>, <span class=\"number\">620.0</span>, <span class=\"number\">680.0</span>, </span><br><span class=\"line\">                <span class=\"number\">700.0</span>, <span class=\"number\">725.0</span>, <span class=\"number\">720.0</span>, <span class=\"number\">714.0</span>, <span class=\"number\">850.0</span>, <span class=\"number\">1000.0</span>, <span class=\"number\">920.0</span>, <span class=\"number\">955.0</span>, <span class=\"number\">925.0</span>, <span class=\"number\">975.0</span>, <span class=\"number\">950.0</span>, <span class=\"number\">6.7</span>, </span><br><span class=\"line\">                <span class=\"number\">7.5</span>, <span class=\"number\">7.0</span>, <span class=\"number\">9.7</span>, <span class=\"number\">9.8</span>, <span class=\"number\">8.7</span>, <span class=\"number\">10.0</span>, <span class=\"number\">9.9</span>, <span class=\"number\">9.8</span>, <span class=\"number\">12.2</span>, <span class=\"number\">13.4</span>, <span class=\"number\">12.2</span>, <span class=\"number\">19.7</span>, <span class=\"number\">19.9</span>]</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>2차원 파이썬 리스트</li>\n<li>라벨링</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fish_data = [[l, w] <span class=\"keyword\">for</span> l, w <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(fish_length, fish_weight)]</span><br><span class=\"line\">fish_target = [<span class=\"number\">1</span>] * <span class=\"number\">35</span> + [<span class=\"number\">0</span>] * <span class=\"number\">14</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(fish_target[<span class=\"number\">0</span>:<span class=\"number\">40</span>:<span class=\"number\">5</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(fish_data[<span class=\"number\">0</span>:<span class=\"number\">40</span>:<span class=\"number\">5</span>])</span><br></pre></td></tr></table></figure>\n\n<pre><code>[1, 1, 1, 1, 1, 1, 1, 0]\n[[25.4, 242.0], [29.7, 450.0], [31.0, 475.0], [32.0, 600.0], [34.0, 575.0], [35.0, 725.0], [38.5, 920.0], [9.8, 6.7]]\n</code></pre>\n<ul>\n<li>Sample (모든 도미, 빙어가 아니라 일부만 추출한 것)</li>\n<li>도미 35마리, 빙어 14마리</li>\n<li>49개의 샘플 존재</li>\n<li>처음 35개를 훈련 &#x2F; 나머지 14개를 테스트</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.neighbors <span class=\"keyword\">import</span> KNeighborsClassifier</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 클래스 인스턴스화 (kn 으로 안 써도 됨)</span></span><br><span class=\"line\">kn = KNeighborsClassifier()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 훈련 세트로 0:34 인덱스 활용</span></span><br><span class=\"line\">train_input = fish_data[:<span class=\"number\">35</span>]</span><br><span class=\"line\">train_target = fish_target[:<span class=\"number\">35</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 테스트 세트로 35:마지막 인덱스 활용</span></span><br><span class=\"line\">test_input = fish_data[<span class=\"number\">35</span>:]</span><br><span class=\"line\">test_target = fish_target[<span class=\"number\">35</span>:]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 모형 학습</span></span><br><span class=\"line\">kn = kn.fit(train_input, train_target)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(kn.score(test_input, test_target))</span><br></pre></td></tr></table></figure>\n\n<pre><code>0.0\n</code></pre>\n<ul>\n<li>도미만 35개 보여주고 빙어 14개를 테스트 해버림..</li>\n<li>샘플링 편향<br>&#x3D;&gt; 훈련세트와 테스트 세트가 골고루 섞이지 않음</li>\n</ul>\n<h2 id=\"샘플링-작업\"><a href=\"#샘플링-작업\" class=\"headerlink\" title=\"샘플링 작업\"></a>샘플링 작업</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\">input_arr = np.array(fish_data)</span><br><span class=\"line\">target_arr = np.array(fish_target)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(input_arr[<span class=\"number\">0</span>:<span class=\"number\">49</span>:<span class=\"number\">7</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(input_arr.shape, target_arr.shape)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[[ 25.4 242. ]\n [ 30.  390. ]\n [ 32.  600. ]\n [ 34.  685. ]\n [ 36.  850. ]\n [  9.8   6.7]\n [ 11.8   9.9]]\n(49, 2) (49,)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">np.random.seed(<span class=\"number\">42</span>)    <span class=\"comment\"># 42seed로 무작위로 계속 섞는 함수(seed 번호가 달라지면 index 순서도 바뀜)</span></span><br><span class=\"line\">index = np.arange(<span class=\"number\">49</span>)</span><br><span class=\"line\">np.random.shuffle(index)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(index)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[13 45 47 44 17 27 26 25 31 19 12  4 34  8  3  6 40 41 46 15  9 16 24 33\n 30  0 43 32  5 29 11 36  1 21  2 37 35 23 39 10 22 18 48 20  7 42 14 28\n 38]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">train_input = input_arr[index[:<span class=\"number\">35</span>]]</span><br><span class=\"line\">train_target = target_arr[index[:<span class=\"number\">35</span>]]</span><br><span class=\"line\"></span><br><span class=\"line\">test_input = input_arr[index[<span class=\"number\">35</span>:]]</span><br><span class=\"line\">test_target = target_arr[index[<span class=\"number\">35</span>:]]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"시각화\"><a href=\"#시각화\" class=\"headerlink\" title=\"시각화\"></a>시각화</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(train_input[:,<span class=\"number\">0</span>], train_input[:,<span class=\"number\">1</span>])</span><br></pre></td></tr></table></figure>\n\n<pre><code>[32.  12.4 14.3 12.2 33.  36.  35.  35.  38.5 33.5 31.5 29.  41.  30.\n 29.  29.7 11.3 11.8 13.  32.  30.7 33.  35.  41.  38.5 25.4 12.  39.5\n 29.7 37.  31.  10.5 26.3 34.  26.5] [ 340.    13.4   19.7   12.2  700.   714.   720.   725.   955.   650.\n  500.   430.   950.   450.   363.   500.     8.7   10.    12.2  600.\n  500.   700.   700.   975.   920.   242.     9.8  925.   450.  1000.\n  500.     7.5  290.   685.   340. ]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\">fig, ax = plt.subplots()</span><br><span class=\"line\">ax.scatter(train_input[:,<span class=\"number\">0</span>], train_input[:,<span class=\"number\">1</span>])</span><br><span class=\"line\">ax.scatter(test_input[:,<span class=\"number\">0</span>], test_input[:,<span class=\"number\">1</span>])</span><br><span class=\"line\">ax.set_xlabel(<span class=\"string\">&quot;length&quot;</span>)</span><br><span class=\"line\">ax.set_ylabel(<span class=\"string\">&quot;weight&quot;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0630/output_45_0.png\" alt=\"png\"></p>\n<h2 id=\"두번째-머신러닝-프로그램\"><a href=\"#두번째-머신러닝-프로그램\" class=\"headerlink\" title=\"두번째 머신러닝 프로그램\"></a>두번째 머신러닝 프로그램</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kn.fit(train_input, train_target)</span><br><span class=\"line\">kn.score(test_input, test_target)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>1.0\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kn.predict(test_input)  <span class=\"comment\"># 예측 데이터</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0])\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">test_target  <span class=\"comment\"># 실제 데이터</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0])\n</code></pre>\n<h2 id=\"데이터-전처리\"><a href=\"#데이터-전처리\" class=\"headerlink\" title=\"데이터 전처리\"></a>데이터 전처리</h2><ul>\n<li>머신러닝 시, 데이터 전처리</li>\n<li>결측치 처리, 이상치 처리</li>\n</ul>\n<h2 id=\"데이터-불러오기\"><a href=\"#데이터-불러오기\" class=\"headerlink\" title=\"데이터 불러오기\"></a>데이터 불러오기</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fish_length = [<span class=\"number\">25.4</span>, <span class=\"number\">26.3</span>, <span class=\"number\">26.5</span>, <span class=\"number\">29.0</span>, <span class=\"number\">29.0</span>, <span class=\"number\">29.7</span>, <span class=\"number\">29.7</span>, <span class=\"number\">30.0</span>, <span class=\"number\">30.0</span>, <span class=\"number\">30.7</span>, <span class=\"number\">31.0</span>, <span class=\"number\">31.0</span>, </span><br><span class=\"line\">                <span class=\"number\">31.5</span>, <span class=\"number\">32.0</span>, <span class=\"number\">32.0</span>, <span class=\"number\">32.0</span>, <span class=\"number\">33.0</span>, <span class=\"number\">33.0</span>, <span class=\"number\">33.5</span>, <span class=\"number\">33.5</span>, <span class=\"number\">34.0</span>, <span class=\"number\">34.0</span>, <span class=\"number\">34.5</span>, <span class=\"number\">35.0</span>, </span><br><span class=\"line\">                <span class=\"number\">35.0</span>, <span class=\"number\">35.0</span>, <span class=\"number\">35.0</span>, <span class=\"number\">36.0</span>, <span class=\"number\">36.0</span>, <span class=\"number\">37.0</span>, <span class=\"number\">38.5</span>, <span class=\"number\">38.5</span>, <span class=\"number\">39.5</span>, <span class=\"number\">41.0</span>, <span class=\"number\">41.0</span>, <span class=\"number\">9.8</span>, </span><br><span class=\"line\">                <span class=\"number\">10.5</span>, <span class=\"number\">10.6</span>, <span class=\"number\">11.0</span>, <span class=\"number\">11.2</span>, <span class=\"number\">11.3</span>, <span class=\"number\">11.8</span>, <span class=\"number\">11.8</span>, <span class=\"number\">12.0</span>, <span class=\"number\">12.2</span>, <span class=\"number\">12.4</span>, <span class=\"number\">13.0</span>, <span class=\"number\">14.3</span>, <span class=\"number\">15.0</span>]</span><br><span class=\"line\">fish_weight = [<span class=\"number\">242.0</span>, <span class=\"number\">290.0</span>, <span class=\"number\">340.0</span>, <span class=\"number\">363.0</span>, <span class=\"number\">430.0</span>, <span class=\"number\">450.0</span>, <span class=\"number\">500.0</span>, <span class=\"number\">390.0</span>, <span class=\"number\">450.0</span>, <span class=\"number\">500.0</span>, <span class=\"number\">475.0</span>, <span class=\"number\">500.0</span>, </span><br><span class=\"line\">                <span class=\"number\">500.0</span>, <span class=\"number\">340.0</span>, <span class=\"number\">600.0</span>, <span class=\"number\">600.0</span>, <span class=\"number\">700.0</span>, <span class=\"number\">700.0</span>, <span class=\"number\">610.0</span>, <span class=\"number\">650.0</span>, <span class=\"number\">575.0</span>, <span class=\"number\">685.0</span>, <span class=\"number\">620.0</span>, <span class=\"number\">680.0</span>, </span><br><span class=\"line\">                <span class=\"number\">700.0</span>, <span class=\"number\">725.0</span>, <span class=\"number\">720.0</span>, <span class=\"number\">714.0</span>, <span class=\"number\">850.0</span>, <span class=\"number\">1000.0</span>, <span class=\"number\">920.0</span>, <span class=\"number\">955.0</span>, <span class=\"number\">925.0</span>, <span class=\"number\">975.0</span>, <span class=\"number\">950.0</span>, <span class=\"number\">6.7</span>, </span><br><span class=\"line\">                <span class=\"number\">7.5</span>, <span class=\"number\">7.0</span>, <span class=\"number\">9.7</span>, <span class=\"number\">9.8</span>, <span class=\"number\">8.7</span>, <span class=\"number\">10.0</span>, <span class=\"number\">9.9</span>, <span class=\"number\">9.8</span>, <span class=\"number\">12.2</span>, <span class=\"number\">13.4</span>, <span class=\"number\">12.2</span>, <span class=\"number\">19.7</span>, <span class=\"number\">19.9</span>]</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># column_stack() 활용</span></span><br><span class=\"line\"><span class=\"comment\"># 리스트 만들고 2차원 변형하고 배열하는 그 과정들을 생략</span></span><br><span class=\"line\">np.column_stack(([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span> ,<span class=\"number\">5</span> ,<span class=\"number\">6</span>]))</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([[1, 4],\n       [2, 5],\n       [3, 6]])\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fish_data = np.column_stack((fish_length, fish_weight))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(fish_data[:<span class=\"number\">5</span>])</span><br></pre></td></tr></table></figure>\n\n<pre><code>[[ 25.4 242. ]\n [ 26.3 290. ]\n [ 26.5 340. ]\n [ 29.  363. ]\n [ 29.  430. ]]\n</code></pre>\n<ul>\n<li>종속변수 &#x3D; Y &#x3D; 타겟 데이터 &#x3D; Target</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fish_target = np.concatenate((np.ones(<span class=\"number\">35</span>),np.zeros(<span class=\"number\">14</span>)))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(fish_target)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n 0.]\n</code></pre>\n<h3 id=\"scikit-learn-훈련세트와-테스트-세트-나누기\"><a href=\"#scikit-learn-훈련세트와-테스트-세트-나누기\" class=\"headerlink\" title=\"scikit-learn 훈련세트와 테스트 세트 나누기\"></a>scikit-learn 훈련세트와 테스트 세트 나누기</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 위에 두줄은 암기!!</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\">train_input, test_input, train_target, test_target = train_test_split(</span><br><span class=\"line\">    <span class=\"comment\"># 독립변수, 종속변수, 난수 고정</span></span><br><span class=\"line\">    fish_data, fish_target, random_state = <span class=\"number\">42</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">train_input.shape, test_input.shape, train_target.shape, test_target.shape</span><br><span class=\"line\"><span class=\"comment\"># 항상 변수가 같은지 체크(2, 2, 0, 0 등)</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>((36, 2), (13, 2), (36,), (13,))\n</code></pre>\n<ul>\n<li>도미와 빙어가 잘 섞여 있는지 확인하기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(test_target)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[1. 0. 0. 0. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n</code></pre>\n<ul>\n<li>35(도미) : 14(빙어)<ul>\n<li>2.5 : 1 비율</li>\n</ul>\n</li>\n<li>테스트 셋<ul>\n<li>3.3 : 1 비율</li>\n</ul>\n</li>\n<li>비율이 맞지 않으면 최종적인 머신러닝 결괏값이 왜곡될 수 있다.</li>\n</ul>\n<h2 id=\"층화-샘플링\"><a href=\"#층화-샘플링\" class=\"headerlink\" title=\"층화 샘플링\"></a>층화 샘플링</h2><ul>\n<li>기초 통계, 설문조사</li>\n<li>비율</li>\n<li>여론조사<ul>\n<li>남성 속옷 판매회사에서는 속옷을 구매하는 비율(남자 9, 여자1)</li>\n<li>그런데 신제품 출시시 (남자 5, 여자 5) 비율의 설문이면 결과가 왜곡될 수 있다.</li>\n</ul>\n</li>\n<li>stratify &#x3D; y, 옵션 함수 사용</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">train_input, test_input, train_target, test_target = train_test_split(</span><br><span class=\"line\">    <span class=\"comment\"># 독립변수, 종속변수, 난수 고정</span></span><br><span class=\"line\">    fish_data, fish_target, stratify = fish_target, random_state = <span class=\"number\">42</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">train_input.shape, test_input.shape, train_target.shape, test_target.shape</span><br><span class=\"line\"><span class=\"comment\"># 항상 변수가 같은지 체크(2, 2, 0, 0 등)</span></span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(test_target)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[1. 0. 0. 0. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n</code></pre>\n<ul>\n<li>테스트 세트의 비율이 2.25:1</li>\n</ul>\n<h2 id=\"수상한-도미-한-마리\"><a href=\"#수상한-도미-한-마리\" class=\"headerlink\" title=\"수상한 도미 한 마리\"></a>수상한 도미 한 마리</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.neighbors <span class=\"keyword\">import</span> KNeighborsClassifier</span><br><span class=\"line\">kn = KNeighborsClassifier()</span><br><span class=\"line\">kn.fit(train_input, train_target)</span><br><span class=\"line\">kn.score(test_input, test_target)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>1.0\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(kn.predict([[<span class=\"number\">25</span>,<span class=\"number\">150</span>]]))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[0.]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\">fig, ax = plt.subplots()</span><br><span class=\"line\">ax.scatter(train_input[:,<span class=\"number\">0</span>], train_input[:,<span class=\"number\">1</span>])</span><br><span class=\"line\">ax.scatter(<span class=\"number\">25</span>, <span class=\"number\">150</span>, marker=<span class=\"string\">&#x27;^&#x27;</span>)     <span class=\"comment\"># marker = &#x27;^&#x27; 매개변수 모양을 지정하는 것(주황색 삼각형)</span></span><br><span class=\"line\">ax.set_xlabel(<span class=\"string\">&quot;length&quot;</span>)</span><br><span class=\"line\">ax.set_ylabel(<span class=\"string\">&quot;weight&quot;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0630/output_69_0.png\" alt=\"png\"></p>\n<ul>\n<li>왜 도미 쪽 데이터가 더 가까운데 빙어로 인식했을까?</li>\n<li>알고리즘 문제</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">distances, indexes = kn.kneighbors([[<span class=\"number\">25</span>,<span class=\"number\">150</span>,]])</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\">fig, ax = plt.subplots()</span><br><span class=\"line\">ax.scatter(train_input[:,<span class=\"number\">0</span>], train_input[:,<span class=\"number\">1</span>])</span><br><span class=\"line\">ax.scatter(<span class=\"number\">25</span>, <span class=\"number\">150</span>, marker=<span class=\"string\">&#x27;^&#x27;</span>)     <span class=\"comment\"># marker = &#x27;^&#x27; 매개변수 모양을 지정하는 것(주황색 삼각형)</span></span><br><span class=\"line\">ax.scatter(train_input[indexes,<span class=\"number\">0</span>], train_input[indexes,<span class=\"number\">1</span>], marker=<span class=\"string\">&#x27;D&#x27;</span>)  <span class=\"comment\"># 이웃 샘플 5개를 다이아몬드로 표시</span></span><br><span class=\"line\">ax.set_xlabel(<span class=\"string\">&quot;length&quot;</span>)</span><br><span class=\"line\">ax.set_ylabel(<span class=\"string\">&quot;weight&quot;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0630/output_71_0.png\" alt=\"png\"></p>\n<ul>\n<li>두 특성(길이와 무게)의 값이 놓인 범위가 매우다름</li>\n<li>알고리즘은 두 특성(길이, 무게)을 같다고 판단함</li>\n<li>두 특성의 스케일이 같도록 통계 처리가 필요<ul>\n<li>Feature Engineering</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"머신러닝-진행시-습관적으로-사용할-순서-1\"><a href=\"#머신러닝-진행시-습관적으로-사용할-순서-1\" class=\"headerlink\" title=\"머신러닝 진행시 습관적으로 사용할 순서\"></a>머신러닝 진행시 습관적으로 사용할 순서</h2><ul>\n<li>전체데이터 전처리(결측치 처리, 이상치 처리)</li>\n<li>데이터 분리 (임의 샘플링 &lt; 층화 샘플링)</li>\n<li>Feature Engineering</li>\n</ul>\n<h3 id=\"표준점수\"><a href=\"#표준점수\" class=\"headerlink\" title=\"표준점수\"></a>표준점수</h3><ul>\n<li>z 점수</li>\n<li>(산술식 찾아 채워보기)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mean = np.mean(train_input, axis = <span class=\"number\">0</span>)</span><br><span class=\"line\">std = np.std(train_input, axis = <span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mean, std)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[ 26.175      418.08888889] [ 10.21073441 321.67847023]\n</code></pre>\n<ul>\n<li>표준 점수 구하기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 브로드캐스팅 서로 다른 배열을 계산할 때</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(train_input.shape, mean.shape, std.shape)</span><br><span class=\"line\">train_scaled = (train_input - mean) / std     <span class=\"comment\"># train_scaled 로 데이터 전처리 진행</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>(36, 2) (2,) (2,)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new = ([<span class=\"number\">25</span>, <span class=\"number\">150</span>] - mean) / std</span><br><span class=\"line\">plt.scatter(train_scaled[:,<span class=\"number\">0</span>], train_scaled[:,<span class=\"number\">1</span>])</span><br><span class=\"line\">plt.scatter(new[<span class=\"number\">0</span>], new[<span class=\"number\">1</span>], marker=<span class=\"string\">&#x27;^&#x27;</span>)     <span class=\"comment\"># marker = &#x27;^&#x27; 매개변수 모양을 지정하는 것(주황색 삼각형)</span></span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&quot;length&quot;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&quot;weight&quot;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0630/output_77_0.png\" alt=\"png\"></p>\n<ul>\n<li><p>통계처리 전 : KNN –&gt; 예측이 틀렸음</p>\n</li>\n<li><p>통계처리 후 : KNN –&gt; 예측이 정확하게 맞음<br>– 통계처리 –&gt; Feature Engineering</p>\n</li>\n<li><p>모형학습</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kn.fit(train_scaled, train_target)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>KNeighborsClassifier()\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">test_scaled = (test_input -mean) / std</span><br><span class=\"line\">kn.score(test_scaled, test_target)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>1.0\n</code></pre>\n<ul>\n<li>예측 해보기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(kn.predict([new]))</span><br><span class=\"line\">distances, indexes = kn.kneighbors([new])</span><br><span class=\"line\">plt.scatter(train_scaled[:,<span class=\"number\">0</span>], train_scaled[:,<span class=\"number\">1</span>])</span><br><span class=\"line\">plt.scatter(new[<span class=\"number\">0</span>], new[<span class=\"number\">1</span>], marker=<span class=\"string\">&#x27;^&#x27;</span>)</span><br><span class=\"line\">plt.scatter(train_scaled[indexes,<span class=\"number\">0</span>], train_scaled[indexes,<span class=\"number\">1</span>], marker=<span class=\"string\">&#x27;D&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;length&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;weight&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n<pre><code>[1.]\n</code></pre>\n<p><img src=\"/images/0630/output_83_1.png\" alt=\"png\"></p>\n"},{"title":"day 0701_ch3","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","thumbnailImage":"python.png","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-07-01T08:50:30.000Z","_content":"\n데이터 가공, 시각화, 모델링, 선형회귀\n<!-- excerpt -->\n\n## 데이터 불러오기\n\n\n```python\nimport numpy as np\n\nperch_length = np.array(\n    [8.4, 13.7, 15.0, 16.2, 17.4, 18.0, 18.7, 19.0, 19.6, 20.0, \n     21.0, 21.0, 21.0, 21.3, 22.0, 22.0, 22.0, 22.0, 22.0, 22.5, \n     22.5, 22.7, 23.0, 23.5, 24.0, 24.0, 24.6, 25.0, 25.6, 26.5, \n     27.3, 27.5, 27.5, 27.5, 28.0, 28.7, 30.0, 32.8, 34.5, 35.0, \n     36.5, 36.0, 37.0, 37.0, 39.0, 39.0, 39.0, 40.0, 40.0, 40.0, \n     40.0, 42.0, 43.0, 43.0, 43.5, 44.0]\n     )\nperch_weight = np.array(\n    [5.9, 32.0, 40.0, 51.5, 70.0, 100.0, 78.0, 80.0, 85.0, 85.0, \n     110.0, 115.0, 125.0, 130.0, 120.0, 120.0, 130.0, 135.0, 110.0, \n     130.0, 150.0, 145.0, 150.0, 170.0, 225.0, 145.0, 188.0, 180.0, \n     197.0, 218.0, 300.0, 260.0, 265.0, 250.0, 250.0, 300.0, 320.0, \n     514.0, 556.0, 840.0, 685.0, 700.0, 700.0, 690.0, 900.0, 650.0, \n     820.0, 850.0, 900.0, 1015.0, 820.0, 1100.0, 1000.0, 1100.0, \n     1000.0, 1000.0]\n     )\n\nprint(perch_length.shape, perch_weight.shape)\n```\n\n    (56,) (56,)\n    \n\n## 데이터 가공\n\n\n```python\n# 훈련 세트와 테스트 세트로 나눈 후, 1차원 -> 2차원 배열로 변환\nfrom sklearn.model_selection import train_test_split\ntrain_input, test_input, train_target, test_target = train_test_split(\n    #  독립변수,   종속변수\n    perch_length, perch_weight, random_state = 42\n)\n\ntrain_input.shape, test_input.shape, train_target.shape, test_target.shape\n```\n\n\n\n\n    ((42,), (14,), (42,), (14,))\n\n\n\n\n```python\n# 1차원 -> 2차원 배열\ntrain_input = train_input.reshape(-1, 1)\ntest_input = test_input.reshape(-1, 1)\n\ntrain_input.shape, test_input.shape\n```\n\n## 데이터 시각화 -> 데이터 재가공\n\n## 모델링\n\n\n```python\nfrom sklearn.neighbors import KNeighborsRegressor\nknr = KNeighborsRegressor(n_neighbors=3)\n\n# 모형 훈련\nknr.fit(train_input, train_target)\n```\n\n\n\n\n    KNeighborsRegressor(n_neighbors=3)\n\n\n\n- 원래는 모델 평가 해야됨\n\n## 모델 예측\n- 서비스를 함\n\n\n```python\n# 50cm 농어의 무게 데이터\nprint(knr.predict([[50]]))\n```\n\n    [1033.33333333]\n    \n\n## 모형 평가를 위한 시각화\n\n\n```python\nimport matplotlib.pyplot as plt\n\n# 50cm 농어의 이웃을 3으로 하는 모델\ndistances, indexes = knr.kneighbors([[50]])\n\nprint(distances, indexes)\n\n# 훈련 세트의 산점도\nplt.scatter(train_input, train_target)\n# 훈련 세트 중에서 이웃 샘플만 다시 그립니다.\n\nplt.scatter(train_input[indexes], train_target[indexes],marker='D')\nplt.scatter(50, 1033, marker='^')\nplt.xlabel('length')\nplt.ylabel('weight')\nplt.show()\n```\n\n    [[6. 7. 7.]] [[34  8 14]]\n    \n\n\n    \n![](/images/0701/output_12_1.png)\n    \n\n\n- 머신러닝 = 알고리즘\n- 머신러닝/딥러닝 = 실험\n- 실험을 한다 = 다양한 방법을 써보는 것\n- 즉, 다양한 알고리즘을 써보는 것\n  + 그 중에 대중적인 몇개의 알고리즘만 기억\n- 각종 영어 최신 논문 https://paperswithcode.com/\n\n## 선형회귀\n- 136p.\n\n\n```python\n# R 이랑 방식 똑같음\n#lr = lm(종속변수 ~ 독립변수, data)\n#summary()\n\n# Python\nfrom sklearn.linear_model import LinearRegression\n\nlr = LinearRegression()\n\n# 선형 회귀 모델 훈련\nlr.fit(train_input, train_target)\n\n# 모델 예측\nprint(lr.predict([[50]]))\n```\n\n    [1241.83860323]\n    \n\n\n```python\nprint(lr.coef_, lr.intercept_)\n```\n\n    [39.01714496] -709.0186449535477\n    \n\n## 다항 회귀\n- 농어 1cm = -650g\n- 직선의 기울기 대신, 곡선의 기울기를 쓰자.\n- 직선 = 1차 방정식, 곡선 = 2차 방정식\n- $무게 = a길이^2 + b길이 + 절편$\n\n\n```python\n# p.140\ntrain_poly = np.column_stack((train_input ** 2, train_input))\ntest_poly = np.column_stack((test_input ** 2, test_input))\n\nprint(train_poly.shape, test_poly.shape)\nprint(\"----train_poly---\")\nprint(train_poly[:3])\nprint(\"----test_poly---\")\nprint(test_poly[:3])\n```\n\n    (42, 2) (14, 2)\n    ----train_poly---\n    [[384.16  19.6 ]\n     [484.    22.  ]\n     [349.69  18.7 ]]\n    ----test_poly---\n    [[ 70.56   8.4 ]\n     [324.    18.  ]\n     [756.25  27.5 ]]\n    \n\n\n```python\nlr = LinearRegression()\nlr.fit(train_poly, train_target)\nprint(lr.predict([[50 ** 2, 50]]))\n```\n\n    [1573.98423528]\n    \n\n\n```python\nprint(lr.coef_, lr.intercept_)\n```\n\n    [  1.01433211 -21.55792498] 116.0502107827827\n    \n\n- 무게 = 1.01 x $길이^2$ - 21.6 x 길이 + 116.05\n","source":"_posts/day0701_ch03.md","raw":"---\ntitle: \"day 0701_ch3\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: Python\nthumbnailImage: python.png\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-07-01 17:50:30'\n---\n\n데이터 가공, 시각화, 모델링, 선형회귀\n<!-- excerpt -->\n\n## 데이터 불러오기\n\n\n```python\nimport numpy as np\n\nperch_length = np.array(\n    [8.4, 13.7, 15.0, 16.2, 17.4, 18.0, 18.7, 19.0, 19.6, 20.0, \n     21.0, 21.0, 21.0, 21.3, 22.0, 22.0, 22.0, 22.0, 22.0, 22.5, \n     22.5, 22.7, 23.0, 23.5, 24.0, 24.0, 24.6, 25.0, 25.6, 26.5, \n     27.3, 27.5, 27.5, 27.5, 28.0, 28.7, 30.0, 32.8, 34.5, 35.0, \n     36.5, 36.0, 37.0, 37.0, 39.0, 39.0, 39.0, 40.0, 40.0, 40.0, \n     40.0, 42.0, 43.0, 43.0, 43.5, 44.0]\n     )\nperch_weight = np.array(\n    [5.9, 32.0, 40.0, 51.5, 70.0, 100.0, 78.0, 80.0, 85.0, 85.0, \n     110.0, 115.0, 125.0, 130.0, 120.0, 120.0, 130.0, 135.0, 110.0, \n     130.0, 150.0, 145.0, 150.0, 170.0, 225.0, 145.0, 188.0, 180.0, \n     197.0, 218.0, 300.0, 260.0, 265.0, 250.0, 250.0, 300.0, 320.0, \n     514.0, 556.0, 840.0, 685.0, 700.0, 700.0, 690.0, 900.0, 650.0, \n     820.0, 850.0, 900.0, 1015.0, 820.0, 1100.0, 1000.0, 1100.0, \n     1000.0, 1000.0]\n     )\n\nprint(perch_length.shape, perch_weight.shape)\n```\n\n    (56,) (56,)\n    \n\n## 데이터 가공\n\n\n```python\n# 훈련 세트와 테스트 세트로 나눈 후, 1차원 -> 2차원 배열로 변환\nfrom sklearn.model_selection import train_test_split\ntrain_input, test_input, train_target, test_target = train_test_split(\n    #  독립변수,   종속변수\n    perch_length, perch_weight, random_state = 42\n)\n\ntrain_input.shape, test_input.shape, train_target.shape, test_target.shape\n```\n\n\n\n\n    ((42,), (14,), (42,), (14,))\n\n\n\n\n```python\n# 1차원 -> 2차원 배열\ntrain_input = train_input.reshape(-1, 1)\ntest_input = test_input.reshape(-1, 1)\n\ntrain_input.shape, test_input.shape\n```\n\n## 데이터 시각화 -> 데이터 재가공\n\n## 모델링\n\n\n```python\nfrom sklearn.neighbors import KNeighborsRegressor\nknr = KNeighborsRegressor(n_neighbors=3)\n\n# 모형 훈련\nknr.fit(train_input, train_target)\n```\n\n\n\n\n    KNeighborsRegressor(n_neighbors=3)\n\n\n\n- 원래는 모델 평가 해야됨\n\n## 모델 예측\n- 서비스를 함\n\n\n```python\n# 50cm 농어의 무게 데이터\nprint(knr.predict([[50]]))\n```\n\n    [1033.33333333]\n    \n\n## 모형 평가를 위한 시각화\n\n\n```python\nimport matplotlib.pyplot as plt\n\n# 50cm 농어의 이웃을 3으로 하는 모델\ndistances, indexes = knr.kneighbors([[50]])\n\nprint(distances, indexes)\n\n# 훈련 세트의 산점도\nplt.scatter(train_input, train_target)\n# 훈련 세트 중에서 이웃 샘플만 다시 그립니다.\n\nplt.scatter(train_input[indexes], train_target[indexes],marker='D')\nplt.scatter(50, 1033, marker='^')\nplt.xlabel('length')\nplt.ylabel('weight')\nplt.show()\n```\n\n    [[6. 7. 7.]] [[34  8 14]]\n    \n\n\n    \n![](/images/0701/output_12_1.png)\n    \n\n\n- 머신러닝 = 알고리즘\n- 머신러닝/딥러닝 = 실험\n- 실험을 한다 = 다양한 방법을 써보는 것\n- 즉, 다양한 알고리즘을 써보는 것\n  + 그 중에 대중적인 몇개의 알고리즘만 기억\n- 각종 영어 최신 논문 https://paperswithcode.com/\n\n## 선형회귀\n- 136p.\n\n\n```python\n# R 이랑 방식 똑같음\n#lr = lm(종속변수 ~ 독립변수, data)\n#summary()\n\n# Python\nfrom sklearn.linear_model import LinearRegression\n\nlr = LinearRegression()\n\n# 선형 회귀 모델 훈련\nlr.fit(train_input, train_target)\n\n# 모델 예측\nprint(lr.predict([[50]]))\n```\n\n    [1241.83860323]\n    \n\n\n```python\nprint(lr.coef_, lr.intercept_)\n```\n\n    [39.01714496] -709.0186449535477\n    \n\n## 다항 회귀\n- 농어 1cm = -650g\n- 직선의 기울기 대신, 곡선의 기울기를 쓰자.\n- 직선 = 1차 방정식, 곡선 = 2차 방정식\n- $무게 = a길이^2 + b길이 + 절편$\n\n\n```python\n# p.140\ntrain_poly = np.column_stack((train_input ** 2, train_input))\ntest_poly = np.column_stack((test_input ** 2, test_input))\n\nprint(train_poly.shape, test_poly.shape)\nprint(\"----train_poly---\")\nprint(train_poly[:3])\nprint(\"----test_poly---\")\nprint(test_poly[:3])\n```\n\n    (42, 2) (14, 2)\n    ----train_poly---\n    [[384.16  19.6 ]\n     [484.    22.  ]\n     [349.69  18.7 ]]\n    ----test_poly---\n    [[ 70.56   8.4 ]\n     [324.    18.  ]\n     [756.25  27.5 ]]\n    \n\n\n```python\nlr = LinearRegression()\nlr.fit(train_poly, train_target)\nprint(lr.predict([[50 ** 2, 50]]))\n```\n\n    [1573.98423528]\n    \n\n\n```python\nprint(lr.coef_, lr.intercept_)\n```\n\n    [  1.01433211 -21.55792498] 116.0502107827827\n    \n\n- 무게 = 1.01 x $길이^2$ - 21.6 x 길이 + 116.05\n","slug":"day0701_ch03","published":1,"updated":"2022-07-21T12:49:59.622Z","_id":"cl5fcok7v000xjku0d6p71vpd","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n<h2 id=\"데이터-불러오기\"><a href=\"#데이터-불러오기\" class=\"headerlink\" title=\"데이터 불러오기\"></a>데이터 불러오기</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\">perch_length = np.array(</span><br><span class=\"line\">    [<span class=\"number\">8.4</span>, <span class=\"number\">13.7</span>, <span class=\"number\">15.0</span>, <span class=\"number\">16.2</span>, <span class=\"number\">17.4</span>, <span class=\"number\">18.0</span>, <span class=\"number\">18.7</span>, <span class=\"number\">19.0</span>, <span class=\"number\">19.6</span>, <span class=\"number\">20.0</span>, </span><br><span class=\"line\">     <span class=\"number\">21.0</span>, <span class=\"number\">21.0</span>, <span class=\"number\">21.0</span>, <span class=\"number\">21.3</span>, <span class=\"number\">22.0</span>, <span class=\"number\">22.0</span>, <span class=\"number\">22.0</span>, <span class=\"number\">22.0</span>, <span class=\"number\">22.0</span>, <span class=\"number\">22.5</span>, </span><br><span class=\"line\">     <span class=\"number\">22.5</span>, <span class=\"number\">22.7</span>, <span class=\"number\">23.0</span>, <span class=\"number\">23.5</span>, <span class=\"number\">24.0</span>, <span class=\"number\">24.0</span>, <span class=\"number\">24.6</span>, <span class=\"number\">25.0</span>, <span class=\"number\">25.6</span>, <span class=\"number\">26.5</span>, </span><br><span class=\"line\">     <span class=\"number\">27.3</span>, <span class=\"number\">27.5</span>, <span class=\"number\">27.5</span>, <span class=\"number\">27.5</span>, <span class=\"number\">28.0</span>, <span class=\"number\">28.7</span>, <span class=\"number\">30.0</span>, <span class=\"number\">32.8</span>, <span class=\"number\">34.5</span>, <span class=\"number\">35.0</span>, </span><br><span class=\"line\">     <span class=\"number\">36.5</span>, <span class=\"number\">36.0</span>, <span class=\"number\">37.0</span>, <span class=\"number\">37.0</span>, <span class=\"number\">39.0</span>, <span class=\"number\">39.0</span>, <span class=\"number\">39.0</span>, <span class=\"number\">40.0</span>, <span class=\"number\">40.0</span>, <span class=\"number\">40.0</span>, </span><br><span class=\"line\">     <span class=\"number\">40.0</span>, <span class=\"number\">42.0</span>, <span class=\"number\">43.0</span>, <span class=\"number\">43.0</span>, <span class=\"number\">43.5</span>, <span class=\"number\">44.0</span>]</span><br><span class=\"line\">     )</span><br><span class=\"line\">perch_weight = np.array(</span><br><span class=\"line\">    [<span class=\"number\">5.9</span>, <span class=\"number\">32.0</span>, <span class=\"number\">40.0</span>, <span class=\"number\">51.5</span>, <span class=\"number\">70.0</span>, <span class=\"number\">100.0</span>, <span class=\"number\">78.0</span>, <span class=\"number\">80.0</span>, <span class=\"number\">85.0</span>, <span class=\"number\">85.0</span>, </span><br><span class=\"line\">     <span class=\"number\">110.0</span>, <span class=\"number\">115.0</span>, <span class=\"number\">125.0</span>, <span class=\"number\">130.0</span>, <span class=\"number\">120.0</span>, <span class=\"number\">120.0</span>, <span class=\"number\">130.0</span>, <span class=\"number\">135.0</span>, <span class=\"number\">110.0</span>, </span><br><span class=\"line\">     <span class=\"number\">130.0</span>, <span class=\"number\">150.0</span>, <span class=\"number\">145.0</span>, <span class=\"number\">150.0</span>, <span class=\"number\">170.0</span>, <span class=\"number\">225.0</span>, <span class=\"number\">145.0</span>, <span class=\"number\">188.0</span>, <span class=\"number\">180.0</span>, </span><br><span class=\"line\">     <span class=\"number\">197.0</span>, <span class=\"number\">218.0</span>, <span class=\"number\">300.0</span>, <span class=\"number\">260.0</span>, <span class=\"number\">265.0</span>, <span class=\"number\">250.0</span>, <span class=\"number\">250.0</span>, <span class=\"number\">300.0</span>, <span class=\"number\">320.0</span>, </span><br><span class=\"line\">     <span class=\"number\">514.0</span>, <span class=\"number\">556.0</span>, <span class=\"number\">840.0</span>, <span class=\"number\">685.0</span>, <span class=\"number\">700.0</span>, <span class=\"number\">700.0</span>, <span class=\"number\">690.0</span>, <span class=\"number\">900.0</span>, <span class=\"number\">650.0</span>, </span><br><span class=\"line\">     <span class=\"number\">820.0</span>, <span class=\"number\">850.0</span>, <span class=\"number\">900.0</span>, <span class=\"number\">1015.0</span>, <span class=\"number\">820.0</span>, <span class=\"number\">1100.0</span>, <span class=\"number\">1000.0</span>, <span class=\"number\">1100.0</span>, </span><br><span class=\"line\">     <span class=\"number\">1000.0</span>, <span class=\"number\">1000.0</span>]</span><br><span class=\"line\">     )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(perch_length.shape, perch_weight.shape)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(56,) (56,)\n</code></pre>\n<h2 id=\"데이터-가공\"><a href=\"#데이터-가공\" class=\"headerlink\" title=\"데이터 가공\"></a>데이터 가공</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 훈련 세트와 테스트 세트로 나눈 후, 1차원 -&gt; 2차원 배열로 변환</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\">train_input, test_input, train_target, test_target = train_test_split(</span><br><span class=\"line\">    <span class=\"comment\">#  독립변수,   종속변수</span></span><br><span class=\"line\">    perch_length, perch_weight, random_state = <span class=\"number\">42</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">train_input.shape, test_input.shape, train_target.shape, test_target.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>((42,), (14,), (42,), (14,))\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1차원 -&gt; 2차원 배열</span></span><br><span class=\"line\">train_input = train_input.reshape(-<span class=\"number\">1</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">test_input = test_input.reshape(-<span class=\"number\">1</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">train_input.shape, test_input.shape</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"데이터-시각화-gt-데이터-재가공\"><a href=\"#데이터-시각화-gt-데이터-재가공\" class=\"headerlink\" title=\"데이터 시각화 -&gt; 데이터 재가공\"></a>데이터 시각화 -&gt; 데이터 재가공</h2><h2 id=\"모델링\"><a href=\"#모델링\" class=\"headerlink\" title=\"모델링\"></a>모델링</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.neighbors <span class=\"keyword\">import</span> KNeighborsRegressor</span><br><span class=\"line\">knr = KNeighborsRegressor(n_neighbors=<span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 모형 훈련</span></span><br><span class=\"line\">knr.fit(train_input, train_target)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>KNeighborsRegressor(n_neighbors=3)\n</code></pre>\n<ul>\n<li>원래는 모델 평가 해야됨</li>\n</ul>\n<h2 id=\"모델-예측\"><a href=\"#모델-예측\" class=\"headerlink\" title=\"모델 예측\"></a>모델 예측</h2><ul>\n<li>서비스를 함</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 50cm 농어의 무게 데이터</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(knr.predict([[<span class=\"number\">50</span>]]))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[1033.33333333]\n</code></pre>\n<h2 id=\"모형-평가를-위한-시각화\"><a href=\"#모형-평가를-위한-시각화\" class=\"headerlink\" title=\"모형 평가를 위한 시각화\"></a>모형 평가를 위한 시각화</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 50cm 농어의 이웃을 3으로 하는 모델</span></span><br><span class=\"line\">distances, indexes = knr.kneighbors([[<span class=\"number\">50</span>]])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(distances, indexes)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 훈련 세트의 산점도</span></span><br><span class=\"line\">plt.scatter(train_input, train_target)</span><br><span class=\"line\"><span class=\"comment\"># 훈련 세트 중에서 이웃 샘플만 다시 그립니다.</span></span><br><span class=\"line\"></span><br><span class=\"line\">plt.scatter(train_input[indexes], train_target[indexes],marker=<span class=\"string\">&#x27;D&#x27;</span>)</span><br><span class=\"line\">plt.scatter(<span class=\"number\">50</span>, <span class=\"number\">1033</span>, marker=<span class=\"string\">&#x27;^&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;length&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;weight&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n<pre><code>[[6. 7. 7.]] [[34  8 14]]\n</code></pre>\n<p><img src=\"/images/0701/output_12_1.png\"></p>\n<ul>\n<li>머신러닝 &#x3D; 알고리즘</li>\n<li>머신러닝&#x2F;딥러닝 &#x3D; 실험</li>\n<li>실험을 한다 &#x3D; 다양한 방법을 써보는 것</li>\n<li>즉, 다양한 알고리즘을 써보는 것<ul>\n<li>그 중에 대중적인 몇개의 알고리즘만 기억</li>\n</ul>\n</li>\n<li>각종 영어 최신 논문 <a href=\"https://paperswithcode.com/\">https://paperswithcode.com/</a></li>\n</ul>\n<h2 id=\"선형회귀\"><a href=\"#선형회귀\" class=\"headerlink\" title=\"선형회귀\"></a>선형회귀</h2><ul>\n<li>136p.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># R 이랑 방식 똑같음</span></span><br><span class=\"line\"><span class=\"comment\">#lr = lm(종속변수 ~ 독립변수, data)</span></span><br><span class=\"line\"><span class=\"comment\">#summary()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Python</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LinearRegression</span><br><span class=\"line\"></span><br><span class=\"line\">lr = LinearRegression()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 선형 회귀 모델 훈련</span></span><br><span class=\"line\">lr.fit(train_input, train_target)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 모델 예측</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(lr.predict([[<span class=\"number\">50</span>]]))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[1241.83860323]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(lr.coef_, lr.intercept_)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[39.01714496] -709.0186449535477\n</code></pre>\n<h2 id=\"다항-회귀\"><a href=\"#다항-회귀\" class=\"headerlink\" title=\"다항 회귀\"></a>다항 회귀</h2><ul>\n<li>농어 1cm &#x3D; -650g</li>\n<li>직선의 기울기 대신, 곡선의 기울기를 쓰자.</li>\n<li>직선 &#x3D; 1차 방정식, 곡선 &#x3D; 2차 방정식</li>\n<li>$무게 &#x3D; a길이^2 + b길이 + 절편$</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># p.140</span></span><br><span class=\"line\">train_poly = np.column_stack((train_input ** <span class=\"number\">2</span>, train_input))</span><br><span class=\"line\">test_poly = np.column_stack((test_input ** <span class=\"number\">2</span>, test_input))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(train_poly.shape, test_poly.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;----train_poly---&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(train_poly[:<span class=\"number\">3</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;----test_poly---&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(test_poly[:<span class=\"number\">3</span>])</span><br></pre></td></tr></table></figure>\n\n<pre><code>(42, 2) (14, 2)\n----train_poly---\n[[384.16  19.6 ]\n [484.    22.  ]\n [349.69  18.7 ]]\n----test_poly---\n[[ 70.56   8.4 ]\n [324.    18.  ]\n [756.25  27.5 ]]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lr = LinearRegression()</span><br><span class=\"line\">lr.fit(train_poly, train_target)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(lr.predict([[<span class=\"number\">50</span> ** <span class=\"number\">2</span>, <span class=\"number\">50</span>]]))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[1573.98423528]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(lr.coef_, lr.intercept_)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[  1.01433211 -21.55792498] 116.0502107827827\n</code></pre>\n<ul>\n<li>무게 &#x3D; 1.01 x $길이^2$ - 21.6 x 길이 + 116.05</li>\n</ul>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/07/01/day0701_ch03/python.png","excerpt":"<p>데이터 가공, 시각화, 모델링, 선형회귀</p>","more":"<p>데이터 가공, 시각화, 모델링, 선형회귀</p>\n<!-- excerpt -->\n\n<h2 id=\"데이터-불러오기\"><a href=\"#데이터-불러오기\" class=\"headerlink\" title=\"데이터 불러오기\"></a>데이터 불러오기</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\">perch_length = np.array(</span><br><span class=\"line\">    [<span class=\"number\">8.4</span>, <span class=\"number\">13.7</span>, <span class=\"number\">15.0</span>, <span class=\"number\">16.2</span>, <span class=\"number\">17.4</span>, <span class=\"number\">18.0</span>, <span class=\"number\">18.7</span>, <span class=\"number\">19.0</span>, <span class=\"number\">19.6</span>, <span class=\"number\">20.0</span>, </span><br><span class=\"line\">     <span class=\"number\">21.0</span>, <span class=\"number\">21.0</span>, <span class=\"number\">21.0</span>, <span class=\"number\">21.3</span>, <span class=\"number\">22.0</span>, <span class=\"number\">22.0</span>, <span class=\"number\">22.0</span>, <span class=\"number\">22.0</span>, <span class=\"number\">22.0</span>, <span class=\"number\">22.5</span>, </span><br><span class=\"line\">     <span class=\"number\">22.5</span>, <span class=\"number\">22.7</span>, <span class=\"number\">23.0</span>, <span class=\"number\">23.5</span>, <span class=\"number\">24.0</span>, <span class=\"number\">24.0</span>, <span class=\"number\">24.6</span>, <span class=\"number\">25.0</span>, <span class=\"number\">25.6</span>, <span class=\"number\">26.5</span>, </span><br><span class=\"line\">     <span class=\"number\">27.3</span>, <span class=\"number\">27.5</span>, <span class=\"number\">27.5</span>, <span class=\"number\">27.5</span>, <span class=\"number\">28.0</span>, <span class=\"number\">28.7</span>, <span class=\"number\">30.0</span>, <span class=\"number\">32.8</span>, <span class=\"number\">34.5</span>, <span class=\"number\">35.0</span>, </span><br><span class=\"line\">     <span class=\"number\">36.5</span>, <span class=\"number\">36.0</span>, <span class=\"number\">37.0</span>, <span class=\"number\">37.0</span>, <span class=\"number\">39.0</span>, <span class=\"number\">39.0</span>, <span class=\"number\">39.0</span>, <span class=\"number\">40.0</span>, <span class=\"number\">40.0</span>, <span class=\"number\">40.0</span>, </span><br><span class=\"line\">     <span class=\"number\">40.0</span>, <span class=\"number\">42.0</span>, <span class=\"number\">43.0</span>, <span class=\"number\">43.0</span>, <span class=\"number\">43.5</span>, <span class=\"number\">44.0</span>]</span><br><span class=\"line\">     )</span><br><span class=\"line\">perch_weight = np.array(</span><br><span class=\"line\">    [<span class=\"number\">5.9</span>, <span class=\"number\">32.0</span>, <span class=\"number\">40.0</span>, <span class=\"number\">51.5</span>, <span class=\"number\">70.0</span>, <span class=\"number\">100.0</span>, <span class=\"number\">78.0</span>, <span class=\"number\">80.0</span>, <span class=\"number\">85.0</span>, <span class=\"number\">85.0</span>, </span><br><span class=\"line\">     <span class=\"number\">110.0</span>, <span class=\"number\">115.0</span>, <span class=\"number\">125.0</span>, <span class=\"number\">130.0</span>, <span class=\"number\">120.0</span>, <span class=\"number\">120.0</span>, <span class=\"number\">130.0</span>, <span class=\"number\">135.0</span>, <span class=\"number\">110.0</span>, </span><br><span class=\"line\">     <span class=\"number\">130.0</span>, <span class=\"number\">150.0</span>, <span class=\"number\">145.0</span>, <span class=\"number\">150.0</span>, <span class=\"number\">170.0</span>, <span class=\"number\">225.0</span>, <span class=\"number\">145.0</span>, <span class=\"number\">188.0</span>, <span class=\"number\">180.0</span>, </span><br><span class=\"line\">     <span class=\"number\">197.0</span>, <span class=\"number\">218.0</span>, <span class=\"number\">300.0</span>, <span class=\"number\">260.0</span>, <span class=\"number\">265.0</span>, <span class=\"number\">250.0</span>, <span class=\"number\">250.0</span>, <span class=\"number\">300.0</span>, <span class=\"number\">320.0</span>, </span><br><span class=\"line\">     <span class=\"number\">514.0</span>, <span class=\"number\">556.0</span>, <span class=\"number\">840.0</span>, <span class=\"number\">685.0</span>, <span class=\"number\">700.0</span>, <span class=\"number\">700.0</span>, <span class=\"number\">690.0</span>, <span class=\"number\">900.0</span>, <span class=\"number\">650.0</span>, </span><br><span class=\"line\">     <span class=\"number\">820.0</span>, <span class=\"number\">850.0</span>, <span class=\"number\">900.0</span>, <span class=\"number\">1015.0</span>, <span class=\"number\">820.0</span>, <span class=\"number\">1100.0</span>, <span class=\"number\">1000.0</span>, <span class=\"number\">1100.0</span>, </span><br><span class=\"line\">     <span class=\"number\">1000.0</span>, <span class=\"number\">1000.0</span>]</span><br><span class=\"line\">     )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(perch_length.shape, perch_weight.shape)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(56,) (56,)\n</code></pre>\n<h2 id=\"데이터-가공\"><a href=\"#데이터-가공\" class=\"headerlink\" title=\"데이터 가공\"></a>데이터 가공</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 훈련 세트와 테스트 세트로 나눈 후, 1차원 -&gt; 2차원 배열로 변환</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\">train_input, test_input, train_target, test_target = train_test_split(</span><br><span class=\"line\">    <span class=\"comment\">#  독립변수,   종속변수</span></span><br><span class=\"line\">    perch_length, perch_weight, random_state = <span class=\"number\">42</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">train_input.shape, test_input.shape, train_target.shape, test_target.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>((42,), (14,), (42,), (14,))\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1차원 -&gt; 2차원 배열</span></span><br><span class=\"line\">train_input = train_input.reshape(-<span class=\"number\">1</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">test_input = test_input.reshape(-<span class=\"number\">1</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">train_input.shape, test_input.shape</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"데이터-시각화-gt-데이터-재가공\"><a href=\"#데이터-시각화-gt-데이터-재가공\" class=\"headerlink\" title=\"데이터 시각화 -&gt; 데이터 재가공\"></a>데이터 시각화 -&gt; 데이터 재가공</h2><h2 id=\"모델링\"><a href=\"#모델링\" class=\"headerlink\" title=\"모델링\"></a>모델링</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.neighbors <span class=\"keyword\">import</span> KNeighborsRegressor</span><br><span class=\"line\">knr = KNeighborsRegressor(n_neighbors=<span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 모형 훈련</span></span><br><span class=\"line\">knr.fit(train_input, train_target)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>KNeighborsRegressor(n_neighbors=3)\n</code></pre>\n<ul>\n<li>원래는 모델 평가 해야됨</li>\n</ul>\n<h2 id=\"모델-예측\"><a href=\"#모델-예측\" class=\"headerlink\" title=\"모델 예측\"></a>모델 예측</h2><ul>\n<li>서비스를 함</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 50cm 농어의 무게 데이터</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(knr.predict([[<span class=\"number\">50</span>]]))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[1033.33333333]\n</code></pre>\n<h2 id=\"모형-평가를-위한-시각화\"><a href=\"#모형-평가를-위한-시각화\" class=\"headerlink\" title=\"모형 평가를 위한 시각화\"></a>모형 평가를 위한 시각화</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 50cm 농어의 이웃을 3으로 하는 모델</span></span><br><span class=\"line\">distances, indexes = knr.kneighbors([[<span class=\"number\">50</span>]])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(distances, indexes)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 훈련 세트의 산점도</span></span><br><span class=\"line\">plt.scatter(train_input, train_target)</span><br><span class=\"line\"><span class=\"comment\"># 훈련 세트 중에서 이웃 샘플만 다시 그립니다.</span></span><br><span class=\"line\"></span><br><span class=\"line\">plt.scatter(train_input[indexes], train_target[indexes],marker=<span class=\"string\">&#x27;D&#x27;</span>)</span><br><span class=\"line\">plt.scatter(<span class=\"number\">50</span>, <span class=\"number\">1033</span>, marker=<span class=\"string\">&#x27;^&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;length&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;weight&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n<pre><code>[[6. 7. 7.]] [[34  8 14]]\n</code></pre>\n<p><img src=\"/images/0701/output_12_1.png\"></p>\n<ul>\n<li>머신러닝 &#x3D; 알고리즘</li>\n<li>머신러닝&#x2F;딥러닝 &#x3D; 실험</li>\n<li>실험을 한다 &#x3D; 다양한 방법을 써보는 것</li>\n<li>즉, 다양한 알고리즘을 써보는 것<ul>\n<li>그 중에 대중적인 몇개의 알고리즘만 기억</li>\n</ul>\n</li>\n<li>각종 영어 최신 논문 <a href=\"https://paperswithcode.com/\">https://paperswithcode.com/</a></li>\n</ul>\n<h2 id=\"선형회귀\"><a href=\"#선형회귀\" class=\"headerlink\" title=\"선형회귀\"></a>선형회귀</h2><ul>\n<li>136p.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># R 이랑 방식 똑같음</span></span><br><span class=\"line\"><span class=\"comment\">#lr = lm(종속변수 ~ 독립변수, data)</span></span><br><span class=\"line\"><span class=\"comment\">#summary()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Python</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LinearRegression</span><br><span class=\"line\"></span><br><span class=\"line\">lr = LinearRegression()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 선형 회귀 모델 훈련</span></span><br><span class=\"line\">lr.fit(train_input, train_target)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 모델 예측</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(lr.predict([[<span class=\"number\">50</span>]]))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[1241.83860323]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(lr.coef_, lr.intercept_)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[39.01714496] -709.0186449535477\n</code></pre>\n<h2 id=\"다항-회귀\"><a href=\"#다항-회귀\" class=\"headerlink\" title=\"다항 회귀\"></a>다항 회귀</h2><ul>\n<li>농어 1cm &#x3D; -650g</li>\n<li>직선의 기울기 대신, 곡선의 기울기를 쓰자.</li>\n<li>직선 &#x3D; 1차 방정식, 곡선 &#x3D; 2차 방정식</li>\n<li>$무게 &#x3D; a길이^2 + b길이 + 절편$</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># p.140</span></span><br><span class=\"line\">train_poly = np.column_stack((train_input ** <span class=\"number\">2</span>, train_input))</span><br><span class=\"line\">test_poly = np.column_stack((test_input ** <span class=\"number\">2</span>, test_input))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(train_poly.shape, test_poly.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;----train_poly---&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(train_poly[:<span class=\"number\">3</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;----test_poly---&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(test_poly[:<span class=\"number\">3</span>])</span><br></pre></td></tr></table></figure>\n\n<pre><code>(42, 2) (14, 2)\n----train_poly---\n[[384.16  19.6 ]\n [484.    22.  ]\n [349.69  18.7 ]]\n----test_poly---\n[[ 70.56   8.4 ]\n [324.    18.  ]\n [756.25  27.5 ]]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lr = LinearRegression()</span><br><span class=\"line\">lr.fit(train_poly, train_target)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(lr.predict([[<span class=\"number\">50</span> ** <span class=\"number\">2</span>, <span class=\"number\">50</span>]]))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[1573.98423528]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(lr.coef_, lr.intercept_)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[  1.01433211 -21.55792498] 116.0502107827827\n</code></pre>\n<ul>\n<li>무게 &#x3D; 1.01 x $길이^2$ - 21.6 x 길이 + 116.05</li>\n</ul>\n"},{"title":"day 0701_ch4","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","thumbnailImage":"python.png","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-07-01T08:50:55.000Z","_content":"\n### 로지스틱 회귀\n<!-- more -->\n\n- 선형 회귀에서 출발\n- 이진 분류 문제 해결\n- 클래스 확률 예측\n- 딥러닝에서도 사용됨\n\n## 교재 177p\n- X가 사각형일 확률 30%\n- X가 삼각형일 확률  확률 20%50%\n- X가 원일\n\n## 데이터 불러오기\n- Species (종속변수=Y)\n- 나머지 Weight, Length, Diagonal, Height, Width 는 독립변수\n\n\n```python\nimport pandas as pd\n\nfish = pd.read_csv('https://bit.ly/fish_csv_data')\nfish.head()\n```\n\n\n\n\n\n  <div id=\"df-4733cf17-6355-45a1-8704-1092d897ce3b\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Species</th>\n      <th>Weight</th>\n      <th>Length</th>\n      <th>Diagonal</th>\n      <th>Height</th>\n      <th>Width</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Bream</td>\n      <td>242.0</td>\n      <td>25.4</td>\n      <td>30.0</td>\n      <td>11.5200</td>\n      <td>4.0200</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Bream</td>\n      <td>290.0</td>\n      <td>26.3</td>\n      <td>31.2</td>\n      <td>12.4800</td>\n      <td>4.3056</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Bream</td>\n      <td>340.0</td>\n      <td>26.5</td>\n      <td>31.1</td>\n      <td>12.3778</td>\n      <td>4.6961</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Bream</td>\n      <td>363.0</td>\n      <td>29.0</td>\n      <td>33.5</td>\n      <td>12.7300</td>\n      <td>4.4555</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Bream</td>\n      <td>430.0</td>\n      <td>29.0</td>\n      <td>34.0</td>\n      <td>12.4440</td>\n      <td>5.1340</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4733cf17-6355-45a1-8704-1092d897ce3b')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n       width=\"24px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n  </svg>\n      </button>\n\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n      <script>\n        const buttonEl =\n          document.querySelector('#df-4733cf17-6355-45a1-8704-1092d897ce3b button.colab-df-convert');\n        buttonEl.style.display =\n          google.colab.kernel.accessAllowed ? 'block' : 'none';\n\n        async function convertToInteractive(key) {\n          const element = document.querySelector('#df-4733cf17-6355-45a1-8704-1092d897ce3b');\n          const dataTable =\n            await google.colab.kernel.invokeFunction('convertToInteractive',\n                                                     [key], {});\n          if (!dataTable) return;\n\n          const docLinkHtml = 'Like what you see? Visit the ' +\n            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n            + ' to learn more about interactive tables.';\n          element.innerHTML = '';\n          dataTable['output_type'] = 'display_data';\n          await google.colab.output.renderOutput(dataTable, element);\n          const docLink = document.createElement('div');\n          docLink.innerHTML = docLinkHtml;\n          element.appendChild(docLink);\n        }\n      </script>\n    </div>\n  </div>\n\n\n\n\n## 데이터 탐색\n\n\n```python\n# 가장 신경써야 하는건 종속변수\nprint(pd.unique(fish['Species']))\nprint(fish['Species'].value_counts())\n```\n\n    ['Bream' 'Roach' 'Whitefish' 'Parkki' 'Perch' 'Pike' 'Smelt']\n    Perch        56\n    Bream        35\n    Roach        20\n    Pike         17\n    Smelt        14\n    Parkki       11\n    Whitefish     6\n    Name: Species, dtype: int64\n    \n\n## 데이터 가공\n\n\n```python\n# pandas 데이터 프레임에서 numpy 배열로 변환\nfish_input = fish[['Weight', 'Length', 'Diagonal', 'Height', 'Width']].to_numpy()\nprint(fish_input.shape)\n```\n\n    (159, 5)\n    \n\n\n```python\nprint(fish_input[:5])\n```\n\n    [[242.      25.4     30.      11.52     4.02  ]\n     [290.      26.3     31.2     12.48     4.3056]\n     [340.      26.5     31.1     12.3778   4.6961]\n     [363.      29.      33.5     12.73     4.4555]\n     [430.      29.      34.      12.444    5.134 ]]\n    \n\n- 타깃 데이터 = 종속변수 = Y\n\n\n```python\nfish_target = fish['Species'].to_numpy()\nprint(fish_target.shape)\nprint(fish_target[:5])\n```\n\n    (159,)\n    ['Bream' 'Bream' 'Bream' 'Bream' 'Bream']\n    \n\n## 데이터 분리\n- 훈련데이터 테스트 데이터 분리\n\n\n```python\nfrom sklearn.model_selection import train_test_split\n\n# 임의 샘플링\ntrain_input, test_input, train_target, test_target = train_test_split(\n    fish_input, fish_target, random_state=42\n)\n\n# 층화 샘플링\n```\n\n## 표준화 전처리(중요)\n- 여기에서도 훈련 세트의 통계값으로 테스트 세트를 변환해야 한다.\n  + 데이터 세트를 나눴을 때 100개의 데이터중 70개는 훈련 세트 데이터, 30개는 테스트 데이터 일 수도 있는데, 테스트를 할때 테스트 데이터를 넣고 돌리면 답지 보고 수능 푸는 격이기 때문에, 우리는 테스트 데이터를 알지만 훈련 데이터 값으로 테스트를 해야 옳은 테스트 이다.\n- 예) 데이터 가공 할때\n  + 숫자 결측치가 존재, 훈련데이터의 평균값으로 대체 해야 한다.(테스트 데이터의 결측치도 훈련데이터의 평균값으로)\n  + 전체데이터의 평균값으로 넣으면 X\n  + 따라서 훈련 데이터와 테스트 데이터는 분리 해야한다\n- 이 작업을 \"데이터 누수(Data Leakage)\" 라고 한다\n  + 훈련 데이터 평균값 70을 대치\n  + 테스트 데이터 평균값 75를 대치\n  + 모든 데이터 평균값 73을 대치\n  + 이 중 뭐가 옳을까?\n    + 답 : 70\n\n교재 97p.\n- 기준을 맞춰라 --> 데이터 표준화 (표준점수)\n- 수동으로 mean, std\n- 표준점수 = (데이터 - 평균) / 분산\n -> ss.transform(tranin_input) 으로 한방에 처리\n\n\n```python\nfrom sklearn.preprocessing import StandardScaler\nss = StandardScaler()\nss.fit(train_input)\n# ss.fit(test_input) => 이 코드는 쓰면 안된다!! 테스트 데이터값은 쓰지 않는다.\n\ntrain_scaled = ss.transform(train_input)\ntest_scaled = ss.transform(test_input)\n```\n\n## 모형 만들기\n- K-최근접 이웃\n\n\n```python\nfrom sklearn.neighbors import KNeighborsClassifier\nkn = KNeighborsClassifier(n_neighbors = 3)\nkn.fit(train_scaled, train_target)\n\nprint(kn.score(train_scaled, train_target))\nprint(kn.score(test_scaled, test_target))\n```\n\n    0.8907563025210085\n    0.85\n    \n\n- 타깃값 확인\n- 알파벳 순으로 정렬\n\n\n```python\nprint(kn.classes_)\n```\n\n    ['Bream' 'Parkki' 'Perch' 'Pike' 'Roach' 'Smelt' 'Whitefish']\n    \n\n- 다중분류\n\n\n```python\nprint(kn.predict(test_scaled[:5]))\n```\n\n    ['Perch' 'Smelt' 'Pike' 'Perch' 'Perch']\n    \n\n- 5개 항목의 확률\n\n\n```python\nimport numpy as np\nproba = kn.predict_proba(test_scaled[:5])\nprint (kn.classes_)\nprint(np.round(proba, decimals=4))\n```\n\n    ['Bream' 'Parkki' 'Perch' 'Pike' 'Roach' 'Smelt' 'Whitefish']\n    [[0.     0.     1.     0.     0.     0.     0.    ]\n     [0.     0.     0.     0.     0.     1.     0.    ]\n     [0.     0.     0.     1.     0.     0.     0.    ]\n     [0.     0.     0.6667 0.     0.3333 0.     0.    ]\n     [0.     0.     0.6667 0.     0.3333 0.     0.    ]]\n    \n\n- 첫번째 클래스\n  + Perch로 분류할 확률이 100%\n- 두번째 클래스\n  + Perch로 분류할 확률이 66.7%\n  + Roach로 분류할 확률이 33.3%\n\n## 회귀 식\n- y = ax + b\n- 양변에 로그를 취함\n\n## 로지스틱 회귀로 이진 분류 수행하기\n\n\n```python\nchar_arr = np.array(['A', 'B', 'C', 'D', 'E'])  # train_scaled 값\n# [True, False, True, False, False] --> bream_smelt_indexes\nprint(char_arr[[True, False, True, False, False]])\n```\n\n    ['A' 'C']\n    \n\n- True 값만 추출하는 원리를 이용해서\n- 이 원리를 이용해서 도미와 빙어의 행만 골라보자\n\n\n```python\nbream_smelt_indexes = (train_target == 'Bream') | (train_target == 'Smelt')\ntrain_bream_smelt = train_scaled[bream_smelt_indexes]\ntarget_bream_smelt = train_target[bream_smelt_indexes]\n\ntrain_scaled.shape, train_bream_smelt.shape\n# 119개에서 33개로 줄어든 데이터\n```\n\n\n\n\n    ((119, 5), (33, 5))\n\n\n\n## 모델 만들기\n\n\n```python\nfrom sklearn.linear_model import LogisticRegression\nlr = LogisticRegression()\nlr.fit(train_bream_smelt, target_bream_smelt)\n```\n\n\n\n\n    LogisticRegression()\n\n\n\n\n```python\n# 클래스를 예측\nprint(lr.predict(train_bream_smelt[:5]))\n```\n\n    ['Bream' 'Smelt' 'Bream' 'Bream' 'Bream']\n    \n\n- 확률 값 구하기\n\n\n```python\nprint(lr.predict_proba(train_bream_smelt[:5]))\n```\n\n    [[0.99759855 0.00240145]\n     [0.02735183 0.97264817]\n     [0.99486072 0.00513928]\n     [0.98584202 0.01415798]\n     [0.99767269 0.00232731]]\n    \n\n\n```python\nprint(lr.classes_)\n# 왼쪽이 Bream 오른쪽이 Smelt\n```\n\n    ['Bream' 'Smelt']\n    \n\n- 분류기준 : threshold 임계값 설정 (꼭 0.5일 필요는 없다)\n\n\n도미 vs 빙어\n\n[0.49, 0.51],\n\n[0.70, 0.30],\n\n[0.90, 0.10]\n\n## 계수와 절편\n\n\n```python\nprint(lr.coef_, lr.intercept_)\n```\n\n    [[-0.4037798  -0.57620209 -0.66280298 -1.01290277 -0.73168947]] [-2.16155132]\n    \n\n\n```python\ndecisions = lr.decision_function(train_bream_smelt[:5])\nprint(decisions)\n```\n\n    [-6.02927744  3.57123907 -5.26568906 -4.24321775 -6.0607117 ]\n    \n\n- 이 z 값을 확률 값으로 변환(z값을 평면에 떨어뜨린다)\n- 로지스틱 회귀 그래프 원리(직선그래프보다 매끄럽게 이어지는 그래프를 만듬)\n![](/images/0701/logic.png)\n\n\n```python\nfrom scipy.special import expit\nprint(expit(decisions))\n```\n\n    [0.00240145 0.97264817 0.00513928 0.01415798 0.00232731]\n    \n\n## 다중 분류 수행하기\n- 이진 분류의 확장판\n\n\n```python\n# 하이퍼 파라미터 세팅\n# 모형을 튜닝\n# 웬만하면 순정(default) 쓰세요.\n# 모형 결과의 과대적합 또는 과소적합을 방지 하기 위한 것\nlr = LogisticRegression(C = 20, max_iter = 1000)\nlr.fit(train_scaled, train_target)\nprint(lr.score(train_scaled, train_target))\nprint(lr.score(test_scaled, test_target))\n```\n\n    0.9327731092436975\n    0.925\n    \n\n\n```python\nprint(lr.predict(test_scaled[:5]))\n```\n\n    ['Perch' 'Smelt' 'Pike' 'Roach' 'Perch']\n    \n\n\n```python\nproba = lr.predict_proba(test_scaled[:5])\nprint(np.round(proba,decimals = 3))\nprint(lr.classes_)\n```\n\n    [[0.    0.014 0.841 0.    0.136 0.007 0.003]\n     [0.    0.003 0.044 0.    0.007 0.946 0.   ]\n     [0.    0.    0.034 0.935 0.015 0.016 0.   ]\n     [0.011 0.034 0.306 0.007 0.567 0.    0.076]\n     [0.    0.    0.904 0.002 0.089 0.002 0.001]]\n    ['Bream' 'Parkki' 'Perch' 'Pike' 'Roach' 'Smelt' 'Whitefish']\n    \n\n- 다중 분류일 경우 선형 방정식은 어떤 모습일까?\n  + 7개 분류, 5개 컬럼 값에 선형 방정식\n\n\n```python\nprint(lr.coef_.shape, lr.intercept_.shape)  \n```\n\n    (7, 5) (7,)\n    \n\n## 평가지표\n### 회귀 평가지표\n- 결정계수 (교재 121p)\n  + 1 - (타깃 - 예측)^2의 합 / (타깃 - 평균)^2의 합\n- mae, mse, rmse 만 기억\n  + (실제 - 예측) = 오차\n  + mae(mean absolute error) : 오차의 절댓값의 평균\n  + mse(mean squared error) : 오차 제곱의 평균\n  + rmse(root mean squared error) : mse에 제곱근을 취한 값\n- 좋은 모델의 기준\n  + 결정계수 : 1에 수렴하면 좋은 모델\n  + mae, msem, rmse : 0에 수렴하면 좋은 모델\n\n\n```python\nimport numpy as np\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score\n\ntrue = np.array([1, 2, 3, 2, 3, 5, 4, 6, 5, 6, 7, 8, 8]) # 실제값\npreds = np.array([1, 1, 2, 2, 3, 4, 4, 5, 5, 7, 7, 6, 8]) # 예측값\n\n# 절댓값 오차의 평균\nmae = mean_absolute_error(true, preds)\nprint(mae)\n\n# 제곱 오차의 평균\nmse = mean_squared_error(true,preds)\nprint(mse)\n\n# np.squt : 루트 씌워주는 함수\nrmse = np.sqrt(mse)\nprint(rmse)\n\n# 결정계수\nr2 = r2_score(true, preds)\nprint(r2)\n```\n\n    0.5384615384615384\n    0.6923076923076923\n    0.8320502943378437\n    0.8617021276595744\n    \n\n### 분류 평가지표\n- 오차 행렬\n- 실제 값\n  + [빙어, 도미, 도미, 빙어, 도미]\n- 예측 값\n  + [빙어, 빙어, 도미, 빙어, 빙어]\n\n\nTP(빙어를 빙어로 예측) = 2개\nTN(도미를 도미로 예측) = 1개\nFN(도미를 빙어로 예측) = 2개\nFP(빙어를 도미로 예측) = 0개\n- TP, TN, FP, FN\n- 예) TP = 5, TN = 5, FP = 3, FN = 7\n- 모든 케이스에서 정확도로 처리할 수 없으므로 정밀도, 재현율 파악도 중요하다.\n  + 정확도 : 전체 중에 맞춘 갯수\n    + (TP + TN) / (TP + TN + FP + FN)\n  + 정밀도 : 양성(Positive)이라고 예측한 값 중 실제 양성인 값의 비율\n    + TP / (TP + FP)\n  + 재현율 : 양성(Positive)인 실제 값 중 양성으로 예측한 값(TP)의 비율(암진단 같은 경우)\n    + TP / (TP + TF)\n\n  + 로그손실\n  + ROC Curve (= AUC)\n\n- 이 모형의 정확도 3/5 = 60%\n\n\n```python\nfrom sklearn.metrics import confusion_matrix\n\ntrue = [0,1,1,0,0]\npreds = [1,0,0,0,0]\n\nconfusion_matrix(true, preds)\n```\n\n\n\n\n    array([[2, 1],\n           [2, 0]])\n\n\n","source":"_posts/day0701_ch04.md","raw":"---\ntitle: \"day 0701_ch4\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: Python\nthumbnailImage: python.png\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-07-01 17:50:55'\n---\n\n### 로지스틱 회귀\n<!-- more -->\n\n- 선형 회귀에서 출발\n- 이진 분류 문제 해결\n- 클래스 확률 예측\n- 딥러닝에서도 사용됨\n\n## 교재 177p\n- X가 사각형일 확률 30%\n- X가 삼각형일 확률  확률 20%50%\n- X가 원일\n\n## 데이터 불러오기\n- Species (종속변수=Y)\n- 나머지 Weight, Length, Diagonal, Height, Width 는 독립변수\n\n\n```python\nimport pandas as pd\n\nfish = pd.read_csv('https://bit.ly/fish_csv_data')\nfish.head()\n```\n\n\n\n\n\n  <div id=\"df-4733cf17-6355-45a1-8704-1092d897ce3b\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Species</th>\n      <th>Weight</th>\n      <th>Length</th>\n      <th>Diagonal</th>\n      <th>Height</th>\n      <th>Width</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Bream</td>\n      <td>242.0</td>\n      <td>25.4</td>\n      <td>30.0</td>\n      <td>11.5200</td>\n      <td>4.0200</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Bream</td>\n      <td>290.0</td>\n      <td>26.3</td>\n      <td>31.2</td>\n      <td>12.4800</td>\n      <td>4.3056</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Bream</td>\n      <td>340.0</td>\n      <td>26.5</td>\n      <td>31.1</td>\n      <td>12.3778</td>\n      <td>4.6961</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Bream</td>\n      <td>363.0</td>\n      <td>29.0</td>\n      <td>33.5</td>\n      <td>12.7300</td>\n      <td>4.4555</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Bream</td>\n      <td>430.0</td>\n      <td>29.0</td>\n      <td>34.0</td>\n      <td>12.4440</td>\n      <td>5.1340</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4733cf17-6355-45a1-8704-1092d897ce3b')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n       width=\"24px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n  </svg>\n      </button>\n\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n      <script>\n        const buttonEl =\n          document.querySelector('#df-4733cf17-6355-45a1-8704-1092d897ce3b button.colab-df-convert');\n        buttonEl.style.display =\n          google.colab.kernel.accessAllowed ? 'block' : 'none';\n\n        async function convertToInteractive(key) {\n          const element = document.querySelector('#df-4733cf17-6355-45a1-8704-1092d897ce3b');\n          const dataTable =\n            await google.colab.kernel.invokeFunction('convertToInteractive',\n                                                     [key], {});\n          if (!dataTable) return;\n\n          const docLinkHtml = 'Like what you see? Visit the ' +\n            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n            + ' to learn more about interactive tables.';\n          element.innerHTML = '';\n          dataTable['output_type'] = 'display_data';\n          await google.colab.output.renderOutput(dataTable, element);\n          const docLink = document.createElement('div');\n          docLink.innerHTML = docLinkHtml;\n          element.appendChild(docLink);\n        }\n      </script>\n    </div>\n  </div>\n\n\n\n\n## 데이터 탐색\n\n\n```python\n# 가장 신경써야 하는건 종속변수\nprint(pd.unique(fish['Species']))\nprint(fish['Species'].value_counts())\n```\n\n    ['Bream' 'Roach' 'Whitefish' 'Parkki' 'Perch' 'Pike' 'Smelt']\n    Perch        56\n    Bream        35\n    Roach        20\n    Pike         17\n    Smelt        14\n    Parkki       11\n    Whitefish     6\n    Name: Species, dtype: int64\n    \n\n## 데이터 가공\n\n\n```python\n# pandas 데이터 프레임에서 numpy 배열로 변환\nfish_input = fish[['Weight', 'Length', 'Diagonal', 'Height', 'Width']].to_numpy()\nprint(fish_input.shape)\n```\n\n    (159, 5)\n    \n\n\n```python\nprint(fish_input[:5])\n```\n\n    [[242.      25.4     30.      11.52     4.02  ]\n     [290.      26.3     31.2     12.48     4.3056]\n     [340.      26.5     31.1     12.3778   4.6961]\n     [363.      29.      33.5     12.73     4.4555]\n     [430.      29.      34.      12.444    5.134 ]]\n    \n\n- 타깃 데이터 = 종속변수 = Y\n\n\n```python\nfish_target = fish['Species'].to_numpy()\nprint(fish_target.shape)\nprint(fish_target[:5])\n```\n\n    (159,)\n    ['Bream' 'Bream' 'Bream' 'Bream' 'Bream']\n    \n\n## 데이터 분리\n- 훈련데이터 테스트 데이터 분리\n\n\n```python\nfrom sklearn.model_selection import train_test_split\n\n# 임의 샘플링\ntrain_input, test_input, train_target, test_target = train_test_split(\n    fish_input, fish_target, random_state=42\n)\n\n# 층화 샘플링\n```\n\n## 표준화 전처리(중요)\n- 여기에서도 훈련 세트의 통계값으로 테스트 세트를 변환해야 한다.\n  + 데이터 세트를 나눴을 때 100개의 데이터중 70개는 훈련 세트 데이터, 30개는 테스트 데이터 일 수도 있는데, 테스트를 할때 테스트 데이터를 넣고 돌리면 답지 보고 수능 푸는 격이기 때문에, 우리는 테스트 데이터를 알지만 훈련 데이터 값으로 테스트를 해야 옳은 테스트 이다.\n- 예) 데이터 가공 할때\n  + 숫자 결측치가 존재, 훈련데이터의 평균값으로 대체 해야 한다.(테스트 데이터의 결측치도 훈련데이터의 평균값으로)\n  + 전체데이터의 평균값으로 넣으면 X\n  + 따라서 훈련 데이터와 테스트 데이터는 분리 해야한다\n- 이 작업을 \"데이터 누수(Data Leakage)\" 라고 한다\n  + 훈련 데이터 평균값 70을 대치\n  + 테스트 데이터 평균값 75를 대치\n  + 모든 데이터 평균값 73을 대치\n  + 이 중 뭐가 옳을까?\n    + 답 : 70\n\n교재 97p.\n- 기준을 맞춰라 --> 데이터 표준화 (표준점수)\n- 수동으로 mean, std\n- 표준점수 = (데이터 - 평균) / 분산\n -> ss.transform(tranin_input) 으로 한방에 처리\n\n\n```python\nfrom sklearn.preprocessing import StandardScaler\nss = StandardScaler()\nss.fit(train_input)\n# ss.fit(test_input) => 이 코드는 쓰면 안된다!! 테스트 데이터값은 쓰지 않는다.\n\ntrain_scaled = ss.transform(train_input)\ntest_scaled = ss.transform(test_input)\n```\n\n## 모형 만들기\n- K-최근접 이웃\n\n\n```python\nfrom sklearn.neighbors import KNeighborsClassifier\nkn = KNeighborsClassifier(n_neighbors = 3)\nkn.fit(train_scaled, train_target)\n\nprint(kn.score(train_scaled, train_target))\nprint(kn.score(test_scaled, test_target))\n```\n\n    0.8907563025210085\n    0.85\n    \n\n- 타깃값 확인\n- 알파벳 순으로 정렬\n\n\n```python\nprint(kn.classes_)\n```\n\n    ['Bream' 'Parkki' 'Perch' 'Pike' 'Roach' 'Smelt' 'Whitefish']\n    \n\n- 다중분류\n\n\n```python\nprint(kn.predict(test_scaled[:5]))\n```\n\n    ['Perch' 'Smelt' 'Pike' 'Perch' 'Perch']\n    \n\n- 5개 항목의 확률\n\n\n```python\nimport numpy as np\nproba = kn.predict_proba(test_scaled[:5])\nprint (kn.classes_)\nprint(np.round(proba, decimals=4))\n```\n\n    ['Bream' 'Parkki' 'Perch' 'Pike' 'Roach' 'Smelt' 'Whitefish']\n    [[0.     0.     1.     0.     0.     0.     0.    ]\n     [0.     0.     0.     0.     0.     1.     0.    ]\n     [0.     0.     0.     1.     0.     0.     0.    ]\n     [0.     0.     0.6667 0.     0.3333 0.     0.    ]\n     [0.     0.     0.6667 0.     0.3333 0.     0.    ]]\n    \n\n- 첫번째 클래스\n  + Perch로 분류할 확률이 100%\n- 두번째 클래스\n  + Perch로 분류할 확률이 66.7%\n  + Roach로 분류할 확률이 33.3%\n\n## 회귀 식\n- y = ax + b\n- 양변에 로그를 취함\n\n## 로지스틱 회귀로 이진 분류 수행하기\n\n\n```python\nchar_arr = np.array(['A', 'B', 'C', 'D', 'E'])  # train_scaled 값\n# [True, False, True, False, False] --> bream_smelt_indexes\nprint(char_arr[[True, False, True, False, False]])\n```\n\n    ['A' 'C']\n    \n\n- True 값만 추출하는 원리를 이용해서\n- 이 원리를 이용해서 도미와 빙어의 행만 골라보자\n\n\n```python\nbream_smelt_indexes = (train_target == 'Bream') | (train_target == 'Smelt')\ntrain_bream_smelt = train_scaled[bream_smelt_indexes]\ntarget_bream_smelt = train_target[bream_smelt_indexes]\n\ntrain_scaled.shape, train_bream_smelt.shape\n# 119개에서 33개로 줄어든 데이터\n```\n\n\n\n\n    ((119, 5), (33, 5))\n\n\n\n## 모델 만들기\n\n\n```python\nfrom sklearn.linear_model import LogisticRegression\nlr = LogisticRegression()\nlr.fit(train_bream_smelt, target_bream_smelt)\n```\n\n\n\n\n    LogisticRegression()\n\n\n\n\n```python\n# 클래스를 예측\nprint(lr.predict(train_bream_smelt[:5]))\n```\n\n    ['Bream' 'Smelt' 'Bream' 'Bream' 'Bream']\n    \n\n- 확률 값 구하기\n\n\n```python\nprint(lr.predict_proba(train_bream_smelt[:5]))\n```\n\n    [[0.99759855 0.00240145]\n     [0.02735183 0.97264817]\n     [0.99486072 0.00513928]\n     [0.98584202 0.01415798]\n     [0.99767269 0.00232731]]\n    \n\n\n```python\nprint(lr.classes_)\n# 왼쪽이 Bream 오른쪽이 Smelt\n```\n\n    ['Bream' 'Smelt']\n    \n\n- 분류기준 : threshold 임계값 설정 (꼭 0.5일 필요는 없다)\n\n\n도미 vs 빙어\n\n[0.49, 0.51],\n\n[0.70, 0.30],\n\n[0.90, 0.10]\n\n## 계수와 절편\n\n\n```python\nprint(lr.coef_, lr.intercept_)\n```\n\n    [[-0.4037798  -0.57620209 -0.66280298 -1.01290277 -0.73168947]] [-2.16155132]\n    \n\n\n```python\ndecisions = lr.decision_function(train_bream_smelt[:5])\nprint(decisions)\n```\n\n    [-6.02927744  3.57123907 -5.26568906 -4.24321775 -6.0607117 ]\n    \n\n- 이 z 값을 확률 값으로 변환(z값을 평면에 떨어뜨린다)\n- 로지스틱 회귀 그래프 원리(직선그래프보다 매끄럽게 이어지는 그래프를 만듬)\n![](/images/0701/logic.png)\n\n\n```python\nfrom scipy.special import expit\nprint(expit(decisions))\n```\n\n    [0.00240145 0.97264817 0.00513928 0.01415798 0.00232731]\n    \n\n## 다중 분류 수행하기\n- 이진 분류의 확장판\n\n\n```python\n# 하이퍼 파라미터 세팅\n# 모형을 튜닝\n# 웬만하면 순정(default) 쓰세요.\n# 모형 결과의 과대적합 또는 과소적합을 방지 하기 위한 것\nlr = LogisticRegression(C = 20, max_iter = 1000)\nlr.fit(train_scaled, train_target)\nprint(lr.score(train_scaled, train_target))\nprint(lr.score(test_scaled, test_target))\n```\n\n    0.9327731092436975\n    0.925\n    \n\n\n```python\nprint(lr.predict(test_scaled[:5]))\n```\n\n    ['Perch' 'Smelt' 'Pike' 'Roach' 'Perch']\n    \n\n\n```python\nproba = lr.predict_proba(test_scaled[:5])\nprint(np.round(proba,decimals = 3))\nprint(lr.classes_)\n```\n\n    [[0.    0.014 0.841 0.    0.136 0.007 0.003]\n     [0.    0.003 0.044 0.    0.007 0.946 0.   ]\n     [0.    0.    0.034 0.935 0.015 0.016 0.   ]\n     [0.011 0.034 0.306 0.007 0.567 0.    0.076]\n     [0.    0.    0.904 0.002 0.089 0.002 0.001]]\n    ['Bream' 'Parkki' 'Perch' 'Pike' 'Roach' 'Smelt' 'Whitefish']\n    \n\n- 다중 분류일 경우 선형 방정식은 어떤 모습일까?\n  + 7개 분류, 5개 컬럼 값에 선형 방정식\n\n\n```python\nprint(lr.coef_.shape, lr.intercept_.shape)  \n```\n\n    (7, 5) (7,)\n    \n\n## 평가지표\n### 회귀 평가지표\n- 결정계수 (교재 121p)\n  + 1 - (타깃 - 예측)^2의 합 / (타깃 - 평균)^2의 합\n- mae, mse, rmse 만 기억\n  + (실제 - 예측) = 오차\n  + mae(mean absolute error) : 오차의 절댓값의 평균\n  + mse(mean squared error) : 오차 제곱의 평균\n  + rmse(root mean squared error) : mse에 제곱근을 취한 값\n- 좋은 모델의 기준\n  + 결정계수 : 1에 수렴하면 좋은 모델\n  + mae, msem, rmse : 0에 수렴하면 좋은 모델\n\n\n```python\nimport numpy as np\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score\n\ntrue = np.array([1, 2, 3, 2, 3, 5, 4, 6, 5, 6, 7, 8, 8]) # 실제값\npreds = np.array([1, 1, 2, 2, 3, 4, 4, 5, 5, 7, 7, 6, 8]) # 예측값\n\n# 절댓값 오차의 평균\nmae = mean_absolute_error(true, preds)\nprint(mae)\n\n# 제곱 오차의 평균\nmse = mean_squared_error(true,preds)\nprint(mse)\n\n# np.squt : 루트 씌워주는 함수\nrmse = np.sqrt(mse)\nprint(rmse)\n\n# 결정계수\nr2 = r2_score(true, preds)\nprint(r2)\n```\n\n    0.5384615384615384\n    0.6923076923076923\n    0.8320502943378437\n    0.8617021276595744\n    \n\n### 분류 평가지표\n- 오차 행렬\n- 실제 값\n  + [빙어, 도미, 도미, 빙어, 도미]\n- 예측 값\n  + [빙어, 빙어, 도미, 빙어, 빙어]\n\n\nTP(빙어를 빙어로 예측) = 2개\nTN(도미를 도미로 예측) = 1개\nFN(도미를 빙어로 예측) = 2개\nFP(빙어를 도미로 예측) = 0개\n- TP, TN, FP, FN\n- 예) TP = 5, TN = 5, FP = 3, FN = 7\n- 모든 케이스에서 정확도로 처리할 수 없으므로 정밀도, 재현율 파악도 중요하다.\n  + 정확도 : 전체 중에 맞춘 갯수\n    + (TP + TN) / (TP + TN + FP + FN)\n  + 정밀도 : 양성(Positive)이라고 예측한 값 중 실제 양성인 값의 비율\n    + TP / (TP + FP)\n  + 재현율 : 양성(Positive)인 실제 값 중 양성으로 예측한 값(TP)의 비율(암진단 같은 경우)\n    + TP / (TP + TF)\n\n  + 로그손실\n  + ROC Curve (= AUC)\n\n- 이 모형의 정확도 3/5 = 60%\n\n\n```python\nfrom sklearn.metrics import confusion_matrix\n\ntrue = [0,1,1,0,0]\npreds = [1,0,0,0,0]\n\nconfusion_matrix(true, preds)\n```\n\n\n\n\n    array([[2, 1],\n           [2, 0]])\n\n\n","slug":"day0701_ch04","published":1,"updated":"2022-07-21T12:49:42.118Z","_id":"cl5fcok7x000zjku0emsvfzsx","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"로지스틱-회귀\"><a href=\"#로지스틱-회귀\" class=\"headerlink\" title=\"로지스틱 회귀\"></a>로지스틱 회귀</h3><span id=\"more\"></span>\n\n<ul>\n<li>선형 회귀에서 출발</li>\n<li>이진 분류 문제 해결</li>\n<li>클래스 확률 예측</li>\n<li>딥러닝에서도 사용됨</li>\n</ul>\n<h2 id=\"교재-177p\"><a href=\"#교재-177p\" class=\"headerlink\" title=\"교재 177p\"></a>교재 177p</h2><ul>\n<li>X가 사각형일 확률 30%</li>\n<li>X가 삼각형일 확률  확률 20%50%</li>\n<li>X가 원일</li>\n</ul>\n<h2 id=\"데이터-불러오기\"><a href=\"#데이터-불러오기\" class=\"headerlink\" title=\"데이터 불러오기\"></a>데이터 불러오기</h2><ul>\n<li>Species (종속변수&#x3D;Y)</li>\n<li>나머지 Weight, Length, Diagonal, Height, Width 는 독립변수</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"></span><br><span class=\"line\">fish = pd.read_csv(<span class=\"string\">&#x27;https://bit.ly/fish_csv_data&#x27;</span>)</span><br><span class=\"line\">fish.head()</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n  <div id=\"df-4733cf17-6355-45a1-8704-1092d897ce3b\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Species</th>\n      <th>Weight</th>\n      <th>Length</th>\n      <th>Diagonal</th>\n      <th>Height</th>\n      <th>Width</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Bream</td>\n      <td>242.0</td>\n      <td>25.4</td>\n      <td>30.0</td>\n      <td>11.5200</td>\n      <td>4.0200</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Bream</td>\n      <td>290.0</td>\n      <td>26.3</td>\n      <td>31.2</td>\n      <td>12.4800</td>\n      <td>4.3056</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Bream</td>\n      <td>340.0</td>\n      <td>26.5</td>\n      <td>31.1</td>\n      <td>12.3778</td>\n      <td>4.6961</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Bream</td>\n      <td>363.0</td>\n      <td>29.0</td>\n      <td>33.5</td>\n      <td>12.7300</td>\n      <td>4.4555</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Bream</td>\n      <td>430.0</td>\n      <td>29.0</td>\n      <td>34.0</td>\n      <td>12.4440</td>\n      <td>5.1340</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4733cf17-6355-45a1-8704-1092d897ce3b')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n<p>  &lt;svg xmlns&#x3D;”<a href=\"http://www.w3.org/2000/svg&quot;\">http://www.w3.org/2000/svg&quot;</a> height&#x3D;”24px”viewBox&#x3D;”0 0 24 24”<br>       width&#x3D;”24px”&gt;<br>    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><br>    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/><br>  </svg><br>      </button></p>\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n<pre><code>  &lt;script&gt;\n    const buttonEl =\n      document.querySelector(&#39;#df-4733cf17-6355-45a1-8704-1092d897ce3b button.colab-df-convert&#39;);\n    buttonEl.style.display =\n      google.colab.kernel.accessAllowed ? &#39;block&#39; : &#39;none&#39;;\n\n    async function convertToInteractive(key) &#123;\n      const element = document.querySelector(&#39;#df-4733cf17-6355-45a1-8704-1092d897ce3b&#39;);\n      const dataTable =\n        await google.colab.kernel.invokeFunction(&#39;convertToInteractive&#39;,\n                                                 [key], &#123;&#125;);\n      if (!dataTable) return;\n\n      const docLinkHtml = &#39;Like what you see? Visit the &#39; +\n        &#39;&lt;a target=&quot;_blank&quot; href=https://colab.research.google.com/notebooks/data_table.ipynb&gt;data table notebook&lt;/a&gt;&#39;\n        + &#39; to learn more about interactive tables.&#39;;\n      element.innerHTML = &#39;&#39;;\n      dataTable[&#39;output_type&#39;] = &#39;display_data&#39;;\n      await google.colab.output.renderOutput(dataTable, element);\n      const docLink = document.createElement(&#39;div&#39;);\n      docLink.innerHTML = docLinkHtml;\n      element.appendChild(docLink);\n    &#125;\n  &lt;/script&gt;\n&lt;/div&gt;\n</code></pre>\n  </div>\n\n\n\n\n<h2 id=\"데이터-탐색\"><a href=\"#데이터-탐색\" class=\"headerlink\" title=\"데이터 탐색\"></a>데이터 탐색</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 가장 신경써야 하는건 종속변수</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(pd.unique(fish[<span class=\"string\">&#x27;Species&#x27;</span>]))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(fish[<span class=\"string\">&#x27;Species&#x27;</span>].value_counts())</span><br></pre></td></tr></table></figure>\n\n<pre><code>[&#39;Bream&#39; &#39;Roach&#39; &#39;Whitefish&#39; &#39;Parkki&#39; &#39;Perch&#39; &#39;Pike&#39; &#39;Smelt&#39;]\nPerch        56\nBream        35\nRoach        20\nPike         17\nSmelt        14\nParkki       11\nWhitefish     6\nName: Species, dtype: int64\n</code></pre>\n<h2 id=\"데이터-가공\"><a href=\"#데이터-가공\" class=\"headerlink\" title=\"데이터 가공\"></a>데이터 가공</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># pandas 데이터 프레임에서 numpy 배열로 변환</span></span><br><span class=\"line\">fish_input = fish[[<span class=\"string\">&#x27;Weight&#x27;</span>, <span class=\"string\">&#x27;Length&#x27;</span>, <span class=\"string\">&#x27;Diagonal&#x27;</span>, <span class=\"string\">&#x27;Height&#x27;</span>, <span class=\"string\">&#x27;Width&#x27;</span>]].to_numpy()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(fish_input.shape)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(159, 5)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(fish_input[:<span class=\"number\">5</span>])</span><br></pre></td></tr></table></figure>\n\n<pre><code>[[242.      25.4     30.      11.52     4.02  ]\n [290.      26.3     31.2     12.48     4.3056]\n [340.      26.5     31.1     12.3778   4.6961]\n [363.      29.      33.5     12.73     4.4555]\n [430.      29.      34.      12.444    5.134 ]]\n</code></pre>\n<ul>\n<li>타깃 데이터 &#x3D; 종속변수 &#x3D; Y</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fish_target = fish[<span class=\"string\">&#x27;Species&#x27;</span>].to_numpy()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(fish_target.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(fish_target[:<span class=\"number\">5</span>])</span><br></pre></td></tr></table></figure>\n\n<pre><code>(159,)\n[&#39;Bream&#39; &#39;Bream&#39; &#39;Bream&#39; &#39;Bream&#39; &#39;Bream&#39;]\n</code></pre>\n<h2 id=\"데이터-분리\"><a href=\"#데이터-분리\" class=\"headerlink\" title=\"데이터 분리\"></a>데이터 분리</h2><ul>\n<li>훈련데이터 테스트 데이터 분리</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 임의 샘플링</span></span><br><span class=\"line\">train_input, test_input, train_target, test_target = train_test_split(</span><br><span class=\"line\">    fish_input, fish_target, random_state=<span class=\"number\">42</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 층화 샘플링</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"표준화-전처리-중요\"><a href=\"#표준화-전처리-중요\" class=\"headerlink\" title=\"표준화 전처리(중요)\"></a>표준화 전처리(중요)</h2><ul>\n<li>여기에서도 훈련 세트의 통계값으로 테스트 세트를 변환해야 한다.<ul>\n<li>데이터 세트를 나눴을 때 100개의 데이터중 70개는 훈련 세트 데이터, 30개는 테스트 데이터 일 수도 있는데, 테스트를 할때 테스트 데이터를 넣고 돌리면 답지 보고 수능 푸는 격이기 때문에, 우리는 테스트 데이터를 알지만 훈련 데이터 값으로 테스트를 해야 옳은 테스트 이다.</li>\n</ul>\n</li>\n<li>예) 데이터 가공 할때<ul>\n<li>숫자 결측치가 존재, 훈련데이터의 평균값으로 대체 해야 한다.(테스트 데이터의 결측치도 훈련데이터의 평균값으로)</li>\n<li>전체데이터의 평균값으로 넣으면 X</li>\n<li>따라서 훈련 데이터와 테스트 데이터는 분리 해야한다</li>\n</ul>\n</li>\n<li>이 작업을 “데이터 누수(Data Leakage)” 라고 한다<ul>\n<li>훈련 데이터 평균값 70을 대치</li>\n<li>테스트 데이터 평균값 75를 대치</li>\n<li>모든 데이터 평균값 73을 대치</li>\n<li>이 중 뭐가 옳을까?<ul>\n<li>답 : 70</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>교재 97p.</p>\n<ul>\n<li>기준을 맞춰라 –&gt; 데이터 표준화 (표준점수)</li>\n<li>수동으로 mean, std</li>\n<li>표준점수 &#x3D; (데이터 - 평균) &#x2F; 분산<br> -&gt; ss.transform(tranin_input) 으로 한방에 처리</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> StandardScaler</span><br><span class=\"line\">ss = StandardScaler()</span><br><span class=\"line\">ss.fit(train_input)</span><br><span class=\"line\"><span class=\"comment\"># ss.fit(test_input) =&gt; 이 코드는 쓰면 안된다!! 테스트 데이터값은 쓰지 않는다.</span></span><br><span class=\"line\"></span><br><span class=\"line\">train_scaled = ss.transform(train_input)</span><br><span class=\"line\">test_scaled = ss.transform(test_input)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"모형-만들기\"><a href=\"#모형-만들기\" class=\"headerlink\" title=\"모형 만들기\"></a>모형 만들기</h2><ul>\n<li>K-최근접 이웃</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.neighbors <span class=\"keyword\">import</span> KNeighborsClassifier</span><br><span class=\"line\">kn = KNeighborsClassifier(n_neighbors = <span class=\"number\">3</span>)</span><br><span class=\"line\">kn.fit(train_scaled, train_target)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(kn.score(train_scaled, train_target))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(kn.score(test_scaled, test_target))</span><br></pre></td></tr></table></figure>\n\n<pre><code>0.8907563025210085\n0.85\n</code></pre>\n<ul>\n<li>타깃값 확인</li>\n<li>알파벳 순으로 정렬</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(kn.classes_)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[&#39;Bream&#39; &#39;Parkki&#39; &#39;Perch&#39; &#39;Pike&#39; &#39;Roach&#39; &#39;Smelt&#39; &#39;Whitefish&#39;]\n</code></pre>\n<ul>\n<li>다중분류</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(kn.predict(test_scaled[:<span class=\"number\">5</span>]))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[&#39;Perch&#39; &#39;Smelt&#39; &#39;Pike&#39; &#39;Perch&#39; &#39;Perch&#39;]\n</code></pre>\n<ul>\n<li>5개 항목의 확률</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\">proba = kn.predict_proba(test_scaled[:<span class=\"number\">5</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span> (kn.classes_)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.<span class=\"built_in\">round</span>(proba, decimals=<span class=\"number\">4</span>))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[&#39;Bream&#39; &#39;Parkki&#39; &#39;Perch&#39; &#39;Pike&#39; &#39;Roach&#39; &#39;Smelt&#39; &#39;Whitefish&#39;]\n[[0.     0.     1.     0.     0.     0.     0.    ]\n [0.     0.     0.     0.     0.     1.     0.    ]\n [0.     0.     0.     1.     0.     0.     0.    ]\n [0.     0.     0.6667 0.     0.3333 0.     0.    ]\n [0.     0.     0.6667 0.     0.3333 0.     0.    ]]\n</code></pre>\n<ul>\n<li>첫번째 클래스<ul>\n<li>Perch로 분류할 확률이 100%</li>\n</ul>\n</li>\n<li>두번째 클래스<ul>\n<li>Perch로 분류할 확률이 66.7%</li>\n<li>Roach로 분류할 확률이 33.3%</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"회귀-식\"><a href=\"#회귀-식\" class=\"headerlink\" title=\"회귀 식\"></a>회귀 식</h2><ul>\n<li>y &#x3D; ax + b</li>\n<li>양변에 로그를 취함</li>\n</ul>\n<h2 id=\"로지스틱-회귀로-이진-분류-수행하기\"><a href=\"#로지스틱-회귀로-이진-분류-수행하기\" class=\"headerlink\" title=\"로지스틱 회귀로 이진 분류 수행하기\"></a>로지스틱 회귀로 이진 분류 수행하기</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">char_arr = np.array([<span class=\"string\">&#x27;A&#x27;</span>, <span class=\"string\">&#x27;B&#x27;</span>, <span class=\"string\">&#x27;C&#x27;</span>, <span class=\"string\">&#x27;D&#x27;</span>, <span class=\"string\">&#x27;E&#x27;</span>])  <span class=\"comment\"># train_scaled 값</span></span><br><span class=\"line\"><span class=\"comment\"># [True, False, True, False, False] --&gt; bream_smelt_indexes</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(char_arr[[<span class=\"literal\">True</span>, <span class=\"literal\">False</span>, <span class=\"literal\">True</span>, <span class=\"literal\">False</span>, <span class=\"literal\">False</span>]])</span><br></pre></td></tr></table></figure>\n\n<pre><code>[&#39;A&#39; &#39;C&#39;]\n</code></pre>\n<ul>\n<li>True 값만 추출하는 원리를 이용해서</li>\n<li>이 원리를 이용해서 도미와 빙어의 행만 골라보자</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bream_smelt_indexes = (train_target == <span class=\"string\">&#x27;Bream&#x27;</span>) | (train_target == <span class=\"string\">&#x27;Smelt&#x27;</span>)</span><br><span class=\"line\">train_bream_smelt = train_scaled[bream_smelt_indexes]</span><br><span class=\"line\">target_bream_smelt = train_target[bream_smelt_indexes]</span><br><span class=\"line\"></span><br><span class=\"line\">train_scaled.shape, train_bream_smelt.shape</span><br><span class=\"line\"><span class=\"comment\"># 119개에서 33개로 줄어든 데이터</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>((119, 5), (33, 5))\n</code></pre>\n<h2 id=\"모델-만들기\"><a href=\"#모델-만들기\" class=\"headerlink\" title=\"모델 만들기\"></a>모델 만들기</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LogisticRegression</span><br><span class=\"line\">lr = LogisticRegression()</span><br><span class=\"line\">lr.fit(train_bream_smelt, target_bream_smelt)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>LogisticRegression()\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 클래스를 예측</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(lr.predict(train_bream_smelt[:<span class=\"number\">5</span>]))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[&#39;Bream&#39; &#39;Smelt&#39; &#39;Bream&#39; &#39;Bream&#39; &#39;Bream&#39;]\n</code></pre>\n<ul>\n<li>확률 값 구하기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(lr.predict_proba(train_bream_smelt[:<span class=\"number\">5</span>]))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[[0.99759855 0.00240145]\n [0.02735183 0.97264817]\n [0.99486072 0.00513928]\n [0.98584202 0.01415798]\n [0.99767269 0.00232731]]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(lr.classes_)</span><br><span class=\"line\"><span class=\"comment\"># 왼쪽이 Bream 오른쪽이 Smelt</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>[&#39;Bream&#39; &#39;Smelt&#39;]\n</code></pre>\n<ul>\n<li>분류기준 : threshold 임계값 설정 (꼭 0.5일 필요는 없다)</li>\n</ul>\n<p>도미 vs 빙어</p>\n<p>[0.49, 0.51],</p>\n<p>[0.70, 0.30],</p>\n<p>[0.90, 0.10]</p>\n<h2 id=\"계수와-절편\"><a href=\"#계수와-절편\" class=\"headerlink\" title=\"계수와 절편\"></a>계수와 절편</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(lr.coef_, lr.intercept_)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[[-0.4037798  -0.57620209 -0.66280298 -1.01290277 -0.73168947]] [-2.16155132]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">decisions = lr.decision_function(train_bream_smelt[:<span class=\"number\">5</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(decisions)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[-6.02927744  3.57123907 -5.26568906 -4.24321775 -6.0607117 ]\n</code></pre>\n<ul>\n<li>이 z 값을 확률 값으로 변환(z값을 평면에 떨어뜨린다)</li>\n<li>로지스틱 회귀 그래프 원리(직선그래프보다 매끄럽게 이어지는 그래프를 만듬)<br><img src=\"/images/0701/logic.png\"></li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> scipy.special <span class=\"keyword\">import</span> expit</span><br><span class=\"line\"><span class=\"built_in\">print</span>(expit(decisions))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[0.00240145 0.97264817 0.00513928 0.01415798 0.00232731]\n</code></pre>\n<h2 id=\"다중-분류-수행하기\"><a href=\"#다중-분류-수행하기\" class=\"headerlink\" title=\"다중 분류 수행하기\"></a>다중 분류 수행하기</h2><ul>\n<li>이진 분류의 확장판</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 하이퍼 파라미터 세팅</span></span><br><span class=\"line\"><span class=\"comment\"># 모형을 튜닝</span></span><br><span class=\"line\"><span class=\"comment\"># 웬만하면 순정(default) 쓰세요.</span></span><br><span class=\"line\"><span class=\"comment\"># 모형 결과의 과대적합 또는 과소적합을 방지 하기 위한 것</span></span><br><span class=\"line\">lr = LogisticRegression(C = <span class=\"number\">20</span>, max_iter = <span class=\"number\">1000</span>)</span><br><span class=\"line\">lr.fit(train_scaled, train_target)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(lr.score(train_scaled, train_target))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(lr.score(test_scaled, test_target))</span><br></pre></td></tr></table></figure>\n\n<pre><code>0.9327731092436975\n0.925\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(lr.predict(test_scaled[:<span class=\"number\">5</span>]))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[&#39;Perch&#39; &#39;Smelt&#39; &#39;Pike&#39; &#39;Roach&#39; &#39;Perch&#39;]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proba = lr.predict_proba(test_scaled[:<span class=\"number\">5</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.<span class=\"built_in\">round</span>(proba,decimals = <span class=\"number\">3</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(lr.classes_)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[[0.    0.014 0.841 0.    0.136 0.007 0.003]\n [0.    0.003 0.044 0.    0.007 0.946 0.   ]\n [0.    0.    0.034 0.935 0.015 0.016 0.   ]\n [0.011 0.034 0.306 0.007 0.567 0.    0.076]\n [0.    0.    0.904 0.002 0.089 0.002 0.001]]\n[&#39;Bream&#39; &#39;Parkki&#39; &#39;Perch&#39; &#39;Pike&#39; &#39;Roach&#39; &#39;Smelt&#39; &#39;Whitefish&#39;]\n</code></pre>\n<ul>\n<li>다중 분류일 경우 선형 방정식은 어떤 모습일까?<ul>\n<li>7개 분류, 5개 컬럼 값에 선형 방정식</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(lr.coef_.shape, lr.intercept_.shape)  </span><br></pre></td></tr></table></figure>\n\n<pre><code>(7, 5) (7,)\n</code></pre>\n<h2 id=\"평가지표\"><a href=\"#평가지표\" class=\"headerlink\" title=\"평가지표\"></a>평가지표</h2><h3 id=\"회귀-평가지표\"><a href=\"#회귀-평가지표\" class=\"headerlink\" title=\"회귀 평가지표\"></a>회귀 평가지표</h3><ul>\n<li>결정계수 (교재 121p)<ul>\n<li>1 - (타깃 - 예측)^2의 합 &#x2F; (타깃 - 평균)^2의 합</li>\n</ul>\n</li>\n<li>mae, mse, rmse 만 기억<ul>\n<li>(실제 - 예측) &#x3D; 오차</li>\n<li>mae(mean absolute error) : 오차의 절댓값의 평균</li>\n<li>mse(mean squared error) : 오차 제곱의 평균</li>\n<li>rmse(root mean squared error) : mse에 제곱근을 취한 값</li>\n</ul>\n</li>\n<li>좋은 모델의 기준<ul>\n<li>결정계수 : 1에 수렴하면 좋은 모델</li>\n<li>mae, msem, rmse : 0에 수렴하면 좋은 모델</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> mean_absolute_error, mean_squared_error, r2_score</span><br><span class=\"line\"></span><br><span class=\"line\">true = np.array([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">8</span>]) <span class=\"comment\"># 실제값</span></span><br><span class=\"line\">preds = np.array([<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">7</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>]) <span class=\"comment\"># 예측값</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 절댓값 오차의 평균</span></span><br><span class=\"line\">mae = mean_absolute_error(true, preds)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(mae)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 제곱 오차의 평균</span></span><br><span class=\"line\">mse = mean_squared_error(true,preds)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(mse)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># np.squt : 루트 씌워주는 함수</span></span><br><span class=\"line\">rmse = np.sqrt(mse)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(rmse)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 결정계수</span></span><br><span class=\"line\">r2 = r2_score(true, preds)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(r2)</span><br></pre></td></tr></table></figure>\n\n<pre><code>0.5384615384615384\n0.6923076923076923\n0.8320502943378437\n0.8617021276595744\n</code></pre>\n<h3 id=\"분류-평가지표\"><a href=\"#분류-평가지표\" class=\"headerlink\" title=\"분류 평가지표\"></a>분류 평가지표</h3><ul>\n<li>오차 행렬</li>\n<li>실제 값<ul>\n<li>[빙어, 도미, 도미, 빙어, 도미]</li>\n</ul>\n</li>\n<li>예측 값<ul>\n<li>[빙어, 빙어, 도미, 빙어, 빙어]</li>\n</ul>\n</li>\n</ul>\n<p>TP(빙어를 빙어로 예측) &#x3D; 2개<br>TN(도미를 도미로 예측) &#x3D; 1개<br>FN(도미를 빙어로 예측) &#x3D; 2개<br>FP(빙어를 도미로 예측) &#x3D; 0개</p>\n<ul>\n<li><p>TP, TN, FP, FN</p>\n</li>\n<li><p>예) TP &#x3D; 5, TN &#x3D; 5, FP &#x3D; 3, FN &#x3D; 7</p>\n</li>\n<li><p>모든 케이스에서 정확도로 처리할 수 없으므로 정밀도, 재현율 파악도 중요하다.</p>\n<ul>\n<li><p>정확도 : 전체 중에 맞춘 갯수</p>\n<ul>\n<li>(TP + TN) &#x2F; (TP + TN + FP + FN)</li>\n</ul>\n</li>\n<li><p>정밀도 : 양성(Positive)이라고 예측한 값 중 실제 양성인 값의 비율</p>\n<ul>\n<li>TP &#x2F; (TP + FP)</li>\n</ul>\n</li>\n<li><p>재현율 : 양성(Positive)인 실제 값 중 양성으로 예측한 값(TP)의 비율(암진단 같은 경우)</p>\n<ul>\n<li>TP &#x2F; (TP + TF)</li>\n</ul>\n</li>\n<li><p>로그손실</p>\n</li>\n<li><p>ROC Curve (&#x3D; AUC)</p>\n</li>\n</ul>\n</li>\n<li><p>이 모형의 정확도 3&#x2F;5 &#x3D; 60%</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> confusion_matrix</span><br><span class=\"line\"></span><br><span class=\"line\">true = [<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>]</span><br><span class=\"line\">preds = [<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">confusion_matrix(true, preds)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([[2, 1],\n       [2, 0]])\n</code></pre>\n","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/07/01/day0701_ch04/python.png","excerpt":"<h3 id=\"로지스틱-회귀\"><a href=\"#로지스틱-회귀\" class=\"headerlink\" title=\"로지스틱 회귀\"></a>로지스틱 회귀</h3>","more":"<ul>\n<li>선형 회귀에서 출발</li>\n<li>이진 분류 문제 해결</li>\n<li>클래스 확률 예측</li>\n<li>딥러닝에서도 사용됨</li>\n</ul>\n<h2 id=\"교재-177p\"><a href=\"#교재-177p\" class=\"headerlink\" title=\"교재 177p\"></a>교재 177p</h2><ul>\n<li>X가 사각형일 확률 30%</li>\n<li>X가 삼각형일 확률  확률 20%50%</li>\n<li>X가 원일</li>\n</ul>\n<h2 id=\"데이터-불러오기\"><a href=\"#데이터-불러오기\" class=\"headerlink\" title=\"데이터 불러오기\"></a>데이터 불러오기</h2><ul>\n<li>Species (종속변수&#x3D;Y)</li>\n<li>나머지 Weight, Length, Diagonal, Height, Width 는 독립변수</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"></span><br><span class=\"line\">fish = pd.read_csv(<span class=\"string\">&#x27;https://bit.ly/fish_csv_data&#x27;</span>)</span><br><span class=\"line\">fish.head()</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n  <div id=\"df-4733cf17-6355-45a1-8704-1092d897ce3b\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Species</th>\n      <th>Weight</th>\n      <th>Length</th>\n      <th>Diagonal</th>\n      <th>Height</th>\n      <th>Width</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Bream</td>\n      <td>242.0</td>\n      <td>25.4</td>\n      <td>30.0</td>\n      <td>11.5200</td>\n      <td>4.0200</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Bream</td>\n      <td>290.0</td>\n      <td>26.3</td>\n      <td>31.2</td>\n      <td>12.4800</td>\n      <td>4.3056</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Bream</td>\n      <td>340.0</td>\n      <td>26.5</td>\n      <td>31.1</td>\n      <td>12.3778</td>\n      <td>4.6961</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Bream</td>\n      <td>363.0</td>\n      <td>29.0</td>\n      <td>33.5</td>\n      <td>12.7300</td>\n      <td>4.4555</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Bream</td>\n      <td>430.0</td>\n      <td>29.0</td>\n      <td>34.0</td>\n      <td>12.4440</td>\n      <td>5.1340</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4733cf17-6355-45a1-8704-1092d897ce3b')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n<p>  &lt;svg xmlns&#x3D;”<a href=\"http://www.w3.org/2000/svg&quot;\">http://www.w3.org/2000/svg&quot;</a> height&#x3D;”24px”viewBox&#x3D;”0 0 24 24”<br>       width&#x3D;”24px”&gt;<br>    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><br>    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/><br>  </svg><br>      </button></p>\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n<pre><code>  &lt;script&gt;\n    const buttonEl =\n      document.querySelector(&#39;#df-4733cf17-6355-45a1-8704-1092d897ce3b button.colab-df-convert&#39;);\n    buttonEl.style.display =\n      google.colab.kernel.accessAllowed ? &#39;block&#39; : &#39;none&#39;;\n\n    async function convertToInteractive(key) &#123;\n      const element = document.querySelector(&#39;#df-4733cf17-6355-45a1-8704-1092d897ce3b&#39;);\n      const dataTable =\n        await google.colab.kernel.invokeFunction(&#39;convertToInteractive&#39;,\n                                                 [key], &#123;&#125;);\n      if (!dataTable) return;\n\n      const docLinkHtml = &#39;Like what you see? Visit the &#39; +\n        &#39;&lt;a target=&quot;_blank&quot; href=https://colab.research.google.com/notebooks/data_table.ipynb&gt;data table notebook&lt;/a&gt;&#39;\n        + &#39; to learn more about interactive tables.&#39;;\n      element.innerHTML = &#39;&#39;;\n      dataTable[&#39;output_type&#39;] = &#39;display_data&#39;;\n      await google.colab.output.renderOutput(dataTable, element);\n      const docLink = document.createElement(&#39;div&#39;);\n      docLink.innerHTML = docLinkHtml;\n      element.appendChild(docLink);\n    &#125;\n  &lt;/script&gt;\n&lt;/div&gt;\n</code></pre>\n  </div>\n\n\n\n\n<h2 id=\"데이터-탐색\"><a href=\"#데이터-탐색\" class=\"headerlink\" title=\"데이터 탐색\"></a>데이터 탐색</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 가장 신경써야 하는건 종속변수</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(pd.unique(fish[<span class=\"string\">&#x27;Species&#x27;</span>]))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(fish[<span class=\"string\">&#x27;Species&#x27;</span>].value_counts())</span><br></pre></td></tr></table></figure>\n\n<pre><code>[&#39;Bream&#39; &#39;Roach&#39; &#39;Whitefish&#39; &#39;Parkki&#39; &#39;Perch&#39; &#39;Pike&#39; &#39;Smelt&#39;]\nPerch        56\nBream        35\nRoach        20\nPike         17\nSmelt        14\nParkki       11\nWhitefish     6\nName: Species, dtype: int64\n</code></pre>\n<h2 id=\"데이터-가공\"><a href=\"#데이터-가공\" class=\"headerlink\" title=\"데이터 가공\"></a>데이터 가공</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># pandas 데이터 프레임에서 numpy 배열로 변환</span></span><br><span class=\"line\">fish_input = fish[[<span class=\"string\">&#x27;Weight&#x27;</span>, <span class=\"string\">&#x27;Length&#x27;</span>, <span class=\"string\">&#x27;Diagonal&#x27;</span>, <span class=\"string\">&#x27;Height&#x27;</span>, <span class=\"string\">&#x27;Width&#x27;</span>]].to_numpy()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(fish_input.shape)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(159, 5)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(fish_input[:<span class=\"number\">5</span>])</span><br></pre></td></tr></table></figure>\n\n<pre><code>[[242.      25.4     30.      11.52     4.02  ]\n [290.      26.3     31.2     12.48     4.3056]\n [340.      26.5     31.1     12.3778   4.6961]\n [363.      29.      33.5     12.73     4.4555]\n [430.      29.      34.      12.444    5.134 ]]\n</code></pre>\n<ul>\n<li>타깃 데이터 &#x3D; 종속변수 &#x3D; Y</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fish_target = fish[<span class=\"string\">&#x27;Species&#x27;</span>].to_numpy()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(fish_target.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(fish_target[:<span class=\"number\">5</span>])</span><br></pre></td></tr></table></figure>\n\n<pre><code>(159,)\n[&#39;Bream&#39; &#39;Bream&#39; &#39;Bream&#39; &#39;Bream&#39; &#39;Bream&#39;]\n</code></pre>\n<h2 id=\"데이터-분리\"><a href=\"#데이터-분리\" class=\"headerlink\" title=\"데이터 분리\"></a>데이터 분리</h2><ul>\n<li>훈련데이터 테스트 데이터 분리</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 임의 샘플링</span></span><br><span class=\"line\">train_input, test_input, train_target, test_target = train_test_split(</span><br><span class=\"line\">    fish_input, fish_target, random_state=<span class=\"number\">42</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 층화 샘플링</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"표준화-전처리-중요\"><a href=\"#표준화-전처리-중요\" class=\"headerlink\" title=\"표준화 전처리(중요)\"></a>표준화 전처리(중요)</h2><ul>\n<li>여기에서도 훈련 세트의 통계값으로 테스트 세트를 변환해야 한다.<ul>\n<li>데이터 세트를 나눴을 때 100개의 데이터중 70개는 훈련 세트 데이터, 30개는 테스트 데이터 일 수도 있는데, 테스트를 할때 테스트 데이터를 넣고 돌리면 답지 보고 수능 푸는 격이기 때문에, 우리는 테스트 데이터를 알지만 훈련 데이터 값으로 테스트를 해야 옳은 테스트 이다.</li>\n</ul>\n</li>\n<li>예) 데이터 가공 할때<ul>\n<li>숫자 결측치가 존재, 훈련데이터의 평균값으로 대체 해야 한다.(테스트 데이터의 결측치도 훈련데이터의 평균값으로)</li>\n<li>전체데이터의 평균값으로 넣으면 X</li>\n<li>따라서 훈련 데이터와 테스트 데이터는 분리 해야한다</li>\n</ul>\n</li>\n<li>이 작업을 “데이터 누수(Data Leakage)” 라고 한다<ul>\n<li>훈련 데이터 평균값 70을 대치</li>\n<li>테스트 데이터 평균값 75를 대치</li>\n<li>모든 데이터 평균값 73을 대치</li>\n<li>이 중 뭐가 옳을까?<ul>\n<li>답 : 70</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>교재 97p.</p>\n<ul>\n<li>기준을 맞춰라 –&gt; 데이터 표준화 (표준점수)</li>\n<li>수동으로 mean, std</li>\n<li>표준점수 &#x3D; (데이터 - 평균) &#x2F; 분산<br> -&gt; ss.transform(tranin_input) 으로 한방에 처리</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> StandardScaler</span><br><span class=\"line\">ss = StandardScaler()</span><br><span class=\"line\">ss.fit(train_input)</span><br><span class=\"line\"><span class=\"comment\"># ss.fit(test_input) =&gt; 이 코드는 쓰면 안된다!! 테스트 데이터값은 쓰지 않는다.</span></span><br><span class=\"line\"></span><br><span class=\"line\">train_scaled = ss.transform(train_input)</span><br><span class=\"line\">test_scaled = ss.transform(test_input)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"모형-만들기\"><a href=\"#모형-만들기\" class=\"headerlink\" title=\"모형 만들기\"></a>모형 만들기</h2><ul>\n<li>K-최근접 이웃</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.neighbors <span class=\"keyword\">import</span> KNeighborsClassifier</span><br><span class=\"line\">kn = KNeighborsClassifier(n_neighbors = <span class=\"number\">3</span>)</span><br><span class=\"line\">kn.fit(train_scaled, train_target)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(kn.score(train_scaled, train_target))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(kn.score(test_scaled, test_target))</span><br></pre></td></tr></table></figure>\n\n<pre><code>0.8907563025210085\n0.85\n</code></pre>\n<ul>\n<li>타깃값 확인</li>\n<li>알파벳 순으로 정렬</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(kn.classes_)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[&#39;Bream&#39; &#39;Parkki&#39; &#39;Perch&#39; &#39;Pike&#39; &#39;Roach&#39; &#39;Smelt&#39; &#39;Whitefish&#39;]\n</code></pre>\n<ul>\n<li>다중분류</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(kn.predict(test_scaled[:<span class=\"number\">5</span>]))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[&#39;Perch&#39; &#39;Smelt&#39; &#39;Pike&#39; &#39;Perch&#39; &#39;Perch&#39;]\n</code></pre>\n<ul>\n<li>5개 항목의 확률</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\">proba = kn.predict_proba(test_scaled[:<span class=\"number\">5</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span> (kn.classes_)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.<span class=\"built_in\">round</span>(proba, decimals=<span class=\"number\">4</span>))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[&#39;Bream&#39; &#39;Parkki&#39; &#39;Perch&#39; &#39;Pike&#39; &#39;Roach&#39; &#39;Smelt&#39; &#39;Whitefish&#39;]\n[[0.     0.     1.     0.     0.     0.     0.    ]\n [0.     0.     0.     0.     0.     1.     0.    ]\n [0.     0.     0.     1.     0.     0.     0.    ]\n [0.     0.     0.6667 0.     0.3333 0.     0.    ]\n [0.     0.     0.6667 0.     0.3333 0.     0.    ]]\n</code></pre>\n<ul>\n<li>첫번째 클래스<ul>\n<li>Perch로 분류할 확률이 100%</li>\n</ul>\n</li>\n<li>두번째 클래스<ul>\n<li>Perch로 분류할 확률이 66.7%</li>\n<li>Roach로 분류할 확률이 33.3%</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"회귀-식\"><a href=\"#회귀-식\" class=\"headerlink\" title=\"회귀 식\"></a>회귀 식</h2><ul>\n<li>y &#x3D; ax + b</li>\n<li>양변에 로그를 취함</li>\n</ul>\n<h2 id=\"로지스틱-회귀로-이진-분류-수행하기\"><a href=\"#로지스틱-회귀로-이진-분류-수행하기\" class=\"headerlink\" title=\"로지스틱 회귀로 이진 분류 수행하기\"></a>로지스틱 회귀로 이진 분류 수행하기</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">char_arr = np.array([<span class=\"string\">&#x27;A&#x27;</span>, <span class=\"string\">&#x27;B&#x27;</span>, <span class=\"string\">&#x27;C&#x27;</span>, <span class=\"string\">&#x27;D&#x27;</span>, <span class=\"string\">&#x27;E&#x27;</span>])  <span class=\"comment\"># train_scaled 값</span></span><br><span class=\"line\"><span class=\"comment\"># [True, False, True, False, False] --&gt; bream_smelt_indexes</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(char_arr[[<span class=\"literal\">True</span>, <span class=\"literal\">False</span>, <span class=\"literal\">True</span>, <span class=\"literal\">False</span>, <span class=\"literal\">False</span>]])</span><br></pre></td></tr></table></figure>\n\n<pre><code>[&#39;A&#39; &#39;C&#39;]\n</code></pre>\n<ul>\n<li>True 값만 추출하는 원리를 이용해서</li>\n<li>이 원리를 이용해서 도미와 빙어의 행만 골라보자</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bream_smelt_indexes = (train_target == <span class=\"string\">&#x27;Bream&#x27;</span>) | (train_target == <span class=\"string\">&#x27;Smelt&#x27;</span>)</span><br><span class=\"line\">train_bream_smelt = train_scaled[bream_smelt_indexes]</span><br><span class=\"line\">target_bream_smelt = train_target[bream_smelt_indexes]</span><br><span class=\"line\"></span><br><span class=\"line\">train_scaled.shape, train_bream_smelt.shape</span><br><span class=\"line\"><span class=\"comment\"># 119개에서 33개로 줄어든 데이터</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>((119, 5), (33, 5))\n</code></pre>\n<h2 id=\"모델-만들기\"><a href=\"#모델-만들기\" class=\"headerlink\" title=\"모델 만들기\"></a>모델 만들기</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LogisticRegression</span><br><span class=\"line\">lr = LogisticRegression()</span><br><span class=\"line\">lr.fit(train_bream_smelt, target_bream_smelt)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>LogisticRegression()\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 클래스를 예측</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(lr.predict(train_bream_smelt[:<span class=\"number\">5</span>]))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[&#39;Bream&#39; &#39;Smelt&#39; &#39;Bream&#39; &#39;Bream&#39; &#39;Bream&#39;]\n</code></pre>\n<ul>\n<li>확률 값 구하기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(lr.predict_proba(train_bream_smelt[:<span class=\"number\">5</span>]))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[[0.99759855 0.00240145]\n [0.02735183 0.97264817]\n [0.99486072 0.00513928]\n [0.98584202 0.01415798]\n [0.99767269 0.00232731]]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(lr.classes_)</span><br><span class=\"line\"><span class=\"comment\"># 왼쪽이 Bream 오른쪽이 Smelt</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>[&#39;Bream&#39; &#39;Smelt&#39;]\n</code></pre>\n<ul>\n<li>분류기준 : threshold 임계값 설정 (꼭 0.5일 필요는 없다)</li>\n</ul>\n<p>도미 vs 빙어</p>\n<p>[0.49, 0.51],</p>\n<p>[0.70, 0.30],</p>\n<p>[0.90, 0.10]</p>\n<h2 id=\"계수와-절편\"><a href=\"#계수와-절편\" class=\"headerlink\" title=\"계수와 절편\"></a>계수와 절편</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(lr.coef_, lr.intercept_)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[[-0.4037798  -0.57620209 -0.66280298 -1.01290277 -0.73168947]] [-2.16155132]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">decisions = lr.decision_function(train_bream_smelt[:<span class=\"number\">5</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(decisions)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[-6.02927744  3.57123907 -5.26568906 -4.24321775 -6.0607117 ]\n</code></pre>\n<ul>\n<li>이 z 값을 확률 값으로 변환(z값을 평면에 떨어뜨린다)</li>\n<li>로지스틱 회귀 그래프 원리(직선그래프보다 매끄럽게 이어지는 그래프를 만듬)<br><img src=\"/images/0701/logic.png\"></li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> scipy.special <span class=\"keyword\">import</span> expit</span><br><span class=\"line\"><span class=\"built_in\">print</span>(expit(decisions))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[0.00240145 0.97264817 0.00513928 0.01415798 0.00232731]\n</code></pre>\n<h2 id=\"다중-분류-수행하기\"><a href=\"#다중-분류-수행하기\" class=\"headerlink\" title=\"다중 분류 수행하기\"></a>다중 분류 수행하기</h2><ul>\n<li>이진 분류의 확장판</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 하이퍼 파라미터 세팅</span></span><br><span class=\"line\"><span class=\"comment\"># 모형을 튜닝</span></span><br><span class=\"line\"><span class=\"comment\"># 웬만하면 순정(default) 쓰세요.</span></span><br><span class=\"line\"><span class=\"comment\"># 모형 결과의 과대적합 또는 과소적합을 방지 하기 위한 것</span></span><br><span class=\"line\">lr = LogisticRegression(C = <span class=\"number\">20</span>, max_iter = <span class=\"number\">1000</span>)</span><br><span class=\"line\">lr.fit(train_scaled, train_target)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(lr.score(train_scaled, train_target))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(lr.score(test_scaled, test_target))</span><br></pre></td></tr></table></figure>\n\n<pre><code>0.9327731092436975\n0.925\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(lr.predict(test_scaled[:<span class=\"number\">5</span>]))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[&#39;Perch&#39; &#39;Smelt&#39; &#39;Pike&#39; &#39;Roach&#39; &#39;Perch&#39;]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proba = lr.predict_proba(test_scaled[:<span class=\"number\">5</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.<span class=\"built_in\">round</span>(proba,decimals = <span class=\"number\">3</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(lr.classes_)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[[0.    0.014 0.841 0.    0.136 0.007 0.003]\n [0.    0.003 0.044 0.    0.007 0.946 0.   ]\n [0.    0.    0.034 0.935 0.015 0.016 0.   ]\n [0.011 0.034 0.306 0.007 0.567 0.    0.076]\n [0.    0.    0.904 0.002 0.089 0.002 0.001]]\n[&#39;Bream&#39; &#39;Parkki&#39; &#39;Perch&#39; &#39;Pike&#39; &#39;Roach&#39; &#39;Smelt&#39; &#39;Whitefish&#39;]\n</code></pre>\n<ul>\n<li>다중 분류일 경우 선형 방정식은 어떤 모습일까?<ul>\n<li>7개 분류, 5개 컬럼 값에 선형 방정식</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(lr.coef_.shape, lr.intercept_.shape)  </span><br></pre></td></tr></table></figure>\n\n<pre><code>(7, 5) (7,)\n</code></pre>\n<h2 id=\"평가지표\"><a href=\"#평가지표\" class=\"headerlink\" title=\"평가지표\"></a>평가지표</h2><h3 id=\"회귀-평가지표\"><a href=\"#회귀-평가지표\" class=\"headerlink\" title=\"회귀 평가지표\"></a>회귀 평가지표</h3><ul>\n<li>결정계수 (교재 121p)<ul>\n<li>1 - (타깃 - 예측)^2의 합 &#x2F; (타깃 - 평균)^2의 합</li>\n</ul>\n</li>\n<li>mae, mse, rmse 만 기억<ul>\n<li>(실제 - 예측) &#x3D; 오차</li>\n<li>mae(mean absolute error) : 오차의 절댓값의 평균</li>\n<li>mse(mean squared error) : 오차 제곱의 평균</li>\n<li>rmse(root mean squared error) : mse에 제곱근을 취한 값</li>\n</ul>\n</li>\n<li>좋은 모델의 기준<ul>\n<li>결정계수 : 1에 수렴하면 좋은 모델</li>\n<li>mae, msem, rmse : 0에 수렴하면 좋은 모델</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> mean_absolute_error, mean_squared_error, r2_score</span><br><span class=\"line\"></span><br><span class=\"line\">true = np.array([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">8</span>]) <span class=\"comment\"># 실제값</span></span><br><span class=\"line\">preds = np.array([<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">7</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>]) <span class=\"comment\"># 예측값</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 절댓값 오차의 평균</span></span><br><span class=\"line\">mae = mean_absolute_error(true, preds)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(mae)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 제곱 오차의 평균</span></span><br><span class=\"line\">mse = mean_squared_error(true,preds)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(mse)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># np.squt : 루트 씌워주는 함수</span></span><br><span class=\"line\">rmse = np.sqrt(mse)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(rmse)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 결정계수</span></span><br><span class=\"line\">r2 = r2_score(true, preds)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(r2)</span><br></pre></td></tr></table></figure>\n\n<pre><code>0.5384615384615384\n0.6923076923076923\n0.8320502943378437\n0.8617021276595744\n</code></pre>\n<h3 id=\"분류-평가지표\"><a href=\"#분류-평가지표\" class=\"headerlink\" title=\"분류 평가지표\"></a>분류 평가지표</h3><ul>\n<li>오차 행렬</li>\n<li>실제 값<ul>\n<li>[빙어, 도미, 도미, 빙어, 도미]</li>\n</ul>\n</li>\n<li>예측 값<ul>\n<li>[빙어, 빙어, 도미, 빙어, 빙어]</li>\n</ul>\n</li>\n</ul>\n<p>TP(빙어를 빙어로 예측) &#x3D; 2개<br>TN(도미를 도미로 예측) &#x3D; 1개<br>FN(도미를 빙어로 예측) &#x3D; 2개<br>FP(빙어를 도미로 예측) &#x3D; 0개</p>\n<ul>\n<li><p>TP, TN, FP, FN</p>\n</li>\n<li><p>예) TP &#x3D; 5, TN &#x3D; 5, FP &#x3D; 3, FN &#x3D; 7</p>\n</li>\n<li><p>모든 케이스에서 정확도로 처리할 수 없으므로 정밀도, 재현율 파악도 중요하다.</p>\n<ul>\n<li><p>정확도 : 전체 중에 맞춘 갯수</p>\n<ul>\n<li>(TP + TN) &#x2F; (TP + TN + FP + FN)</li>\n</ul>\n</li>\n<li><p>정밀도 : 양성(Positive)이라고 예측한 값 중 실제 양성인 값의 비율</p>\n<ul>\n<li>TP &#x2F; (TP + FP)</li>\n</ul>\n</li>\n<li><p>재현율 : 양성(Positive)인 실제 값 중 양성으로 예측한 값(TP)의 비율(암진단 같은 경우)</p>\n<ul>\n<li>TP &#x2F; (TP + TF)</li>\n</ul>\n</li>\n<li><p>로그손실</p>\n</li>\n<li><p>ROC Curve (&#x3D; AUC)</p>\n</li>\n</ul>\n</li>\n<li><p>이 모형의 정확도 3&#x2F;5 &#x3D; 60%</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> confusion_matrix</span><br><span class=\"line\"></span><br><span class=\"line\">true = [<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>]</span><br><span class=\"line\">preds = [<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">confusion_matrix(true, preds)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([[2, 1],\n       [2, 0]])\n</code></pre>"},{"title":"day 0704","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","thumbnailImage":"python.png","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-07-04T03:50:55.000Z","_content":"\n로지스틱 함수\n\n<!-- excerpt -->\n\n\n## 캐글 데이터\n- X_train, X_test, Y_train, Y_test\n- X_train, X_val, Y_train, Y-val  같은 함수들을 사용\n\n## 확률적 경사 하강법\n- 이 이론이 단독적으로 의미있지는 않지만, 여기서 파생된 이론이 많아서 중요!!\n- 점진적 학습 (step, 보폭(=학습속도)\n  + 보폭이 클 수록 산에서 빠르게 내려올 수 있지만 여러 경치는 못 본다(좁게 본다)\n- 학습률\n- XGBoost, LightGBM, 딥러닝(이미지 분류, 자연어 처리, 옵티마이저)\n\n### 손실 함수\n- 신경망 이미지 데이터, 자연어\n- 자율주행 하루 데이터 1TB --> 이걸 다 학습\n- 한꺼번에 전부 모델 학습하기는 어려움\n  + 샘플링, 배치, 에포크, 오차(=손실=loss)가 가장 작은 지점을 찾아야 함.\n- 결론적으로, 확률적 경사 하강법\n\n\n#### 로지스틱 손실 함수\n\n\n```python\nimport pandas as pd\nfish = pd.read_csv(\"https://bit.ly/fish_csv_data\")\nfish.info()\n```\n\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 159 entries, 0 to 158\n    Data columns (total 6 columns):\n     #   Column    Non-Null Count  Dtype  \n    ---  ------    --------------  -----  \n     0   Species   159 non-null    object \n     1   Weight    159 non-null    float64\n     2   Length    159 non-null    float64\n     3   Diagonal  159 non-null    float64\n     4   Height    159 non-null    float64\n     5   Width     159 non-null    float64\n    dtypes: float64(5), object(1)\n    memory usage: 7.6+ KB\n    \n\n- 입력 데이터와 타깃 데이터 분리\n\n\n```python\nfish_input = fish[['Weight', 'Length', 'Diagonal', 'Height', 'Width']].to_numpy()\nfish_target = fish['Species'].to_numpy()\nfish_input.shape, fish_target.shape\n```\n\n\n\n\n    ((159, 5), (159,))\n\n\n\n- 훈련 세트와 테스트 데이터 분리\n\n\n```python\nfrom sklearn.model_selection import train_test_split\ntrain_input, test_input, train_target, test_target = train_test_split(\n    # input, target, 옵션...\n    fish_input, fish_target, random_state=42\n)\n```\n\n- 훈련 세트와 테스트 세트의 특성 표준화\n  + 무게, 길이, 대각선 길이, 높이, 너비\n- 단위 표준화 처리 진행\n\n\n```python\nfrom sklearn.preprocessing import StandardScaler\nss = StandardScaler()\nss.fit(train_input)\n\ntrain_scaled = ss.transform(train_input)\ntest_scaled = ss.transform(test_input)\n\n\n```\n\n### 모델링\n- 확률적 경사 하강법\n\n\n```python\nfrom sklearn.linear_model import SGDClassifier\nsc = SGDClassifier(loss = 'log', max_iter = 10, random_state = 42)\n\nsc.fit(train_scaled, train_target)\nprint(sc.score(train_scaled, train_target))\nprint(sc.score(test_scaled, test_target))\n\n# 최적의 장소가 아니라 더 분석해볼 수 있는데 왜 멈췄냐는 메세지가 뜸\n```\n\n    0.773109243697479\n    0.775\n    \n\n    /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_stochastic_gradient.py:700: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.\n      ConvergenceWarning,\n    \n\n- partial_fit() 메서드 사용하면 추가 학습.\n\n\n```python\nsc.partial_fit(train_scaled, train_target)\nprint(sc.score(train_scaled, train_target))\nprint(sc.score(test_scaled, test_target))\n```\n\n    0.865546218487395\n    0.9\n    \n\n## 에포크와 과대/과소적합\n- 에포크 숫자가 적으면 --> 덜 학습\n- early_stopping\n  + 에포크 숫자를 1000, 손실 10, 9, 8, ... ,3\n  + 3에 도달한 시점이 150\n  + 강제로 끊어주는 느낌\n\n\n```python\nimport numpy as np\nsc = SGDClassifier(loss='log', random_state = 42)\ntrain_score = []\ntest_score = []\n\nclasses = np.unique(train_target)\n\n# 300번 에포크 훈련을 반복\n# 훈련 할 때마다, train_score, test_score 추가를 한다.\nfor _ in range(0, 300):\n  sc.partial_fit(train_scaled, train_target, classes = classes)\n  train_score.append(sc.score(train_scaled, train_target))\n  test_score.append(sc.score(test_scaled, test_target))\n```\n\n- 시각화\n\n\n```python\nimport matplotlib.pyplot as plt\nplt.plot(train_score)\nplt.plot(test_score)\nplt.legend([\"train\", \"test\"])\nplt.show()\n# X축 = 에포크, Y축 = 정확도\n```\n\n\n    \n![png](/images/0704/output_18_0.png)\n    \n\n\n## 결정 트리(중요!!)\n- wine 데이터 가져오기\n\n\n```python\nimport pandas as pd\nwine = pd.read_csv('https://bit.ly/wine_csv_data')\nprint(wine.head())\n```\n\n       alcohol  sugar    pH  class\n    0      9.4    1.9  3.51    0.0\n    1      9.8    2.6  3.20    0.0\n    2      9.8    2.3  3.26    0.0\n    3      9.8    1.9  3.16    0.0\n    4      9.4    1.9  3.51    0.0\n    \n\n- 데이터 가공하기\n\n\n```python\ndata = wine[['alcohol', 'sugar', 'pH']].to_numpy()\ntarget = wine['class'].to_numpy()\n```\n\n- 훈련데이터 분리\n\n\n```python\nfrom sklearn.model_selection import train_test_split\ntrain_input, test_input, train_target, test_target = train_test_split(\n    data, target, test_size = 0.2, random_state = 42\n)\n\ntrain_input.shape, test_input.shape, train_target.shape, test_target.shape\n```\n\n\n\n\n    ((5197, 3), (1300, 3), (5197,), (1300,))\n\n\n\n- 단위 표준화 처리\n\n\n```python\nfrom sklearn.preprocessing import StandardScaler\nss = StandardScaler()\nss.fit(train_input)\n\ntrain_scaled = ss.transform(train_input)\ntest_scaled = ss.transform(test_input)\n```\n\n\n```python\nfrom sklearn.tree import DecisionTreeClassifier\nimport matplotlib.pyplot as plt\nfrom sklearn.tree import plot_tree\n\ndt = DecisionTreeClassifier(max_depth = 8, random_state = 42)  # 깊이\ndt.fit(train_scaled, train_target)\nprint(dt.score(train_scaled, train_target))   # 훈련 세트\nprint(dt.score(test_scaled, test_target))     # 테스트 세트\n\nplt.figure(figsize = (10, 7))\nplot_tree(dt)\nplt.show()\n```\n\n    0.9003271117952665\n    0.8576923076923076\n    \n\n\n    \n![png](/images/0704/output_27_1.png)\n    \n\n\n- 훈련 데이터 정확도는 99.7%\n- 테스트 데이터 정확도는 85.9%\n  + 과대적합이 일어남\n  + 정확도가 낮은 이유 : 너무 깊이 세부적으로 들어가기보다 깊이를 1번정도만 했기 때문에\n- 정확도가 중요한게 아니고 과대적합이 일어나느냐 마느냐가 중요함\n- \"max_depth\" 의 값을 바꿔가면서 검토\n  + max_depth 값을 7로 넣었을 때 보다 8로 넣었을 때 과대적합이 크게 일어난다.\n  + 8보다 7이 적합한 수이다.\n","source":"_posts/day0704.md","raw":"---\ntitle: \"day 0704\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: Python\nthumbnailImage: python.png\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-07-04 12:50:55'\n---\n\n로지스틱 함수\n\n<!-- excerpt -->\n\n\n## 캐글 데이터\n- X_train, X_test, Y_train, Y_test\n- X_train, X_val, Y_train, Y-val  같은 함수들을 사용\n\n## 확률적 경사 하강법\n- 이 이론이 단독적으로 의미있지는 않지만, 여기서 파생된 이론이 많아서 중요!!\n- 점진적 학습 (step, 보폭(=학습속도)\n  + 보폭이 클 수록 산에서 빠르게 내려올 수 있지만 여러 경치는 못 본다(좁게 본다)\n- 학습률\n- XGBoost, LightGBM, 딥러닝(이미지 분류, 자연어 처리, 옵티마이저)\n\n### 손실 함수\n- 신경망 이미지 데이터, 자연어\n- 자율주행 하루 데이터 1TB --> 이걸 다 학습\n- 한꺼번에 전부 모델 학습하기는 어려움\n  + 샘플링, 배치, 에포크, 오차(=손실=loss)가 가장 작은 지점을 찾아야 함.\n- 결론적으로, 확률적 경사 하강법\n\n\n#### 로지스틱 손실 함수\n\n\n```python\nimport pandas as pd\nfish = pd.read_csv(\"https://bit.ly/fish_csv_data\")\nfish.info()\n```\n\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 159 entries, 0 to 158\n    Data columns (total 6 columns):\n     #   Column    Non-Null Count  Dtype  \n    ---  ------    --------------  -----  \n     0   Species   159 non-null    object \n     1   Weight    159 non-null    float64\n     2   Length    159 non-null    float64\n     3   Diagonal  159 non-null    float64\n     4   Height    159 non-null    float64\n     5   Width     159 non-null    float64\n    dtypes: float64(5), object(1)\n    memory usage: 7.6+ KB\n    \n\n- 입력 데이터와 타깃 데이터 분리\n\n\n```python\nfish_input = fish[['Weight', 'Length', 'Diagonal', 'Height', 'Width']].to_numpy()\nfish_target = fish['Species'].to_numpy()\nfish_input.shape, fish_target.shape\n```\n\n\n\n\n    ((159, 5), (159,))\n\n\n\n- 훈련 세트와 테스트 데이터 분리\n\n\n```python\nfrom sklearn.model_selection import train_test_split\ntrain_input, test_input, train_target, test_target = train_test_split(\n    # input, target, 옵션...\n    fish_input, fish_target, random_state=42\n)\n```\n\n- 훈련 세트와 테스트 세트의 특성 표준화\n  + 무게, 길이, 대각선 길이, 높이, 너비\n- 단위 표준화 처리 진행\n\n\n```python\nfrom sklearn.preprocessing import StandardScaler\nss = StandardScaler()\nss.fit(train_input)\n\ntrain_scaled = ss.transform(train_input)\ntest_scaled = ss.transform(test_input)\n\n\n```\n\n### 모델링\n- 확률적 경사 하강법\n\n\n```python\nfrom sklearn.linear_model import SGDClassifier\nsc = SGDClassifier(loss = 'log', max_iter = 10, random_state = 42)\n\nsc.fit(train_scaled, train_target)\nprint(sc.score(train_scaled, train_target))\nprint(sc.score(test_scaled, test_target))\n\n# 최적의 장소가 아니라 더 분석해볼 수 있는데 왜 멈췄냐는 메세지가 뜸\n```\n\n    0.773109243697479\n    0.775\n    \n\n    /usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_stochastic_gradient.py:700: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.\n      ConvergenceWarning,\n    \n\n- partial_fit() 메서드 사용하면 추가 학습.\n\n\n```python\nsc.partial_fit(train_scaled, train_target)\nprint(sc.score(train_scaled, train_target))\nprint(sc.score(test_scaled, test_target))\n```\n\n    0.865546218487395\n    0.9\n    \n\n## 에포크와 과대/과소적합\n- 에포크 숫자가 적으면 --> 덜 학습\n- early_stopping\n  + 에포크 숫자를 1000, 손실 10, 9, 8, ... ,3\n  + 3에 도달한 시점이 150\n  + 강제로 끊어주는 느낌\n\n\n```python\nimport numpy as np\nsc = SGDClassifier(loss='log', random_state = 42)\ntrain_score = []\ntest_score = []\n\nclasses = np.unique(train_target)\n\n# 300번 에포크 훈련을 반복\n# 훈련 할 때마다, train_score, test_score 추가를 한다.\nfor _ in range(0, 300):\n  sc.partial_fit(train_scaled, train_target, classes = classes)\n  train_score.append(sc.score(train_scaled, train_target))\n  test_score.append(sc.score(test_scaled, test_target))\n```\n\n- 시각화\n\n\n```python\nimport matplotlib.pyplot as plt\nplt.plot(train_score)\nplt.plot(test_score)\nplt.legend([\"train\", \"test\"])\nplt.show()\n# X축 = 에포크, Y축 = 정확도\n```\n\n\n    \n![png](/images/0704/output_18_0.png)\n    \n\n\n## 결정 트리(중요!!)\n- wine 데이터 가져오기\n\n\n```python\nimport pandas as pd\nwine = pd.read_csv('https://bit.ly/wine_csv_data')\nprint(wine.head())\n```\n\n       alcohol  sugar    pH  class\n    0      9.4    1.9  3.51    0.0\n    1      9.8    2.6  3.20    0.0\n    2      9.8    2.3  3.26    0.0\n    3      9.8    1.9  3.16    0.0\n    4      9.4    1.9  3.51    0.0\n    \n\n- 데이터 가공하기\n\n\n```python\ndata = wine[['alcohol', 'sugar', 'pH']].to_numpy()\ntarget = wine['class'].to_numpy()\n```\n\n- 훈련데이터 분리\n\n\n```python\nfrom sklearn.model_selection import train_test_split\ntrain_input, test_input, train_target, test_target = train_test_split(\n    data, target, test_size = 0.2, random_state = 42\n)\n\ntrain_input.shape, test_input.shape, train_target.shape, test_target.shape\n```\n\n\n\n\n    ((5197, 3), (1300, 3), (5197,), (1300,))\n\n\n\n- 단위 표준화 처리\n\n\n```python\nfrom sklearn.preprocessing import StandardScaler\nss = StandardScaler()\nss.fit(train_input)\n\ntrain_scaled = ss.transform(train_input)\ntest_scaled = ss.transform(test_input)\n```\n\n\n```python\nfrom sklearn.tree import DecisionTreeClassifier\nimport matplotlib.pyplot as plt\nfrom sklearn.tree import plot_tree\n\ndt = DecisionTreeClassifier(max_depth = 8, random_state = 42)  # 깊이\ndt.fit(train_scaled, train_target)\nprint(dt.score(train_scaled, train_target))   # 훈련 세트\nprint(dt.score(test_scaled, test_target))     # 테스트 세트\n\nplt.figure(figsize = (10, 7))\nplot_tree(dt)\nplt.show()\n```\n\n    0.9003271117952665\n    0.8576923076923076\n    \n\n\n    \n![png](/images/0704/output_27_1.png)\n    \n\n\n- 훈련 데이터 정확도는 99.7%\n- 테스트 데이터 정확도는 85.9%\n  + 과대적합이 일어남\n  + 정확도가 낮은 이유 : 너무 깊이 세부적으로 들어가기보다 깊이를 1번정도만 했기 때문에\n- 정확도가 중요한게 아니고 과대적합이 일어나느냐 마느냐가 중요함\n- \"max_depth\" 의 값을 바꿔가면서 검토\n  + max_depth 값을 7로 넣었을 때 보다 8로 넣었을 때 과대적합이 크게 일어난다.\n  + 8보다 7이 적합한 수이다.\n","slug":"day0704","published":1,"updated":"2022-07-21T12:49:15.569Z","_id":"cl5fcok7x0011jku0esw65bx9","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n\n<h2 id=\"캐글-데이터\"><a href=\"#캐글-데이터\" class=\"headerlink\" title=\"캐글 데이터\"></a>캐글 데이터</h2><ul>\n<li>X_train, X_test, Y_train, Y_test</li>\n<li>X_train, X_val, Y_train, Y-val  같은 함수들을 사용</li>\n</ul>\n<h2 id=\"확률적-경사-하강법\"><a href=\"#확률적-경사-하강법\" class=\"headerlink\" title=\"확률적 경사 하강법\"></a>확률적 경사 하강법</h2><ul>\n<li>이 이론이 단독적으로 의미있지는 않지만, 여기서 파생된 이론이 많아서 중요!!</li>\n<li>점진적 학습 (step, 보폭(&#x3D;학습속도)<ul>\n<li>보폭이 클 수록 산에서 빠르게 내려올 수 있지만 여러 경치는 못 본다(좁게 본다)</li>\n</ul>\n</li>\n<li>학습률</li>\n<li>XGBoost, LightGBM, 딥러닝(이미지 분류, 자연어 처리, 옵티마이저)</li>\n</ul>\n<h3 id=\"손실-함수\"><a href=\"#손실-함수\" class=\"headerlink\" title=\"손실 함수\"></a>손실 함수</h3><ul>\n<li>신경망 이미지 데이터, 자연어</li>\n<li>자율주행 하루 데이터 1TB –&gt; 이걸 다 학습</li>\n<li>한꺼번에 전부 모델 학습하기는 어려움<ul>\n<li>샘플링, 배치, 에포크, 오차(&#x3D;손실&#x3D;loss)가 가장 작은 지점을 찾아야 함.</li>\n</ul>\n</li>\n<li>결론적으로, 확률적 경사 하강법</li>\n</ul>\n<h4 id=\"로지스틱-손실-함수\"><a href=\"#로지스틱-손실-함수\" class=\"headerlink\" title=\"로지스틱 손실 함수\"></a>로지스틱 손실 함수</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\">fish = pd.read_csv(<span class=\"string\">&quot;https://bit.ly/fish_csv_data&quot;</span>)</span><br><span class=\"line\">fish.info()</span><br></pre></td></tr></table></figure>\n\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 159 entries, 0 to 158\nData columns (total 6 columns):\n #   Column    Non-Null Count  Dtype  \n---  ------    --------------  -----  \n 0   Species   159 non-null    object \n 1   Weight    159 non-null    float64\n 2   Length    159 non-null    float64\n 3   Diagonal  159 non-null    float64\n 4   Height    159 non-null    float64\n 5   Width     159 non-null    float64\ndtypes: float64(5), object(1)\nmemory usage: 7.6+ KB\n</code></pre>\n<ul>\n<li>입력 데이터와 타깃 데이터 분리</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fish_input = fish[[<span class=\"string\">&#x27;Weight&#x27;</span>, <span class=\"string\">&#x27;Length&#x27;</span>, <span class=\"string\">&#x27;Diagonal&#x27;</span>, <span class=\"string\">&#x27;Height&#x27;</span>, <span class=\"string\">&#x27;Width&#x27;</span>]].to_numpy()</span><br><span class=\"line\">fish_target = fish[<span class=\"string\">&#x27;Species&#x27;</span>].to_numpy()</span><br><span class=\"line\">fish_input.shape, fish_target.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>((159, 5), (159,))\n</code></pre>\n<ul>\n<li>훈련 세트와 테스트 데이터 분리</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\">train_input, test_input, train_target, test_target = train_test_split(</span><br><span class=\"line\">    <span class=\"comment\"># input, target, 옵션...</span></span><br><span class=\"line\">    fish_input, fish_target, random_state=<span class=\"number\">42</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>훈련 세트와 테스트 세트의 특성 표준화<ul>\n<li>무게, 길이, 대각선 길이, 높이, 너비</li>\n</ul>\n</li>\n<li>단위 표준화 처리 진행</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> StandardScaler</span><br><span class=\"line\">ss = StandardScaler()</span><br><span class=\"line\">ss.fit(train_input)</span><br><span class=\"line\"></span><br><span class=\"line\">train_scaled = ss.transform(train_input)</span><br><span class=\"line\">test_scaled = ss.transform(test_input)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"모델링\"><a href=\"#모델링\" class=\"headerlink\" title=\"모델링\"></a>모델링</h3><ul>\n<li>확률적 경사 하강법</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> SGDClassifier</span><br><span class=\"line\">sc = SGDClassifier(loss = <span class=\"string\">&#x27;log&#x27;</span>, max_iter = <span class=\"number\">10</span>, random_state = <span class=\"number\">42</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">sc.fit(train_scaled, train_target)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(sc.score(train_scaled, train_target))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(sc.score(test_scaled, test_target))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 최적의 장소가 아니라 더 분석해볼 수 있는데 왜 멈췄냐는 메세지가 뜸</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>0.773109243697479\n0.775\n\n\n/usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_stochastic_gradient.py:700: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.\n  ConvergenceWarning,\n</code></pre>\n<ul>\n<li>partial_fit() 메서드 사용하면 추가 학습.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sc.partial_fit(train_scaled, train_target)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(sc.score(train_scaled, train_target))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(sc.score(test_scaled, test_target))</span><br></pre></td></tr></table></figure>\n\n<pre><code>0.865546218487395\n0.9\n</code></pre>\n<h2 id=\"에포크와-과대-x2F-과소적합\"><a href=\"#에포크와-과대-x2F-과소적합\" class=\"headerlink\" title=\"에포크와 과대&#x2F;과소적합\"></a>에포크와 과대&#x2F;과소적합</h2><ul>\n<li>에포크 숫자가 적으면 –&gt; 덜 학습</li>\n<li>early_stopping<ul>\n<li>에포크 숫자를 1000, 손실 10, 9, 8, … ,3</li>\n<li>3에 도달한 시점이 150</li>\n<li>강제로 끊어주는 느낌</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\">sc = SGDClassifier(loss=<span class=\"string\">&#x27;log&#x27;</span>, random_state = <span class=\"number\">42</span>)</span><br><span class=\"line\">train_score = []</span><br><span class=\"line\">test_score = []</span><br><span class=\"line\"></span><br><span class=\"line\">classes = np.unique(train_target)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 300번 에포크 훈련을 반복</span></span><br><span class=\"line\"><span class=\"comment\"># 훈련 할 때마다, train_score, test_score 추가를 한다.</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">300</span>):</span><br><span class=\"line\">  sc.partial_fit(train_scaled, train_target, classes = classes)</span><br><span class=\"line\">  train_score.append(sc.score(train_scaled, train_target))</span><br><span class=\"line\">  test_score.append(sc.score(test_scaled, test_target))</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>시각화</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\">plt.plot(train_score)</span><br><span class=\"line\">plt.plot(test_score)</span><br><span class=\"line\">plt.legend([<span class=\"string\">&quot;train&quot;</span>, <span class=\"string\">&quot;test&quot;</span>])</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"><span class=\"comment\"># X축 = 에포크, Y축 = 정확도</span></span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0704/output_18_0.png\" alt=\"png\"></p>\n<h2 id=\"결정-트리-중요\"><a href=\"#결정-트리-중요\" class=\"headerlink\" title=\"결정 트리(중요!!)\"></a>결정 트리(중요!!)</h2><ul>\n<li>wine 데이터 가져오기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\">wine = pd.read_csv(<span class=\"string\">&#x27;https://bit.ly/wine_csv_data&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(wine.head())</span><br></pre></td></tr></table></figure>\n\n<pre><code>   alcohol  sugar    pH  class\n0      9.4    1.9  3.51    0.0\n1      9.8    2.6  3.20    0.0\n2      9.8    2.3  3.26    0.0\n3      9.8    1.9  3.16    0.0\n4      9.4    1.9  3.51    0.0\n</code></pre>\n<ul>\n<li>데이터 가공하기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data = wine[[<span class=\"string\">&#x27;alcohol&#x27;</span>, <span class=\"string\">&#x27;sugar&#x27;</span>, <span class=\"string\">&#x27;pH&#x27;</span>]].to_numpy()</span><br><span class=\"line\">target = wine[<span class=\"string\">&#x27;class&#x27;</span>].to_numpy()</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>훈련데이터 분리</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\">train_input, test_input, train_target, test_target = train_test_split(</span><br><span class=\"line\">    data, target, test_size = <span class=\"number\">0.2</span>, random_state = <span class=\"number\">42</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">train_input.shape, test_input.shape, train_target.shape, test_target.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>((5197, 3), (1300, 3), (5197,), (1300,))\n</code></pre>\n<ul>\n<li>단위 표준화 처리</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> StandardScaler</span><br><span class=\"line\">ss = StandardScaler()</span><br><span class=\"line\">ss.fit(train_input)</span><br><span class=\"line\"></span><br><span class=\"line\">train_scaled = ss.transform(train_input)</span><br><span class=\"line\">test_scaled = ss.transform(test_input)</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> DecisionTreeClassifier</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> plot_tree</span><br><span class=\"line\"></span><br><span class=\"line\">dt = DecisionTreeClassifier(max_depth = <span class=\"number\">8</span>, random_state = <span class=\"number\">42</span>)  <span class=\"comment\"># 깊이</span></span><br><span class=\"line\">dt.fit(train_scaled, train_target)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(dt.score(train_scaled, train_target))   <span class=\"comment\"># 훈련 세트</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dt.score(test_scaled, test_target))     <span class=\"comment\"># 테스트 세트</span></span><br><span class=\"line\"></span><br><span class=\"line\">plt.figure(figsize = (<span class=\"number\">10</span>, <span class=\"number\">7</span>))</span><br><span class=\"line\">plot_tree(dt)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n<pre><code>0.9003271117952665\n0.8576923076923076\n</code></pre>\n<p><img src=\"/images/0704/output_27_1.png\" alt=\"png\"></p>\n<ul>\n<li>훈련 데이터 정확도는 99.7%</li>\n<li>테스트 데이터 정확도는 85.9%<ul>\n<li>과대적합이 일어남</li>\n<li>정확도가 낮은 이유 : 너무 깊이 세부적으로 들어가기보다 깊이를 1번정도만 했기 때문에</li>\n</ul>\n</li>\n<li>정확도가 중요한게 아니고 과대적합이 일어나느냐 마느냐가 중요함</li>\n<li>“max_depth” 의 값을 바꿔가면서 검토<ul>\n<li>max_depth 값을 7로 넣었을 때 보다 8로 넣었을 때 과대적합이 크게 일어난다.</li>\n<li>8보다 7이 적합한 수이다.</li>\n</ul>\n</li>\n</ul>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/07/04/day0704/python.png","excerpt":"<p>로지스틱 함수</p>","more":"<p>로지스틱 함수</p>\n<!-- excerpt -->\n\n\n<h2 id=\"캐글-데이터\"><a href=\"#캐글-데이터\" class=\"headerlink\" title=\"캐글 데이터\"></a>캐글 데이터</h2><ul>\n<li>X_train, X_test, Y_train, Y_test</li>\n<li>X_train, X_val, Y_train, Y-val  같은 함수들을 사용</li>\n</ul>\n<h2 id=\"확률적-경사-하강법\"><a href=\"#확률적-경사-하강법\" class=\"headerlink\" title=\"확률적 경사 하강법\"></a>확률적 경사 하강법</h2><ul>\n<li>이 이론이 단독적으로 의미있지는 않지만, 여기서 파생된 이론이 많아서 중요!!</li>\n<li>점진적 학습 (step, 보폭(&#x3D;학습속도)<ul>\n<li>보폭이 클 수록 산에서 빠르게 내려올 수 있지만 여러 경치는 못 본다(좁게 본다)</li>\n</ul>\n</li>\n<li>학습률</li>\n<li>XGBoost, LightGBM, 딥러닝(이미지 분류, 자연어 처리, 옵티마이저)</li>\n</ul>\n<h3 id=\"손실-함수\"><a href=\"#손실-함수\" class=\"headerlink\" title=\"손실 함수\"></a>손실 함수</h3><ul>\n<li>신경망 이미지 데이터, 자연어</li>\n<li>자율주행 하루 데이터 1TB –&gt; 이걸 다 학습</li>\n<li>한꺼번에 전부 모델 학습하기는 어려움<ul>\n<li>샘플링, 배치, 에포크, 오차(&#x3D;손실&#x3D;loss)가 가장 작은 지점을 찾아야 함.</li>\n</ul>\n</li>\n<li>결론적으로, 확률적 경사 하강법</li>\n</ul>\n<h4 id=\"로지스틱-손실-함수\"><a href=\"#로지스틱-손실-함수\" class=\"headerlink\" title=\"로지스틱 손실 함수\"></a>로지스틱 손실 함수</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\">fish = pd.read_csv(<span class=\"string\">&quot;https://bit.ly/fish_csv_data&quot;</span>)</span><br><span class=\"line\">fish.info()</span><br></pre></td></tr></table></figure>\n\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 159 entries, 0 to 158\nData columns (total 6 columns):\n #   Column    Non-Null Count  Dtype  \n---  ------    --------------  -----  \n 0   Species   159 non-null    object \n 1   Weight    159 non-null    float64\n 2   Length    159 non-null    float64\n 3   Diagonal  159 non-null    float64\n 4   Height    159 non-null    float64\n 5   Width     159 non-null    float64\ndtypes: float64(5), object(1)\nmemory usage: 7.6+ KB\n</code></pre>\n<ul>\n<li>입력 데이터와 타깃 데이터 분리</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fish_input = fish[[<span class=\"string\">&#x27;Weight&#x27;</span>, <span class=\"string\">&#x27;Length&#x27;</span>, <span class=\"string\">&#x27;Diagonal&#x27;</span>, <span class=\"string\">&#x27;Height&#x27;</span>, <span class=\"string\">&#x27;Width&#x27;</span>]].to_numpy()</span><br><span class=\"line\">fish_target = fish[<span class=\"string\">&#x27;Species&#x27;</span>].to_numpy()</span><br><span class=\"line\">fish_input.shape, fish_target.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>((159, 5), (159,))\n</code></pre>\n<ul>\n<li>훈련 세트와 테스트 데이터 분리</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\">train_input, test_input, train_target, test_target = train_test_split(</span><br><span class=\"line\">    <span class=\"comment\"># input, target, 옵션...</span></span><br><span class=\"line\">    fish_input, fish_target, random_state=<span class=\"number\">42</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>훈련 세트와 테스트 세트의 특성 표준화<ul>\n<li>무게, 길이, 대각선 길이, 높이, 너비</li>\n</ul>\n</li>\n<li>단위 표준화 처리 진행</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> StandardScaler</span><br><span class=\"line\">ss = StandardScaler()</span><br><span class=\"line\">ss.fit(train_input)</span><br><span class=\"line\"></span><br><span class=\"line\">train_scaled = ss.transform(train_input)</span><br><span class=\"line\">test_scaled = ss.transform(test_input)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"모델링\"><a href=\"#모델링\" class=\"headerlink\" title=\"모델링\"></a>모델링</h3><ul>\n<li>확률적 경사 하강법</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> SGDClassifier</span><br><span class=\"line\">sc = SGDClassifier(loss = <span class=\"string\">&#x27;log&#x27;</span>, max_iter = <span class=\"number\">10</span>, random_state = <span class=\"number\">42</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">sc.fit(train_scaled, train_target)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(sc.score(train_scaled, train_target))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(sc.score(test_scaled, test_target))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 최적의 장소가 아니라 더 분석해볼 수 있는데 왜 멈췄냐는 메세지가 뜸</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>0.773109243697479\n0.775\n\n\n/usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_stochastic_gradient.py:700: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.\n  ConvergenceWarning,\n</code></pre>\n<ul>\n<li>partial_fit() 메서드 사용하면 추가 학습.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sc.partial_fit(train_scaled, train_target)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(sc.score(train_scaled, train_target))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(sc.score(test_scaled, test_target))</span><br></pre></td></tr></table></figure>\n\n<pre><code>0.865546218487395\n0.9\n</code></pre>\n<h2 id=\"에포크와-과대-x2F-과소적합\"><a href=\"#에포크와-과대-x2F-과소적합\" class=\"headerlink\" title=\"에포크와 과대&#x2F;과소적합\"></a>에포크와 과대&#x2F;과소적합</h2><ul>\n<li>에포크 숫자가 적으면 –&gt; 덜 학습</li>\n<li>early_stopping<ul>\n<li>에포크 숫자를 1000, 손실 10, 9, 8, … ,3</li>\n<li>3에 도달한 시점이 150</li>\n<li>강제로 끊어주는 느낌</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\">sc = SGDClassifier(loss=<span class=\"string\">&#x27;log&#x27;</span>, random_state = <span class=\"number\">42</span>)</span><br><span class=\"line\">train_score = []</span><br><span class=\"line\">test_score = []</span><br><span class=\"line\"></span><br><span class=\"line\">classes = np.unique(train_target)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 300번 에포크 훈련을 반복</span></span><br><span class=\"line\"><span class=\"comment\"># 훈련 할 때마다, train_score, test_score 추가를 한다.</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">300</span>):</span><br><span class=\"line\">  sc.partial_fit(train_scaled, train_target, classes = classes)</span><br><span class=\"line\">  train_score.append(sc.score(train_scaled, train_target))</span><br><span class=\"line\">  test_score.append(sc.score(test_scaled, test_target))</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>시각화</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\">plt.plot(train_score)</span><br><span class=\"line\">plt.plot(test_score)</span><br><span class=\"line\">plt.legend([<span class=\"string\">&quot;train&quot;</span>, <span class=\"string\">&quot;test&quot;</span>])</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"><span class=\"comment\"># X축 = 에포크, Y축 = 정확도</span></span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0704/output_18_0.png\" alt=\"png\"></p>\n<h2 id=\"결정-트리-중요\"><a href=\"#결정-트리-중요\" class=\"headerlink\" title=\"결정 트리(중요!!)\"></a>결정 트리(중요!!)</h2><ul>\n<li>wine 데이터 가져오기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\">wine = pd.read_csv(<span class=\"string\">&#x27;https://bit.ly/wine_csv_data&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(wine.head())</span><br></pre></td></tr></table></figure>\n\n<pre><code>   alcohol  sugar    pH  class\n0      9.4    1.9  3.51    0.0\n1      9.8    2.6  3.20    0.0\n2      9.8    2.3  3.26    0.0\n3      9.8    1.9  3.16    0.0\n4      9.4    1.9  3.51    0.0\n</code></pre>\n<ul>\n<li>데이터 가공하기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data = wine[[<span class=\"string\">&#x27;alcohol&#x27;</span>, <span class=\"string\">&#x27;sugar&#x27;</span>, <span class=\"string\">&#x27;pH&#x27;</span>]].to_numpy()</span><br><span class=\"line\">target = wine[<span class=\"string\">&#x27;class&#x27;</span>].to_numpy()</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>훈련데이터 분리</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\">train_input, test_input, train_target, test_target = train_test_split(</span><br><span class=\"line\">    data, target, test_size = <span class=\"number\">0.2</span>, random_state = <span class=\"number\">42</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">train_input.shape, test_input.shape, train_target.shape, test_target.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>((5197, 3), (1300, 3), (5197,), (1300,))\n</code></pre>\n<ul>\n<li>단위 표준화 처리</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> StandardScaler</span><br><span class=\"line\">ss = StandardScaler()</span><br><span class=\"line\">ss.fit(train_input)</span><br><span class=\"line\"></span><br><span class=\"line\">train_scaled = ss.transform(train_input)</span><br><span class=\"line\">test_scaled = ss.transform(test_input)</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> DecisionTreeClassifier</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> plot_tree</span><br><span class=\"line\"></span><br><span class=\"line\">dt = DecisionTreeClassifier(max_depth = <span class=\"number\">8</span>, random_state = <span class=\"number\">42</span>)  <span class=\"comment\"># 깊이</span></span><br><span class=\"line\">dt.fit(train_scaled, train_target)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(dt.score(train_scaled, train_target))   <span class=\"comment\"># 훈련 세트</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dt.score(test_scaled, test_target))     <span class=\"comment\"># 테스트 세트</span></span><br><span class=\"line\"></span><br><span class=\"line\">plt.figure(figsize = (<span class=\"number\">10</span>, <span class=\"number\">7</span>))</span><br><span class=\"line\">plot_tree(dt)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n<pre><code>0.9003271117952665\n0.8576923076923076\n</code></pre>\n<p><img src=\"/images/0704/output_27_1.png\" alt=\"png\"></p>\n<ul>\n<li>훈련 데이터 정확도는 99.7%</li>\n<li>테스트 데이터 정확도는 85.9%<ul>\n<li>과대적합이 일어남</li>\n<li>정확도가 낮은 이유 : 너무 깊이 세부적으로 들어가기보다 깊이를 1번정도만 했기 때문에</li>\n</ul>\n</li>\n<li>정확도가 중요한게 아니고 과대적합이 일어나느냐 마느냐가 중요함</li>\n<li>“max_depth” 의 값을 바꿔가면서 검토<ul>\n<li>max_depth 값을 7로 넣었을 때 보다 8로 넣었을 때 과대적합이 크게 일어난다.</li>\n<li>8보다 7이 적합한 수이다.</li>\n</ul>\n</li>\n</ul>\n"},{"title":"day 0706","output":{"html_document":{"keep_md":true}},"thumbnailImage":"image.png","thumbnailImagePosition":"left","date":"2022-07-06T08:16:55.000Z","_content":"\n#### 데이터 분석 (머신러닝, 딥러닝) 프로세스\n<!-- more -->\n\n\n- 데이터 불러오기\n  + CSV, 오라클, MySQL, PostgreSQL, 클라우드 DB연동\n- 탐색적 자료분석\n  + 데이터 전처리 및 가공\n- 잠정적인 컬럼의 갯수를 지정해야 함\n- 머신러닝 모델 (=통계 모델링, t.test, 분산분석, 교차분석)\n- 머신러닝 모델의 경우 배포 (현재는 다루지 않음 X)\n  + JSP-스프링 웹개발 시, 배우게 됨\n- 통계 모델링 경우, p-value 값 기준으로, 귀무가설 및 대립가설 검정\n\n- (공통) 결과 보고서를 작성해야함\n  + PPT 만들어야 함.\n\n\n## 그래프 복습\n- 수치형 데이터 시각화\n- 범주형 데이터 시각화\n- 데이터 관계 시각화\n- matplotlib 라이브러리 방법(복잡)\n- seaborn 라이브러리 방법(단순)\n  + 복잡한 그래프 그릴 때 --> matpltoltib\n  + 1줄 그래프 --> seaborn (처음에는 이걸로)\n\n\n### 수치형 데이터 시각화\n\n\n```python\nimport seaborn as sns\ntitanic = sns.load_dataset('titanic')\ntitanic.head()\n```\n\n\n\n\n\n  <div id=\"df-cbd7e312-07d2-4e3c-a0c0-3f889c1c6405\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>survived</th>\n      <th>pclass</th>\n      <th>sex</th>\n      <th>age</th>\n      <th>sibsp</th>\n      <th>parch</th>\n      <th>fare</th>\n      <th>embarked</th>\n      <th>class</th>\n      <th>who</th>\n      <th>adult_male</th>\n      <th>deck</th>\n      <th>embark_town</th>\n      <th>alive</th>\n      <th>alone</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>7.2500</td>\n      <td>S</td>\n      <td>Third</td>\n      <td>man</td>\n      <td>True</td>\n      <td>NaN</td>\n      <td>Southampton</td>\n      <td>no</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>71.2833</td>\n      <td>C</td>\n      <td>First</td>\n      <td>woman</td>\n      <td>False</td>\n      <td>C</td>\n      <td>Cherbourg</td>\n      <td>yes</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>7.9250</td>\n      <td>S</td>\n      <td>Third</td>\n      <td>woman</td>\n      <td>False</td>\n      <td>NaN</td>\n      <td>Southampton</td>\n      <td>yes</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>35.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>53.1000</td>\n      <td>S</td>\n      <td>First</td>\n      <td>woman</td>\n      <td>False</td>\n      <td>C</td>\n      <td>Southampton</td>\n      <td>yes</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>8.0500</td>\n      <td>S</td>\n      <td>Third</td>\n      <td>man</td>\n      <td>True</td>\n      <td>NaN</td>\n      <td>Southampton</td>\n      <td>no</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cbd7e312-07d2-4e3c-a0c0-3f889c1c6405')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n       width=\"24px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n  </svg>\n      </button>\n\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n      <script>\n        const buttonEl =\n          document.querySelector('#df-cbd7e312-07d2-4e3c-a0c0-3f889c1c6405 button.colab-df-convert');\n        buttonEl.style.display =\n          google.colab.kernel.accessAllowed ? 'block' : 'none';\n\n        async function convertToInteractive(key) {\n          const element = document.querySelector('#df-cbd7e312-07d2-4e3c-a0c0-3f889c1c6405');\n          const dataTable =\n            await google.colab.kernel.invokeFunction('convertToInteractive',\n                                                     [key], {});\n          if (!dataTable) return;\n\n          const docLinkHtml = 'Like what you see? Visit the ' +\n            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n            + ' to learn more about interactive tables.';\n          element.innerHTML = '';\n          dataTable['output_type'] = 'display_data';\n          await google.colab.output.renderOutput(dataTable, element);\n          const docLink = document.createElement('div');\n          docLink.innerHTML = docLinkHtml;\n          element.appendChild(docLink);\n        }\n      </script>\n    </div>\n  </div>\n\n\n\n\n\n```python\n# 히스토그램\nsns.histplot(data = titanic, x ='age', bins = 10, hue = 'alive', multiple = 'stack')\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x7ff99b22f490>\n\n\n\n\n    \n![png](/images/0706/output_4_1.png)\n    \n\n\n- 위 그래프를 보아하니 ~~~~ 이겠네 하고 분석\n\n\n```python\n# 커널밀도추정 함수 그래프\n# 연속형 데이터 1개만 쓸 때 사용\nsns. kdeplot(data = titanic, x = 'age', hue = 'alive', multiple = 'stack')\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x7ff99a0c97d0>\n\n\n\n\n    \n![png](/images/0706/output_6_1.png)\n    \n\n\n#### 분포도\n- 수치형 데이터 한개 컬럼의 분포를 나타내는 그래프\n- 정규분포인가? 중심적으로 봐야 함\n  + 정규분포 : 평균 중심으로 좌우 대칭이 똑같은 그래프\n\n\n```python\nsns.displot(data = titanic, x ='age')\n```\n\n\n\n\n    <seaborn.axisgrid.FacetGrid at 0x7ff99a226910>\n\n\n\n\n    \n![png](/images/0706/output_8_1.png)\n    \n\n\n\n```python\nsns.displot(data = titanic, x = 'age', kde = True)\n```\n\n\n\n\n    <seaborn.axisgrid.FacetGrid at 0x7ff999f65d90>\n\n\n\n\n    \n![png](/images/0706/output_9_1.png)\n    \n\n\n### 범주형 데이터 시각화\n- x축 범주형, y축 수치데이터\n\n\n\n```python\n# 막대 그래프\nsns.barplot(x = 'class', y = 'fare', data = titanic)\n# 회색 막대기가 평균치, 위아래로 튀어나와 있는 정도를 error bar 오차막대 라고 한다.\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x7ff999e93b50>\n\n\n\n\n    \n![png](/images/0706/output_11_1.png)\n    \n\n\n\n```python\n# 포인트 plot\nsns.pointplot(x = 'class', y = 'fare', data = titanic)\n# 상황에 맞춰서 그래프 모형은 다르게 쓴다. 내용은 똑같음\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x7ff999df6410>\n\n\n\n\n    \n![png](/images/0706/output_12_1.png)\n    \n\n\n\n```python\n# 박스 plot\nsns.boxplot(x = 'class', y = 'age', data = titanic)\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x7ff999ddcbd0>\n\n\n\n\n    \n![png](/images/0706/output_13_1.png)\n    \n\n\n- 박스 plot\n- 제 1사분위 : 전체 데이터 중 하위 25%(박스 아랫변)\n- 제 2사분위 : 25% ~ 50% (박스 중간)\n- 제 3사분위 : 50% ~ 75% (박스 윗변)\n- 사분위 범위 수(IQR) : 제 3사분위 - 제 1사분위\n- 최댓값 : 제 3사분위 + (1.5 * IQ)\n\n\n```python\n# 바이올린 플롯\nsns.violinplot(x = 'class', y = 'age', hue = 'sex', data = titanic, split = True)\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x7ff999d09e10>\n\n\n\n\n    \n![png](/images/0706/output_15_1.png)\n    \n\n\n#### 카운트 plot\n- 범주형 데이터의 갯수 확인 할 때 사용\n\n\n```python\nsns.countplot(x = 'class', data = titanic)\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x7ff999c9d290>\n\n\n\n\n    \n![png](/images/0706/output_17_1.png)\n    \n\n\n## 데이터 관계 시각화\n- 여러 데이터 사이의 관계도 파악 위한 그래프\n\n### 히트맵\n\n\n```python\nflights= sns.load_dataset('flights')\nflights.head()\n```\n\n\n\n\n\n  <div id=\"df-c3854d41-b9f5-448f-8697-3ef25f747e15\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>year</th>\n      <th>month</th>\n      <th>passengers</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1949</td>\n      <td>Jan</td>\n      <td>112</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1949</td>\n      <td>Feb</td>\n      <td>118</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1949</td>\n      <td>Mar</td>\n      <td>132</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1949</td>\n      <td>Apr</td>\n      <td>129</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1949</td>\n      <td>May</td>\n      <td>121</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c3854d41-b9f5-448f-8697-3ef25f747e15')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n       width=\"24px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n  </svg>\n      </button>\n\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n      <script>\n        const buttonEl =\n          document.querySelector('#df-c3854d41-b9f5-448f-8697-3ef25f747e15 button.colab-df-convert');\n        buttonEl.style.display =\n          google.colab.kernel.accessAllowed ? 'block' : 'none';\n\n        async function convertToInteractive(key) {\n          const element = document.querySelector('#df-c3854d41-b9f5-448f-8697-3ef25f747e15');\n          const dataTable =\n            await google.colab.kernel.invokeFunction('convertToInteractive',\n                                                     [key], {});\n          if (!dataTable) return;\n\n          const docLinkHtml = 'Like what you see? Visit the ' +\n            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n            + ' to learn more about interactive tables.';\n          element.innerHTML = '';\n          dataTable['output_type'] = 'display_data';\n          await google.colab.output.renderOutput(dataTable, element);\n          const docLink = document.createElement('div');\n          docLink.innerHTML = docLinkHtml;\n          element.appendChild(docLink);\n        }\n      </script>\n    </div>\n  </div>\n\n\n\n\n- 각 연도별, 월별 승객 수 구하기\n\n\n```python\n# flights['year'].value_counts()\nflights_pivot = flights.pivot(index = 'month', columns = 'year', values = 'passengers')\nflights_pivot\n```\n\n\n\n\n\n  <div id=\"df-e33832bd-f6d9-469d-92ff-6457ffffde82\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>year</th>\n      <th>1949</th>\n      <th>1950</th>\n      <th>1951</th>\n      <th>1952</th>\n      <th>1953</th>\n      <th>1954</th>\n      <th>1955</th>\n      <th>1956</th>\n      <th>1957</th>\n      <th>1958</th>\n      <th>1959</th>\n      <th>1960</th>\n    </tr>\n    <tr>\n      <th>month</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Jan</th>\n      <td>112</td>\n      <td>115</td>\n      <td>145</td>\n      <td>171</td>\n      <td>196</td>\n      <td>204</td>\n      <td>242</td>\n      <td>284</td>\n      <td>315</td>\n      <td>340</td>\n      <td>360</td>\n      <td>417</td>\n    </tr>\n    <tr>\n      <th>Feb</th>\n      <td>118</td>\n      <td>126</td>\n      <td>150</td>\n      <td>180</td>\n      <td>196</td>\n      <td>188</td>\n      <td>233</td>\n      <td>277</td>\n      <td>301</td>\n      <td>318</td>\n      <td>342</td>\n      <td>391</td>\n    </tr>\n    <tr>\n      <th>Mar</th>\n      <td>132</td>\n      <td>141</td>\n      <td>178</td>\n      <td>193</td>\n      <td>236</td>\n      <td>235</td>\n      <td>267</td>\n      <td>317</td>\n      <td>356</td>\n      <td>362</td>\n      <td>406</td>\n      <td>419</td>\n    </tr>\n    <tr>\n      <th>Apr</th>\n      <td>129</td>\n      <td>135</td>\n      <td>163</td>\n      <td>181</td>\n      <td>235</td>\n      <td>227</td>\n      <td>269</td>\n      <td>313</td>\n      <td>348</td>\n      <td>348</td>\n      <td>396</td>\n      <td>461</td>\n    </tr>\n    <tr>\n      <th>May</th>\n      <td>121</td>\n      <td>125</td>\n      <td>172</td>\n      <td>183</td>\n      <td>229</td>\n      <td>234</td>\n      <td>270</td>\n      <td>318</td>\n      <td>355</td>\n      <td>363</td>\n      <td>420</td>\n      <td>472</td>\n    </tr>\n    <tr>\n      <th>Jun</th>\n      <td>135</td>\n      <td>149</td>\n      <td>178</td>\n      <td>218</td>\n      <td>243</td>\n      <td>264</td>\n      <td>315</td>\n      <td>374</td>\n      <td>422</td>\n      <td>435</td>\n      <td>472</td>\n      <td>535</td>\n    </tr>\n    <tr>\n      <th>Jul</th>\n      <td>148</td>\n      <td>170</td>\n      <td>199</td>\n      <td>230</td>\n      <td>264</td>\n      <td>302</td>\n      <td>364</td>\n      <td>413</td>\n      <td>465</td>\n      <td>491</td>\n      <td>548</td>\n      <td>622</td>\n    </tr>\n    <tr>\n      <th>Aug</th>\n      <td>148</td>\n      <td>170</td>\n      <td>199</td>\n      <td>242</td>\n      <td>272</td>\n      <td>293</td>\n      <td>347</td>\n      <td>405</td>\n      <td>467</td>\n      <td>505</td>\n      <td>559</td>\n      <td>606</td>\n    </tr>\n    <tr>\n      <th>Sep</th>\n      <td>136</td>\n      <td>158</td>\n      <td>184</td>\n      <td>209</td>\n      <td>237</td>\n      <td>259</td>\n      <td>312</td>\n      <td>355</td>\n      <td>404</td>\n      <td>404</td>\n      <td>463</td>\n      <td>508</td>\n    </tr>\n    <tr>\n      <th>Oct</th>\n      <td>119</td>\n      <td>133</td>\n      <td>162</td>\n      <td>191</td>\n      <td>211</td>\n      <td>229</td>\n      <td>274</td>\n      <td>306</td>\n      <td>347</td>\n      <td>359</td>\n      <td>407</td>\n      <td>461</td>\n    </tr>\n    <tr>\n      <th>Nov</th>\n      <td>104</td>\n      <td>114</td>\n      <td>146</td>\n      <td>172</td>\n      <td>180</td>\n      <td>203</td>\n      <td>237</td>\n      <td>271</td>\n      <td>305</td>\n      <td>310</td>\n      <td>362</td>\n      <td>390</td>\n    </tr>\n    <tr>\n      <th>Dec</th>\n      <td>118</td>\n      <td>140</td>\n      <td>166</td>\n      <td>194</td>\n      <td>201</td>\n      <td>229</td>\n      <td>278</td>\n      <td>306</td>\n      <td>336</td>\n      <td>337</td>\n      <td>405</td>\n      <td>432</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e33832bd-f6d9-469d-92ff-6457ffffde82')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n       width=\"24px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n  </svg>\n      </button>\n\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n      <script>\n        const buttonEl =\n          document.querySelector('#df-e33832bd-f6d9-469d-92ff-6457ffffde82 button.colab-df-convert');\n        buttonEl.style.display =\n          google.colab.kernel.accessAllowed ? 'block' : 'none';\n\n        async function convertToInteractive(key) {\n          const element = document.querySelector('#df-e33832bd-f6d9-469d-92ff-6457ffffde82');\n          const dataTable =\n            await google.colab.kernel.invokeFunction('convertToInteractive',\n                                                     [key], {});\n          if (!dataTable) return;\n\n          const docLinkHtml = 'Like what you see? Visit the ' +\n            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n            + ' to learn more about interactive tables.';\n          element.innerHTML = '';\n          dataTable['output_type'] = 'display_data';\n          await google.colab.output.renderOutput(dataTable, element);\n          const docLink = document.createElement('div');\n          docLink.innerHTML = docLinkHtml;\n          element.appendChild(docLink);\n        }\n      </script>\n    </div>\n  </div>\n\n\n\n\n\n```python\nsns.heatmap(data = flights_pivot)\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x7ff999c0ff90>\n\n\n\n\n    \n![png](/images/0706/output_23_1.png)\n    \n\n\n\n```python\n# 라인플롯\nsns.lineplot(x = 'year', y = 'passengers', data = flights)\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x7ff999bf9d90>\n\n\n\n\n    \n![png](/images/0706/output_24_1.png)\n    \n\n\n\n```python\n# 산점도\ntips = sns.load_dataset('tips')\ntips.head()\n```\n\n\n\n\n\n  <div id=\"df-ca53f1d3-b076-478e-a68c-226957b2fa6b\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>total_bill</th>\n      <th>tip</th>\n      <th>sex</th>\n      <th>smoker</th>\n      <th>day</th>\n      <th>time</th>\n      <th>size</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>16.99</td>\n      <td>1.01</td>\n      <td>Female</td>\n      <td>No</td>\n      <td>Sun</td>\n      <td>Dinner</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>10.34</td>\n      <td>1.66</td>\n      <td>Male</td>\n      <td>No</td>\n      <td>Sun</td>\n      <td>Dinner</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>21.01</td>\n      <td>3.50</td>\n      <td>Male</td>\n      <td>No</td>\n      <td>Sun</td>\n      <td>Dinner</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>23.68</td>\n      <td>3.31</td>\n      <td>Male</td>\n      <td>No</td>\n      <td>Sun</td>\n      <td>Dinner</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>24.59</td>\n      <td>3.61</td>\n      <td>Female</td>\n      <td>No</td>\n      <td>Sun</td>\n      <td>Dinner</td>\n      <td>4</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ca53f1d3-b076-478e-a68c-226957b2fa6b')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n       width=\"24px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n  </svg>\n      </button>\n\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n      <script>\n        const buttonEl =\n          document.querySelector('#df-ca53f1d3-b076-478e-a68c-226957b2fa6b button.colab-df-convert');\n        buttonEl.style.display =\n          google.colab.kernel.accessAllowed ? 'block' : 'none';\n\n        async function convertToInteractive(key) {\n          const element = document.querySelector('#df-ca53f1d3-b076-478e-a68c-226957b2fa6b');\n          const dataTable =\n            await google.colab.kernel.invokeFunction('convertToInteractive',\n                                                     [key], {});\n          if (!dataTable) return;\n\n          const docLinkHtml = 'Like what you see? Visit the ' +\n            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n            + ' to learn more about interactive tables.';\n          element.innerHTML = '';\n          dataTable['output_type'] = 'display_data';\n          await google.colab.output.renderOutput(dataTable, element);\n          const docLink = document.createElement('div');\n          docLink.innerHTML = docLinkHtml;\n          element.appendChild(docLink);\n        }\n      </script>\n    </div>\n  </div>\n\n\n\n\n- 두개의 연속형 데이터\n\n\n```python\nsns.scatterplot(x = 'total_bill', y = 'tip', hue = 'sex', data = tips)\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x7ff999b3ab10>\n\n\n\n\n    \n![png](/images/0706/output_27_1.png)\n    \n\n\n\n```python\n# 회귀선\nsns.regplot(x = 'total_bill', y = 'tip', data = tips)\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x7ff999f45350>\n\n\n\n\n    \n![png](/images/0706/output_28_1.png)\n    \n\n\n## 머신러닝 리뷰\n- 가장 인기 있는 모델\n  + LightGBM, XGboost\n\n### 선형 회귀\n- 선형 회귀식을 찾는 것이 중요\n- $y = 3x + 4$ 에 근사한 데이터 50개 생성\n\n\n```python\nimport numpy as np\nimport pandas as pd\n\n# 시드값 고정\nnp.random.seed(0)\nintercept = 4  # 절편, 상수\nslope = 3  # 기울기\n\n# 변동성 주기 위해 노이즈를 생성\nnoise = np.random.randn(50, 1)\nx = 5 * np.random.rand(50, 1)  # 0 과 5 사이의 실숫값 50개 생성\ny = slope * x + intercept + noise\n\n# 데이터 프레임 생성\ndata = pd.DataFrame({'X' : x[:, 0], 'Y' : y[:, 0]})\nprint(data)\n```\n\n               X          Y\n    0   0.794848   8.148596\n    1   0.551876   6.055784\n    2   3.281648  14.823682\n    3   0.690915   8.313637\n    4   0.982912   8.816293\n    5   1.843626   8.553600\n    6   4.104966  17.264987\n    7   0.485506   5.305162\n    8   4.189725  16.465955\n    9   0.480492   5.852075\n    10  4.882297  18.790936\n    11  2.343256  12.484042\n    12  4.883805  19.412454\n    13  3.024228  13.194358\n    14  3.696318  15.532817\n    15  0.195939   4.921491\n    16  1.414035   9.736184\n    17  0.600983   5.597790\n    18  1.480701   8.755171\n    19  0.593639   4.926820\n    20  1.589916   6.216758\n    21  2.071315  10.867564\n    22  0.320737   5.826649\n    23  3.462361  13.644917\n    24  2.833007  14.768776\n    25  1.326947   6.526477\n    26  2.616240  11.894479\n    27  0.469703   5.221924\n    28  2.879732  14.171977\n    29  4.646481  19.408802\n    30  1.592845   8.933482\n    31  3.337052  14.389318\n    32  0.658989   5.089182\n    33  3.581636  12.764112\n    34  1.447030   7.993179\n    35  0.915957   6.904219\n    36  2.932565  14.027985\n    37  0.100538   5.503993\n    38  4.144700  16.046774\n    39  0.023477   3.768129\n    40  3.389083  13.118695\n    41  1.350040   6.630102\n    42  3.675970  13.321640\n    43  4.810943  20.383604\n    44  1.243766   7.221645\n    45  2.880787  12.204286\n    46  2.960210  11.627834\n    47  2.861260  13.361269\n    48  1.115408   5.732327\n    49  4.763745  18.078495\n    \n\n\n```python\nimport matplotlib.pyplot as plt\nfig, ax = plt.subplots()\nax.scatter(data['X'], data['Y'])\nplt.show\n```\n\n\n\n\n    <function matplotlib.pyplot.show>\n\n\n\n\n    \n![png](/images/0706/output_32_1.png)\n    \n\n\n\n```python\nimport seaborn as sns \nsns.scatterplot(x = 'X', y = 'Y', data = data)\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x7ff99996ef10>\n\n\n\n\n    \n![png](/images/0706/output_33_1.png)\n    \n\n\n#### 선형회귀 모형 훈련\n- 모형 생성 후, 회귀계수 3과 y절편 4에 근사한 값이 나와야 함\n\n\n```python\nfrom sklearn.linear_model import LinearRegression\nlr_model = LinearRegression()   # 선형 회귀 모델\nlr_model.fit(x, y)    # 모델 훈련\n\nprint('y절편:', lr_model.intercept_)\nprint('회귀계수:', lr_model.coef_)\n```\n\n    y절편: [4.05757639]\n    회귀계수: [[3.03754061]]\n    \n\n\n```python\n# 예측값\ny_pred = lr_model.predict(x)\nfig, ax = plt.subplots()\nax.scatter(x, y)\nax.plot(x, y_pred, color='green')\n\n# slope, intercept \nlabel = 'slope: {}\\nintercept: {}'.format(round(lr_model.coef_[0][0], 2), round(lr_model.intercept_[0], 2))\nax.text(3.5, 4, label, style ='italic', \n        fontsize = 10, color =\"green\")\nplt.show()\n```\n\n\n    \n![png](/images/0706/output_36_0.png)\n    \n\n\n### 로지스틱 회귀\n\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndef sigmoid(arr, scale=1):\n    arr = np.asarray(arr)\n    result = 1/(1 + np.exp(-arr*scale))\n    return result\n\nx = np.linspace(-6, 6)\ny = sigmoid(x)\n\nfig, ax = plt.subplots()\nax.plot(x, y)\nax.grid(which='major', axis='y', linestyle='--')\nax.axvline(x=0, color='r', linestyle='--', linewidth=1)\nax.set_ylim(0,1)\nax.set_yticks([0, 1, 0.5])\nax.text(0-0.1, 0.5, '0.5', ha='right')\nax.set_title('Sigmoid Graph')\nplt.show()\n```\n\n\n    \n![png](/images/0706/output_38_0.png)\n    \n\n\n\n```python\n# 라이브러리 불러오기\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report, confusion_matrix\n\n# 데이터 가져오기\nx = np.arange(10).reshape(-1, 1)\ny = np.array([0, 0, 0, 0, 0, 1, 1, 1, 1, 1])\n\n# 모델 생성 및 학습\nmodel = LogisticRegression(solver='liblinear', C=10.0, random_state=0)\nmodel.fit(x, y)\n```\n\n\n\n\n    LogisticRegression(C=10.0, random_state=0, solver='liblinear')\n\n\n\n\n```python\n# 모형 평가\np_pred = model.predict_proba(x)\nprint('p_pred', p_pred, sep = '\\n')\n```\n\n    p_pred\n    [[0.97979027 0.02020973]\n     [0.94958202 0.05041798]\n     [0.87976149 0.12023851]\n     [0.73975066 0.26024934]\n     [0.52477284 0.47522716]\n     [0.30020373 0.69979627]\n     [0.1428487  0.8571513 ]\n     [0.06080627 0.93919373]\n     [0.02453462 0.97546538]\n     [0.00967652 0.99032348]]\n    \n\n\n```python\ny_pred = model.predict(x)\nprint('y_pred', y_pred)\n```\n\n    y_pred [0 0 0 0 0 1 1 1 1 1]\n    \n\n\n```python\nfig, ax = plt.subplots()\nax.scatter(x, y)\nax.plot(x, p_pred[:, 1], color = 'black',  marker='o', markersize=6)\nax.plot()\n\nax.set_xticks(x)\nax.set_yticks(np.arange(0, 1.1, 0.1))\n\nax.grid(which='major', alpha=0.5)\nplt.show()\n```\n\n\n    \n![png](/images/0706/output_42_0.png)\n    \n\n\n\n```python\nconf_m = confusion_matrix(y, y_pred)\nprint(conf_m)\n```\n\n    [[5 0]\n     [0 5]]\n    \n\n\n```python\ncm = confusion_matrix(y, y_pred)\n\nfig, ax = plt.subplots(figsize=(8, 8))\nax.imshow(cm, cmap = 'Pastel2')\nax.grid(False)\nax.xaxis.set(ticks=(0, 1), ticklabels=('Predicted 0', 'Predicted 1'))\nax.yaxis.set(ticks=(0, 1), ticklabels=('Actual 0', 'Actual 1'))\nax.set_ylim(1.5, -0.5)\nfor i in range(2):\n    for j in range(2):\n        ax.text(j, i, cm[i, j], ha='center', va='center', color='black', fontsize=20)\nplt.show()\n```\n\n\n    \n![png](/images/0706/output_44_0.png)\n    \n\n\n## 결정 트리\n- 분류와 회귀 문제에 모두 사용 가능\n### 주요 개념\n- 작동 원리\n  + 데이터를 가장 잘 구분하는 조건을 정함.\n  + 조건을 기준으로 데이터를 두 범주로 나눔\n  + 나뉜 각 범주의 데이터를 구분하는 조건을 정함\n  + 각 조건을 기준으로 데이터를 두 범주로 나눔\n  + 언제까지 계속 분할할지 정한 후, 최종 결정 값을 구함.\n- 불순도(Impurity)\n  + 한 범주 안에 서로 다른 데이터가 얼마나 섞여 있는지 나타냄\n  + 흰색과 검은색이 50:50으로 섞여 있다. (불순도 최대)\n  + 흰색과 검은색으로 완전 분리 되었다. (불순도 최소)\n- 엔트로피(Entropy)\n  + 불확실한 정도를 의미함. 0 ~ 1로 정함.\n  + 흰색과 검은색이 50:50으로 섞여 있다. 엔트로피 1\n  + 흰색과 검은색으로 완전 분리 되었다. 엔트로피 0\n- 정보이득(Information Gain)\n  + 1에서 엔트로피를 뺀 수치\n  + 정보 이득을 최대화하는 방향(엔트로피를 최소화 하는 방향)으로 노드를 분할함\n- 지니 불순도(Gini Impurity)\n  + 지니 불순도 값이 클수록 불순도도 높고, 작을수록 불순도도 낮음. 엔트로피와 마찬가지로 지니 불순도가 낮아지는 방향으로 노드 분할함.\n\n\n```python\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import train_test_split \nimport seaborn as sns \n\n# tips 데이터셋 \ntitanic = sns.load_dataset('titanic')\ntitanic.info()\n```\n\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 891 entries, 0 to 890\n    Data columns (total 15 columns):\n     #   Column       Non-Null Count  Dtype   \n    ---  ------       --------------  -----   \n     0   survived     891 non-null    int64   \n     1   pclass       891 non-null    int64   \n     2   sex          891 non-null    object  \n     3   age          714 non-null    float64 \n     4   sibsp        891 non-null    int64   \n     5   parch        891 non-null    int64   \n     6   fare         891 non-null    float64 \n     7   embarked     889 non-null    object  \n     8   class        891 non-null    category\n     9   who          891 non-null    object  \n     10  adult_male   891 non-null    bool    \n     11  deck         203 non-null    category\n     12  embark_town  889 non-null    object  \n     13  alive        891 non-null    object  \n     14  alone        891 non-null    bool    \n    dtypes: bool(2), category(2), float64(2), int64(4), object(5)\n    memory usage: 80.7+ KB\n    \n\n- survived의 비율을 구한다.\n  + 0 : 사망자\n  + 1 : 생존자\n\n\n```python\ntitanic['survived'].value_counts()\n```\n\n\n\n\n    0    549\n    1    342\n    Name: survived, dtype: int64\n\n\n\n\n```python\n# 데이터 추출\nX = titanic[['pclass', 'parch', 'fare']]\ny = titanic['survived']\n\n# 훈련데이터, 테스트 데이터 분리\nX_train, X_test, y_train, y_test = train_test_split(X, y, stratify = y, test_size = 0.3, random_state=42)\nX_train.shape, X_test.shape, y_train.shape, y_test.shape\n```\n\n\n\n\n    ((623, 3), (268, 3), (623,), (268,))\n\n\n\n\n```python\ntree_model = DecisionTreeClassifier()\ntree_model.fit(X_train, y_train)\n\nacc = tree_model.score(X_test, y_test)\nprint(f'모형 정확도 : {acc:.3f}') # 정확도 측정\n```\n\n    모형 정확도 : 0.675\n    \n\n### 랜덤 포레스트\n\n\n```python\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split \nimport seaborn as sns \n\n# tips 데이터셋 \ntitanic = sns.load_dataset('titanic')\n\nX = titanic[['pclass', 'parch', 'fare']]\ny = titanic['survived']\n\n# 훈련데이터, 테스트 데이터 분리\nX_train, X_test, y_train, y_test = train_test_split(X, y, stratify = y, test_size = 0.3, random_state=42)\n\n# 모델 훈련\nrf_model = RandomForestClassifier(random_state=42) # 랜덤 포레스트 정의\nrf_model.fit(X_train, y_train)\n\nacc = rf_model.score(X_test, y_test)\nprint(f'모형 정확도 : {acc:.3f}') # 정확도 측정\n```\n\n    모형 정확도 : 0.675\n    \n","source":"_posts/day0706_1.md","raw":"---\ntitle: \"day 0706\"\noutput:\n  html_document:\n    keep_md: true\ncategories: Python\nthumbnailImage: image.png\nthumbnailImagePosition: left\ndate: '2022-07-06 17:16:55'\n---\n\n#### 데이터 분석 (머신러닝, 딥러닝) 프로세스\n<!-- more -->\n\n\n- 데이터 불러오기\n  + CSV, 오라클, MySQL, PostgreSQL, 클라우드 DB연동\n- 탐색적 자료분석\n  + 데이터 전처리 및 가공\n- 잠정적인 컬럼의 갯수를 지정해야 함\n- 머신러닝 모델 (=통계 모델링, t.test, 분산분석, 교차분석)\n- 머신러닝 모델의 경우 배포 (현재는 다루지 않음 X)\n  + JSP-스프링 웹개발 시, 배우게 됨\n- 통계 모델링 경우, p-value 값 기준으로, 귀무가설 및 대립가설 검정\n\n- (공통) 결과 보고서를 작성해야함\n  + PPT 만들어야 함.\n\n\n## 그래프 복습\n- 수치형 데이터 시각화\n- 범주형 데이터 시각화\n- 데이터 관계 시각화\n- matplotlib 라이브러리 방법(복잡)\n- seaborn 라이브러리 방법(단순)\n  + 복잡한 그래프 그릴 때 --> matpltoltib\n  + 1줄 그래프 --> seaborn (처음에는 이걸로)\n\n\n### 수치형 데이터 시각화\n\n\n```python\nimport seaborn as sns\ntitanic = sns.load_dataset('titanic')\ntitanic.head()\n```\n\n\n\n\n\n  <div id=\"df-cbd7e312-07d2-4e3c-a0c0-3f889c1c6405\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>survived</th>\n      <th>pclass</th>\n      <th>sex</th>\n      <th>age</th>\n      <th>sibsp</th>\n      <th>parch</th>\n      <th>fare</th>\n      <th>embarked</th>\n      <th>class</th>\n      <th>who</th>\n      <th>adult_male</th>\n      <th>deck</th>\n      <th>embark_town</th>\n      <th>alive</th>\n      <th>alone</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>7.2500</td>\n      <td>S</td>\n      <td>Third</td>\n      <td>man</td>\n      <td>True</td>\n      <td>NaN</td>\n      <td>Southampton</td>\n      <td>no</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>71.2833</td>\n      <td>C</td>\n      <td>First</td>\n      <td>woman</td>\n      <td>False</td>\n      <td>C</td>\n      <td>Cherbourg</td>\n      <td>yes</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>7.9250</td>\n      <td>S</td>\n      <td>Third</td>\n      <td>woman</td>\n      <td>False</td>\n      <td>NaN</td>\n      <td>Southampton</td>\n      <td>yes</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>35.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>53.1000</td>\n      <td>S</td>\n      <td>First</td>\n      <td>woman</td>\n      <td>False</td>\n      <td>C</td>\n      <td>Southampton</td>\n      <td>yes</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>8.0500</td>\n      <td>S</td>\n      <td>Third</td>\n      <td>man</td>\n      <td>True</td>\n      <td>NaN</td>\n      <td>Southampton</td>\n      <td>no</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cbd7e312-07d2-4e3c-a0c0-3f889c1c6405')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n       width=\"24px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n  </svg>\n      </button>\n\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n      <script>\n        const buttonEl =\n          document.querySelector('#df-cbd7e312-07d2-4e3c-a0c0-3f889c1c6405 button.colab-df-convert');\n        buttonEl.style.display =\n          google.colab.kernel.accessAllowed ? 'block' : 'none';\n\n        async function convertToInteractive(key) {\n          const element = document.querySelector('#df-cbd7e312-07d2-4e3c-a0c0-3f889c1c6405');\n          const dataTable =\n            await google.colab.kernel.invokeFunction('convertToInteractive',\n                                                     [key], {});\n          if (!dataTable) return;\n\n          const docLinkHtml = 'Like what you see? Visit the ' +\n            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n            + ' to learn more about interactive tables.';\n          element.innerHTML = '';\n          dataTable['output_type'] = 'display_data';\n          await google.colab.output.renderOutput(dataTable, element);\n          const docLink = document.createElement('div');\n          docLink.innerHTML = docLinkHtml;\n          element.appendChild(docLink);\n        }\n      </script>\n    </div>\n  </div>\n\n\n\n\n\n```python\n# 히스토그램\nsns.histplot(data = titanic, x ='age', bins = 10, hue = 'alive', multiple = 'stack')\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x7ff99b22f490>\n\n\n\n\n    \n![png](/images/0706/output_4_1.png)\n    \n\n\n- 위 그래프를 보아하니 ~~~~ 이겠네 하고 분석\n\n\n```python\n# 커널밀도추정 함수 그래프\n# 연속형 데이터 1개만 쓸 때 사용\nsns. kdeplot(data = titanic, x = 'age', hue = 'alive', multiple = 'stack')\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x7ff99a0c97d0>\n\n\n\n\n    \n![png](/images/0706/output_6_1.png)\n    \n\n\n#### 분포도\n- 수치형 데이터 한개 컬럼의 분포를 나타내는 그래프\n- 정규분포인가? 중심적으로 봐야 함\n  + 정규분포 : 평균 중심으로 좌우 대칭이 똑같은 그래프\n\n\n```python\nsns.displot(data = titanic, x ='age')\n```\n\n\n\n\n    <seaborn.axisgrid.FacetGrid at 0x7ff99a226910>\n\n\n\n\n    \n![png](/images/0706/output_8_1.png)\n    \n\n\n\n```python\nsns.displot(data = titanic, x = 'age', kde = True)\n```\n\n\n\n\n    <seaborn.axisgrid.FacetGrid at 0x7ff999f65d90>\n\n\n\n\n    \n![png](/images/0706/output_9_1.png)\n    \n\n\n### 범주형 데이터 시각화\n- x축 범주형, y축 수치데이터\n\n\n\n```python\n# 막대 그래프\nsns.barplot(x = 'class', y = 'fare', data = titanic)\n# 회색 막대기가 평균치, 위아래로 튀어나와 있는 정도를 error bar 오차막대 라고 한다.\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x7ff999e93b50>\n\n\n\n\n    \n![png](/images/0706/output_11_1.png)\n    \n\n\n\n```python\n# 포인트 plot\nsns.pointplot(x = 'class', y = 'fare', data = titanic)\n# 상황에 맞춰서 그래프 모형은 다르게 쓴다. 내용은 똑같음\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x7ff999df6410>\n\n\n\n\n    \n![png](/images/0706/output_12_1.png)\n    \n\n\n\n```python\n# 박스 plot\nsns.boxplot(x = 'class', y = 'age', data = titanic)\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x7ff999ddcbd0>\n\n\n\n\n    \n![png](/images/0706/output_13_1.png)\n    \n\n\n- 박스 plot\n- 제 1사분위 : 전체 데이터 중 하위 25%(박스 아랫변)\n- 제 2사분위 : 25% ~ 50% (박스 중간)\n- 제 3사분위 : 50% ~ 75% (박스 윗변)\n- 사분위 범위 수(IQR) : 제 3사분위 - 제 1사분위\n- 최댓값 : 제 3사분위 + (1.5 * IQ)\n\n\n```python\n# 바이올린 플롯\nsns.violinplot(x = 'class', y = 'age', hue = 'sex', data = titanic, split = True)\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x7ff999d09e10>\n\n\n\n\n    \n![png](/images/0706/output_15_1.png)\n    \n\n\n#### 카운트 plot\n- 범주형 데이터의 갯수 확인 할 때 사용\n\n\n```python\nsns.countplot(x = 'class', data = titanic)\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x7ff999c9d290>\n\n\n\n\n    \n![png](/images/0706/output_17_1.png)\n    \n\n\n## 데이터 관계 시각화\n- 여러 데이터 사이의 관계도 파악 위한 그래프\n\n### 히트맵\n\n\n```python\nflights= sns.load_dataset('flights')\nflights.head()\n```\n\n\n\n\n\n  <div id=\"df-c3854d41-b9f5-448f-8697-3ef25f747e15\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>year</th>\n      <th>month</th>\n      <th>passengers</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1949</td>\n      <td>Jan</td>\n      <td>112</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1949</td>\n      <td>Feb</td>\n      <td>118</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1949</td>\n      <td>Mar</td>\n      <td>132</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1949</td>\n      <td>Apr</td>\n      <td>129</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1949</td>\n      <td>May</td>\n      <td>121</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c3854d41-b9f5-448f-8697-3ef25f747e15')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n       width=\"24px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n  </svg>\n      </button>\n\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n      <script>\n        const buttonEl =\n          document.querySelector('#df-c3854d41-b9f5-448f-8697-3ef25f747e15 button.colab-df-convert');\n        buttonEl.style.display =\n          google.colab.kernel.accessAllowed ? 'block' : 'none';\n\n        async function convertToInteractive(key) {\n          const element = document.querySelector('#df-c3854d41-b9f5-448f-8697-3ef25f747e15');\n          const dataTable =\n            await google.colab.kernel.invokeFunction('convertToInteractive',\n                                                     [key], {});\n          if (!dataTable) return;\n\n          const docLinkHtml = 'Like what you see? Visit the ' +\n            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n            + ' to learn more about interactive tables.';\n          element.innerHTML = '';\n          dataTable['output_type'] = 'display_data';\n          await google.colab.output.renderOutput(dataTable, element);\n          const docLink = document.createElement('div');\n          docLink.innerHTML = docLinkHtml;\n          element.appendChild(docLink);\n        }\n      </script>\n    </div>\n  </div>\n\n\n\n\n- 각 연도별, 월별 승객 수 구하기\n\n\n```python\n# flights['year'].value_counts()\nflights_pivot = flights.pivot(index = 'month', columns = 'year', values = 'passengers')\nflights_pivot\n```\n\n\n\n\n\n  <div id=\"df-e33832bd-f6d9-469d-92ff-6457ffffde82\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>year</th>\n      <th>1949</th>\n      <th>1950</th>\n      <th>1951</th>\n      <th>1952</th>\n      <th>1953</th>\n      <th>1954</th>\n      <th>1955</th>\n      <th>1956</th>\n      <th>1957</th>\n      <th>1958</th>\n      <th>1959</th>\n      <th>1960</th>\n    </tr>\n    <tr>\n      <th>month</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Jan</th>\n      <td>112</td>\n      <td>115</td>\n      <td>145</td>\n      <td>171</td>\n      <td>196</td>\n      <td>204</td>\n      <td>242</td>\n      <td>284</td>\n      <td>315</td>\n      <td>340</td>\n      <td>360</td>\n      <td>417</td>\n    </tr>\n    <tr>\n      <th>Feb</th>\n      <td>118</td>\n      <td>126</td>\n      <td>150</td>\n      <td>180</td>\n      <td>196</td>\n      <td>188</td>\n      <td>233</td>\n      <td>277</td>\n      <td>301</td>\n      <td>318</td>\n      <td>342</td>\n      <td>391</td>\n    </tr>\n    <tr>\n      <th>Mar</th>\n      <td>132</td>\n      <td>141</td>\n      <td>178</td>\n      <td>193</td>\n      <td>236</td>\n      <td>235</td>\n      <td>267</td>\n      <td>317</td>\n      <td>356</td>\n      <td>362</td>\n      <td>406</td>\n      <td>419</td>\n    </tr>\n    <tr>\n      <th>Apr</th>\n      <td>129</td>\n      <td>135</td>\n      <td>163</td>\n      <td>181</td>\n      <td>235</td>\n      <td>227</td>\n      <td>269</td>\n      <td>313</td>\n      <td>348</td>\n      <td>348</td>\n      <td>396</td>\n      <td>461</td>\n    </tr>\n    <tr>\n      <th>May</th>\n      <td>121</td>\n      <td>125</td>\n      <td>172</td>\n      <td>183</td>\n      <td>229</td>\n      <td>234</td>\n      <td>270</td>\n      <td>318</td>\n      <td>355</td>\n      <td>363</td>\n      <td>420</td>\n      <td>472</td>\n    </tr>\n    <tr>\n      <th>Jun</th>\n      <td>135</td>\n      <td>149</td>\n      <td>178</td>\n      <td>218</td>\n      <td>243</td>\n      <td>264</td>\n      <td>315</td>\n      <td>374</td>\n      <td>422</td>\n      <td>435</td>\n      <td>472</td>\n      <td>535</td>\n    </tr>\n    <tr>\n      <th>Jul</th>\n      <td>148</td>\n      <td>170</td>\n      <td>199</td>\n      <td>230</td>\n      <td>264</td>\n      <td>302</td>\n      <td>364</td>\n      <td>413</td>\n      <td>465</td>\n      <td>491</td>\n      <td>548</td>\n      <td>622</td>\n    </tr>\n    <tr>\n      <th>Aug</th>\n      <td>148</td>\n      <td>170</td>\n      <td>199</td>\n      <td>242</td>\n      <td>272</td>\n      <td>293</td>\n      <td>347</td>\n      <td>405</td>\n      <td>467</td>\n      <td>505</td>\n      <td>559</td>\n      <td>606</td>\n    </tr>\n    <tr>\n      <th>Sep</th>\n      <td>136</td>\n      <td>158</td>\n      <td>184</td>\n      <td>209</td>\n      <td>237</td>\n      <td>259</td>\n      <td>312</td>\n      <td>355</td>\n      <td>404</td>\n      <td>404</td>\n      <td>463</td>\n      <td>508</td>\n    </tr>\n    <tr>\n      <th>Oct</th>\n      <td>119</td>\n      <td>133</td>\n      <td>162</td>\n      <td>191</td>\n      <td>211</td>\n      <td>229</td>\n      <td>274</td>\n      <td>306</td>\n      <td>347</td>\n      <td>359</td>\n      <td>407</td>\n      <td>461</td>\n    </tr>\n    <tr>\n      <th>Nov</th>\n      <td>104</td>\n      <td>114</td>\n      <td>146</td>\n      <td>172</td>\n      <td>180</td>\n      <td>203</td>\n      <td>237</td>\n      <td>271</td>\n      <td>305</td>\n      <td>310</td>\n      <td>362</td>\n      <td>390</td>\n    </tr>\n    <tr>\n      <th>Dec</th>\n      <td>118</td>\n      <td>140</td>\n      <td>166</td>\n      <td>194</td>\n      <td>201</td>\n      <td>229</td>\n      <td>278</td>\n      <td>306</td>\n      <td>336</td>\n      <td>337</td>\n      <td>405</td>\n      <td>432</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e33832bd-f6d9-469d-92ff-6457ffffde82')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n       width=\"24px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n  </svg>\n      </button>\n\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n      <script>\n        const buttonEl =\n          document.querySelector('#df-e33832bd-f6d9-469d-92ff-6457ffffde82 button.colab-df-convert');\n        buttonEl.style.display =\n          google.colab.kernel.accessAllowed ? 'block' : 'none';\n\n        async function convertToInteractive(key) {\n          const element = document.querySelector('#df-e33832bd-f6d9-469d-92ff-6457ffffde82');\n          const dataTable =\n            await google.colab.kernel.invokeFunction('convertToInteractive',\n                                                     [key], {});\n          if (!dataTable) return;\n\n          const docLinkHtml = 'Like what you see? Visit the ' +\n            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n            + ' to learn more about interactive tables.';\n          element.innerHTML = '';\n          dataTable['output_type'] = 'display_data';\n          await google.colab.output.renderOutput(dataTable, element);\n          const docLink = document.createElement('div');\n          docLink.innerHTML = docLinkHtml;\n          element.appendChild(docLink);\n        }\n      </script>\n    </div>\n  </div>\n\n\n\n\n\n```python\nsns.heatmap(data = flights_pivot)\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x7ff999c0ff90>\n\n\n\n\n    \n![png](/images/0706/output_23_1.png)\n    \n\n\n\n```python\n# 라인플롯\nsns.lineplot(x = 'year', y = 'passengers', data = flights)\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x7ff999bf9d90>\n\n\n\n\n    \n![png](/images/0706/output_24_1.png)\n    \n\n\n\n```python\n# 산점도\ntips = sns.load_dataset('tips')\ntips.head()\n```\n\n\n\n\n\n  <div id=\"df-ca53f1d3-b076-478e-a68c-226957b2fa6b\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>total_bill</th>\n      <th>tip</th>\n      <th>sex</th>\n      <th>smoker</th>\n      <th>day</th>\n      <th>time</th>\n      <th>size</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>16.99</td>\n      <td>1.01</td>\n      <td>Female</td>\n      <td>No</td>\n      <td>Sun</td>\n      <td>Dinner</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>10.34</td>\n      <td>1.66</td>\n      <td>Male</td>\n      <td>No</td>\n      <td>Sun</td>\n      <td>Dinner</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>21.01</td>\n      <td>3.50</td>\n      <td>Male</td>\n      <td>No</td>\n      <td>Sun</td>\n      <td>Dinner</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>23.68</td>\n      <td>3.31</td>\n      <td>Male</td>\n      <td>No</td>\n      <td>Sun</td>\n      <td>Dinner</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>24.59</td>\n      <td>3.61</td>\n      <td>Female</td>\n      <td>No</td>\n      <td>Sun</td>\n      <td>Dinner</td>\n      <td>4</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ca53f1d3-b076-478e-a68c-226957b2fa6b')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n       width=\"24px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n  </svg>\n      </button>\n\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n      <script>\n        const buttonEl =\n          document.querySelector('#df-ca53f1d3-b076-478e-a68c-226957b2fa6b button.colab-df-convert');\n        buttonEl.style.display =\n          google.colab.kernel.accessAllowed ? 'block' : 'none';\n\n        async function convertToInteractive(key) {\n          const element = document.querySelector('#df-ca53f1d3-b076-478e-a68c-226957b2fa6b');\n          const dataTable =\n            await google.colab.kernel.invokeFunction('convertToInteractive',\n                                                     [key], {});\n          if (!dataTable) return;\n\n          const docLinkHtml = 'Like what you see? Visit the ' +\n            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n            + ' to learn more about interactive tables.';\n          element.innerHTML = '';\n          dataTable['output_type'] = 'display_data';\n          await google.colab.output.renderOutput(dataTable, element);\n          const docLink = document.createElement('div');\n          docLink.innerHTML = docLinkHtml;\n          element.appendChild(docLink);\n        }\n      </script>\n    </div>\n  </div>\n\n\n\n\n- 두개의 연속형 데이터\n\n\n```python\nsns.scatterplot(x = 'total_bill', y = 'tip', hue = 'sex', data = tips)\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x7ff999b3ab10>\n\n\n\n\n    \n![png](/images/0706/output_27_1.png)\n    \n\n\n\n```python\n# 회귀선\nsns.regplot(x = 'total_bill', y = 'tip', data = tips)\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x7ff999f45350>\n\n\n\n\n    \n![png](/images/0706/output_28_1.png)\n    \n\n\n## 머신러닝 리뷰\n- 가장 인기 있는 모델\n  + LightGBM, XGboost\n\n### 선형 회귀\n- 선형 회귀식을 찾는 것이 중요\n- $y = 3x + 4$ 에 근사한 데이터 50개 생성\n\n\n```python\nimport numpy as np\nimport pandas as pd\n\n# 시드값 고정\nnp.random.seed(0)\nintercept = 4  # 절편, 상수\nslope = 3  # 기울기\n\n# 변동성 주기 위해 노이즈를 생성\nnoise = np.random.randn(50, 1)\nx = 5 * np.random.rand(50, 1)  # 0 과 5 사이의 실숫값 50개 생성\ny = slope * x + intercept + noise\n\n# 데이터 프레임 생성\ndata = pd.DataFrame({'X' : x[:, 0], 'Y' : y[:, 0]})\nprint(data)\n```\n\n               X          Y\n    0   0.794848   8.148596\n    1   0.551876   6.055784\n    2   3.281648  14.823682\n    3   0.690915   8.313637\n    4   0.982912   8.816293\n    5   1.843626   8.553600\n    6   4.104966  17.264987\n    7   0.485506   5.305162\n    8   4.189725  16.465955\n    9   0.480492   5.852075\n    10  4.882297  18.790936\n    11  2.343256  12.484042\n    12  4.883805  19.412454\n    13  3.024228  13.194358\n    14  3.696318  15.532817\n    15  0.195939   4.921491\n    16  1.414035   9.736184\n    17  0.600983   5.597790\n    18  1.480701   8.755171\n    19  0.593639   4.926820\n    20  1.589916   6.216758\n    21  2.071315  10.867564\n    22  0.320737   5.826649\n    23  3.462361  13.644917\n    24  2.833007  14.768776\n    25  1.326947   6.526477\n    26  2.616240  11.894479\n    27  0.469703   5.221924\n    28  2.879732  14.171977\n    29  4.646481  19.408802\n    30  1.592845   8.933482\n    31  3.337052  14.389318\n    32  0.658989   5.089182\n    33  3.581636  12.764112\n    34  1.447030   7.993179\n    35  0.915957   6.904219\n    36  2.932565  14.027985\n    37  0.100538   5.503993\n    38  4.144700  16.046774\n    39  0.023477   3.768129\n    40  3.389083  13.118695\n    41  1.350040   6.630102\n    42  3.675970  13.321640\n    43  4.810943  20.383604\n    44  1.243766   7.221645\n    45  2.880787  12.204286\n    46  2.960210  11.627834\n    47  2.861260  13.361269\n    48  1.115408   5.732327\n    49  4.763745  18.078495\n    \n\n\n```python\nimport matplotlib.pyplot as plt\nfig, ax = plt.subplots()\nax.scatter(data['X'], data['Y'])\nplt.show\n```\n\n\n\n\n    <function matplotlib.pyplot.show>\n\n\n\n\n    \n![png](/images/0706/output_32_1.png)\n    \n\n\n\n```python\nimport seaborn as sns \nsns.scatterplot(x = 'X', y = 'Y', data = data)\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x7ff99996ef10>\n\n\n\n\n    \n![png](/images/0706/output_33_1.png)\n    \n\n\n#### 선형회귀 모형 훈련\n- 모형 생성 후, 회귀계수 3과 y절편 4에 근사한 값이 나와야 함\n\n\n```python\nfrom sklearn.linear_model import LinearRegression\nlr_model = LinearRegression()   # 선형 회귀 모델\nlr_model.fit(x, y)    # 모델 훈련\n\nprint('y절편:', lr_model.intercept_)\nprint('회귀계수:', lr_model.coef_)\n```\n\n    y절편: [4.05757639]\n    회귀계수: [[3.03754061]]\n    \n\n\n```python\n# 예측값\ny_pred = lr_model.predict(x)\nfig, ax = plt.subplots()\nax.scatter(x, y)\nax.plot(x, y_pred, color='green')\n\n# slope, intercept \nlabel = 'slope: {}\\nintercept: {}'.format(round(lr_model.coef_[0][0], 2), round(lr_model.intercept_[0], 2))\nax.text(3.5, 4, label, style ='italic', \n        fontsize = 10, color =\"green\")\nplt.show()\n```\n\n\n    \n![png](/images/0706/output_36_0.png)\n    \n\n\n### 로지스틱 회귀\n\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndef sigmoid(arr, scale=1):\n    arr = np.asarray(arr)\n    result = 1/(1 + np.exp(-arr*scale))\n    return result\n\nx = np.linspace(-6, 6)\ny = sigmoid(x)\n\nfig, ax = plt.subplots()\nax.plot(x, y)\nax.grid(which='major', axis='y', linestyle='--')\nax.axvline(x=0, color='r', linestyle='--', linewidth=1)\nax.set_ylim(0,1)\nax.set_yticks([0, 1, 0.5])\nax.text(0-0.1, 0.5, '0.5', ha='right')\nax.set_title('Sigmoid Graph')\nplt.show()\n```\n\n\n    \n![png](/images/0706/output_38_0.png)\n    \n\n\n\n```python\n# 라이브러리 불러오기\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report, confusion_matrix\n\n# 데이터 가져오기\nx = np.arange(10).reshape(-1, 1)\ny = np.array([0, 0, 0, 0, 0, 1, 1, 1, 1, 1])\n\n# 모델 생성 및 학습\nmodel = LogisticRegression(solver='liblinear', C=10.0, random_state=0)\nmodel.fit(x, y)\n```\n\n\n\n\n    LogisticRegression(C=10.0, random_state=0, solver='liblinear')\n\n\n\n\n```python\n# 모형 평가\np_pred = model.predict_proba(x)\nprint('p_pred', p_pred, sep = '\\n')\n```\n\n    p_pred\n    [[0.97979027 0.02020973]\n     [0.94958202 0.05041798]\n     [0.87976149 0.12023851]\n     [0.73975066 0.26024934]\n     [0.52477284 0.47522716]\n     [0.30020373 0.69979627]\n     [0.1428487  0.8571513 ]\n     [0.06080627 0.93919373]\n     [0.02453462 0.97546538]\n     [0.00967652 0.99032348]]\n    \n\n\n```python\ny_pred = model.predict(x)\nprint('y_pred', y_pred)\n```\n\n    y_pred [0 0 0 0 0 1 1 1 1 1]\n    \n\n\n```python\nfig, ax = plt.subplots()\nax.scatter(x, y)\nax.plot(x, p_pred[:, 1], color = 'black',  marker='o', markersize=6)\nax.plot()\n\nax.set_xticks(x)\nax.set_yticks(np.arange(0, 1.1, 0.1))\n\nax.grid(which='major', alpha=0.5)\nplt.show()\n```\n\n\n    \n![png](/images/0706/output_42_0.png)\n    \n\n\n\n```python\nconf_m = confusion_matrix(y, y_pred)\nprint(conf_m)\n```\n\n    [[5 0]\n     [0 5]]\n    \n\n\n```python\ncm = confusion_matrix(y, y_pred)\n\nfig, ax = plt.subplots(figsize=(8, 8))\nax.imshow(cm, cmap = 'Pastel2')\nax.grid(False)\nax.xaxis.set(ticks=(0, 1), ticklabels=('Predicted 0', 'Predicted 1'))\nax.yaxis.set(ticks=(0, 1), ticklabels=('Actual 0', 'Actual 1'))\nax.set_ylim(1.5, -0.5)\nfor i in range(2):\n    for j in range(2):\n        ax.text(j, i, cm[i, j], ha='center', va='center', color='black', fontsize=20)\nplt.show()\n```\n\n\n    \n![png](/images/0706/output_44_0.png)\n    \n\n\n## 결정 트리\n- 분류와 회귀 문제에 모두 사용 가능\n### 주요 개념\n- 작동 원리\n  + 데이터를 가장 잘 구분하는 조건을 정함.\n  + 조건을 기준으로 데이터를 두 범주로 나눔\n  + 나뉜 각 범주의 데이터를 구분하는 조건을 정함\n  + 각 조건을 기준으로 데이터를 두 범주로 나눔\n  + 언제까지 계속 분할할지 정한 후, 최종 결정 값을 구함.\n- 불순도(Impurity)\n  + 한 범주 안에 서로 다른 데이터가 얼마나 섞여 있는지 나타냄\n  + 흰색과 검은색이 50:50으로 섞여 있다. (불순도 최대)\n  + 흰색과 검은색으로 완전 분리 되었다. (불순도 최소)\n- 엔트로피(Entropy)\n  + 불확실한 정도를 의미함. 0 ~ 1로 정함.\n  + 흰색과 검은색이 50:50으로 섞여 있다. 엔트로피 1\n  + 흰색과 검은색으로 완전 분리 되었다. 엔트로피 0\n- 정보이득(Information Gain)\n  + 1에서 엔트로피를 뺀 수치\n  + 정보 이득을 최대화하는 방향(엔트로피를 최소화 하는 방향)으로 노드를 분할함\n- 지니 불순도(Gini Impurity)\n  + 지니 불순도 값이 클수록 불순도도 높고, 작을수록 불순도도 낮음. 엔트로피와 마찬가지로 지니 불순도가 낮아지는 방향으로 노드 분할함.\n\n\n```python\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import train_test_split \nimport seaborn as sns \n\n# tips 데이터셋 \ntitanic = sns.load_dataset('titanic')\ntitanic.info()\n```\n\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 891 entries, 0 to 890\n    Data columns (total 15 columns):\n     #   Column       Non-Null Count  Dtype   \n    ---  ------       --------------  -----   \n     0   survived     891 non-null    int64   \n     1   pclass       891 non-null    int64   \n     2   sex          891 non-null    object  \n     3   age          714 non-null    float64 \n     4   sibsp        891 non-null    int64   \n     5   parch        891 non-null    int64   \n     6   fare         891 non-null    float64 \n     7   embarked     889 non-null    object  \n     8   class        891 non-null    category\n     9   who          891 non-null    object  \n     10  adult_male   891 non-null    bool    \n     11  deck         203 non-null    category\n     12  embark_town  889 non-null    object  \n     13  alive        891 non-null    object  \n     14  alone        891 non-null    bool    \n    dtypes: bool(2), category(2), float64(2), int64(4), object(5)\n    memory usage: 80.7+ KB\n    \n\n- survived의 비율을 구한다.\n  + 0 : 사망자\n  + 1 : 생존자\n\n\n```python\ntitanic['survived'].value_counts()\n```\n\n\n\n\n    0    549\n    1    342\n    Name: survived, dtype: int64\n\n\n\n\n```python\n# 데이터 추출\nX = titanic[['pclass', 'parch', 'fare']]\ny = titanic['survived']\n\n# 훈련데이터, 테스트 데이터 분리\nX_train, X_test, y_train, y_test = train_test_split(X, y, stratify = y, test_size = 0.3, random_state=42)\nX_train.shape, X_test.shape, y_train.shape, y_test.shape\n```\n\n\n\n\n    ((623, 3), (268, 3), (623,), (268,))\n\n\n\n\n```python\ntree_model = DecisionTreeClassifier()\ntree_model.fit(X_train, y_train)\n\nacc = tree_model.score(X_test, y_test)\nprint(f'모형 정확도 : {acc:.3f}') # 정확도 측정\n```\n\n    모형 정확도 : 0.675\n    \n\n### 랜덤 포레스트\n\n\n```python\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split \nimport seaborn as sns \n\n# tips 데이터셋 \ntitanic = sns.load_dataset('titanic')\n\nX = titanic[['pclass', 'parch', 'fare']]\ny = titanic['survived']\n\n# 훈련데이터, 테스트 데이터 분리\nX_train, X_test, y_train, y_test = train_test_split(X, y, stratify = y, test_size = 0.3, random_state=42)\n\n# 모델 훈련\nrf_model = RandomForestClassifier(random_state=42) # 랜덤 포레스트 정의\nrf_model.fit(X_train, y_train)\n\nacc = rf_model.score(X_test, y_test)\nprint(f'모형 정확도 : {acc:.3f}') # 정확도 측정\n```\n\n    모형 정확도 : 0.675\n    \n","slug":"day0706_1","published":1,"updated":"2022-07-10T14:26:41.663Z","_id":"cl5fcok7y0013jku09s1gcyvr","comments":1,"layout":"post","photos":[],"link":"","content":"<h4 id=\"데이터-분석-머신러닝-딥러닝-프로세스\"><a href=\"#데이터-분석-머신러닝-딥러닝-프로세스\" class=\"headerlink\" title=\"데이터 분석 (머신러닝, 딥러닝) 프로세스\"></a>데이터 분석 (머신러닝, 딥러닝) 프로세스</h4><span id=\"more\"></span>\n\n\n<ul>\n<li><p>데이터 불러오기</p>\n<ul>\n<li>CSV, 오라클, MySQL, PostgreSQL, 클라우드 DB연동</li>\n</ul>\n</li>\n<li><p>탐색적 자료분석</p>\n<ul>\n<li>데이터 전처리 및 가공</li>\n</ul>\n</li>\n<li><p>잠정적인 컬럼의 갯수를 지정해야 함</p>\n</li>\n<li><p>머신러닝 모델 (&#x3D;통계 모델링, t.test, 분산분석, 교차분석)</p>\n</li>\n<li><p>머신러닝 모델의 경우 배포 (현재는 다루지 않음 X)</p>\n<ul>\n<li>JSP-스프링 웹개발 시, 배우게 됨</li>\n</ul>\n</li>\n<li><p>통계 모델링 경우, p-value 값 기준으로, 귀무가설 및 대립가설 검정</p>\n</li>\n<li><p>(공통) 결과 보고서를 작성해야함</p>\n<ul>\n<li>PPT 만들어야 함.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"그래프-복습\"><a href=\"#그래프-복습\" class=\"headerlink\" title=\"그래프 복습\"></a>그래프 복습</h2><ul>\n<li>수치형 데이터 시각화</li>\n<li>범주형 데이터 시각화</li>\n<li>데이터 관계 시각화</li>\n<li>matplotlib 라이브러리 방법(복잡)</li>\n<li>seaborn 라이브러리 방법(단순)<ul>\n<li>복잡한 그래프 그릴 때 –&gt; matpltoltib</li>\n<li>1줄 그래프 –&gt; seaborn (처음에는 이걸로)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"수치형-데이터-시각화\"><a href=\"#수치형-데이터-시각화\" class=\"headerlink\" title=\"수치형 데이터 시각화\"></a>수치형 데이터 시각화</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns</span><br><span class=\"line\">titanic = sns.load_dataset(<span class=\"string\">&#x27;titanic&#x27;</span>)</span><br><span class=\"line\">titanic.head()</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n  <div id=\"df-cbd7e312-07d2-4e3c-a0c0-3f889c1c6405\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>survived</th>\n      <th>pclass</th>\n      <th>sex</th>\n      <th>age</th>\n      <th>sibsp</th>\n      <th>parch</th>\n      <th>fare</th>\n      <th>embarked</th>\n      <th>class</th>\n      <th>who</th>\n      <th>adult_male</th>\n      <th>deck</th>\n      <th>embark_town</th>\n      <th>alive</th>\n      <th>alone</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>7.2500</td>\n      <td>S</td>\n      <td>Third</td>\n      <td>man</td>\n      <td>True</td>\n      <td>NaN</td>\n      <td>Southampton</td>\n      <td>no</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>71.2833</td>\n      <td>C</td>\n      <td>First</td>\n      <td>woman</td>\n      <td>False</td>\n      <td>C</td>\n      <td>Cherbourg</td>\n      <td>yes</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>7.9250</td>\n      <td>S</td>\n      <td>Third</td>\n      <td>woman</td>\n      <td>False</td>\n      <td>NaN</td>\n      <td>Southampton</td>\n      <td>yes</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>35.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>53.1000</td>\n      <td>S</td>\n      <td>First</td>\n      <td>woman</td>\n      <td>False</td>\n      <td>C</td>\n      <td>Southampton</td>\n      <td>yes</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>8.0500</td>\n      <td>S</td>\n      <td>Third</td>\n      <td>man</td>\n      <td>True</td>\n      <td>NaN</td>\n      <td>Southampton</td>\n      <td>no</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cbd7e312-07d2-4e3c-a0c0-3f889c1c6405')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n<p>  &lt;svg xmlns&#x3D;”<a href=\"http://www.w3.org/2000/svg&quot;\">http://www.w3.org/2000/svg&quot;</a> height&#x3D;”24px”viewBox&#x3D;”0 0 24 24”<br>       width&#x3D;”24px”&gt;<br>    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><br>    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/><br>  </svg><br>      </button></p>\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n<pre><code>  &lt;script&gt;\n    const buttonEl =\n      document.querySelector(&#39;#df-cbd7e312-07d2-4e3c-a0c0-3f889c1c6405 button.colab-df-convert&#39;);\n    buttonEl.style.display =\n      google.colab.kernel.accessAllowed ? &#39;block&#39; : &#39;none&#39;;\n\n    async function convertToInteractive(key) &#123;\n      const element = document.querySelector(&#39;#df-cbd7e312-07d2-4e3c-a0c0-3f889c1c6405&#39;);\n      const dataTable =\n        await google.colab.kernel.invokeFunction(&#39;convertToInteractive&#39;,\n                                                 [key], &#123;&#125;);\n      if (!dataTable) return;\n\n      const docLinkHtml = &#39;Like what you see? Visit the &#39; +\n        &#39;&lt;a target=&quot;_blank&quot; href=https://colab.research.google.com/notebooks/data_table.ipynb&gt;data table notebook&lt;/a&gt;&#39;\n        + &#39; to learn more about interactive tables.&#39;;\n      element.innerHTML = &#39;&#39;;\n      dataTable[&#39;output_type&#39;] = &#39;display_data&#39;;\n      await google.colab.output.renderOutput(dataTable, element);\n      const docLink = document.createElement(&#39;div&#39;);\n      docLink.innerHTML = docLinkHtml;\n      element.appendChild(docLink);\n    &#125;\n  &lt;/script&gt;\n&lt;/div&gt;\n</code></pre>\n  </div>\n\n\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 히스토그램</span></span><br><span class=\"line\">sns.histplot(data = titanic, x =<span class=\"string\">&#x27;age&#x27;</span>, bins = <span class=\"number\">10</span>, hue = <span class=\"string\">&#x27;alive&#x27;</span>, multiple = <span class=\"string\">&#x27;stack&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7ff99b22f490&gt;\n</code></pre>\n<p><img src=\"/images/0706/output_4_1.png\" alt=\"png\"></p>\n<ul>\n<li>위 그래프를 보아하니 ~~~~ 이겠네 하고 분석</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 커널밀도추정 함수 그래프</span></span><br><span class=\"line\"><span class=\"comment\"># 연속형 데이터 1개만 쓸 때 사용</span></span><br><span class=\"line\">sns. kdeplot(data = titanic, x = <span class=\"string\">&#x27;age&#x27;</span>, hue = <span class=\"string\">&#x27;alive&#x27;</span>, multiple = <span class=\"string\">&#x27;stack&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7ff99a0c97d0&gt;\n</code></pre>\n<p><img src=\"/images/0706/output_6_1.png\" alt=\"png\"></p>\n<h4 id=\"분포도\"><a href=\"#분포도\" class=\"headerlink\" title=\"분포도\"></a>분포도</h4><ul>\n<li>수치형 데이터 한개 컬럼의 분포를 나타내는 그래프</li>\n<li>정규분포인가? 중심적으로 봐야 함<ul>\n<li>정규분포 : 평균 중심으로 좌우 대칭이 똑같은 그래프</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sns.displot(data = titanic, x =<span class=\"string\">&#x27;age&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&lt;seaborn.axisgrid.FacetGrid at 0x7ff99a226910&gt;\n</code></pre>\n<p><img src=\"/images/0706/output_8_1.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sns.displot(data = titanic, x = <span class=\"string\">&#x27;age&#x27;</span>, kde = <span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&lt;seaborn.axisgrid.FacetGrid at 0x7ff999f65d90&gt;\n</code></pre>\n<p><img src=\"/images/0706/output_9_1.png\" alt=\"png\"></p>\n<h3 id=\"범주형-데이터-시각화\"><a href=\"#범주형-데이터-시각화\" class=\"headerlink\" title=\"범주형 데이터 시각화\"></a>범주형 데이터 시각화</h3><ul>\n<li>x축 범주형, y축 수치데이터</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 막대 그래프</span></span><br><span class=\"line\">sns.barplot(x = <span class=\"string\">&#x27;class&#x27;</span>, y = <span class=\"string\">&#x27;fare&#x27;</span>, data = titanic)</span><br><span class=\"line\"><span class=\"comment\"># 회색 막대기가 평균치, 위아래로 튀어나와 있는 정도를 error bar 오차막대 라고 한다.</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7ff999e93b50&gt;\n</code></pre>\n<p><img src=\"/images/0706/output_11_1.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 포인트 plot</span></span><br><span class=\"line\">sns.pointplot(x = <span class=\"string\">&#x27;class&#x27;</span>, y = <span class=\"string\">&#x27;fare&#x27;</span>, data = titanic)</span><br><span class=\"line\"><span class=\"comment\"># 상황에 맞춰서 그래프 모형은 다르게 쓴다. 내용은 똑같음</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7ff999df6410&gt;\n</code></pre>\n<p><img src=\"/images/0706/output_12_1.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 박스 plot</span></span><br><span class=\"line\">sns.boxplot(x = <span class=\"string\">&#x27;class&#x27;</span>, y = <span class=\"string\">&#x27;age&#x27;</span>, data = titanic)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7ff999ddcbd0&gt;\n</code></pre>\n<p><img src=\"/images/0706/output_13_1.png\" alt=\"png\"></p>\n<ul>\n<li>박스 plot</li>\n<li>제 1사분위 : 전체 데이터 중 하위 25%(박스 아랫변)</li>\n<li>제 2사분위 : 25% ~ 50% (박스 중간)</li>\n<li>제 3사분위 : 50% ~ 75% (박스 윗변)</li>\n<li>사분위 범위 수(IQR) : 제 3사분위 - 제 1사분위</li>\n<li>최댓값 : 제 3사분위 + (1.5 * IQ)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 바이올린 플롯</span></span><br><span class=\"line\">sns.violinplot(x = <span class=\"string\">&#x27;class&#x27;</span>, y = <span class=\"string\">&#x27;age&#x27;</span>, hue = <span class=\"string\">&#x27;sex&#x27;</span>, data = titanic, split = <span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7ff999d09e10&gt;\n</code></pre>\n<p><img src=\"/images/0706/output_15_1.png\" alt=\"png\"></p>\n<h4 id=\"카운트-plot\"><a href=\"#카운트-plot\" class=\"headerlink\" title=\"카운트 plot\"></a>카운트 plot</h4><ul>\n<li>범주형 데이터의 갯수 확인 할 때 사용</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sns.countplot(x = <span class=\"string\">&#x27;class&#x27;</span>, data = titanic)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7ff999c9d290&gt;\n</code></pre>\n<p><img src=\"/images/0706/output_17_1.png\" alt=\"png\"></p>\n<h2 id=\"데이터-관계-시각화\"><a href=\"#데이터-관계-시각화\" class=\"headerlink\" title=\"데이터 관계 시각화\"></a>데이터 관계 시각화</h2><ul>\n<li>여러 데이터 사이의 관계도 파악 위한 그래프</li>\n</ul>\n<h3 id=\"히트맵\"><a href=\"#히트맵\" class=\"headerlink\" title=\"히트맵\"></a>히트맵</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flights= sns.load_dataset(<span class=\"string\">&#x27;flights&#x27;</span>)</span><br><span class=\"line\">flights.head()</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n  <div id=\"df-c3854d41-b9f5-448f-8697-3ef25f747e15\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>year</th>\n      <th>month</th>\n      <th>passengers</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1949</td>\n      <td>Jan</td>\n      <td>112</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1949</td>\n      <td>Feb</td>\n      <td>118</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1949</td>\n      <td>Mar</td>\n      <td>132</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1949</td>\n      <td>Apr</td>\n      <td>129</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1949</td>\n      <td>May</td>\n      <td>121</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c3854d41-b9f5-448f-8697-3ef25f747e15')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n<p>  &lt;svg xmlns&#x3D;”<a href=\"http://www.w3.org/2000/svg&quot;\">http://www.w3.org/2000/svg&quot;</a> height&#x3D;”24px”viewBox&#x3D;”0 0 24 24”<br>       width&#x3D;”24px”&gt;<br>    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><br>    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/><br>  </svg><br>      </button></p>\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n<pre><code>  &lt;script&gt;\n    const buttonEl =\n      document.querySelector(&#39;#df-c3854d41-b9f5-448f-8697-3ef25f747e15 button.colab-df-convert&#39;);\n    buttonEl.style.display =\n      google.colab.kernel.accessAllowed ? &#39;block&#39; : &#39;none&#39;;\n\n    async function convertToInteractive(key) &#123;\n      const element = document.querySelector(&#39;#df-c3854d41-b9f5-448f-8697-3ef25f747e15&#39;);\n      const dataTable =\n        await google.colab.kernel.invokeFunction(&#39;convertToInteractive&#39;,\n                                                 [key], &#123;&#125;);\n      if (!dataTable) return;\n\n      const docLinkHtml = &#39;Like what you see? Visit the &#39; +\n        &#39;&lt;a target=&quot;_blank&quot; href=https://colab.research.google.com/notebooks/data_table.ipynb&gt;data table notebook&lt;/a&gt;&#39;\n        + &#39; to learn more about interactive tables.&#39;;\n      element.innerHTML = &#39;&#39;;\n      dataTable[&#39;output_type&#39;] = &#39;display_data&#39;;\n      await google.colab.output.renderOutput(dataTable, element);\n      const docLink = document.createElement(&#39;div&#39;);\n      docLink.innerHTML = docLinkHtml;\n      element.appendChild(docLink);\n    &#125;\n  &lt;/script&gt;\n&lt;/div&gt;\n</code></pre>\n  </div>\n\n\n\n\n<ul>\n<li>각 연도별, 월별 승객 수 구하기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># flights[&#x27;year&#x27;].value_counts()</span></span><br><span class=\"line\">flights_pivot = flights.pivot(index = <span class=\"string\">&#x27;month&#x27;</span>, columns = <span class=\"string\">&#x27;year&#x27;</span>, values = <span class=\"string\">&#x27;passengers&#x27;</span>)</span><br><span class=\"line\">flights_pivot</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n  <div id=\"df-e33832bd-f6d9-469d-92ff-6457ffffde82\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>year</th>\n      <th>1949</th>\n      <th>1950</th>\n      <th>1951</th>\n      <th>1952</th>\n      <th>1953</th>\n      <th>1954</th>\n      <th>1955</th>\n      <th>1956</th>\n      <th>1957</th>\n      <th>1958</th>\n      <th>1959</th>\n      <th>1960</th>\n    </tr>\n    <tr>\n      <th>month</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Jan</th>\n      <td>112</td>\n      <td>115</td>\n      <td>145</td>\n      <td>171</td>\n      <td>196</td>\n      <td>204</td>\n      <td>242</td>\n      <td>284</td>\n      <td>315</td>\n      <td>340</td>\n      <td>360</td>\n      <td>417</td>\n    </tr>\n    <tr>\n      <th>Feb</th>\n      <td>118</td>\n      <td>126</td>\n      <td>150</td>\n      <td>180</td>\n      <td>196</td>\n      <td>188</td>\n      <td>233</td>\n      <td>277</td>\n      <td>301</td>\n      <td>318</td>\n      <td>342</td>\n      <td>391</td>\n    </tr>\n    <tr>\n      <th>Mar</th>\n      <td>132</td>\n      <td>141</td>\n      <td>178</td>\n      <td>193</td>\n      <td>236</td>\n      <td>235</td>\n      <td>267</td>\n      <td>317</td>\n      <td>356</td>\n      <td>362</td>\n      <td>406</td>\n      <td>419</td>\n    </tr>\n    <tr>\n      <th>Apr</th>\n      <td>129</td>\n      <td>135</td>\n      <td>163</td>\n      <td>181</td>\n      <td>235</td>\n      <td>227</td>\n      <td>269</td>\n      <td>313</td>\n      <td>348</td>\n      <td>348</td>\n      <td>396</td>\n      <td>461</td>\n    </tr>\n    <tr>\n      <th>May</th>\n      <td>121</td>\n      <td>125</td>\n      <td>172</td>\n      <td>183</td>\n      <td>229</td>\n      <td>234</td>\n      <td>270</td>\n      <td>318</td>\n      <td>355</td>\n      <td>363</td>\n      <td>420</td>\n      <td>472</td>\n    </tr>\n    <tr>\n      <th>Jun</th>\n      <td>135</td>\n      <td>149</td>\n      <td>178</td>\n      <td>218</td>\n      <td>243</td>\n      <td>264</td>\n      <td>315</td>\n      <td>374</td>\n      <td>422</td>\n      <td>435</td>\n      <td>472</td>\n      <td>535</td>\n    </tr>\n    <tr>\n      <th>Jul</th>\n      <td>148</td>\n      <td>170</td>\n      <td>199</td>\n      <td>230</td>\n      <td>264</td>\n      <td>302</td>\n      <td>364</td>\n      <td>413</td>\n      <td>465</td>\n      <td>491</td>\n      <td>548</td>\n      <td>622</td>\n    </tr>\n    <tr>\n      <th>Aug</th>\n      <td>148</td>\n      <td>170</td>\n      <td>199</td>\n      <td>242</td>\n      <td>272</td>\n      <td>293</td>\n      <td>347</td>\n      <td>405</td>\n      <td>467</td>\n      <td>505</td>\n      <td>559</td>\n      <td>606</td>\n    </tr>\n    <tr>\n      <th>Sep</th>\n      <td>136</td>\n      <td>158</td>\n      <td>184</td>\n      <td>209</td>\n      <td>237</td>\n      <td>259</td>\n      <td>312</td>\n      <td>355</td>\n      <td>404</td>\n      <td>404</td>\n      <td>463</td>\n      <td>508</td>\n    </tr>\n    <tr>\n      <th>Oct</th>\n      <td>119</td>\n      <td>133</td>\n      <td>162</td>\n      <td>191</td>\n      <td>211</td>\n      <td>229</td>\n      <td>274</td>\n      <td>306</td>\n      <td>347</td>\n      <td>359</td>\n      <td>407</td>\n      <td>461</td>\n    </tr>\n    <tr>\n      <th>Nov</th>\n      <td>104</td>\n      <td>114</td>\n      <td>146</td>\n      <td>172</td>\n      <td>180</td>\n      <td>203</td>\n      <td>237</td>\n      <td>271</td>\n      <td>305</td>\n      <td>310</td>\n      <td>362</td>\n      <td>390</td>\n    </tr>\n    <tr>\n      <th>Dec</th>\n      <td>118</td>\n      <td>140</td>\n      <td>166</td>\n      <td>194</td>\n      <td>201</td>\n      <td>229</td>\n      <td>278</td>\n      <td>306</td>\n      <td>336</td>\n      <td>337</td>\n      <td>405</td>\n      <td>432</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e33832bd-f6d9-469d-92ff-6457ffffde82')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n<p>  &lt;svg xmlns&#x3D;”<a href=\"http://www.w3.org/2000/svg&quot;\">http://www.w3.org/2000/svg&quot;</a> height&#x3D;”24px”viewBox&#x3D;”0 0 24 24”<br>       width&#x3D;”24px”&gt;<br>    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><br>    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/><br>  </svg><br>      </button></p>\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n<pre><code>  &lt;script&gt;\n    const buttonEl =\n      document.querySelector(&#39;#df-e33832bd-f6d9-469d-92ff-6457ffffde82 button.colab-df-convert&#39;);\n    buttonEl.style.display =\n      google.colab.kernel.accessAllowed ? &#39;block&#39; : &#39;none&#39;;\n\n    async function convertToInteractive(key) &#123;\n      const element = document.querySelector(&#39;#df-e33832bd-f6d9-469d-92ff-6457ffffde82&#39;);\n      const dataTable =\n        await google.colab.kernel.invokeFunction(&#39;convertToInteractive&#39;,\n                                                 [key], &#123;&#125;);\n      if (!dataTable) return;\n\n      const docLinkHtml = &#39;Like what you see? Visit the &#39; +\n        &#39;&lt;a target=&quot;_blank&quot; href=https://colab.research.google.com/notebooks/data_table.ipynb&gt;data table notebook&lt;/a&gt;&#39;\n        + &#39; to learn more about interactive tables.&#39;;\n      element.innerHTML = &#39;&#39;;\n      dataTable[&#39;output_type&#39;] = &#39;display_data&#39;;\n      await google.colab.output.renderOutput(dataTable, element);\n      const docLink = document.createElement(&#39;div&#39;);\n      docLink.innerHTML = docLinkHtml;\n      element.appendChild(docLink);\n    &#125;\n  &lt;/script&gt;\n&lt;/div&gt;\n</code></pre>\n  </div>\n\n\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sns.heatmap(data = flights_pivot)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7ff999c0ff90&gt;\n</code></pre>\n<p><img src=\"/images/0706/output_23_1.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 라인플롯</span></span><br><span class=\"line\">sns.lineplot(x = <span class=\"string\">&#x27;year&#x27;</span>, y = <span class=\"string\">&#x27;passengers&#x27;</span>, data = flights)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7ff999bf9d90&gt;\n</code></pre>\n<p><img src=\"/images/0706/output_24_1.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 산점도</span></span><br><span class=\"line\">tips = sns.load_dataset(<span class=\"string\">&#x27;tips&#x27;</span>)</span><br><span class=\"line\">tips.head()</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n  <div id=\"df-ca53f1d3-b076-478e-a68c-226957b2fa6b\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>total_bill</th>\n      <th>tip</th>\n      <th>sex</th>\n      <th>smoker</th>\n      <th>day</th>\n      <th>time</th>\n      <th>size</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>16.99</td>\n      <td>1.01</td>\n      <td>Female</td>\n      <td>No</td>\n      <td>Sun</td>\n      <td>Dinner</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>10.34</td>\n      <td>1.66</td>\n      <td>Male</td>\n      <td>No</td>\n      <td>Sun</td>\n      <td>Dinner</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>21.01</td>\n      <td>3.50</td>\n      <td>Male</td>\n      <td>No</td>\n      <td>Sun</td>\n      <td>Dinner</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>23.68</td>\n      <td>3.31</td>\n      <td>Male</td>\n      <td>No</td>\n      <td>Sun</td>\n      <td>Dinner</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>24.59</td>\n      <td>3.61</td>\n      <td>Female</td>\n      <td>No</td>\n      <td>Sun</td>\n      <td>Dinner</td>\n      <td>4</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ca53f1d3-b076-478e-a68c-226957b2fa6b')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n<p>  &lt;svg xmlns&#x3D;”<a href=\"http://www.w3.org/2000/svg&quot;\">http://www.w3.org/2000/svg&quot;</a> height&#x3D;”24px”viewBox&#x3D;”0 0 24 24”<br>       width&#x3D;”24px”&gt;<br>    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><br>    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/><br>  </svg><br>      </button></p>\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n<pre><code>  &lt;script&gt;\n    const buttonEl =\n      document.querySelector(&#39;#df-ca53f1d3-b076-478e-a68c-226957b2fa6b button.colab-df-convert&#39;);\n    buttonEl.style.display =\n      google.colab.kernel.accessAllowed ? &#39;block&#39; : &#39;none&#39;;\n\n    async function convertToInteractive(key) &#123;\n      const element = document.querySelector(&#39;#df-ca53f1d3-b076-478e-a68c-226957b2fa6b&#39;);\n      const dataTable =\n        await google.colab.kernel.invokeFunction(&#39;convertToInteractive&#39;,\n                                                 [key], &#123;&#125;);\n      if (!dataTable) return;\n\n      const docLinkHtml = &#39;Like what you see? Visit the &#39; +\n        &#39;&lt;a target=&quot;_blank&quot; href=https://colab.research.google.com/notebooks/data_table.ipynb&gt;data table notebook&lt;/a&gt;&#39;\n        + &#39; to learn more about interactive tables.&#39;;\n      element.innerHTML = &#39;&#39;;\n      dataTable[&#39;output_type&#39;] = &#39;display_data&#39;;\n      await google.colab.output.renderOutput(dataTable, element);\n      const docLink = document.createElement(&#39;div&#39;);\n      docLink.innerHTML = docLinkHtml;\n      element.appendChild(docLink);\n    &#125;\n  &lt;/script&gt;\n&lt;/div&gt;\n</code></pre>\n  </div>\n\n\n\n\n<ul>\n<li>두개의 연속형 데이터</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sns.scatterplot(x = <span class=\"string\">&#x27;total_bill&#x27;</span>, y = <span class=\"string\">&#x27;tip&#x27;</span>, hue = <span class=\"string\">&#x27;sex&#x27;</span>, data = tips)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7ff999b3ab10&gt;\n</code></pre>\n<p><img src=\"/images/0706/output_27_1.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 회귀선</span></span><br><span class=\"line\">sns.regplot(x = <span class=\"string\">&#x27;total_bill&#x27;</span>, y = <span class=\"string\">&#x27;tip&#x27;</span>, data = tips)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7ff999f45350&gt;\n</code></pre>\n<p><img src=\"/images/0706/output_28_1.png\" alt=\"png\"></p>\n<h2 id=\"머신러닝-리뷰\"><a href=\"#머신러닝-리뷰\" class=\"headerlink\" title=\"머신러닝 리뷰\"></a>머신러닝 리뷰</h2><ul>\n<li>가장 인기 있는 모델<ul>\n<li>LightGBM, XGboost</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"선형-회귀\"><a href=\"#선형-회귀\" class=\"headerlink\" title=\"선형 회귀\"></a>선형 회귀</h3><ul>\n<li>선형 회귀식을 찾는 것이 중요</li>\n<li>$y &#x3D; 3x + 4$ 에 근사한 데이터 50개 생성</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 시드값 고정</span></span><br><span class=\"line\">np.random.seed(<span class=\"number\">0</span>)</span><br><span class=\"line\">intercept = <span class=\"number\">4</span>  <span class=\"comment\"># 절편, 상수</span></span><br><span class=\"line\">slope = <span class=\"number\">3</span>  <span class=\"comment\"># 기울기</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 변동성 주기 위해 노이즈를 생성</span></span><br><span class=\"line\">noise = np.random.randn(<span class=\"number\">50</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">x = <span class=\"number\">5</span> * np.random.rand(<span class=\"number\">50</span>, <span class=\"number\">1</span>)  <span class=\"comment\"># 0 과 5 사이의 실숫값 50개 생성</span></span><br><span class=\"line\">y = slope * x + intercept + noise</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 데이터 프레임 생성</span></span><br><span class=\"line\">data = pd.DataFrame(&#123;<span class=\"string\">&#x27;X&#x27;</span> : x[:, <span class=\"number\">0</span>], <span class=\"string\">&#x27;Y&#x27;</span> : y[:, <span class=\"number\">0</span>]&#125;)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(data)</span><br></pre></td></tr></table></figure>\n\n<pre><code>           X          Y\n0   0.794848   8.148596\n1   0.551876   6.055784\n2   3.281648  14.823682\n3   0.690915   8.313637\n4   0.982912   8.816293\n5   1.843626   8.553600\n6   4.104966  17.264987\n7   0.485506   5.305162\n8   4.189725  16.465955\n9   0.480492   5.852075\n10  4.882297  18.790936\n11  2.343256  12.484042\n12  4.883805  19.412454\n13  3.024228  13.194358\n14  3.696318  15.532817\n15  0.195939   4.921491\n16  1.414035   9.736184\n17  0.600983   5.597790\n18  1.480701   8.755171\n19  0.593639   4.926820\n20  1.589916   6.216758\n21  2.071315  10.867564\n22  0.320737   5.826649\n23  3.462361  13.644917\n24  2.833007  14.768776\n25  1.326947   6.526477\n26  2.616240  11.894479\n27  0.469703   5.221924\n28  2.879732  14.171977\n29  4.646481  19.408802\n30  1.592845   8.933482\n31  3.337052  14.389318\n32  0.658989   5.089182\n33  3.581636  12.764112\n34  1.447030   7.993179\n35  0.915957   6.904219\n36  2.932565  14.027985\n37  0.100538   5.503993\n38  4.144700  16.046774\n39  0.023477   3.768129\n40  3.389083  13.118695\n41  1.350040   6.630102\n42  3.675970  13.321640\n43  4.810943  20.383604\n44  1.243766   7.221645\n45  2.880787  12.204286\n46  2.960210  11.627834\n47  2.861260  13.361269\n48  1.115408   5.732327\n49  4.763745  18.078495\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\">fig, ax = plt.subplots()</span><br><span class=\"line\">ax.scatter(data[<span class=\"string\">&#x27;X&#x27;</span>], data[<span class=\"string\">&#x27;Y&#x27;</span>])</span><br><span class=\"line\">plt.show</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&lt;function matplotlib.pyplot.show&gt;\n</code></pre>\n<p><img src=\"/images/0706/output_32_1.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns </span><br><span class=\"line\">sns.scatterplot(x = <span class=\"string\">&#x27;X&#x27;</span>, y = <span class=\"string\">&#x27;Y&#x27;</span>, data = data)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7ff99996ef10&gt;\n</code></pre>\n<p><img src=\"/images/0706/output_33_1.png\" alt=\"png\"></p>\n<h4 id=\"선형회귀-모형-훈련\"><a href=\"#선형회귀-모형-훈련\" class=\"headerlink\" title=\"선형회귀 모형 훈련\"></a>선형회귀 모형 훈련</h4><ul>\n<li>모형 생성 후, 회귀계수 3과 y절편 4에 근사한 값이 나와야 함</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LinearRegression</span><br><span class=\"line\">lr_model = LinearRegression()   <span class=\"comment\"># 선형 회귀 모델</span></span><br><span class=\"line\">lr_model.fit(x, y)    <span class=\"comment\"># 모델 훈련</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;y절편:&#x27;</span>, lr_model.intercept_)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;회귀계수:&#x27;</span>, lr_model.coef_)</span><br></pre></td></tr></table></figure>\n\n<pre><code>y절편: [4.05757639]\n회귀계수: [[3.03754061]]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 예측값</span></span><br><span class=\"line\">y_pred = lr_model.predict(x)</span><br><span class=\"line\">fig, ax = plt.subplots()</span><br><span class=\"line\">ax.scatter(x, y)</span><br><span class=\"line\">ax.plot(x, y_pred, color=<span class=\"string\">&#x27;green&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># slope, intercept </span></span><br><span class=\"line\">label = <span class=\"string\">&#x27;slope: &#123;&#125;\\nintercept: &#123;&#125;&#x27;</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">round</span>(lr_model.coef_[<span class=\"number\">0</span>][<span class=\"number\">0</span>], <span class=\"number\">2</span>), <span class=\"built_in\">round</span>(lr_model.intercept_[<span class=\"number\">0</span>], <span class=\"number\">2</span>))</span><br><span class=\"line\">ax.text(<span class=\"number\">3.5</span>, <span class=\"number\">4</span>, label, style =<span class=\"string\">&#x27;italic&#x27;</span>, </span><br><span class=\"line\">        fontsize = <span class=\"number\">10</span>, color =<span class=\"string\">&quot;green&quot;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0706/output_36_0.png\" alt=\"png\"></p>\n<h3 id=\"로지스틱-회귀\"><a href=\"#로지스틱-회귀\" class=\"headerlink\" title=\"로지스틱 회귀\"></a>로지스틱 회귀</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">sigmoid</span>(<span class=\"params\">arr, scale=<span class=\"number\">1</span></span>):</span><br><span class=\"line\">    arr = np.asarray(arr)</span><br><span class=\"line\">    result = <span class=\"number\">1</span>/(<span class=\"number\">1</span> + np.exp(-arr*scale))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\">x = np.linspace(-<span class=\"number\">6</span>, <span class=\"number\">6</span>)</span><br><span class=\"line\">y = sigmoid(x)</span><br><span class=\"line\"></span><br><span class=\"line\">fig, ax = plt.subplots()</span><br><span class=\"line\">ax.plot(x, y)</span><br><span class=\"line\">ax.grid(which=<span class=\"string\">&#x27;major&#x27;</span>, axis=<span class=\"string\">&#x27;y&#x27;</span>, linestyle=<span class=\"string\">&#x27;--&#x27;</span>)</span><br><span class=\"line\">ax.axvline(x=<span class=\"number\">0</span>, color=<span class=\"string\">&#x27;r&#x27;</span>, linestyle=<span class=\"string\">&#x27;--&#x27;</span>, linewidth=<span class=\"number\">1</span>)</span><br><span class=\"line\">ax.set_ylim(<span class=\"number\">0</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">ax.set_yticks([<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0.5</span>])</span><br><span class=\"line\">ax.text(<span class=\"number\">0</span>-<span class=\"number\">0.1</span>, <span class=\"number\">0.5</span>, <span class=\"string\">&#x27;0.5&#x27;</span>, ha=<span class=\"string\">&#x27;right&#x27;</span>)</span><br><span class=\"line\">ax.set_title(<span class=\"string\">&#x27;Sigmoid Graph&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0706/output_38_0.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 라이브러리 불러오기</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LogisticRegression</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> classification_report, confusion_matrix</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 데이터 가져오기</span></span><br><span class=\"line\">x = np.arange(<span class=\"number\">10</span>).reshape(-<span class=\"number\">1</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">y = np.array([<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 모델 생성 및 학습</span></span><br><span class=\"line\">model = LogisticRegression(solver=<span class=\"string\">&#x27;liblinear&#x27;</span>, C=<span class=\"number\">10.0</span>, random_state=<span class=\"number\">0</span>)</span><br><span class=\"line\">model.fit(x, y)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>LogisticRegression(C=10.0, random_state=0, solver=&#39;liblinear&#39;)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 모형 평가</span></span><br><span class=\"line\">p_pred = model.predict_proba(x)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;p_pred&#x27;</span>, p_pred, sep = <span class=\"string\">&#x27;\\n&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>p_pred\n[[0.97979027 0.02020973]\n [0.94958202 0.05041798]\n [0.87976149 0.12023851]\n [0.73975066 0.26024934]\n [0.52477284 0.47522716]\n [0.30020373 0.69979627]\n [0.1428487  0.8571513 ]\n [0.06080627 0.93919373]\n [0.02453462 0.97546538]\n [0.00967652 0.99032348]]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">y_pred = model.predict(x)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;y_pred&#x27;</span>, y_pred)</span><br></pre></td></tr></table></figure>\n\n<pre><code>y_pred [0 0 0 0 0 1 1 1 1 1]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fig, ax = plt.subplots()</span><br><span class=\"line\">ax.scatter(x, y)</span><br><span class=\"line\">ax.plot(x, p_pred[:, <span class=\"number\">1</span>], color = <span class=\"string\">&#x27;black&#x27;</span>,  marker=<span class=\"string\">&#x27;o&#x27;</span>, markersize=<span class=\"number\">6</span>)</span><br><span class=\"line\">ax.plot()</span><br><span class=\"line\"></span><br><span class=\"line\">ax.set_xticks(x)</span><br><span class=\"line\">ax.set_yticks(np.arange(<span class=\"number\">0</span>, <span class=\"number\">1.1</span>, <span class=\"number\">0.1</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">ax.grid(which=<span class=\"string\">&#x27;major&#x27;</span>, alpha=<span class=\"number\">0.5</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0706/output_42_0.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conf_m = confusion_matrix(y, y_pred)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(conf_m)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[[5 0]\n [0 5]]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cm = confusion_matrix(y, y_pred)</span><br><span class=\"line\"></span><br><span class=\"line\">fig, ax = plt.subplots(figsize=(<span class=\"number\">8</span>, <span class=\"number\">8</span>))</span><br><span class=\"line\">ax.imshow(cm, cmap = <span class=\"string\">&#x27;Pastel2&#x27;</span>)</span><br><span class=\"line\">ax.grid(<span class=\"literal\">False</span>)</span><br><span class=\"line\">ax.xaxis.<span class=\"built_in\">set</span>(ticks=(<span class=\"number\">0</span>, <span class=\"number\">1</span>), ticklabels=(<span class=\"string\">&#x27;Predicted 0&#x27;</span>, <span class=\"string\">&#x27;Predicted 1&#x27;</span>))</span><br><span class=\"line\">ax.yaxis.<span class=\"built_in\">set</span>(ticks=(<span class=\"number\">0</span>, <span class=\"number\">1</span>), ticklabels=(<span class=\"string\">&#x27;Actual 0&#x27;</span>, <span class=\"string\">&#x27;Actual 1&#x27;</span>))</span><br><span class=\"line\">ax.set_ylim(<span class=\"number\">1.5</span>, -<span class=\"number\">0.5</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">2</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">2</span>):</span><br><span class=\"line\">        ax.text(j, i, cm[i, j], ha=<span class=\"string\">&#x27;center&#x27;</span>, va=<span class=\"string\">&#x27;center&#x27;</span>, color=<span class=\"string\">&#x27;black&#x27;</span>, fontsize=<span class=\"number\">20</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0706/output_44_0.png\" alt=\"png\"></p>\n<h2 id=\"결정-트리\"><a href=\"#결정-트리\" class=\"headerlink\" title=\"결정 트리\"></a>결정 트리</h2><ul>\n<li>분류와 회귀 문제에 모두 사용 가능</li>\n</ul>\n<h3 id=\"주요-개념\"><a href=\"#주요-개념\" class=\"headerlink\" title=\"주요 개념\"></a>주요 개념</h3><ul>\n<li>작동 원리<ul>\n<li>데이터를 가장 잘 구분하는 조건을 정함.</li>\n<li>조건을 기준으로 데이터를 두 범주로 나눔</li>\n<li>나뉜 각 범주의 데이터를 구분하는 조건을 정함</li>\n<li>각 조건을 기준으로 데이터를 두 범주로 나눔</li>\n<li>언제까지 계속 분할할지 정한 후, 최종 결정 값을 구함.</li>\n</ul>\n</li>\n<li>불순도(Impurity)<ul>\n<li>한 범주 안에 서로 다른 데이터가 얼마나 섞여 있는지 나타냄</li>\n<li>흰색과 검은색이 50:50으로 섞여 있다. (불순도 최대)</li>\n<li>흰색과 검은색으로 완전 분리 되었다. (불순도 최소)</li>\n</ul>\n</li>\n<li>엔트로피(Entropy)<ul>\n<li>불확실한 정도를 의미함. 0 ~ 1로 정함.</li>\n<li>흰색과 검은색이 50:50으로 섞여 있다. 엔트로피 1</li>\n<li>흰색과 검은색으로 완전 분리 되었다. 엔트로피 0</li>\n</ul>\n</li>\n<li>정보이득(Information Gain)<ul>\n<li>1에서 엔트로피를 뺀 수치</li>\n<li>정보 이득을 최대화하는 방향(엔트로피를 최소화 하는 방향)으로 노드를 분할함</li>\n</ul>\n</li>\n<li>지니 불순도(Gini Impurity)<ul>\n<li>지니 불순도 값이 클수록 불순도도 높고, 작을수록 불순도도 낮음. 엔트로피와 마찬가지로 지니 불순도가 낮아지는 방향으로 노드 분할함.</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> DecisionTreeClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split </span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># tips 데이터셋 </span></span><br><span class=\"line\">titanic = sns.load_dataset(<span class=\"string\">&#x27;titanic&#x27;</span>)</span><br><span class=\"line\">titanic.info()</span><br></pre></td></tr></table></figure>\n\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 891 entries, 0 to 890\nData columns (total 15 columns):\n #   Column       Non-Null Count  Dtype   \n---  ------       --------------  -----   \n 0   survived     891 non-null    int64   \n 1   pclass       891 non-null    int64   \n 2   sex          891 non-null    object  \n 3   age          714 non-null    float64 \n 4   sibsp        891 non-null    int64   \n 5   parch        891 non-null    int64   \n 6   fare         891 non-null    float64 \n 7   embarked     889 non-null    object  \n 8   class        891 non-null    category\n 9   who          891 non-null    object  \n 10  adult_male   891 non-null    bool    \n 11  deck         203 non-null    category\n 12  embark_town  889 non-null    object  \n 13  alive        891 non-null    object  \n 14  alone        891 non-null    bool    \ndtypes: bool(2), category(2), float64(2), int64(4), object(5)\nmemory usage: 80.7+ KB\n</code></pre>\n<ul>\n<li>survived의 비율을 구한다.<ul>\n<li>0 : 사망자</li>\n<li>1 : 생존자</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">titanic[<span class=\"string\">&#x27;survived&#x27;</span>].value_counts()</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>0    549\n1    342\nName: survived, dtype: int64\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 데이터 추출</span></span><br><span class=\"line\">X = titanic[[<span class=\"string\">&#x27;pclass&#x27;</span>, <span class=\"string\">&#x27;parch&#x27;</span>, <span class=\"string\">&#x27;fare&#x27;</span>]]</span><br><span class=\"line\">y = titanic[<span class=\"string\">&#x27;survived&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 훈련데이터, 테스트 데이터 분리</span></span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(X, y, stratify = y, test_size = <span class=\"number\">0.3</span>, random_state=<span class=\"number\">42</span>)</span><br><span class=\"line\">X_train.shape, X_test.shape, y_train.shape, y_test.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>((623, 3), (268, 3), (623,), (268,))\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tree_model = DecisionTreeClassifier()</span><br><span class=\"line\">tree_model.fit(X_train, y_train)</span><br><span class=\"line\"></span><br><span class=\"line\">acc = tree_model.score(X_test, y_test)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;모형 정확도 : <span class=\"subst\">&#123;acc:<span class=\"number\">.3</span>f&#125;</span>&#x27;</span>) <span class=\"comment\"># 정확도 측정</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>모형 정확도 : 0.675\n</code></pre>\n<h3 id=\"랜덤-포레스트\"><a href=\"#랜덤-포레스트\" class=\"headerlink\" title=\"랜덤 포레스트\"></a>랜덤 포레스트</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> RandomForestClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split </span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># tips 데이터셋 </span></span><br><span class=\"line\">titanic = sns.load_dataset(<span class=\"string\">&#x27;titanic&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">X = titanic[[<span class=\"string\">&#x27;pclass&#x27;</span>, <span class=\"string\">&#x27;parch&#x27;</span>, <span class=\"string\">&#x27;fare&#x27;</span>]]</span><br><span class=\"line\">y = titanic[<span class=\"string\">&#x27;survived&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 훈련데이터, 테스트 데이터 분리</span></span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(X, y, stratify = y, test_size = <span class=\"number\">0.3</span>, random_state=<span class=\"number\">42</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 모델 훈련</span></span><br><span class=\"line\">rf_model = RandomForestClassifier(random_state=<span class=\"number\">42</span>) <span class=\"comment\"># 랜덤 포레스트 정의</span></span><br><span class=\"line\">rf_model.fit(X_train, y_train)</span><br><span class=\"line\"></span><br><span class=\"line\">acc = rf_model.score(X_test, y_test)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;모형 정확도 : <span class=\"subst\">&#123;acc:<span class=\"number\">.3</span>f&#125;</span>&#x27;</span>) <span class=\"comment\"># 정확도 측정</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>모형 정확도 : 0.675\n</code></pre>\n","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/07/06/day0706_1/image.png","excerpt":"<h4 id=\"데이터-분석-머신러닝-딥러닝-프로세스\"><a href=\"#데이터-분석-머신러닝-딥러닝-프로세스\" class=\"headerlink\" title=\"데이터 분석 (머신러닝, 딥러닝) 프로세스\"></a>데이터 분석 (머신러닝, 딥러닝) 프로세스</h4>","more":"<ul>\n<li><p>데이터 불러오기</p>\n<ul>\n<li>CSV, 오라클, MySQL, PostgreSQL, 클라우드 DB연동</li>\n</ul>\n</li>\n<li><p>탐색적 자료분석</p>\n<ul>\n<li>데이터 전처리 및 가공</li>\n</ul>\n</li>\n<li><p>잠정적인 컬럼의 갯수를 지정해야 함</p>\n</li>\n<li><p>머신러닝 모델 (&#x3D;통계 모델링, t.test, 분산분석, 교차분석)</p>\n</li>\n<li><p>머신러닝 모델의 경우 배포 (현재는 다루지 않음 X)</p>\n<ul>\n<li>JSP-스프링 웹개발 시, 배우게 됨</li>\n</ul>\n</li>\n<li><p>통계 모델링 경우, p-value 값 기준으로, 귀무가설 및 대립가설 검정</p>\n</li>\n<li><p>(공통) 결과 보고서를 작성해야함</p>\n<ul>\n<li>PPT 만들어야 함.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"그래프-복습\"><a href=\"#그래프-복습\" class=\"headerlink\" title=\"그래프 복습\"></a>그래프 복습</h2><ul>\n<li>수치형 데이터 시각화</li>\n<li>범주형 데이터 시각화</li>\n<li>데이터 관계 시각화</li>\n<li>matplotlib 라이브러리 방법(복잡)</li>\n<li>seaborn 라이브러리 방법(단순)<ul>\n<li>복잡한 그래프 그릴 때 –&gt; matpltoltib</li>\n<li>1줄 그래프 –&gt; seaborn (처음에는 이걸로)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"수치형-데이터-시각화\"><a href=\"#수치형-데이터-시각화\" class=\"headerlink\" title=\"수치형 데이터 시각화\"></a>수치형 데이터 시각화</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns</span><br><span class=\"line\">titanic = sns.load_dataset(<span class=\"string\">&#x27;titanic&#x27;</span>)</span><br><span class=\"line\">titanic.head()</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n  <div id=\"df-cbd7e312-07d2-4e3c-a0c0-3f889c1c6405\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>survived</th>\n      <th>pclass</th>\n      <th>sex</th>\n      <th>age</th>\n      <th>sibsp</th>\n      <th>parch</th>\n      <th>fare</th>\n      <th>embarked</th>\n      <th>class</th>\n      <th>who</th>\n      <th>adult_male</th>\n      <th>deck</th>\n      <th>embark_town</th>\n      <th>alive</th>\n      <th>alone</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>7.2500</td>\n      <td>S</td>\n      <td>Third</td>\n      <td>man</td>\n      <td>True</td>\n      <td>NaN</td>\n      <td>Southampton</td>\n      <td>no</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>71.2833</td>\n      <td>C</td>\n      <td>First</td>\n      <td>woman</td>\n      <td>False</td>\n      <td>C</td>\n      <td>Cherbourg</td>\n      <td>yes</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>7.9250</td>\n      <td>S</td>\n      <td>Third</td>\n      <td>woman</td>\n      <td>False</td>\n      <td>NaN</td>\n      <td>Southampton</td>\n      <td>yes</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>35.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>53.1000</td>\n      <td>S</td>\n      <td>First</td>\n      <td>woman</td>\n      <td>False</td>\n      <td>C</td>\n      <td>Southampton</td>\n      <td>yes</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>8.0500</td>\n      <td>S</td>\n      <td>Third</td>\n      <td>man</td>\n      <td>True</td>\n      <td>NaN</td>\n      <td>Southampton</td>\n      <td>no</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cbd7e312-07d2-4e3c-a0c0-3f889c1c6405')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n<p>  &lt;svg xmlns&#x3D;”<a href=\"http://www.w3.org/2000/svg&quot;\">http://www.w3.org/2000/svg&quot;</a> height&#x3D;”24px”viewBox&#x3D;”0 0 24 24”<br>       width&#x3D;”24px”&gt;<br>    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><br>    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/><br>  </svg><br>      </button></p>\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n<pre><code>  &lt;script&gt;\n    const buttonEl =\n      document.querySelector(&#39;#df-cbd7e312-07d2-4e3c-a0c0-3f889c1c6405 button.colab-df-convert&#39;);\n    buttonEl.style.display =\n      google.colab.kernel.accessAllowed ? &#39;block&#39; : &#39;none&#39;;\n\n    async function convertToInteractive(key) &#123;\n      const element = document.querySelector(&#39;#df-cbd7e312-07d2-4e3c-a0c0-3f889c1c6405&#39;);\n      const dataTable =\n        await google.colab.kernel.invokeFunction(&#39;convertToInteractive&#39;,\n                                                 [key], &#123;&#125;);\n      if (!dataTable) return;\n\n      const docLinkHtml = &#39;Like what you see? Visit the &#39; +\n        &#39;&lt;a target=&quot;_blank&quot; href=https://colab.research.google.com/notebooks/data_table.ipynb&gt;data table notebook&lt;/a&gt;&#39;\n        + &#39; to learn more about interactive tables.&#39;;\n      element.innerHTML = &#39;&#39;;\n      dataTable[&#39;output_type&#39;] = &#39;display_data&#39;;\n      await google.colab.output.renderOutput(dataTable, element);\n      const docLink = document.createElement(&#39;div&#39;);\n      docLink.innerHTML = docLinkHtml;\n      element.appendChild(docLink);\n    &#125;\n  &lt;/script&gt;\n&lt;/div&gt;\n</code></pre>\n  </div>\n\n\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 히스토그램</span></span><br><span class=\"line\">sns.histplot(data = titanic, x =<span class=\"string\">&#x27;age&#x27;</span>, bins = <span class=\"number\">10</span>, hue = <span class=\"string\">&#x27;alive&#x27;</span>, multiple = <span class=\"string\">&#x27;stack&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7ff99b22f490&gt;\n</code></pre>\n<p><img src=\"/images/0706/output_4_1.png\" alt=\"png\"></p>\n<ul>\n<li>위 그래프를 보아하니 ~~~~ 이겠네 하고 분석</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 커널밀도추정 함수 그래프</span></span><br><span class=\"line\"><span class=\"comment\"># 연속형 데이터 1개만 쓸 때 사용</span></span><br><span class=\"line\">sns. kdeplot(data = titanic, x = <span class=\"string\">&#x27;age&#x27;</span>, hue = <span class=\"string\">&#x27;alive&#x27;</span>, multiple = <span class=\"string\">&#x27;stack&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7ff99a0c97d0&gt;\n</code></pre>\n<p><img src=\"/images/0706/output_6_1.png\" alt=\"png\"></p>\n<h4 id=\"분포도\"><a href=\"#분포도\" class=\"headerlink\" title=\"분포도\"></a>분포도</h4><ul>\n<li>수치형 데이터 한개 컬럼의 분포를 나타내는 그래프</li>\n<li>정규분포인가? 중심적으로 봐야 함<ul>\n<li>정규분포 : 평균 중심으로 좌우 대칭이 똑같은 그래프</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sns.displot(data = titanic, x =<span class=\"string\">&#x27;age&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&lt;seaborn.axisgrid.FacetGrid at 0x7ff99a226910&gt;\n</code></pre>\n<p><img src=\"/images/0706/output_8_1.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sns.displot(data = titanic, x = <span class=\"string\">&#x27;age&#x27;</span>, kde = <span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&lt;seaborn.axisgrid.FacetGrid at 0x7ff999f65d90&gt;\n</code></pre>\n<p><img src=\"/images/0706/output_9_1.png\" alt=\"png\"></p>\n<h3 id=\"범주형-데이터-시각화\"><a href=\"#범주형-데이터-시각화\" class=\"headerlink\" title=\"범주형 데이터 시각화\"></a>범주형 데이터 시각화</h3><ul>\n<li>x축 범주형, y축 수치데이터</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 막대 그래프</span></span><br><span class=\"line\">sns.barplot(x = <span class=\"string\">&#x27;class&#x27;</span>, y = <span class=\"string\">&#x27;fare&#x27;</span>, data = titanic)</span><br><span class=\"line\"><span class=\"comment\"># 회색 막대기가 평균치, 위아래로 튀어나와 있는 정도를 error bar 오차막대 라고 한다.</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7ff999e93b50&gt;\n</code></pre>\n<p><img src=\"/images/0706/output_11_1.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 포인트 plot</span></span><br><span class=\"line\">sns.pointplot(x = <span class=\"string\">&#x27;class&#x27;</span>, y = <span class=\"string\">&#x27;fare&#x27;</span>, data = titanic)</span><br><span class=\"line\"><span class=\"comment\"># 상황에 맞춰서 그래프 모형은 다르게 쓴다. 내용은 똑같음</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7ff999df6410&gt;\n</code></pre>\n<p><img src=\"/images/0706/output_12_1.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 박스 plot</span></span><br><span class=\"line\">sns.boxplot(x = <span class=\"string\">&#x27;class&#x27;</span>, y = <span class=\"string\">&#x27;age&#x27;</span>, data = titanic)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7ff999ddcbd0&gt;\n</code></pre>\n<p><img src=\"/images/0706/output_13_1.png\" alt=\"png\"></p>\n<ul>\n<li>박스 plot</li>\n<li>제 1사분위 : 전체 데이터 중 하위 25%(박스 아랫변)</li>\n<li>제 2사분위 : 25% ~ 50% (박스 중간)</li>\n<li>제 3사분위 : 50% ~ 75% (박스 윗변)</li>\n<li>사분위 범위 수(IQR) : 제 3사분위 - 제 1사분위</li>\n<li>최댓값 : 제 3사분위 + (1.5 * IQ)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 바이올린 플롯</span></span><br><span class=\"line\">sns.violinplot(x = <span class=\"string\">&#x27;class&#x27;</span>, y = <span class=\"string\">&#x27;age&#x27;</span>, hue = <span class=\"string\">&#x27;sex&#x27;</span>, data = titanic, split = <span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7ff999d09e10&gt;\n</code></pre>\n<p><img src=\"/images/0706/output_15_1.png\" alt=\"png\"></p>\n<h4 id=\"카운트-plot\"><a href=\"#카운트-plot\" class=\"headerlink\" title=\"카운트 plot\"></a>카운트 plot</h4><ul>\n<li>범주형 데이터의 갯수 확인 할 때 사용</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sns.countplot(x = <span class=\"string\">&#x27;class&#x27;</span>, data = titanic)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7ff999c9d290&gt;\n</code></pre>\n<p><img src=\"/images/0706/output_17_1.png\" alt=\"png\"></p>\n<h2 id=\"데이터-관계-시각화\"><a href=\"#데이터-관계-시각화\" class=\"headerlink\" title=\"데이터 관계 시각화\"></a>데이터 관계 시각화</h2><ul>\n<li>여러 데이터 사이의 관계도 파악 위한 그래프</li>\n</ul>\n<h3 id=\"히트맵\"><a href=\"#히트맵\" class=\"headerlink\" title=\"히트맵\"></a>히트맵</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flights= sns.load_dataset(<span class=\"string\">&#x27;flights&#x27;</span>)</span><br><span class=\"line\">flights.head()</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n  <div id=\"df-c3854d41-b9f5-448f-8697-3ef25f747e15\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>year</th>\n      <th>month</th>\n      <th>passengers</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1949</td>\n      <td>Jan</td>\n      <td>112</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1949</td>\n      <td>Feb</td>\n      <td>118</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1949</td>\n      <td>Mar</td>\n      <td>132</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1949</td>\n      <td>Apr</td>\n      <td>129</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1949</td>\n      <td>May</td>\n      <td>121</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c3854d41-b9f5-448f-8697-3ef25f747e15')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n<p>  &lt;svg xmlns&#x3D;”<a href=\"http://www.w3.org/2000/svg&quot;\">http://www.w3.org/2000/svg&quot;</a> height&#x3D;”24px”viewBox&#x3D;”0 0 24 24”<br>       width&#x3D;”24px”&gt;<br>    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><br>    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/><br>  </svg><br>      </button></p>\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n<pre><code>  &lt;script&gt;\n    const buttonEl =\n      document.querySelector(&#39;#df-c3854d41-b9f5-448f-8697-3ef25f747e15 button.colab-df-convert&#39;);\n    buttonEl.style.display =\n      google.colab.kernel.accessAllowed ? &#39;block&#39; : &#39;none&#39;;\n\n    async function convertToInteractive(key) &#123;\n      const element = document.querySelector(&#39;#df-c3854d41-b9f5-448f-8697-3ef25f747e15&#39;);\n      const dataTable =\n        await google.colab.kernel.invokeFunction(&#39;convertToInteractive&#39;,\n                                                 [key], &#123;&#125;);\n      if (!dataTable) return;\n\n      const docLinkHtml = &#39;Like what you see? Visit the &#39; +\n        &#39;&lt;a target=&quot;_blank&quot; href=https://colab.research.google.com/notebooks/data_table.ipynb&gt;data table notebook&lt;/a&gt;&#39;\n        + &#39; to learn more about interactive tables.&#39;;\n      element.innerHTML = &#39;&#39;;\n      dataTable[&#39;output_type&#39;] = &#39;display_data&#39;;\n      await google.colab.output.renderOutput(dataTable, element);\n      const docLink = document.createElement(&#39;div&#39;);\n      docLink.innerHTML = docLinkHtml;\n      element.appendChild(docLink);\n    &#125;\n  &lt;/script&gt;\n&lt;/div&gt;\n</code></pre>\n  </div>\n\n\n\n\n<ul>\n<li>각 연도별, 월별 승객 수 구하기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># flights[&#x27;year&#x27;].value_counts()</span></span><br><span class=\"line\">flights_pivot = flights.pivot(index = <span class=\"string\">&#x27;month&#x27;</span>, columns = <span class=\"string\">&#x27;year&#x27;</span>, values = <span class=\"string\">&#x27;passengers&#x27;</span>)</span><br><span class=\"line\">flights_pivot</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n  <div id=\"df-e33832bd-f6d9-469d-92ff-6457ffffde82\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>year</th>\n      <th>1949</th>\n      <th>1950</th>\n      <th>1951</th>\n      <th>1952</th>\n      <th>1953</th>\n      <th>1954</th>\n      <th>1955</th>\n      <th>1956</th>\n      <th>1957</th>\n      <th>1958</th>\n      <th>1959</th>\n      <th>1960</th>\n    </tr>\n    <tr>\n      <th>month</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Jan</th>\n      <td>112</td>\n      <td>115</td>\n      <td>145</td>\n      <td>171</td>\n      <td>196</td>\n      <td>204</td>\n      <td>242</td>\n      <td>284</td>\n      <td>315</td>\n      <td>340</td>\n      <td>360</td>\n      <td>417</td>\n    </tr>\n    <tr>\n      <th>Feb</th>\n      <td>118</td>\n      <td>126</td>\n      <td>150</td>\n      <td>180</td>\n      <td>196</td>\n      <td>188</td>\n      <td>233</td>\n      <td>277</td>\n      <td>301</td>\n      <td>318</td>\n      <td>342</td>\n      <td>391</td>\n    </tr>\n    <tr>\n      <th>Mar</th>\n      <td>132</td>\n      <td>141</td>\n      <td>178</td>\n      <td>193</td>\n      <td>236</td>\n      <td>235</td>\n      <td>267</td>\n      <td>317</td>\n      <td>356</td>\n      <td>362</td>\n      <td>406</td>\n      <td>419</td>\n    </tr>\n    <tr>\n      <th>Apr</th>\n      <td>129</td>\n      <td>135</td>\n      <td>163</td>\n      <td>181</td>\n      <td>235</td>\n      <td>227</td>\n      <td>269</td>\n      <td>313</td>\n      <td>348</td>\n      <td>348</td>\n      <td>396</td>\n      <td>461</td>\n    </tr>\n    <tr>\n      <th>May</th>\n      <td>121</td>\n      <td>125</td>\n      <td>172</td>\n      <td>183</td>\n      <td>229</td>\n      <td>234</td>\n      <td>270</td>\n      <td>318</td>\n      <td>355</td>\n      <td>363</td>\n      <td>420</td>\n      <td>472</td>\n    </tr>\n    <tr>\n      <th>Jun</th>\n      <td>135</td>\n      <td>149</td>\n      <td>178</td>\n      <td>218</td>\n      <td>243</td>\n      <td>264</td>\n      <td>315</td>\n      <td>374</td>\n      <td>422</td>\n      <td>435</td>\n      <td>472</td>\n      <td>535</td>\n    </tr>\n    <tr>\n      <th>Jul</th>\n      <td>148</td>\n      <td>170</td>\n      <td>199</td>\n      <td>230</td>\n      <td>264</td>\n      <td>302</td>\n      <td>364</td>\n      <td>413</td>\n      <td>465</td>\n      <td>491</td>\n      <td>548</td>\n      <td>622</td>\n    </tr>\n    <tr>\n      <th>Aug</th>\n      <td>148</td>\n      <td>170</td>\n      <td>199</td>\n      <td>242</td>\n      <td>272</td>\n      <td>293</td>\n      <td>347</td>\n      <td>405</td>\n      <td>467</td>\n      <td>505</td>\n      <td>559</td>\n      <td>606</td>\n    </tr>\n    <tr>\n      <th>Sep</th>\n      <td>136</td>\n      <td>158</td>\n      <td>184</td>\n      <td>209</td>\n      <td>237</td>\n      <td>259</td>\n      <td>312</td>\n      <td>355</td>\n      <td>404</td>\n      <td>404</td>\n      <td>463</td>\n      <td>508</td>\n    </tr>\n    <tr>\n      <th>Oct</th>\n      <td>119</td>\n      <td>133</td>\n      <td>162</td>\n      <td>191</td>\n      <td>211</td>\n      <td>229</td>\n      <td>274</td>\n      <td>306</td>\n      <td>347</td>\n      <td>359</td>\n      <td>407</td>\n      <td>461</td>\n    </tr>\n    <tr>\n      <th>Nov</th>\n      <td>104</td>\n      <td>114</td>\n      <td>146</td>\n      <td>172</td>\n      <td>180</td>\n      <td>203</td>\n      <td>237</td>\n      <td>271</td>\n      <td>305</td>\n      <td>310</td>\n      <td>362</td>\n      <td>390</td>\n    </tr>\n    <tr>\n      <th>Dec</th>\n      <td>118</td>\n      <td>140</td>\n      <td>166</td>\n      <td>194</td>\n      <td>201</td>\n      <td>229</td>\n      <td>278</td>\n      <td>306</td>\n      <td>336</td>\n      <td>337</td>\n      <td>405</td>\n      <td>432</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e33832bd-f6d9-469d-92ff-6457ffffde82')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n<p>  &lt;svg xmlns&#x3D;”<a href=\"http://www.w3.org/2000/svg&quot;\">http://www.w3.org/2000/svg&quot;</a> height&#x3D;”24px”viewBox&#x3D;”0 0 24 24”<br>       width&#x3D;”24px”&gt;<br>    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><br>    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/><br>  </svg><br>      </button></p>\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n<pre><code>  &lt;script&gt;\n    const buttonEl =\n      document.querySelector(&#39;#df-e33832bd-f6d9-469d-92ff-6457ffffde82 button.colab-df-convert&#39;);\n    buttonEl.style.display =\n      google.colab.kernel.accessAllowed ? &#39;block&#39; : &#39;none&#39;;\n\n    async function convertToInteractive(key) &#123;\n      const element = document.querySelector(&#39;#df-e33832bd-f6d9-469d-92ff-6457ffffde82&#39;);\n      const dataTable =\n        await google.colab.kernel.invokeFunction(&#39;convertToInteractive&#39;,\n                                                 [key], &#123;&#125;);\n      if (!dataTable) return;\n\n      const docLinkHtml = &#39;Like what you see? Visit the &#39; +\n        &#39;&lt;a target=&quot;_blank&quot; href=https://colab.research.google.com/notebooks/data_table.ipynb&gt;data table notebook&lt;/a&gt;&#39;\n        + &#39; to learn more about interactive tables.&#39;;\n      element.innerHTML = &#39;&#39;;\n      dataTable[&#39;output_type&#39;] = &#39;display_data&#39;;\n      await google.colab.output.renderOutput(dataTable, element);\n      const docLink = document.createElement(&#39;div&#39;);\n      docLink.innerHTML = docLinkHtml;\n      element.appendChild(docLink);\n    &#125;\n  &lt;/script&gt;\n&lt;/div&gt;\n</code></pre>\n  </div>\n\n\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sns.heatmap(data = flights_pivot)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7ff999c0ff90&gt;\n</code></pre>\n<p><img src=\"/images/0706/output_23_1.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 라인플롯</span></span><br><span class=\"line\">sns.lineplot(x = <span class=\"string\">&#x27;year&#x27;</span>, y = <span class=\"string\">&#x27;passengers&#x27;</span>, data = flights)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7ff999bf9d90&gt;\n</code></pre>\n<p><img src=\"/images/0706/output_24_1.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 산점도</span></span><br><span class=\"line\">tips = sns.load_dataset(<span class=\"string\">&#x27;tips&#x27;</span>)</span><br><span class=\"line\">tips.head()</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n  <div id=\"df-ca53f1d3-b076-478e-a68c-226957b2fa6b\">\n    <div class=\"colab-df-container\">\n      <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>total_bill</th>\n      <th>tip</th>\n      <th>sex</th>\n      <th>smoker</th>\n      <th>day</th>\n      <th>time</th>\n      <th>size</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>16.99</td>\n      <td>1.01</td>\n      <td>Female</td>\n      <td>No</td>\n      <td>Sun</td>\n      <td>Dinner</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>10.34</td>\n      <td>1.66</td>\n      <td>Male</td>\n      <td>No</td>\n      <td>Sun</td>\n      <td>Dinner</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>21.01</td>\n      <td>3.50</td>\n      <td>Male</td>\n      <td>No</td>\n      <td>Sun</td>\n      <td>Dinner</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>23.68</td>\n      <td>3.31</td>\n      <td>Male</td>\n      <td>No</td>\n      <td>Sun</td>\n      <td>Dinner</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>24.59</td>\n      <td>3.61</td>\n      <td>Female</td>\n      <td>No</td>\n      <td>Sun</td>\n      <td>Dinner</td>\n      <td>4</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ca53f1d3-b076-478e-a68c-226957b2fa6b')\"\n              title=\"Convert this dataframe to an interactive table.\"\n              style=\"display:none;\">\n\n<p>  &lt;svg xmlns&#x3D;”<a href=\"http://www.w3.org/2000/svg&quot;\">http://www.w3.org/2000/svg&quot;</a> height&#x3D;”24px”viewBox&#x3D;”0 0 24 24”<br>       width&#x3D;”24px”&gt;<br>    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><br>    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/><br>  </svg><br>      </button></p>\n  <style>\n    .colab-df-container {\n      display:flex;\n      flex-wrap:wrap;\n      gap: 12px;\n    }\n\n    .colab-df-convert {\n      background-color: #E8F0FE;\n      border: none;\n      border-radius: 50%;\n      cursor: pointer;\n      display: none;\n      fill: #1967D2;\n      height: 32px;\n      padding: 0 0 0 0;\n      width: 32px;\n    }\n\n    .colab-df-convert:hover {\n      background-color: #E2EBFA;\n      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n      fill: #174EA6;\n    }\n\n    [theme=dark] .colab-df-convert {\n      background-color: #3B4455;\n      fill: #D2E3FC;\n    }\n\n    [theme=dark] .colab-df-convert:hover {\n      background-color: #434B5C;\n      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n      fill: #FFFFFF;\n    }\n  </style>\n\n<pre><code>  &lt;script&gt;\n    const buttonEl =\n      document.querySelector(&#39;#df-ca53f1d3-b076-478e-a68c-226957b2fa6b button.colab-df-convert&#39;);\n    buttonEl.style.display =\n      google.colab.kernel.accessAllowed ? &#39;block&#39; : &#39;none&#39;;\n\n    async function convertToInteractive(key) &#123;\n      const element = document.querySelector(&#39;#df-ca53f1d3-b076-478e-a68c-226957b2fa6b&#39;);\n      const dataTable =\n        await google.colab.kernel.invokeFunction(&#39;convertToInteractive&#39;,\n                                                 [key], &#123;&#125;);\n      if (!dataTable) return;\n\n      const docLinkHtml = &#39;Like what you see? Visit the &#39; +\n        &#39;&lt;a target=&quot;_blank&quot; href=https://colab.research.google.com/notebooks/data_table.ipynb&gt;data table notebook&lt;/a&gt;&#39;\n        + &#39; to learn more about interactive tables.&#39;;\n      element.innerHTML = &#39;&#39;;\n      dataTable[&#39;output_type&#39;] = &#39;display_data&#39;;\n      await google.colab.output.renderOutput(dataTable, element);\n      const docLink = document.createElement(&#39;div&#39;);\n      docLink.innerHTML = docLinkHtml;\n      element.appendChild(docLink);\n    &#125;\n  &lt;/script&gt;\n&lt;/div&gt;\n</code></pre>\n  </div>\n\n\n\n\n<ul>\n<li>두개의 연속형 데이터</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sns.scatterplot(x = <span class=\"string\">&#x27;total_bill&#x27;</span>, y = <span class=\"string\">&#x27;tip&#x27;</span>, hue = <span class=\"string\">&#x27;sex&#x27;</span>, data = tips)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7ff999b3ab10&gt;\n</code></pre>\n<p><img src=\"/images/0706/output_27_1.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 회귀선</span></span><br><span class=\"line\">sns.regplot(x = <span class=\"string\">&#x27;total_bill&#x27;</span>, y = <span class=\"string\">&#x27;tip&#x27;</span>, data = tips)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7ff999f45350&gt;\n</code></pre>\n<p><img src=\"/images/0706/output_28_1.png\" alt=\"png\"></p>\n<h2 id=\"머신러닝-리뷰\"><a href=\"#머신러닝-리뷰\" class=\"headerlink\" title=\"머신러닝 리뷰\"></a>머신러닝 리뷰</h2><ul>\n<li>가장 인기 있는 모델<ul>\n<li>LightGBM, XGboost</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"선형-회귀\"><a href=\"#선형-회귀\" class=\"headerlink\" title=\"선형 회귀\"></a>선형 회귀</h3><ul>\n<li>선형 회귀식을 찾는 것이 중요</li>\n<li>$y &#x3D; 3x + 4$ 에 근사한 데이터 50개 생성</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 시드값 고정</span></span><br><span class=\"line\">np.random.seed(<span class=\"number\">0</span>)</span><br><span class=\"line\">intercept = <span class=\"number\">4</span>  <span class=\"comment\"># 절편, 상수</span></span><br><span class=\"line\">slope = <span class=\"number\">3</span>  <span class=\"comment\"># 기울기</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 변동성 주기 위해 노이즈를 생성</span></span><br><span class=\"line\">noise = np.random.randn(<span class=\"number\">50</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">x = <span class=\"number\">5</span> * np.random.rand(<span class=\"number\">50</span>, <span class=\"number\">1</span>)  <span class=\"comment\"># 0 과 5 사이의 실숫값 50개 생성</span></span><br><span class=\"line\">y = slope * x + intercept + noise</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 데이터 프레임 생성</span></span><br><span class=\"line\">data = pd.DataFrame(&#123;<span class=\"string\">&#x27;X&#x27;</span> : x[:, <span class=\"number\">0</span>], <span class=\"string\">&#x27;Y&#x27;</span> : y[:, <span class=\"number\">0</span>]&#125;)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(data)</span><br></pre></td></tr></table></figure>\n\n<pre><code>           X          Y\n0   0.794848   8.148596\n1   0.551876   6.055784\n2   3.281648  14.823682\n3   0.690915   8.313637\n4   0.982912   8.816293\n5   1.843626   8.553600\n6   4.104966  17.264987\n7   0.485506   5.305162\n8   4.189725  16.465955\n9   0.480492   5.852075\n10  4.882297  18.790936\n11  2.343256  12.484042\n12  4.883805  19.412454\n13  3.024228  13.194358\n14  3.696318  15.532817\n15  0.195939   4.921491\n16  1.414035   9.736184\n17  0.600983   5.597790\n18  1.480701   8.755171\n19  0.593639   4.926820\n20  1.589916   6.216758\n21  2.071315  10.867564\n22  0.320737   5.826649\n23  3.462361  13.644917\n24  2.833007  14.768776\n25  1.326947   6.526477\n26  2.616240  11.894479\n27  0.469703   5.221924\n28  2.879732  14.171977\n29  4.646481  19.408802\n30  1.592845   8.933482\n31  3.337052  14.389318\n32  0.658989   5.089182\n33  3.581636  12.764112\n34  1.447030   7.993179\n35  0.915957   6.904219\n36  2.932565  14.027985\n37  0.100538   5.503993\n38  4.144700  16.046774\n39  0.023477   3.768129\n40  3.389083  13.118695\n41  1.350040   6.630102\n42  3.675970  13.321640\n43  4.810943  20.383604\n44  1.243766   7.221645\n45  2.880787  12.204286\n46  2.960210  11.627834\n47  2.861260  13.361269\n48  1.115408   5.732327\n49  4.763745  18.078495\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\">fig, ax = plt.subplots()</span><br><span class=\"line\">ax.scatter(data[<span class=\"string\">&#x27;X&#x27;</span>], data[<span class=\"string\">&#x27;Y&#x27;</span>])</span><br><span class=\"line\">plt.show</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&lt;function matplotlib.pyplot.show&gt;\n</code></pre>\n<p><img src=\"/images/0706/output_32_1.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns </span><br><span class=\"line\">sns.scatterplot(x = <span class=\"string\">&#x27;X&#x27;</span>, y = <span class=\"string\">&#x27;Y&#x27;</span>, data = data)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7ff99996ef10&gt;\n</code></pre>\n<p><img src=\"/images/0706/output_33_1.png\" alt=\"png\"></p>\n<h4 id=\"선형회귀-모형-훈련\"><a href=\"#선형회귀-모형-훈련\" class=\"headerlink\" title=\"선형회귀 모형 훈련\"></a>선형회귀 모형 훈련</h4><ul>\n<li>모형 생성 후, 회귀계수 3과 y절편 4에 근사한 값이 나와야 함</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LinearRegression</span><br><span class=\"line\">lr_model = LinearRegression()   <span class=\"comment\"># 선형 회귀 모델</span></span><br><span class=\"line\">lr_model.fit(x, y)    <span class=\"comment\"># 모델 훈련</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;y절편:&#x27;</span>, lr_model.intercept_)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;회귀계수:&#x27;</span>, lr_model.coef_)</span><br></pre></td></tr></table></figure>\n\n<pre><code>y절편: [4.05757639]\n회귀계수: [[3.03754061]]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 예측값</span></span><br><span class=\"line\">y_pred = lr_model.predict(x)</span><br><span class=\"line\">fig, ax = plt.subplots()</span><br><span class=\"line\">ax.scatter(x, y)</span><br><span class=\"line\">ax.plot(x, y_pred, color=<span class=\"string\">&#x27;green&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># slope, intercept </span></span><br><span class=\"line\">label = <span class=\"string\">&#x27;slope: &#123;&#125;\\nintercept: &#123;&#125;&#x27;</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">round</span>(lr_model.coef_[<span class=\"number\">0</span>][<span class=\"number\">0</span>], <span class=\"number\">2</span>), <span class=\"built_in\">round</span>(lr_model.intercept_[<span class=\"number\">0</span>], <span class=\"number\">2</span>))</span><br><span class=\"line\">ax.text(<span class=\"number\">3.5</span>, <span class=\"number\">4</span>, label, style =<span class=\"string\">&#x27;italic&#x27;</span>, </span><br><span class=\"line\">        fontsize = <span class=\"number\">10</span>, color =<span class=\"string\">&quot;green&quot;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0706/output_36_0.png\" alt=\"png\"></p>\n<h3 id=\"로지스틱-회귀\"><a href=\"#로지스틱-회귀\" class=\"headerlink\" title=\"로지스틱 회귀\"></a>로지스틱 회귀</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">sigmoid</span>(<span class=\"params\">arr, scale=<span class=\"number\">1</span></span>):</span><br><span class=\"line\">    arr = np.asarray(arr)</span><br><span class=\"line\">    result = <span class=\"number\">1</span>/(<span class=\"number\">1</span> + np.exp(-arr*scale))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\">x = np.linspace(-<span class=\"number\">6</span>, <span class=\"number\">6</span>)</span><br><span class=\"line\">y = sigmoid(x)</span><br><span class=\"line\"></span><br><span class=\"line\">fig, ax = plt.subplots()</span><br><span class=\"line\">ax.plot(x, y)</span><br><span class=\"line\">ax.grid(which=<span class=\"string\">&#x27;major&#x27;</span>, axis=<span class=\"string\">&#x27;y&#x27;</span>, linestyle=<span class=\"string\">&#x27;--&#x27;</span>)</span><br><span class=\"line\">ax.axvline(x=<span class=\"number\">0</span>, color=<span class=\"string\">&#x27;r&#x27;</span>, linestyle=<span class=\"string\">&#x27;--&#x27;</span>, linewidth=<span class=\"number\">1</span>)</span><br><span class=\"line\">ax.set_ylim(<span class=\"number\">0</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">ax.set_yticks([<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0.5</span>])</span><br><span class=\"line\">ax.text(<span class=\"number\">0</span>-<span class=\"number\">0.1</span>, <span class=\"number\">0.5</span>, <span class=\"string\">&#x27;0.5&#x27;</span>, ha=<span class=\"string\">&#x27;right&#x27;</span>)</span><br><span class=\"line\">ax.set_title(<span class=\"string\">&#x27;Sigmoid Graph&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0706/output_38_0.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 라이브러리 불러오기</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LogisticRegression</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> classification_report, confusion_matrix</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 데이터 가져오기</span></span><br><span class=\"line\">x = np.arange(<span class=\"number\">10</span>).reshape(-<span class=\"number\">1</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">y = np.array([<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 모델 생성 및 학습</span></span><br><span class=\"line\">model = LogisticRegression(solver=<span class=\"string\">&#x27;liblinear&#x27;</span>, C=<span class=\"number\">10.0</span>, random_state=<span class=\"number\">0</span>)</span><br><span class=\"line\">model.fit(x, y)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>LogisticRegression(C=10.0, random_state=0, solver=&#39;liblinear&#39;)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 모형 평가</span></span><br><span class=\"line\">p_pred = model.predict_proba(x)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;p_pred&#x27;</span>, p_pred, sep = <span class=\"string\">&#x27;\\n&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>p_pred\n[[0.97979027 0.02020973]\n [0.94958202 0.05041798]\n [0.87976149 0.12023851]\n [0.73975066 0.26024934]\n [0.52477284 0.47522716]\n [0.30020373 0.69979627]\n [0.1428487  0.8571513 ]\n [0.06080627 0.93919373]\n [0.02453462 0.97546538]\n [0.00967652 0.99032348]]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">y_pred = model.predict(x)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;y_pred&#x27;</span>, y_pred)</span><br></pre></td></tr></table></figure>\n\n<pre><code>y_pred [0 0 0 0 0 1 1 1 1 1]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fig, ax = plt.subplots()</span><br><span class=\"line\">ax.scatter(x, y)</span><br><span class=\"line\">ax.plot(x, p_pred[:, <span class=\"number\">1</span>], color = <span class=\"string\">&#x27;black&#x27;</span>,  marker=<span class=\"string\">&#x27;o&#x27;</span>, markersize=<span class=\"number\">6</span>)</span><br><span class=\"line\">ax.plot()</span><br><span class=\"line\"></span><br><span class=\"line\">ax.set_xticks(x)</span><br><span class=\"line\">ax.set_yticks(np.arange(<span class=\"number\">0</span>, <span class=\"number\">1.1</span>, <span class=\"number\">0.1</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">ax.grid(which=<span class=\"string\">&#x27;major&#x27;</span>, alpha=<span class=\"number\">0.5</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0706/output_42_0.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conf_m = confusion_matrix(y, y_pred)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(conf_m)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[[5 0]\n [0 5]]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cm = confusion_matrix(y, y_pred)</span><br><span class=\"line\"></span><br><span class=\"line\">fig, ax = plt.subplots(figsize=(<span class=\"number\">8</span>, <span class=\"number\">8</span>))</span><br><span class=\"line\">ax.imshow(cm, cmap = <span class=\"string\">&#x27;Pastel2&#x27;</span>)</span><br><span class=\"line\">ax.grid(<span class=\"literal\">False</span>)</span><br><span class=\"line\">ax.xaxis.<span class=\"built_in\">set</span>(ticks=(<span class=\"number\">0</span>, <span class=\"number\">1</span>), ticklabels=(<span class=\"string\">&#x27;Predicted 0&#x27;</span>, <span class=\"string\">&#x27;Predicted 1&#x27;</span>))</span><br><span class=\"line\">ax.yaxis.<span class=\"built_in\">set</span>(ticks=(<span class=\"number\">0</span>, <span class=\"number\">1</span>), ticklabels=(<span class=\"string\">&#x27;Actual 0&#x27;</span>, <span class=\"string\">&#x27;Actual 1&#x27;</span>))</span><br><span class=\"line\">ax.set_ylim(<span class=\"number\">1.5</span>, -<span class=\"number\">0.5</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">2</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">2</span>):</span><br><span class=\"line\">        ax.text(j, i, cm[i, j], ha=<span class=\"string\">&#x27;center&#x27;</span>, va=<span class=\"string\">&#x27;center&#x27;</span>, color=<span class=\"string\">&#x27;black&#x27;</span>, fontsize=<span class=\"number\">20</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0706/output_44_0.png\" alt=\"png\"></p>\n<h2 id=\"결정-트리\"><a href=\"#결정-트리\" class=\"headerlink\" title=\"결정 트리\"></a>결정 트리</h2><ul>\n<li>분류와 회귀 문제에 모두 사용 가능</li>\n</ul>\n<h3 id=\"주요-개념\"><a href=\"#주요-개념\" class=\"headerlink\" title=\"주요 개념\"></a>주요 개념</h3><ul>\n<li>작동 원리<ul>\n<li>데이터를 가장 잘 구분하는 조건을 정함.</li>\n<li>조건을 기준으로 데이터를 두 범주로 나눔</li>\n<li>나뉜 각 범주의 데이터를 구분하는 조건을 정함</li>\n<li>각 조건을 기준으로 데이터를 두 범주로 나눔</li>\n<li>언제까지 계속 분할할지 정한 후, 최종 결정 값을 구함.</li>\n</ul>\n</li>\n<li>불순도(Impurity)<ul>\n<li>한 범주 안에 서로 다른 데이터가 얼마나 섞여 있는지 나타냄</li>\n<li>흰색과 검은색이 50:50으로 섞여 있다. (불순도 최대)</li>\n<li>흰색과 검은색으로 완전 분리 되었다. (불순도 최소)</li>\n</ul>\n</li>\n<li>엔트로피(Entropy)<ul>\n<li>불확실한 정도를 의미함. 0 ~ 1로 정함.</li>\n<li>흰색과 검은색이 50:50으로 섞여 있다. 엔트로피 1</li>\n<li>흰색과 검은색으로 완전 분리 되었다. 엔트로피 0</li>\n</ul>\n</li>\n<li>정보이득(Information Gain)<ul>\n<li>1에서 엔트로피를 뺀 수치</li>\n<li>정보 이득을 최대화하는 방향(엔트로피를 최소화 하는 방향)으로 노드를 분할함</li>\n</ul>\n</li>\n<li>지니 불순도(Gini Impurity)<ul>\n<li>지니 불순도 값이 클수록 불순도도 높고, 작을수록 불순도도 낮음. 엔트로피와 마찬가지로 지니 불순도가 낮아지는 방향으로 노드 분할함.</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> DecisionTreeClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split </span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># tips 데이터셋 </span></span><br><span class=\"line\">titanic = sns.load_dataset(<span class=\"string\">&#x27;titanic&#x27;</span>)</span><br><span class=\"line\">titanic.info()</span><br></pre></td></tr></table></figure>\n\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 891 entries, 0 to 890\nData columns (total 15 columns):\n #   Column       Non-Null Count  Dtype   \n---  ------       --------------  -----   \n 0   survived     891 non-null    int64   \n 1   pclass       891 non-null    int64   \n 2   sex          891 non-null    object  \n 3   age          714 non-null    float64 \n 4   sibsp        891 non-null    int64   \n 5   parch        891 non-null    int64   \n 6   fare         891 non-null    float64 \n 7   embarked     889 non-null    object  \n 8   class        891 non-null    category\n 9   who          891 non-null    object  \n 10  adult_male   891 non-null    bool    \n 11  deck         203 non-null    category\n 12  embark_town  889 non-null    object  \n 13  alive        891 non-null    object  \n 14  alone        891 non-null    bool    \ndtypes: bool(2), category(2), float64(2), int64(4), object(5)\nmemory usage: 80.7+ KB\n</code></pre>\n<ul>\n<li>survived의 비율을 구한다.<ul>\n<li>0 : 사망자</li>\n<li>1 : 생존자</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">titanic[<span class=\"string\">&#x27;survived&#x27;</span>].value_counts()</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>0    549\n1    342\nName: survived, dtype: int64\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 데이터 추출</span></span><br><span class=\"line\">X = titanic[[<span class=\"string\">&#x27;pclass&#x27;</span>, <span class=\"string\">&#x27;parch&#x27;</span>, <span class=\"string\">&#x27;fare&#x27;</span>]]</span><br><span class=\"line\">y = titanic[<span class=\"string\">&#x27;survived&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 훈련데이터, 테스트 데이터 분리</span></span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(X, y, stratify = y, test_size = <span class=\"number\">0.3</span>, random_state=<span class=\"number\">42</span>)</span><br><span class=\"line\">X_train.shape, X_test.shape, y_train.shape, y_test.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>((623, 3), (268, 3), (623,), (268,))\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tree_model = DecisionTreeClassifier()</span><br><span class=\"line\">tree_model.fit(X_train, y_train)</span><br><span class=\"line\"></span><br><span class=\"line\">acc = tree_model.score(X_test, y_test)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;모형 정확도 : <span class=\"subst\">&#123;acc:<span class=\"number\">.3</span>f&#125;</span>&#x27;</span>) <span class=\"comment\"># 정확도 측정</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>모형 정확도 : 0.675\n</code></pre>\n<h3 id=\"랜덤-포레스트\"><a href=\"#랜덤-포레스트\" class=\"headerlink\" title=\"랜덤 포레스트\"></a>랜덤 포레스트</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> RandomForestClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split </span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># tips 데이터셋 </span></span><br><span class=\"line\">titanic = sns.load_dataset(<span class=\"string\">&#x27;titanic&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">X = titanic[[<span class=\"string\">&#x27;pclass&#x27;</span>, <span class=\"string\">&#x27;parch&#x27;</span>, <span class=\"string\">&#x27;fare&#x27;</span>]]</span><br><span class=\"line\">y = titanic[<span class=\"string\">&#x27;survived&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 훈련데이터, 테스트 데이터 분리</span></span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(X, y, stratify = y, test_size = <span class=\"number\">0.3</span>, random_state=<span class=\"number\">42</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 모델 훈련</span></span><br><span class=\"line\">rf_model = RandomForestClassifier(random_state=<span class=\"number\">42</span>) <span class=\"comment\"># 랜덤 포레스트 정의</span></span><br><span class=\"line\">rf_model.fit(X_train, y_train)</span><br><span class=\"line\"></span><br><span class=\"line\">acc = rf_model.score(X_test, y_test)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;모형 정확도 : <span class=\"subst\">&#123;acc:<span class=\"number\">.3</span>f&#125;</span>&#x27;</span>) <span class=\"comment\"># 정확도 측정</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>모형 정확도 : 0.675\n</code></pre>"},{"title":"한국인의 정신건강 분석","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"thumbnailImage":"R_logo.jpg","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","comments":0,"date":"2022-06-24T00:00:00.000Z","_content":"\n10장 따라치기\n<!-- excerpt -->\n\n\n- 연구 1 : 삶의 만족도와 외로움이 자살충동에 주는 영향을 알아본다.\n- 연구 2 : 삶의 만족도와 외로움의 상관관계를 알아본다.\n- 연구 3 : 가족신뢰도, 경제적 안정, 건강상태가 삶의 만족도와 외로움에 주는 영향을 알아본다.\n- 연구 4 : 성, 연령, 지역에 따라 삶의 만족도에 차이가 있는지를 알아본다.\n\n- 데이터 불러오기 전 사전준비\n\n```r\nlibrary(dplyr)\nlibrary(ggplot2)\n```\n- spss 패키지 설치\n\n```r\ninstall.packages(\"foreign\",repos = \"http://cran.us.r-project.org\")\nlibrary(foreign)\n```\n\n- 데이터 불러오기\n\n```r\nmental <- read.spss(\"한국행정연구원_사회통합실태조사_데이터_2019.sav\")\n```\n```r\nclass(mental)   # 데이터 유형 확인\n```\n\n```\n## [1] \"list\"\n```\n\n```r\nmental <- as.data.frame(mental)   #데이터프레임으로 변환하기\nclass(mental)   # 데이터 유형 확인\n```\n\n```\n## [1] \"data.frame\"\n```\n\n- 분석 변수 추출 후 이름 변경하기\n\n```r\nmental <- mental %>% \n  select(q32_2, q1_4, q32_1,q34_1, q52,d17,d1,d2,ara) %>% \n  rename(#자살하고 싶은 생각이 드는 정도, 4점 척도\n         suicide=q32_2,\n         #요즘 느끼는 삶에 대한 만족도, 등현등간척도, 11점\n         satisfaction=q1_4,\n         #외롭다고 느끼는 정도, 4점 척도\n         loneliness=q32_1,\n         #본인의 가족에 대한 신뢰도, 4점 척도\n         family_belief=q34_1,\n         #본인 경제상황의 안정도, 등현등간척도, 0~10점\n         wealth=q52,\n         #건강상태, 5점\n         health=d17,\n         #성별\n         sex=d1,\n         #연령대, 5등 등급\n         age=d2,\n         #지역\n         area=ara)\n```\n- 4점, 5점, 11점 척도별 응답빈도 확인\n\n```r\ntable(mental$suicide)\n```\n\n```\n## \n## 전혀 그렇지 않다 별로 그렇지 않다      약간 그렇다      매우 그렇다 \n##             5592             1862              479               67\n```\n\n```r\ntable(mental$health)\n```\n\n```\n## \n## 매우 나쁘다 나쁜 편이다    보통이다 좋은 편이다   매우 좋다 \n##          87         509        2413        3730        1261\n```\n\n```r\ntable(mental$satisfaction)\n```\n\n```\n## \n## 0점 전혀 만족하지 않는다                      1점                      2점 \n##                       49                       79                      170 \n##                      3점                      4점                 5점 보통 \n##                      302                      440                     2053 \n##                      6점                      7점                      8점 \n##                     1611                     1761                     1040 \n##                      9점       10점 매우 만족한다              모름/무응답 \n##                      321                      174                        0\n```\n\n```r\n# 모름/무응답 항목때문에 11점 척도인데 범주수는 12개로 나옴\n# 결측치가 없으므로 패스\n```\n\n- 범주 이름을 문자에서 숫자로 변환하기\n\n```r\nmental$suicide <- as.integer(mental$suicide)\nmental$satisfaction <- as.integer(mental$satisfaction)\nmental$loneliness <- as.integer(mental$loneliness)\nmental$family_belief <- as.integer(mental$family_belief)\nmental$wealth <- as.integer(mental$wealth)\nmental$health <- as.integer(mental$health)\ntable(mental$suicide)\n```\n\n```\n## \n##    1    2    3    4 \n## 5592 1862  479   67\n```\n\n```r\ntable(mental$health)\n```\n\n```\n## \n##    1    2    3    4    5 \n##   87  509 2413 3730 1261\n```\n\n```r\ntable(mental$satisfaction)\n```\n\n```\n## \n##    1    2    3    4    5    6    7    8    9   10   11 \n##   49   79  170  302  440 2053 1611 1761 1040  321  174\n```\n\n- satisfaction 변수는 범주가 0 ~ 10 점 척도인데, 1 ~ 11점으로 출력됨\n- 등현등간척도 변수(satisfaction, wealth)에서 -1점 보정작업\n\n```r\nmental$satisfaction <- mental$satisfaction-1\nmental$wealth <- mental$wealth-1\ntable(mental$satisfaction)\n```\n\n```\n## \n##    0    1    2    3    4    5    6    7    8    9   10 \n##   49   79  170  302  440 2053 1611 1761 1040  321  174\n```\n\n- sex, age, area의 유형을 범주형에서 문자형으로 변경\n\n```r\nmental$age <- as.character(mental$age)\nmental$sex <- as.character(mental$sex)\nmental$area <- as.character(mental$area)\ntable(mental$sex)\n```\n\n```\n## \n## 남성 여성 \n## 4011 3989\n```\n\n```r\ntable(mental$age)\n```\n\n```\n## \n## 19~29세    30대    40대    50대 60~69세 \n##    1542    1516    1769    1821    1352\n```\n\n```r\ntable(mental$area)\n```\n\n```\n## \n## 강원 경기 경남 경북 광주 대구 대전 부산 서울 세종 울산 인천 전남 전북 제주 충남 \n##  388 1103  527  466  353  464  356  539  965  162  324  522  395  381  267  425 \n## 충북 \n##  363\n```\n\n- age 항목의 19~29세, 60~69세를 20대, 60대로 변경\n\n```r\nmental$age <- ifelse(mental$age==\"19~29세\",\"20대\",\n                     ifelse(mental$age==\"60~69세\",\"60대\",mental$age))\ntable(mental$age)\n```\n\n```\n## \n## 20대 30대 40대 50대 60대 \n## 1542 1516 1769 1821 1352\n```\n\n- 결측치, 이상치 확인하기\n\n```r\nsummary(mental)\n```\n\n```\n##     suicide       satisfaction      loneliness    family_belief  \n##  Min.   :1.000   Min.   : 0.000   Min.   :1.000   Min.   :1.000  \n##  1st Qu.:1.000   1st Qu.: 5.000   1st Qu.:1.000   1st Qu.:3.000  \n##  Median :1.000   Median : 6.000   Median :2.000   Median :4.000  \n##  Mean   :1.378   Mean   : 6.037   Mean   :1.795   Mean   :3.576  \n##  3rd Qu.:2.000   3rd Qu.: 7.000   3rd Qu.:2.000   3rd Qu.:4.000  \n##  Max.   :4.000   Max.   :10.000   Max.   :4.000   Max.   :4.000  \n##      wealth           health          sex                age           \n##  Min.   : 0.000   Min.   :1.000   Length:8000        Length:8000       \n##  1st Qu.: 4.000   1st Qu.:3.000   Class :character   Class :character  \n##  Median : 5.000   Median :4.000   Mode  :character   Mode  :character  \n##  Mean   : 4.985   Mean   :3.696                                        \n##  3rd Qu.: 6.000   3rd Qu.:4.000                                        \n##  Max.   :10.000   Max.   :5.000                                        \n##      area          \n##  Length:8000       \n##  Class :character  \n##  Mode  :character  \n##                    \n##                    \n## \n```\n\n## 데이터 분석\n- 빈도분석\n  + 성별 빈도분석\n\n```r\nmental %>% \n  group_by(sex) %>%                 # sex 변수로 분류\n  summarise(n=n()) %>%              # sex 변수의 데이터를 세어서 빈도를 n에 입력한다\n  mutate(total=sum(n),              # total에 데이터 빈도 합을 넣고\n         pct=round(n/total*100,1))  # 데이터 빈도를 소숫점 1번째 자리까지 백분율로 구한다\n```\n\n```\n## # A tibble: 2 × 4\n##   sex       n total   pct\n##   <chr> <int> <int> <dbl>\n## 1 남성   4011  8000  50.1\n## 2 여성   3989  8000  49.9\n```\n  \n  + 연령대별 빈도분석\n\n```r\n# 성별 빈도분석이랑 동일하다.\nmental %>% \n  group_by(age) %>% \n  summarise(n=n()) %>% \n  mutate(total=sum(n),\n         pct=round(n/total*100,1))\n```\n\n```\n## # A tibble: 5 × 4\n##   age       n total   pct\n##   <chr> <int> <int> <dbl>\n## 1 20대   1542  8000  19.3\n## 2 30대   1516  8000  19  \n## 3 40대   1769  8000  22.1\n## 4 50대   1821  8000  22.8\n## 5 60대   1352  8000  16.9\n```\n  \n- 성별, 연령대 교차분석\n\n```r\n# 성별 연령대 별로 고르게 분포되어 있는가?\ntable(mental$sex, mental$age)\n```\n\n```\n##       \n##        20대 30대 40대 50대 60대\n##   남성  822  745  900  891  653\n##   여성  720  771  869  930  699\n```\n\n```r\nround(prop.table(table(mental$sex, mental$age),1)*100,1)\n```\n\n```\n##       \n##        20대 30대 40대 50대 60대\n##   남성 20.5 18.6 22.4 22.2 16.3\n##   여성 18.0 19.3 21.8 23.3 17.5\n```\n\n```r\nchisq.test(mental$sex, mental$age)\n```\n\n```\n## \n## \tPearson's Chi-squared test\n## \n## data:  mental$sex and mental$age\n## X-squared = 10.076, df = 4, p-value = 0.03916\n```\n\n```r\n# p-value 값이 0.05 미만이므로 남녀 연령대 별로 분포비율은 다소 차이가 있다고 할 수 있다.\n```\n\n- 평균분석\n  + suicide, satisfaction, loneliness, family_belief, wealth, health 변수의 평균을 분석한다.\n\n```r\nmental %>% \n  summarise(자살충동=mean(suicide),\n            삶의_만족도 = mean(satisfaction),\n            외로움=mean(loneliness),\n            가족신뢰도=mean(family_belief),\n            경제안정도=mean(wealth),\n            건강상태=mean(health))\n```\n\n```\n##   자살충동 삶의_만족도 외로움 가족신뢰도 경제안정도 건강상태\n## 1 1.377625      6.0365  1.795   3.576375   4.985125 3.696125\n```\n  \n### 연구문제 1\n- 삶의 만족도와 외로움이 자살충동에 미치는 영향\n\n```r\n# 삶의 만족도와 외로움을 독립변수, \n#             자살충동을 종속변수\nRA <- lm(data=mental, suicide~satisfaction+loneliness)\nsummary(RA)\n```\n\n```\n## \n## Call:\n## lm(formula = suicide ~ satisfaction + loneliness, data = mental)\n## \n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -1.50517 -0.40228 -0.03487  0.17773  3.07029 \n## \n## Coefficients:\n##               Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)   1.035551   0.029823   34.72   <2e-16 ***\n## satisfaction -0.052583   0.003614  -14.55   <2e-16 ***\n## loneliness    0.367405   0.007987   46.00   <2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 0.5451 on 7997 degrees of freedom\n## Multiple R-squared:  0.2668,\tAdjusted R-squared:  0.2666 \n## F-statistic:  1455 on 2 and 7997 DF,  p-value: < 2.2e-16\n```\n\n- 자살충동 = 1.035551 - 0.052583 x 만족도 + 0.367405 x 외로움  \n<br>  \n- 이 회귀식의 설명력은 0.2666 으로 낮은 편이다.\n### 연구문제2\n- 삶의 만족도와 외로움의 상관관계\n\n```r\ncor.test(mental$satisfaction, mental$loneliness)\n```\n\n```\n## \n## \tPearson's product-moment correlation\n## \n## data:  mental$satisfaction and mental$loneliness\n## t = -25.374, df = 7998, p-value < 2.2e-16\n## alternative hypothesis: true correlation is not equal to 0\n## 95 percent confidence interval:\n##  -0.2931116 -0.2525481\n## sample estimates:\n##        cor \n## -0.2729512\n```\n\n```r\n# p-value 값이 0.05 미만이므로 유의미한 통계이다.\n# 삶의 만족도와 외로움은 약한 수준에서 부적인 상관관계에 있다.\n# 즉, 삶의 만족도가 높아지면 외로움이 약간 줄어드는 관계이다.\n```\n\n### 연구문제3\n- 가족신뢰도, 경제안정도, 건강상태가 삶의 만족도와 외로움에 미치는 영향\n<br>  \n- 3개 독립변수가 삶의 만족도에 미치는 영향\n\n```r\nRA <- lm(data = mental, satisfaction~family_belief+wealth+health)\nsummary(RA)\n```\n\n```\n## \n## Call:\n## lm(formula = satisfaction ~ family_belief + wealth + health, \n##     data = mental)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -6.8274 -0.9431 -0.0425  1.0569  6.1986 \n## \n## Coefficients:\n##               Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)    2.07613    0.13765   15.08   <2e-16 ***\n## family_belief  0.36851    0.03196   11.53   <2e-16 ***\n## wealth         0.26016    0.01089   23.88   <2e-16 ***\n## health         0.36403    0.02206   16.50   <2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 1.627 on 7996 degrees of freedom\n## Multiple R-squared:  0.1386,\tAdjusted R-squared:  0.1383 \n## F-statistic: 428.8 on 3 and 7996 DF,  p-value: < 2.2e-16\n```\n\n```r\n# p-value 값이 0.05 미만이므로 유의미한 통계이다.\n```\n\n- 삶의 만족도 = 2.07613 + 0.36851 x 가족신뢰도 + 0.26016 x 경제안정도 + 0.36403 x 건강상태\n<br>  \n- 영향력은 차이가 있지만 가족신뢰도, 경제안정도, 건강상태가 좋아지면 모두 삶의 만족도에 긍정적인 영향을 끼친다.\n- 이 회귀식의 설명력은 0.1383 으로 매우 낮은 편이다.\n<br> \n- 3개 독립변수가 외로움에 미치는 영향\n\n```r\nRA <- lm(data=mental, loneliness~family_belief+wealth+health)\nsummary(RA)\n```\n\n```\n## \n## Call:\n## lm(formula = loneliness ~ family_belief + wealth + health, data = mental)\n## \n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -2.24066 -0.64247  0.01863  0.43022  2.83959 \n## \n## Coefficients:\n##                Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)    3.652247   0.063109   57.87   <2e-16 ***\n## family_belief -0.220274   0.014654  -15.03   <2e-16 ***\n## wealth        -0.072686   0.004995  -14.55   <2e-16 ***\n## health        -0.191313   0.010116  -18.91   <2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 0.746 on 7996 degrees of freedom\n## Multiple R-squared:  0.1157,\tAdjusted R-squared:  0.1154 \n## F-statistic: 348.9 on 3 and 7996 DF,  p-value: < 2.2e-16\n```\n\n```r\n# p-value 값이 0.05 미만이므로 유의미한 통계이다.\n```\n\n- 외로움 = 3.652247 - 0.220274 x 가족신뢰도 - 0.072686 x 경제안정도 - 0.191313 x 건강상태\n<br>  \n- 영향력은 다르지만 가족신뢰도, 경제안정도, 건강상태가 나빠질 수록 외로움도 커진다.\n- 이 회귀식의 설명력은 0.1154로 매우 낮은편이다.\n<br>  \n### 연구문제4\n- 성, 연령, 지역별 삶의 만족도 차이\n<br>  \n- 성별로 삶의 만족도에서 차이가 있는지 독립표본 t 검정으로 알아본다.\n\n```r\nt.test(data=mental, satisfaction~sex)\n```\n\n```\n## \n## \tWelch Two Sample t-test\n## \n## data:  satisfaction by sex\n## t = -3.7719, df = 7997.6, p-value = 0.0001632\n## alternative hypothesis: true difference in means between group 남성 and group 여성 is not equal to 0\n## 95 percent confidence interval:\n##  -0.22446298 -0.07094075\n## sample estimates:\n## mean in group 남성 mean in group 여성 \n##           5.962852           6.110554\n```\n\n```r\n# p-value 값이 0.05 미만이므로 유의미한 통계이다.\n```\n\n- 남성 평균은 5.962852, 여성 평균은 6.110554 이므로 여성의 만족도가 남성보다 높다고 할 수 있다.\n<br>  \n- 연령대별 삶의 만족도 차이\n\n```r\nmental %>% \n  group_by(age) %>% \n  summarise(삶의_만족도_평균=mean(satisfaction)) %>% \n  arrange(desc(삶의_만족도_평균))\n```\n\n```\n## # A tibble: 5 × 2\n##   age   삶의_만족도_평균\n##   <chr>            <dbl>\n## 1 30대              6.13\n## 2 50대              6.08\n## 3 40대              6.05\n## 4 20대              6.04\n## 5 60대              5.84\n```\n\n- 30대가 평균 6.13점으로 가장 높고 60대가 되면 삶의 만족도가 낮아진다.\n<br>  \n\n- 지역별 삶의 만족도 분석\n\n```r\narea_satisfaction <- mental %>% \n  group_by(area) %>% \n  summarise(m=mean(satisfaction)) %>% \n  arrange(desc(m))\n```\n- 그래프로 나타내기\n\n```r\nggplot(data=area_satisfaction, aes(x = reorder(area, m),y=m))+\n  geom_col()+\n  ggtitle(\"지역별 만족도\") + \n  labs(\n    x = \"지역\",\n    y = \"만족도\") +\n  coord_flip()\n```\n\n![](/images/0624/unnamed-chunk-22-1.png)<!-- -->\n\n\n\n","source":"_posts/mental.md","raw":"---\ntitle: \"한국인의 정신건강 분석\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: R studio\nclearReading: true\nthumbnailImage: R_logo.jpg\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ncomments: false\ndate: '2022-06-24'\n---\n\n10장 따라치기\n<!-- excerpt -->\n\n\n- 연구 1 : 삶의 만족도와 외로움이 자살충동에 주는 영향을 알아본다.\n- 연구 2 : 삶의 만족도와 외로움의 상관관계를 알아본다.\n- 연구 3 : 가족신뢰도, 경제적 안정, 건강상태가 삶의 만족도와 외로움에 주는 영향을 알아본다.\n- 연구 4 : 성, 연령, 지역에 따라 삶의 만족도에 차이가 있는지를 알아본다.\n\n- 데이터 불러오기 전 사전준비\n\n```r\nlibrary(dplyr)\nlibrary(ggplot2)\n```\n- spss 패키지 설치\n\n```r\ninstall.packages(\"foreign\",repos = \"http://cran.us.r-project.org\")\nlibrary(foreign)\n```\n\n- 데이터 불러오기\n\n```r\nmental <- read.spss(\"한국행정연구원_사회통합실태조사_데이터_2019.sav\")\n```\n```r\nclass(mental)   # 데이터 유형 확인\n```\n\n```\n## [1] \"list\"\n```\n\n```r\nmental <- as.data.frame(mental)   #데이터프레임으로 변환하기\nclass(mental)   # 데이터 유형 확인\n```\n\n```\n## [1] \"data.frame\"\n```\n\n- 분석 변수 추출 후 이름 변경하기\n\n```r\nmental <- mental %>% \n  select(q32_2, q1_4, q32_1,q34_1, q52,d17,d1,d2,ara) %>% \n  rename(#자살하고 싶은 생각이 드는 정도, 4점 척도\n         suicide=q32_2,\n         #요즘 느끼는 삶에 대한 만족도, 등현등간척도, 11점\n         satisfaction=q1_4,\n         #외롭다고 느끼는 정도, 4점 척도\n         loneliness=q32_1,\n         #본인의 가족에 대한 신뢰도, 4점 척도\n         family_belief=q34_1,\n         #본인 경제상황의 안정도, 등현등간척도, 0~10점\n         wealth=q52,\n         #건강상태, 5점\n         health=d17,\n         #성별\n         sex=d1,\n         #연령대, 5등 등급\n         age=d2,\n         #지역\n         area=ara)\n```\n- 4점, 5점, 11점 척도별 응답빈도 확인\n\n```r\ntable(mental$suicide)\n```\n\n```\n## \n## 전혀 그렇지 않다 별로 그렇지 않다      약간 그렇다      매우 그렇다 \n##             5592             1862              479               67\n```\n\n```r\ntable(mental$health)\n```\n\n```\n## \n## 매우 나쁘다 나쁜 편이다    보통이다 좋은 편이다   매우 좋다 \n##          87         509        2413        3730        1261\n```\n\n```r\ntable(mental$satisfaction)\n```\n\n```\n## \n## 0점 전혀 만족하지 않는다                      1점                      2점 \n##                       49                       79                      170 \n##                      3점                      4점                 5점 보통 \n##                      302                      440                     2053 \n##                      6점                      7점                      8점 \n##                     1611                     1761                     1040 \n##                      9점       10점 매우 만족한다              모름/무응답 \n##                      321                      174                        0\n```\n\n```r\n# 모름/무응답 항목때문에 11점 척도인데 범주수는 12개로 나옴\n# 결측치가 없으므로 패스\n```\n\n- 범주 이름을 문자에서 숫자로 변환하기\n\n```r\nmental$suicide <- as.integer(mental$suicide)\nmental$satisfaction <- as.integer(mental$satisfaction)\nmental$loneliness <- as.integer(mental$loneliness)\nmental$family_belief <- as.integer(mental$family_belief)\nmental$wealth <- as.integer(mental$wealth)\nmental$health <- as.integer(mental$health)\ntable(mental$suicide)\n```\n\n```\n## \n##    1    2    3    4 \n## 5592 1862  479   67\n```\n\n```r\ntable(mental$health)\n```\n\n```\n## \n##    1    2    3    4    5 \n##   87  509 2413 3730 1261\n```\n\n```r\ntable(mental$satisfaction)\n```\n\n```\n## \n##    1    2    3    4    5    6    7    8    9   10   11 \n##   49   79  170  302  440 2053 1611 1761 1040  321  174\n```\n\n- satisfaction 변수는 범주가 0 ~ 10 점 척도인데, 1 ~ 11점으로 출력됨\n- 등현등간척도 변수(satisfaction, wealth)에서 -1점 보정작업\n\n```r\nmental$satisfaction <- mental$satisfaction-1\nmental$wealth <- mental$wealth-1\ntable(mental$satisfaction)\n```\n\n```\n## \n##    0    1    2    3    4    5    6    7    8    9   10 \n##   49   79  170  302  440 2053 1611 1761 1040  321  174\n```\n\n- sex, age, area의 유형을 범주형에서 문자형으로 변경\n\n```r\nmental$age <- as.character(mental$age)\nmental$sex <- as.character(mental$sex)\nmental$area <- as.character(mental$area)\ntable(mental$sex)\n```\n\n```\n## \n## 남성 여성 \n## 4011 3989\n```\n\n```r\ntable(mental$age)\n```\n\n```\n## \n## 19~29세    30대    40대    50대 60~69세 \n##    1542    1516    1769    1821    1352\n```\n\n```r\ntable(mental$area)\n```\n\n```\n## \n## 강원 경기 경남 경북 광주 대구 대전 부산 서울 세종 울산 인천 전남 전북 제주 충남 \n##  388 1103  527  466  353  464  356  539  965  162  324  522  395  381  267  425 \n## 충북 \n##  363\n```\n\n- age 항목의 19~29세, 60~69세를 20대, 60대로 변경\n\n```r\nmental$age <- ifelse(mental$age==\"19~29세\",\"20대\",\n                     ifelse(mental$age==\"60~69세\",\"60대\",mental$age))\ntable(mental$age)\n```\n\n```\n## \n## 20대 30대 40대 50대 60대 \n## 1542 1516 1769 1821 1352\n```\n\n- 결측치, 이상치 확인하기\n\n```r\nsummary(mental)\n```\n\n```\n##     suicide       satisfaction      loneliness    family_belief  \n##  Min.   :1.000   Min.   : 0.000   Min.   :1.000   Min.   :1.000  \n##  1st Qu.:1.000   1st Qu.: 5.000   1st Qu.:1.000   1st Qu.:3.000  \n##  Median :1.000   Median : 6.000   Median :2.000   Median :4.000  \n##  Mean   :1.378   Mean   : 6.037   Mean   :1.795   Mean   :3.576  \n##  3rd Qu.:2.000   3rd Qu.: 7.000   3rd Qu.:2.000   3rd Qu.:4.000  \n##  Max.   :4.000   Max.   :10.000   Max.   :4.000   Max.   :4.000  \n##      wealth           health          sex                age           \n##  Min.   : 0.000   Min.   :1.000   Length:8000        Length:8000       \n##  1st Qu.: 4.000   1st Qu.:3.000   Class :character   Class :character  \n##  Median : 5.000   Median :4.000   Mode  :character   Mode  :character  \n##  Mean   : 4.985   Mean   :3.696                                        \n##  3rd Qu.: 6.000   3rd Qu.:4.000                                        \n##  Max.   :10.000   Max.   :5.000                                        \n##      area          \n##  Length:8000       \n##  Class :character  \n##  Mode  :character  \n##                    \n##                    \n## \n```\n\n## 데이터 분석\n- 빈도분석\n  + 성별 빈도분석\n\n```r\nmental %>% \n  group_by(sex) %>%                 # sex 변수로 분류\n  summarise(n=n()) %>%              # sex 변수의 데이터를 세어서 빈도를 n에 입력한다\n  mutate(total=sum(n),              # total에 데이터 빈도 합을 넣고\n         pct=round(n/total*100,1))  # 데이터 빈도를 소숫점 1번째 자리까지 백분율로 구한다\n```\n\n```\n## # A tibble: 2 × 4\n##   sex       n total   pct\n##   <chr> <int> <int> <dbl>\n## 1 남성   4011  8000  50.1\n## 2 여성   3989  8000  49.9\n```\n  \n  + 연령대별 빈도분석\n\n```r\n# 성별 빈도분석이랑 동일하다.\nmental %>% \n  group_by(age) %>% \n  summarise(n=n()) %>% \n  mutate(total=sum(n),\n         pct=round(n/total*100,1))\n```\n\n```\n## # A tibble: 5 × 4\n##   age       n total   pct\n##   <chr> <int> <int> <dbl>\n## 1 20대   1542  8000  19.3\n## 2 30대   1516  8000  19  \n## 3 40대   1769  8000  22.1\n## 4 50대   1821  8000  22.8\n## 5 60대   1352  8000  16.9\n```\n  \n- 성별, 연령대 교차분석\n\n```r\n# 성별 연령대 별로 고르게 분포되어 있는가?\ntable(mental$sex, mental$age)\n```\n\n```\n##       \n##        20대 30대 40대 50대 60대\n##   남성  822  745  900  891  653\n##   여성  720  771  869  930  699\n```\n\n```r\nround(prop.table(table(mental$sex, mental$age),1)*100,1)\n```\n\n```\n##       \n##        20대 30대 40대 50대 60대\n##   남성 20.5 18.6 22.4 22.2 16.3\n##   여성 18.0 19.3 21.8 23.3 17.5\n```\n\n```r\nchisq.test(mental$sex, mental$age)\n```\n\n```\n## \n## \tPearson's Chi-squared test\n## \n## data:  mental$sex and mental$age\n## X-squared = 10.076, df = 4, p-value = 0.03916\n```\n\n```r\n# p-value 값이 0.05 미만이므로 남녀 연령대 별로 분포비율은 다소 차이가 있다고 할 수 있다.\n```\n\n- 평균분석\n  + suicide, satisfaction, loneliness, family_belief, wealth, health 변수의 평균을 분석한다.\n\n```r\nmental %>% \n  summarise(자살충동=mean(suicide),\n            삶의_만족도 = mean(satisfaction),\n            외로움=mean(loneliness),\n            가족신뢰도=mean(family_belief),\n            경제안정도=mean(wealth),\n            건강상태=mean(health))\n```\n\n```\n##   자살충동 삶의_만족도 외로움 가족신뢰도 경제안정도 건강상태\n## 1 1.377625      6.0365  1.795   3.576375   4.985125 3.696125\n```\n  \n### 연구문제 1\n- 삶의 만족도와 외로움이 자살충동에 미치는 영향\n\n```r\n# 삶의 만족도와 외로움을 독립변수, \n#             자살충동을 종속변수\nRA <- lm(data=mental, suicide~satisfaction+loneliness)\nsummary(RA)\n```\n\n```\n## \n## Call:\n## lm(formula = suicide ~ satisfaction + loneliness, data = mental)\n## \n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -1.50517 -0.40228 -0.03487  0.17773  3.07029 \n## \n## Coefficients:\n##               Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)   1.035551   0.029823   34.72   <2e-16 ***\n## satisfaction -0.052583   0.003614  -14.55   <2e-16 ***\n## loneliness    0.367405   0.007987   46.00   <2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 0.5451 on 7997 degrees of freedom\n## Multiple R-squared:  0.2668,\tAdjusted R-squared:  0.2666 \n## F-statistic:  1455 on 2 and 7997 DF,  p-value: < 2.2e-16\n```\n\n- 자살충동 = 1.035551 - 0.052583 x 만족도 + 0.367405 x 외로움  \n<br>  \n- 이 회귀식의 설명력은 0.2666 으로 낮은 편이다.\n### 연구문제2\n- 삶의 만족도와 외로움의 상관관계\n\n```r\ncor.test(mental$satisfaction, mental$loneliness)\n```\n\n```\n## \n## \tPearson's product-moment correlation\n## \n## data:  mental$satisfaction and mental$loneliness\n## t = -25.374, df = 7998, p-value < 2.2e-16\n## alternative hypothesis: true correlation is not equal to 0\n## 95 percent confidence interval:\n##  -0.2931116 -0.2525481\n## sample estimates:\n##        cor \n## -0.2729512\n```\n\n```r\n# p-value 값이 0.05 미만이므로 유의미한 통계이다.\n# 삶의 만족도와 외로움은 약한 수준에서 부적인 상관관계에 있다.\n# 즉, 삶의 만족도가 높아지면 외로움이 약간 줄어드는 관계이다.\n```\n\n### 연구문제3\n- 가족신뢰도, 경제안정도, 건강상태가 삶의 만족도와 외로움에 미치는 영향\n<br>  \n- 3개 독립변수가 삶의 만족도에 미치는 영향\n\n```r\nRA <- lm(data = mental, satisfaction~family_belief+wealth+health)\nsummary(RA)\n```\n\n```\n## \n## Call:\n## lm(formula = satisfaction ~ family_belief + wealth + health, \n##     data = mental)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -6.8274 -0.9431 -0.0425  1.0569  6.1986 \n## \n## Coefficients:\n##               Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)    2.07613    0.13765   15.08   <2e-16 ***\n## family_belief  0.36851    0.03196   11.53   <2e-16 ***\n## wealth         0.26016    0.01089   23.88   <2e-16 ***\n## health         0.36403    0.02206   16.50   <2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 1.627 on 7996 degrees of freedom\n## Multiple R-squared:  0.1386,\tAdjusted R-squared:  0.1383 \n## F-statistic: 428.8 on 3 and 7996 DF,  p-value: < 2.2e-16\n```\n\n```r\n# p-value 값이 0.05 미만이므로 유의미한 통계이다.\n```\n\n- 삶의 만족도 = 2.07613 + 0.36851 x 가족신뢰도 + 0.26016 x 경제안정도 + 0.36403 x 건강상태\n<br>  \n- 영향력은 차이가 있지만 가족신뢰도, 경제안정도, 건강상태가 좋아지면 모두 삶의 만족도에 긍정적인 영향을 끼친다.\n- 이 회귀식의 설명력은 0.1383 으로 매우 낮은 편이다.\n<br> \n- 3개 독립변수가 외로움에 미치는 영향\n\n```r\nRA <- lm(data=mental, loneliness~family_belief+wealth+health)\nsummary(RA)\n```\n\n```\n## \n## Call:\n## lm(formula = loneliness ~ family_belief + wealth + health, data = mental)\n## \n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -2.24066 -0.64247  0.01863  0.43022  2.83959 \n## \n## Coefficients:\n##                Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)    3.652247   0.063109   57.87   <2e-16 ***\n## family_belief -0.220274   0.014654  -15.03   <2e-16 ***\n## wealth        -0.072686   0.004995  -14.55   <2e-16 ***\n## health        -0.191313   0.010116  -18.91   <2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 0.746 on 7996 degrees of freedom\n## Multiple R-squared:  0.1157,\tAdjusted R-squared:  0.1154 \n## F-statistic: 348.9 on 3 and 7996 DF,  p-value: < 2.2e-16\n```\n\n```r\n# p-value 값이 0.05 미만이므로 유의미한 통계이다.\n```\n\n- 외로움 = 3.652247 - 0.220274 x 가족신뢰도 - 0.072686 x 경제안정도 - 0.191313 x 건강상태\n<br>  \n- 영향력은 다르지만 가족신뢰도, 경제안정도, 건강상태가 나빠질 수록 외로움도 커진다.\n- 이 회귀식의 설명력은 0.1154로 매우 낮은편이다.\n<br>  \n### 연구문제4\n- 성, 연령, 지역별 삶의 만족도 차이\n<br>  \n- 성별로 삶의 만족도에서 차이가 있는지 독립표본 t 검정으로 알아본다.\n\n```r\nt.test(data=mental, satisfaction~sex)\n```\n\n```\n## \n## \tWelch Two Sample t-test\n## \n## data:  satisfaction by sex\n## t = -3.7719, df = 7997.6, p-value = 0.0001632\n## alternative hypothesis: true difference in means between group 남성 and group 여성 is not equal to 0\n## 95 percent confidence interval:\n##  -0.22446298 -0.07094075\n## sample estimates:\n## mean in group 남성 mean in group 여성 \n##           5.962852           6.110554\n```\n\n```r\n# p-value 값이 0.05 미만이므로 유의미한 통계이다.\n```\n\n- 남성 평균은 5.962852, 여성 평균은 6.110554 이므로 여성의 만족도가 남성보다 높다고 할 수 있다.\n<br>  \n- 연령대별 삶의 만족도 차이\n\n```r\nmental %>% \n  group_by(age) %>% \n  summarise(삶의_만족도_평균=mean(satisfaction)) %>% \n  arrange(desc(삶의_만족도_평균))\n```\n\n```\n## # A tibble: 5 × 2\n##   age   삶의_만족도_평균\n##   <chr>            <dbl>\n## 1 30대              6.13\n## 2 50대              6.08\n## 3 40대              6.05\n## 4 20대              6.04\n## 5 60대              5.84\n```\n\n- 30대가 평균 6.13점으로 가장 높고 60대가 되면 삶의 만족도가 낮아진다.\n<br>  \n\n- 지역별 삶의 만족도 분석\n\n```r\narea_satisfaction <- mental %>% \n  group_by(area) %>% \n  summarise(m=mean(satisfaction)) %>% \n  arrange(desc(m))\n```\n- 그래프로 나타내기\n\n```r\nggplot(data=area_satisfaction, aes(x = reorder(area, m),y=m))+\n  geom_col()+\n  ggtitle(\"지역별 만족도\") + \n  labs(\n    x = \"지역\",\n    y = \"만족도\") +\n  coord_flip()\n```\n\n![](/images/0624/unnamed-chunk-22-1.png)<!-- -->\n\n\n\n","slug":"mental","published":1,"updated":"2022-07-10T15:52:59.252Z","_id":"cl5fcok7y0015jku0coloh732","layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n\n<ul>\n<li><p>연구 1 : 삶의 만족도와 외로움이 자살충동에 주는 영향을 알아본다.</p>\n</li>\n<li><p>연구 2 : 삶의 만족도와 외로움의 상관관계를 알아본다.</p>\n</li>\n<li><p>연구 3 : 가족신뢰도, 경제적 안정, 건강상태가 삶의 만족도와 외로움에 주는 영향을 알아본다.</p>\n</li>\n<li><p>연구 4 : 성, 연령, 지역에 따라 삶의 만족도에 차이가 있는지를 알아본다.</p>\n</li>\n<li><p>데이터 불러오기 전 사전준비</p>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>dplyr<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>ggplot2<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>spss 패키지 설치</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;foreign&quot;</span><span class=\"punctuation\">,</span>repos <span class=\"operator\">=</span> <span class=\"string\">&quot;http://cran.us.r-project.org&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>foreign<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>데이터 불러오기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mental <span class=\"operator\">&lt;-</span> read.spss<span class=\"punctuation\">(</span><span class=\"string\">&quot;한국행정연구원_사회통합실태조사_데이터_2019.sav&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">class</span><span class=\"punctuation\">(</span>mental<span class=\"punctuation\">)</span>   <span class=\"comment\"># 데이터 유형 확인</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;list&quot;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mental <span class=\"operator\">&lt;-</span> as.data.frame<span class=\"punctuation\">(</span>mental<span class=\"punctuation\">)</span>   <span class=\"comment\">#데이터프레임으로 변환하기</span></span><br><span class=\"line\"><span class=\"built_in\">class</span><span class=\"punctuation\">(</span>mental<span class=\"punctuation\">)</span>   <span class=\"comment\"># 데이터 유형 확인</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;data.frame&quot;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>분석 변수 추출 후 이름 변경하기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mental <span class=\"operator\">&lt;-</span> mental <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  select<span class=\"punctuation\">(</span>q32_2<span class=\"punctuation\">,</span> q1_4<span class=\"punctuation\">,</span> q32_1<span class=\"punctuation\">,</span>q34_1<span class=\"punctuation\">,</span> q52<span class=\"punctuation\">,</span>d17<span class=\"punctuation\">,</span>d1<span class=\"punctuation\">,</span>d2<span class=\"punctuation\">,</span>ara<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  rename<span class=\"punctuation\">(</span><span class=\"comment\">#자살하고 싶은 생각이 드는 정도, 4점 척도</span></span><br><span class=\"line\">         suicide<span class=\"operator\">=</span>q32_2<span class=\"punctuation\">,</span></span><br><span class=\"line\">         <span class=\"comment\">#요즘 느끼는 삶에 대한 만족도, 등현등간척도, 11점</span></span><br><span class=\"line\">         satisfaction<span class=\"operator\">=</span>q1_4<span class=\"punctuation\">,</span></span><br><span class=\"line\">         <span class=\"comment\">#외롭다고 느끼는 정도, 4점 척도</span></span><br><span class=\"line\">         loneliness<span class=\"operator\">=</span>q32_1<span class=\"punctuation\">,</span></span><br><span class=\"line\">         <span class=\"comment\">#본인의 가족에 대한 신뢰도, 4점 척도</span></span><br><span class=\"line\">         family_belief<span class=\"operator\">=</span>q34_1<span class=\"punctuation\">,</span></span><br><span class=\"line\">         <span class=\"comment\">#본인 경제상황의 안정도, 등현등간척도, 0~10점</span></span><br><span class=\"line\">         wealth<span class=\"operator\">=</span>q52<span class=\"punctuation\">,</span></span><br><span class=\"line\">         <span class=\"comment\">#건강상태, 5점</span></span><br><span class=\"line\">         health<span class=\"operator\">=</span>d17<span class=\"punctuation\">,</span></span><br><span class=\"line\">         <span class=\"comment\">#성별</span></span><br><span class=\"line\">         sex<span class=\"operator\">=</span>d1<span class=\"punctuation\">,</span></span><br><span class=\"line\">         <span class=\"comment\">#연령대, 5등 등급</span></span><br><span class=\"line\">         age<span class=\"operator\">=</span>d2<span class=\"punctuation\">,</span></span><br><span class=\"line\">         <span class=\"comment\">#지역</span></span><br><span class=\"line\">         area<span class=\"operator\">=</span>ara<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>4점, 5점, 11점 척도별 응답빈도 확인</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>suicide<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## 전혀 그렇지 않다 별로 그렇지 않다      약간 그렇다      매우 그렇다 </span><br><span class=\"line\">##             5592             1862              479               67</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>health<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## 매우 나쁘다 나쁜 편이다    보통이다 좋은 편이다   매우 좋다 </span><br><span class=\"line\">##          87         509        2413        3730        1261</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>satisfaction<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## 0점 전혀 만족하지 않는다                      1점                      2점 </span><br><span class=\"line\">##                       49                       79                      170 </span><br><span class=\"line\">##                      3점                      4점                 5점 보통 </span><br><span class=\"line\">##                      302                      440                     2053 </span><br><span class=\"line\">##                      6점                      7점                      8점 </span><br><span class=\"line\">##                     1611                     1761                     1040 </span><br><span class=\"line\">##                      9점       10점 매우 만족한다              모름/무응답 </span><br><span class=\"line\">##                      321                      174                        0</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 모름/무응답 항목때문에 11점 척도인데 범주수는 12개로 나옴</span></span><br><span class=\"line\"><span class=\"comment\"># 결측치가 없으므로 패스</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>범주 이름을 문자에서 숫자로 변환하기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mental<span class=\"operator\">$</span>suicide <span class=\"operator\">&lt;-</span> <span class=\"built_in\">as.integer</span><span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>suicide<span class=\"punctuation\">)</span></span><br><span class=\"line\">mental<span class=\"operator\">$</span>satisfaction <span class=\"operator\">&lt;-</span> <span class=\"built_in\">as.integer</span><span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>satisfaction<span class=\"punctuation\">)</span></span><br><span class=\"line\">mental<span class=\"operator\">$</span>loneliness <span class=\"operator\">&lt;-</span> <span class=\"built_in\">as.integer</span><span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>loneliness<span class=\"punctuation\">)</span></span><br><span class=\"line\">mental<span class=\"operator\">$</span>family_belief <span class=\"operator\">&lt;-</span> <span class=\"built_in\">as.integer</span><span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>family_belief<span class=\"punctuation\">)</span></span><br><span class=\"line\">mental<span class=\"operator\">$</span>wealth <span class=\"operator\">&lt;-</span> <span class=\"built_in\">as.integer</span><span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>wealth<span class=\"punctuation\">)</span></span><br><span class=\"line\">mental<span class=\"operator\">$</span>health <span class=\"operator\">&lt;-</span> <span class=\"built_in\">as.integer</span><span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>health<span class=\"punctuation\">)</span></span><br><span class=\"line\">table<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>suicide<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">##    1    2    3    4 </span><br><span class=\"line\">## 5592 1862  479   67</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>health<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">##    1    2    3    4    5 </span><br><span class=\"line\">##   87  509 2413 3730 1261</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>satisfaction<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">##    1    2    3    4    5    6    7    8    9   10   11 </span><br><span class=\"line\">##   49   79  170  302  440 2053 1611 1761 1040  321  174</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>satisfaction 변수는 범주가 0 ~ 10 점 척도인데, 1 ~ 11점으로 출력됨</li>\n<li>등현등간척도 변수(satisfaction, wealth)에서 -1점 보정작업</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mental<span class=\"operator\">$</span>satisfaction <span class=\"operator\">&lt;-</span> mental<span class=\"operator\">$</span>satisfaction<span class=\"operator\">-</span><span class=\"number\">1</span></span><br><span class=\"line\">mental<span class=\"operator\">$</span>wealth <span class=\"operator\">&lt;-</span> mental<span class=\"operator\">$</span>wealth<span class=\"operator\">-</span><span class=\"number\">1</span></span><br><span class=\"line\">table<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>satisfaction<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">##    0    1    2    3    4    5    6    7    8    9   10 </span><br><span class=\"line\">##   49   79  170  302  440 2053 1611 1761 1040  321  174</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>sex, age, area의 유형을 범주형에서 문자형으로 변경</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mental<span class=\"operator\">$</span>age <span class=\"operator\">&lt;-</span> <span class=\"built_in\">as.character</span><span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>age<span class=\"punctuation\">)</span></span><br><span class=\"line\">mental<span class=\"operator\">$</span>sex <span class=\"operator\">&lt;-</span> <span class=\"built_in\">as.character</span><span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>sex<span class=\"punctuation\">)</span></span><br><span class=\"line\">mental<span class=\"operator\">$</span>area <span class=\"operator\">&lt;-</span> <span class=\"built_in\">as.character</span><span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>area<span class=\"punctuation\">)</span></span><br><span class=\"line\">table<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>sex<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## 남성 여성 </span><br><span class=\"line\">## 4011 3989</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>age<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## 19~29세    30대    40대    50대 60~69세 </span><br><span class=\"line\">##    1542    1516    1769    1821    1352</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>area<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## 강원 경기 경남 경북 광주 대구 대전 부산 서울 세종 울산 인천 전남 전북 제주 충남 </span><br><span class=\"line\">##  388 1103  527  466  353  464  356  539  965  162  324  522  395  381  267  425 </span><br><span class=\"line\">## 충북 </span><br><span class=\"line\">##  363</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>age 항목의 19<del>29세, 60</del>69세를 20대, 60대로 변경</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mental<span class=\"operator\">$</span>age <span class=\"operator\">&lt;-</span> ifelse<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>age<span class=\"operator\">==</span><span class=\"string\">&quot;19~29세&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;20대&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                     ifelse<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>age<span class=\"operator\">==</span><span class=\"string\">&quot;60~69세&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;60대&quot;</span><span class=\"punctuation\">,</span>mental<span class=\"operator\">$</span>age<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">table<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>age<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## 20대 30대 40대 50대 60대 </span><br><span class=\"line\">## 1542 1516 1769 1821 1352</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>결측치, 이상치 확인하기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">summary<span class=\"punctuation\">(</span>mental<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##     suicide       satisfaction      loneliness    family_belief  </span><br><span class=\"line\">##  Min.   :1.000   Min.   : 0.000   Min.   :1.000   Min.   :1.000  </span><br><span class=\"line\">##  1st Qu.:1.000   1st Qu.: 5.000   1st Qu.:1.000   1st Qu.:3.000  </span><br><span class=\"line\">##  Median :1.000   Median : 6.000   Median :2.000   Median :4.000  </span><br><span class=\"line\">##  Mean   :1.378   Mean   : 6.037   Mean   :1.795   Mean   :3.576  </span><br><span class=\"line\">##  3rd Qu.:2.000   3rd Qu.: 7.000   3rd Qu.:2.000   3rd Qu.:4.000  </span><br><span class=\"line\">##  Max.   :4.000   Max.   :10.000   Max.   :4.000   Max.   :4.000  </span><br><span class=\"line\">##      wealth           health          sex                age           </span><br><span class=\"line\">##  Min.   : 0.000   Min.   :1.000   Length:8000        Length:8000       </span><br><span class=\"line\">##  1st Qu.: 4.000   1st Qu.:3.000   Class :character   Class :character  </span><br><span class=\"line\">##  Median : 5.000   Median :4.000   Mode  :character   Mode  :character  </span><br><span class=\"line\">##  Mean   : 4.985   Mean   :3.696                                        </span><br><span class=\"line\">##  3rd Qu.: 6.000   3rd Qu.:4.000                                        </span><br><span class=\"line\">##  Max.   :10.000   Max.   :5.000                                        </span><br><span class=\"line\">##      area          </span><br><span class=\"line\">##  Length:8000       </span><br><span class=\"line\">##  Class :character  </span><br><span class=\"line\">##  Mode  :character  </span><br><span class=\"line\">##                    </span><br><span class=\"line\">##                    </span><br><span class=\"line\">## </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"데이터-분석\"><a href=\"#데이터-분석\" class=\"headerlink\" title=\"데이터 분석\"></a>데이터 분석</h2><ul>\n<li>빈도분석<ul>\n<li>성별 빈도분석</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mental <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  group_by<span class=\"punctuation\">(</span>sex<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span>                 <span class=\"comment\"># sex 변수로 분류</span></span><br><span class=\"line\">  summarise<span class=\"punctuation\">(</span>n<span class=\"operator\">=</span>n<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span>              <span class=\"comment\"># sex 변수의 데이터를 세어서 빈도를 n에 입력한다</span></span><br><span class=\"line\">  mutate<span class=\"punctuation\">(</span>total<span class=\"operator\">=</span><span class=\"built_in\">sum</span><span class=\"punctuation\">(</span>n<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span>              <span class=\"comment\"># total에 데이터 빈도 합을 넣고</span></span><br><span class=\"line\">         pct<span class=\"operator\">=</span><span class=\"built_in\">round</span><span class=\"punctuation\">(</span>n<span class=\"operator\">/</span>total<span class=\"operator\">*</span><span class=\"number\">100</span><span class=\"punctuation\">,</span><span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>  <span class=\"comment\"># 데이터 빈도를 소숫점 1번째 자리까지 백분율로 구한다</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## # A tibble: 2 × 4</span><br><span class=\"line\">##   sex       n total   pct</span><br><span class=\"line\">##   &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt;</span><br><span class=\"line\">## 1 남성   4011  8000  50.1</span><br><span class=\"line\">## 2 여성   3989  8000  49.9</span><br></pre></td></tr></table></figure>\n<ul>\n<li>연령대별 빈도분석</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 성별 빈도분석이랑 동일하다.</span></span><br><span class=\"line\">mental <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  group_by<span class=\"punctuation\">(</span>age<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  summarise<span class=\"punctuation\">(</span>n<span class=\"operator\">=</span>n<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  mutate<span class=\"punctuation\">(</span>total<span class=\"operator\">=</span><span class=\"built_in\">sum</span><span class=\"punctuation\">(</span>n<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">         pct<span class=\"operator\">=</span><span class=\"built_in\">round</span><span class=\"punctuation\">(</span>n<span class=\"operator\">/</span>total<span class=\"operator\">*</span><span class=\"number\">100</span><span class=\"punctuation\">,</span><span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## # A tibble: 5 × 4</span><br><span class=\"line\">##   age       n total   pct</span><br><span class=\"line\">##   &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt;</span><br><span class=\"line\">## 1 20대   1542  8000  19.3</span><br><span class=\"line\">## 2 30대   1516  8000  19  </span><br><span class=\"line\">## 3 40대   1769  8000  22.1</span><br><span class=\"line\">## 4 50대   1821  8000  22.8</span><br><span class=\"line\">## 5 60대   1352  8000  16.9</span><br></pre></td></tr></table></figure>\n<ul>\n<li>성별, 연령대 교차분석</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 성별 연령대 별로 고르게 분포되어 있는가?</span></span><br><span class=\"line\">table<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>sex<span class=\"punctuation\">,</span> mental<span class=\"operator\">$</span>age<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##       </span><br><span class=\"line\">##        20대 30대 40대 50대 60대</span><br><span class=\"line\">##   남성  822  745  900  891  653</span><br><span class=\"line\">##   여성  720  771  869  930  699</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">round</span><span class=\"punctuation\">(</span>prop.table<span class=\"punctuation\">(</span>table<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>sex<span class=\"punctuation\">,</span> mental<span class=\"operator\">$</span>age<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"operator\">*</span><span class=\"number\">100</span><span class=\"punctuation\">,</span><span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##       </span><br><span class=\"line\">##        20대 30대 40대 50대 60대</span><br><span class=\"line\">##   남성 20.5 18.6 22.4 22.2 16.3</span><br><span class=\"line\">##   여성 18.0 19.3 21.8 23.3 17.5</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chisq.test<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>sex<span class=\"punctuation\">,</span> mental<span class=\"operator\">$</span>age<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## \tPearson&#x27;s Chi-squared test</span><br><span class=\"line\">## </span><br><span class=\"line\">## data:  mental$sex and mental$age</span><br><span class=\"line\">## X-squared = 10.076, df = 4, p-value = 0.03916</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># p-value 값이 0.05 미만이므로 남녀 연령대 별로 분포비율은 다소 차이가 있다고 할 수 있다.</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>평균분석<ul>\n<li>suicide, satisfaction, loneliness, family_belief, wealth, health 변수의 평균을 분석한다.</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mental <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  summarise<span class=\"punctuation\">(</span>자살충동<span class=\"operator\">=</span>mean<span class=\"punctuation\">(</span>suicide<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            삶의_만족도 <span class=\"operator\">=</span> mean<span class=\"punctuation\">(</span>satisfaction<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            외로움<span class=\"operator\">=</span>mean<span class=\"punctuation\">(</span>loneliness<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            가족신뢰도<span class=\"operator\">=</span>mean<span class=\"punctuation\">(</span>family_belief<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            경제안정도<span class=\"operator\">=</span>mean<span class=\"punctuation\">(</span>wealth<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            건강상태<span class=\"operator\">=</span>mean<span class=\"punctuation\">(</span>health<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   자살충동 삶의_만족도 외로움 가족신뢰도 경제안정도 건강상태</span><br><span class=\"line\">## 1 1.377625      6.0365  1.795   3.576375   4.985125 3.696125</span><br></pre></td></tr></table></figure>\n<h3 id=\"연구문제-1\"><a href=\"#연구문제-1\" class=\"headerlink\" title=\"연구문제 1\"></a>연구문제 1</h3><ul>\n<li>삶의 만족도와 외로움이 자살충동에 미치는 영향</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 삶의 만족도와 외로움을 독립변수, </span></span><br><span class=\"line\"><span class=\"comment\">#             자살충동을 종속변수</span></span><br><span class=\"line\">RA <span class=\"operator\">&lt;-</span> lm<span class=\"punctuation\">(</span>data<span class=\"operator\">=</span>mental<span class=\"punctuation\">,</span> suicide<span class=\"operator\">~</span>satisfaction<span class=\"operator\">+</span>loneliness<span class=\"punctuation\">)</span></span><br><span class=\"line\">summary<span class=\"punctuation\">(</span>RA<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## Call:</span><br><span class=\"line\">## lm(formula = suicide ~ satisfaction + loneliness, data = mental)</span><br><span class=\"line\">## </span><br><span class=\"line\">## Residuals:</span><br><span class=\"line\">##      Min       1Q   Median       3Q      Max </span><br><span class=\"line\">## -1.50517 -0.40228 -0.03487  0.17773  3.07029 </span><br><span class=\"line\">## </span><br><span class=\"line\">## Coefficients:</span><br><span class=\"line\">##               Estimate Std. Error t value Pr(&gt;|t|)    </span><br><span class=\"line\">## (Intercept)   1.035551   0.029823   34.72   &lt;2e-16 ***</span><br><span class=\"line\">## satisfaction -0.052583   0.003614  -14.55   &lt;2e-16 ***</span><br><span class=\"line\">## loneliness    0.367405   0.007987   46.00   &lt;2e-16 ***</span><br><span class=\"line\">## ---</span><br><span class=\"line\">## Signif. codes:  0 &#x27;***&#x27; 0.001 &#x27;**&#x27; 0.01 &#x27;*&#x27; 0.05 &#x27;.&#x27; 0.1 &#x27; &#x27; 1</span><br><span class=\"line\">## </span><br><span class=\"line\">## Residual standard error: 0.5451 on 7997 degrees of freedom</span><br><span class=\"line\">## Multiple R-squared:  0.2668,\tAdjusted R-squared:  0.2666 </span><br><span class=\"line\">## F-statistic:  1455 on 2 and 7997 DF,  p-value: &lt; 2.2e-16</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>자살충동 &#x3D; 1.035551 - 0.052583 x 만족도 + 0.367405 x 외로움  <br>  </li>\n<li>이 회귀식의 설명력은 0.2666 으로 낮은 편이다.</li>\n</ul>\n<h3 id=\"연구문제2\"><a href=\"#연구문제2\" class=\"headerlink\" title=\"연구문제2\"></a>연구문제2</h3><ul>\n<li>삶의 만족도와 외로움의 상관관계</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cor.test<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>satisfaction<span class=\"punctuation\">,</span> mental<span class=\"operator\">$</span>loneliness<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## \tPearson&#x27;s product-moment correlation</span><br><span class=\"line\">## </span><br><span class=\"line\">## data:  mental$satisfaction and mental$loneliness</span><br><span class=\"line\">## t = -25.374, df = 7998, p-value &lt; 2.2e-16</span><br><span class=\"line\">## alternative hypothesis: true correlation is not equal to 0</span><br><span class=\"line\">## 95 percent confidence interval:</span><br><span class=\"line\">##  -0.2931116 -0.2525481</span><br><span class=\"line\">## sample estimates:</span><br><span class=\"line\">##        cor </span><br><span class=\"line\">## -0.2729512</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># p-value 값이 0.05 미만이므로 유의미한 통계이다.</span></span><br><span class=\"line\"><span class=\"comment\"># 삶의 만족도와 외로움은 약한 수준에서 부적인 상관관계에 있다.</span></span><br><span class=\"line\"><span class=\"comment\"># 즉, 삶의 만족도가 높아지면 외로움이 약간 줄어드는 관계이다.</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"연구문제3\"><a href=\"#연구문제3\" class=\"headerlink\" title=\"연구문제3\"></a>연구문제3</h3><ul>\n<li>가족신뢰도, 경제안정도, 건강상태가 삶의 만족도와 외로움에 미치는 영향<br>  </li>\n<li>3개 독립변수가 삶의 만족도에 미치는 영향</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RA <span class=\"operator\">&lt;-</span> lm<span class=\"punctuation\">(</span>data <span class=\"operator\">=</span> mental<span class=\"punctuation\">,</span> satisfaction<span class=\"operator\">~</span>family_belief<span class=\"operator\">+</span>wealth<span class=\"operator\">+</span>health<span class=\"punctuation\">)</span></span><br><span class=\"line\">summary<span class=\"punctuation\">(</span>RA<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## Call:</span><br><span class=\"line\">## lm(formula = satisfaction ~ family_belief + wealth + health, </span><br><span class=\"line\">##     data = mental)</span><br><span class=\"line\">## </span><br><span class=\"line\">## Residuals:</span><br><span class=\"line\">##     Min      1Q  Median      3Q     Max </span><br><span class=\"line\">## -6.8274 -0.9431 -0.0425  1.0569  6.1986 </span><br><span class=\"line\">## </span><br><span class=\"line\">## Coefficients:</span><br><span class=\"line\">##               Estimate Std. Error t value Pr(&gt;|t|)    </span><br><span class=\"line\">## (Intercept)    2.07613    0.13765   15.08   &lt;2e-16 ***</span><br><span class=\"line\">## family_belief  0.36851    0.03196   11.53   &lt;2e-16 ***</span><br><span class=\"line\">## wealth         0.26016    0.01089   23.88   &lt;2e-16 ***</span><br><span class=\"line\">## health         0.36403    0.02206   16.50   &lt;2e-16 ***</span><br><span class=\"line\">## ---</span><br><span class=\"line\">## Signif. codes:  0 &#x27;***&#x27; 0.001 &#x27;**&#x27; 0.01 &#x27;*&#x27; 0.05 &#x27;.&#x27; 0.1 &#x27; &#x27; 1</span><br><span class=\"line\">## </span><br><span class=\"line\">## Residual standard error: 1.627 on 7996 degrees of freedom</span><br><span class=\"line\">## Multiple R-squared:  0.1386,\tAdjusted R-squared:  0.1383 </span><br><span class=\"line\">## F-statistic: 428.8 on 3 and 7996 DF,  p-value: &lt; 2.2e-16</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># p-value 값이 0.05 미만이므로 유의미한 통계이다.</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>삶의 만족도 &#x3D; 2.07613 + 0.36851 x 가족신뢰도 + 0.26016 x 경제안정도 + 0.36403 x 건강상태<br>  </li>\n<li>영향력은 차이가 있지만 가족신뢰도, 경제안정도, 건강상태가 좋아지면 모두 삶의 만족도에 긍정적인 영향을 끼친다.</li>\n<li>이 회귀식의 설명력은 0.1383 으로 매우 낮은 편이다.<br> </li>\n<li>3개 독립변수가 외로움에 미치는 영향</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RA <span class=\"operator\">&lt;-</span> lm<span class=\"punctuation\">(</span>data<span class=\"operator\">=</span>mental<span class=\"punctuation\">,</span> loneliness<span class=\"operator\">~</span>family_belief<span class=\"operator\">+</span>wealth<span class=\"operator\">+</span>health<span class=\"punctuation\">)</span></span><br><span class=\"line\">summary<span class=\"punctuation\">(</span>RA<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## Call:</span><br><span class=\"line\">## lm(formula = loneliness ~ family_belief + wealth + health, data = mental)</span><br><span class=\"line\">## </span><br><span class=\"line\">## Residuals:</span><br><span class=\"line\">##      Min       1Q   Median       3Q      Max </span><br><span class=\"line\">## -2.24066 -0.64247  0.01863  0.43022  2.83959 </span><br><span class=\"line\">## </span><br><span class=\"line\">## Coefficients:</span><br><span class=\"line\">##                Estimate Std. Error t value Pr(&gt;|t|)    </span><br><span class=\"line\">## (Intercept)    3.652247   0.063109   57.87   &lt;2e-16 ***</span><br><span class=\"line\">## family_belief -0.220274   0.014654  -15.03   &lt;2e-16 ***</span><br><span class=\"line\">## wealth        -0.072686   0.004995  -14.55   &lt;2e-16 ***</span><br><span class=\"line\">## health        -0.191313   0.010116  -18.91   &lt;2e-16 ***</span><br><span class=\"line\">## ---</span><br><span class=\"line\">## Signif. codes:  0 &#x27;***&#x27; 0.001 &#x27;**&#x27; 0.01 &#x27;*&#x27; 0.05 &#x27;.&#x27; 0.1 &#x27; &#x27; 1</span><br><span class=\"line\">## </span><br><span class=\"line\">## Residual standard error: 0.746 on 7996 degrees of freedom</span><br><span class=\"line\">## Multiple R-squared:  0.1157,\tAdjusted R-squared:  0.1154 </span><br><span class=\"line\">## F-statistic: 348.9 on 3 and 7996 DF,  p-value: &lt; 2.2e-16</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># p-value 값이 0.05 미만이므로 유의미한 통계이다.</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>외로움 &#x3D; 3.652247 - 0.220274 x 가족신뢰도 - 0.072686 x 경제안정도 - 0.191313 x 건강상태<br>  </li>\n<li>영향력은 다르지만 가족신뢰도, 경제안정도, 건강상태가 나빠질 수록 외로움도 커진다.</li>\n<li>이 회귀식의 설명력은 0.1154로 매우 낮은편이다.<br></li>\n</ul>\n<h3 id=\"연구문제4\"><a href=\"#연구문제4\" class=\"headerlink\" title=\"연구문제4\"></a>연구문제4</h3><ul>\n<li>성, 연령, 지역별 삶의 만족도 차이<br>  </li>\n<li>성별로 삶의 만족도에서 차이가 있는지 독립표본 t 검정으로 알아본다.</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">t.test<span class=\"punctuation\">(</span>data<span class=\"operator\">=</span>mental<span class=\"punctuation\">,</span> satisfaction<span class=\"operator\">~</span>sex<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## \tWelch Two Sample t-test</span><br><span class=\"line\">## </span><br><span class=\"line\">## data:  satisfaction by sex</span><br><span class=\"line\">## t = -3.7719, df = 7997.6, p-value = 0.0001632</span><br><span class=\"line\">## alternative hypothesis: true difference in means between group 남성 and group 여성 is not equal to 0</span><br><span class=\"line\">## 95 percent confidence interval:</span><br><span class=\"line\">##  -0.22446298 -0.07094075</span><br><span class=\"line\">## sample estimates:</span><br><span class=\"line\">## mean in group 남성 mean in group 여성 </span><br><span class=\"line\">##           5.962852           6.110554</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># p-value 값이 0.05 미만이므로 유의미한 통계이다.</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>남성 평균은 5.962852, 여성 평균은 6.110554 이므로 여성의 만족도가 남성보다 높다고 할 수 있다.<br>  </li>\n<li>연령대별 삶의 만족도 차이</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mental <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  group_by<span class=\"punctuation\">(</span>age<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  summarise<span class=\"punctuation\">(</span>삶의_만족도_평균<span class=\"operator\">=</span>mean<span class=\"punctuation\">(</span>satisfaction<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  arrange<span class=\"punctuation\">(</span>desc<span class=\"punctuation\">(</span>삶의_만족도_평균<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## # A tibble: 5 × 2</span><br><span class=\"line\">##   age   삶의_만족도_평균</span><br><span class=\"line\">##   &lt;chr&gt;            &lt;dbl&gt;</span><br><span class=\"line\">## 1 30대              6.13</span><br><span class=\"line\">## 2 50대              6.08</span><br><span class=\"line\">## 3 40대              6.05</span><br><span class=\"line\">## 4 20대              6.04</span><br><span class=\"line\">## 5 60대              5.84</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>30대가 평균 6.13점으로 가장 높고 60대가 되면 삶의 만족도가 낮아진다.</p>\n<br>  \n</li>\n<li><p>지역별 삶의 만족도 분석</p>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">area_satisfaction <span class=\"operator\">&lt;-</span> mental <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  group_by<span class=\"punctuation\">(</span>area<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  summarise<span class=\"punctuation\">(</span>m<span class=\"operator\">=</span>mean<span class=\"punctuation\">(</span>satisfaction<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  arrange<span class=\"punctuation\">(</span>desc<span class=\"punctuation\">(</span>m<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>그래프로 나타내기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data<span class=\"operator\">=</span>area_satisfaction<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> reorder<span class=\"punctuation\">(</span>area<span class=\"punctuation\">,</span> m<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span>y<span class=\"operator\">=</span>m<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span></span><br><span class=\"line\">  geom_col<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span></span><br><span class=\"line\">  ggtitle<span class=\"punctuation\">(</span><span class=\"string\">&quot;지역별 만족도&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> </span><br><span class=\"line\">  labs<span class=\"punctuation\">(</span></span><br><span class=\"line\">    x <span class=\"operator\">=</span> <span class=\"string\">&quot;지역&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    y <span class=\"operator\">=</span> <span class=\"string\">&quot;만족도&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  coord_flip<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0624/unnamed-chunk-22-1.png\"><!-- --></p>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/06/24/mental/R_logo.jpg","excerpt":"<p>10장 따라치기</p>","more":"<p>10장 따라치기</p>\n<!-- excerpt -->\n\n\n<ul>\n<li><p>연구 1 : 삶의 만족도와 외로움이 자살충동에 주는 영향을 알아본다.</p>\n</li>\n<li><p>연구 2 : 삶의 만족도와 외로움의 상관관계를 알아본다.</p>\n</li>\n<li><p>연구 3 : 가족신뢰도, 경제적 안정, 건강상태가 삶의 만족도와 외로움에 주는 영향을 알아본다.</p>\n</li>\n<li><p>연구 4 : 성, 연령, 지역에 따라 삶의 만족도에 차이가 있는지를 알아본다.</p>\n</li>\n<li><p>데이터 불러오기 전 사전준비</p>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>dplyr<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>ggplot2<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>spss 패키지 설치</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;foreign&quot;</span><span class=\"punctuation\">,</span>repos <span class=\"operator\">=</span> <span class=\"string\">&quot;http://cran.us.r-project.org&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>foreign<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>데이터 불러오기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mental <span class=\"operator\">&lt;-</span> read.spss<span class=\"punctuation\">(</span><span class=\"string\">&quot;한국행정연구원_사회통합실태조사_데이터_2019.sav&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">class</span><span class=\"punctuation\">(</span>mental<span class=\"punctuation\">)</span>   <span class=\"comment\"># 데이터 유형 확인</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;list&quot;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mental <span class=\"operator\">&lt;-</span> as.data.frame<span class=\"punctuation\">(</span>mental<span class=\"punctuation\">)</span>   <span class=\"comment\">#데이터프레임으로 변환하기</span></span><br><span class=\"line\"><span class=\"built_in\">class</span><span class=\"punctuation\">(</span>mental<span class=\"punctuation\">)</span>   <span class=\"comment\"># 데이터 유형 확인</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;data.frame&quot;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>분석 변수 추출 후 이름 변경하기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mental <span class=\"operator\">&lt;-</span> mental <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  select<span class=\"punctuation\">(</span>q32_2<span class=\"punctuation\">,</span> q1_4<span class=\"punctuation\">,</span> q32_1<span class=\"punctuation\">,</span>q34_1<span class=\"punctuation\">,</span> q52<span class=\"punctuation\">,</span>d17<span class=\"punctuation\">,</span>d1<span class=\"punctuation\">,</span>d2<span class=\"punctuation\">,</span>ara<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  rename<span class=\"punctuation\">(</span><span class=\"comment\">#자살하고 싶은 생각이 드는 정도, 4점 척도</span></span><br><span class=\"line\">         suicide<span class=\"operator\">=</span>q32_2<span class=\"punctuation\">,</span></span><br><span class=\"line\">         <span class=\"comment\">#요즘 느끼는 삶에 대한 만족도, 등현등간척도, 11점</span></span><br><span class=\"line\">         satisfaction<span class=\"operator\">=</span>q1_4<span class=\"punctuation\">,</span></span><br><span class=\"line\">         <span class=\"comment\">#외롭다고 느끼는 정도, 4점 척도</span></span><br><span class=\"line\">         loneliness<span class=\"operator\">=</span>q32_1<span class=\"punctuation\">,</span></span><br><span class=\"line\">         <span class=\"comment\">#본인의 가족에 대한 신뢰도, 4점 척도</span></span><br><span class=\"line\">         family_belief<span class=\"operator\">=</span>q34_1<span class=\"punctuation\">,</span></span><br><span class=\"line\">         <span class=\"comment\">#본인 경제상황의 안정도, 등현등간척도, 0~10점</span></span><br><span class=\"line\">         wealth<span class=\"operator\">=</span>q52<span class=\"punctuation\">,</span></span><br><span class=\"line\">         <span class=\"comment\">#건강상태, 5점</span></span><br><span class=\"line\">         health<span class=\"operator\">=</span>d17<span class=\"punctuation\">,</span></span><br><span class=\"line\">         <span class=\"comment\">#성별</span></span><br><span class=\"line\">         sex<span class=\"operator\">=</span>d1<span class=\"punctuation\">,</span></span><br><span class=\"line\">         <span class=\"comment\">#연령대, 5등 등급</span></span><br><span class=\"line\">         age<span class=\"operator\">=</span>d2<span class=\"punctuation\">,</span></span><br><span class=\"line\">         <span class=\"comment\">#지역</span></span><br><span class=\"line\">         area<span class=\"operator\">=</span>ara<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>4점, 5점, 11점 척도별 응답빈도 확인</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>suicide<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## 전혀 그렇지 않다 별로 그렇지 않다      약간 그렇다      매우 그렇다 </span><br><span class=\"line\">##             5592             1862              479               67</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>health<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## 매우 나쁘다 나쁜 편이다    보통이다 좋은 편이다   매우 좋다 </span><br><span class=\"line\">##          87         509        2413        3730        1261</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>satisfaction<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## 0점 전혀 만족하지 않는다                      1점                      2점 </span><br><span class=\"line\">##                       49                       79                      170 </span><br><span class=\"line\">##                      3점                      4점                 5점 보통 </span><br><span class=\"line\">##                      302                      440                     2053 </span><br><span class=\"line\">##                      6점                      7점                      8점 </span><br><span class=\"line\">##                     1611                     1761                     1040 </span><br><span class=\"line\">##                      9점       10점 매우 만족한다              모름/무응답 </span><br><span class=\"line\">##                      321                      174                        0</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 모름/무응답 항목때문에 11점 척도인데 범주수는 12개로 나옴</span></span><br><span class=\"line\"><span class=\"comment\"># 결측치가 없으므로 패스</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>범주 이름을 문자에서 숫자로 변환하기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mental<span class=\"operator\">$</span>suicide <span class=\"operator\">&lt;-</span> <span class=\"built_in\">as.integer</span><span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>suicide<span class=\"punctuation\">)</span></span><br><span class=\"line\">mental<span class=\"operator\">$</span>satisfaction <span class=\"operator\">&lt;-</span> <span class=\"built_in\">as.integer</span><span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>satisfaction<span class=\"punctuation\">)</span></span><br><span class=\"line\">mental<span class=\"operator\">$</span>loneliness <span class=\"operator\">&lt;-</span> <span class=\"built_in\">as.integer</span><span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>loneliness<span class=\"punctuation\">)</span></span><br><span class=\"line\">mental<span class=\"operator\">$</span>family_belief <span class=\"operator\">&lt;-</span> <span class=\"built_in\">as.integer</span><span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>family_belief<span class=\"punctuation\">)</span></span><br><span class=\"line\">mental<span class=\"operator\">$</span>wealth <span class=\"operator\">&lt;-</span> <span class=\"built_in\">as.integer</span><span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>wealth<span class=\"punctuation\">)</span></span><br><span class=\"line\">mental<span class=\"operator\">$</span>health <span class=\"operator\">&lt;-</span> <span class=\"built_in\">as.integer</span><span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>health<span class=\"punctuation\">)</span></span><br><span class=\"line\">table<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>suicide<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">##    1    2    3    4 </span><br><span class=\"line\">## 5592 1862  479   67</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>health<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">##    1    2    3    4    5 </span><br><span class=\"line\">##   87  509 2413 3730 1261</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>satisfaction<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">##    1    2    3    4    5    6    7    8    9   10   11 </span><br><span class=\"line\">##   49   79  170  302  440 2053 1611 1761 1040  321  174</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>satisfaction 변수는 범주가 0 ~ 10 점 척도인데, 1 ~ 11점으로 출력됨</li>\n<li>등현등간척도 변수(satisfaction, wealth)에서 -1점 보정작업</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mental<span class=\"operator\">$</span>satisfaction <span class=\"operator\">&lt;-</span> mental<span class=\"operator\">$</span>satisfaction<span class=\"operator\">-</span><span class=\"number\">1</span></span><br><span class=\"line\">mental<span class=\"operator\">$</span>wealth <span class=\"operator\">&lt;-</span> mental<span class=\"operator\">$</span>wealth<span class=\"operator\">-</span><span class=\"number\">1</span></span><br><span class=\"line\">table<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>satisfaction<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">##    0    1    2    3    4    5    6    7    8    9   10 </span><br><span class=\"line\">##   49   79  170  302  440 2053 1611 1761 1040  321  174</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>sex, age, area의 유형을 범주형에서 문자형으로 변경</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mental<span class=\"operator\">$</span>age <span class=\"operator\">&lt;-</span> <span class=\"built_in\">as.character</span><span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>age<span class=\"punctuation\">)</span></span><br><span class=\"line\">mental<span class=\"operator\">$</span>sex <span class=\"operator\">&lt;-</span> <span class=\"built_in\">as.character</span><span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>sex<span class=\"punctuation\">)</span></span><br><span class=\"line\">mental<span class=\"operator\">$</span>area <span class=\"operator\">&lt;-</span> <span class=\"built_in\">as.character</span><span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>area<span class=\"punctuation\">)</span></span><br><span class=\"line\">table<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>sex<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## 남성 여성 </span><br><span class=\"line\">## 4011 3989</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>age<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## 19~29세    30대    40대    50대 60~69세 </span><br><span class=\"line\">##    1542    1516    1769    1821    1352</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>area<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## 강원 경기 경남 경북 광주 대구 대전 부산 서울 세종 울산 인천 전남 전북 제주 충남 </span><br><span class=\"line\">##  388 1103  527  466  353  464  356  539  965  162  324  522  395  381  267  425 </span><br><span class=\"line\">## 충북 </span><br><span class=\"line\">##  363</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>age 항목의 19<del>29세, 60</del>69세를 20대, 60대로 변경</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mental<span class=\"operator\">$</span>age <span class=\"operator\">&lt;-</span> ifelse<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>age<span class=\"operator\">==</span><span class=\"string\">&quot;19~29세&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;20대&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                     ifelse<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>age<span class=\"operator\">==</span><span class=\"string\">&quot;60~69세&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;60대&quot;</span><span class=\"punctuation\">,</span>mental<span class=\"operator\">$</span>age<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">table<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>age<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## 20대 30대 40대 50대 60대 </span><br><span class=\"line\">## 1542 1516 1769 1821 1352</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>결측치, 이상치 확인하기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">summary<span class=\"punctuation\">(</span>mental<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##     suicide       satisfaction      loneliness    family_belief  </span><br><span class=\"line\">##  Min.   :1.000   Min.   : 0.000   Min.   :1.000   Min.   :1.000  </span><br><span class=\"line\">##  1st Qu.:1.000   1st Qu.: 5.000   1st Qu.:1.000   1st Qu.:3.000  </span><br><span class=\"line\">##  Median :1.000   Median : 6.000   Median :2.000   Median :4.000  </span><br><span class=\"line\">##  Mean   :1.378   Mean   : 6.037   Mean   :1.795   Mean   :3.576  </span><br><span class=\"line\">##  3rd Qu.:2.000   3rd Qu.: 7.000   3rd Qu.:2.000   3rd Qu.:4.000  </span><br><span class=\"line\">##  Max.   :4.000   Max.   :10.000   Max.   :4.000   Max.   :4.000  </span><br><span class=\"line\">##      wealth           health          sex                age           </span><br><span class=\"line\">##  Min.   : 0.000   Min.   :1.000   Length:8000        Length:8000       </span><br><span class=\"line\">##  1st Qu.: 4.000   1st Qu.:3.000   Class :character   Class :character  </span><br><span class=\"line\">##  Median : 5.000   Median :4.000   Mode  :character   Mode  :character  </span><br><span class=\"line\">##  Mean   : 4.985   Mean   :3.696                                        </span><br><span class=\"line\">##  3rd Qu.: 6.000   3rd Qu.:4.000                                        </span><br><span class=\"line\">##  Max.   :10.000   Max.   :5.000                                        </span><br><span class=\"line\">##      area          </span><br><span class=\"line\">##  Length:8000       </span><br><span class=\"line\">##  Class :character  </span><br><span class=\"line\">##  Mode  :character  </span><br><span class=\"line\">##                    </span><br><span class=\"line\">##                    </span><br><span class=\"line\">## </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"데이터-분석\"><a href=\"#데이터-분석\" class=\"headerlink\" title=\"데이터 분석\"></a>데이터 분석</h2><ul>\n<li>빈도분석<ul>\n<li>성별 빈도분석</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mental <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  group_by<span class=\"punctuation\">(</span>sex<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span>                 <span class=\"comment\"># sex 변수로 분류</span></span><br><span class=\"line\">  summarise<span class=\"punctuation\">(</span>n<span class=\"operator\">=</span>n<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span>              <span class=\"comment\"># sex 변수의 데이터를 세어서 빈도를 n에 입력한다</span></span><br><span class=\"line\">  mutate<span class=\"punctuation\">(</span>total<span class=\"operator\">=</span><span class=\"built_in\">sum</span><span class=\"punctuation\">(</span>n<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span>              <span class=\"comment\"># total에 데이터 빈도 합을 넣고</span></span><br><span class=\"line\">         pct<span class=\"operator\">=</span><span class=\"built_in\">round</span><span class=\"punctuation\">(</span>n<span class=\"operator\">/</span>total<span class=\"operator\">*</span><span class=\"number\">100</span><span class=\"punctuation\">,</span><span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>  <span class=\"comment\"># 데이터 빈도를 소숫점 1번째 자리까지 백분율로 구한다</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## # A tibble: 2 × 4</span><br><span class=\"line\">##   sex       n total   pct</span><br><span class=\"line\">##   &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt;</span><br><span class=\"line\">## 1 남성   4011  8000  50.1</span><br><span class=\"line\">## 2 여성   3989  8000  49.9</span><br></pre></td></tr></table></figure>\n<ul>\n<li>연령대별 빈도분석</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 성별 빈도분석이랑 동일하다.</span></span><br><span class=\"line\">mental <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  group_by<span class=\"punctuation\">(</span>age<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  summarise<span class=\"punctuation\">(</span>n<span class=\"operator\">=</span>n<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  mutate<span class=\"punctuation\">(</span>total<span class=\"operator\">=</span><span class=\"built_in\">sum</span><span class=\"punctuation\">(</span>n<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">         pct<span class=\"operator\">=</span><span class=\"built_in\">round</span><span class=\"punctuation\">(</span>n<span class=\"operator\">/</span>total<span class=\"operator\">*</span><span class=\"number\">100</span><span class=\"punctuation\">,</span><span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## # A tibble: 5 × 4</span><br><span class=\"line\">##   age       n total   pct</span><br><span class=\"line\">##   &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt;</span><br><span class=\"line\">## 1 20대   1542  8000  19.3</span><br><span class=\"line\">## 2 30대   1516  8000  19  </span><br><span class=\"line\">## 3 40대   1769  8000  22.1</span><br><span class=\"line\">## 4 50대   1821  8000  22.8</span><br><span class=\"line\">## 5 60대   1352  8000  16.9</span><br></pre></td></tr></table></figure>\n<ul>\n<li>성별, 연령대 교차분석</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 성별 연령대 별로 고르게 분포되어 있는가?</span></span><br><span class=\"line\">table<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>sex<span class=\"punctuation\">,</span> mental<span class=\"operator\">$</span>age<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##       </span><br><span class=\"line\">##        20대 30대 40대 50대 60대</span><br><span class=\"line\">##   남성  822  745  900  891  653</span><br><span class=\"line\">##   여성  720  771  869  930  699</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">round</span><span class=\"punctuation\">(</span>prop.table<span class=\"punctuation\">(</span>table<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>sex<span class=\"punctuation\">,</span> mental<span class=\"operator\">$</span>age<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"operator\">*</span><span class=\"number\">100</span><span class=\"punctuation\">,</span><span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##       </span><br><span class=\"line\">##        20대 30대 40대 50대 60대</span><br><span class=\"line\">##   남성 20.5 18.6 22.4 22.2 16.3</span><br><span class=\"line\">##   여성 18.0 19.3 21.8 23.3 17.5</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chisq.test<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>sex<span class=\"punctuation\">,</span> mental<span class=\"operator\">$</span>age<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## \tPearson&#x27;s Chi-squared test</span><br><span class=\"line\">## </span><br><span class=\"line\">## data:  mental$sex and mental$age</span><br><span class=\"line\">## X-squared = 10.076, df = 4, p-value = 0.03916</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># p-value 값이 0.05 미만이므로 남녀 연령대 별로 분포비율은 다소 차이가 있다고 할 수 있다.</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>평균분석<ul>\n<li>suicide, satisfaction, loneliness, family_belief, wealth, health 변수의 평균을 분석한다.</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mental <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  summarise<span class=\"punctuation\">(</span>자살충동<span class=\"operator\">=</span>mean<span class=\"punctuation\">(</span>suicide<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            삶의_만족도 <span class=\"operator\">=</span> mean<span class=\"punctuation\">(</span>satisfaction<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            외로움<span class=\"operator\">=</span>mean<span class=\"punctuation\">(</span>loneliness<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            가족신뢰도<span class=\"operator\">=</span>mean<span class=\"punctuation\">(</span>family_belief<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            경제안정도<span class=\"operator\">=</span>mean<span class=\"punctuation\">(</span>wealth<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            건강상태<span class=\"operator\">=</span>mean<span class=\"punctuation\">(</span>health<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##   자살충동 삶의_만족도 외로움 가족신뢰도 경제안정도 건강상태</span><br><span class=\"line\">## 1 1.377625      6.0365  1.795   3.576375   4.985125 3.696125</span><br></pre></td></tr></table></figure>\n<h3 id=\"연구문제-1\"><a href=\"#연구문제-1\" class=\"headerlink\" title=\"연구문제 1\"></a>연구문제 1</h3><ul>\n<li>삶의 만족도와 외로움이 자살충동에 미치는 영향</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 삶의 만족도와 외로움을 독립변수, </span></span><br><span class=\"line\"><span class=\"comment\">#             자살충동을 종속변수</span></span><br><span class=\"line\">RA <span class=\"operator\">&lt;-</span> lm<span class=\"punctuation\">(</span>data<span class=\"operator\">=</span>mental<span class=\"punctuation\">,</span> suicide<span class=\"operator\">~</span>satisfaction<span class=\"operator\">+</span>loneliness<span class=\"punctuation\">)</span></span><br><span class=\"line\">summary<span class=\"punctuation\">(</span>RA<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## Call:</span><br><span class=\"line\">## lm(formula = suicide ~ satisfaction + loneliness, data = mental)</span><br><span class=\"line\">## </span><br><span class=\"line\">## Residuals:</span><br><span class=\"line\">##      Min       1Q   Median       3Q      Max </span><br><span class=\"line\">## -1.50517 -0.40228 -0.03487  0.17773  3.07029 </span><br><span class=\"line\">## </span><br><span class=\"line\">## Coefficients:</span><br><span class=\"line\">##               Estimate Std. Error t value Pr(&gt;|t|)    </span><br><span class=\"line\">## (Intercept)   1.035551   0.029823   34.72   &lt;2e-16 ***</span><br><span class=\"line\">## satisfaction -0.052583   0.003614  -14.55   &lt;2e-16 ***</span><br><span class=\"line\">## loneliness    0.367405   0.007987   46.00   &lt;2e-16 ***</span><br><span class=\"line\">## ---</span><br><span class=\"line\">## Signif. codes:  0 &#x27;***&#x27; 0.001 &#x27;**&#x27; 0.01 &#x27;*&#x27; 0.05 &#x27;.&#x27; 0.1 &#x27; &#x27; 1</span><br><span class=\"line\">## </span><br><span class=\"line\">## Residual standard error: 0.5451 on 7997 degrees of freedom</span><br><span class=\"line\">## Multiple R-squared:  0.2668,\tAdjusted R-squared:  0.2666 </span><br><span class=\"line\">## F-statistic:  1455 on 2 and 7997 DF,  p-value: &lt; 2.2e-16</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>자살충동 &#x3D; 1.035551 - 0.052583 x 만족도 + 0.367405 x 외로움  <br>  </li>\n<li>이 회귀식의 설명력은 0.2666 으로 낮은 편이다.</li>\n</ul>\n<h3 id=\"연구문제2\"><a href=\"#연구문제2\" class=\"headerlink\" title=\"연구문제2\"></a>연구문제2</h3><ul>\n<li>삶의 만족도와 외로움의 상관관계</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cor.test<span class=\"punctuation\">(</span>mental<span class=\"operator\">$</span>satisfaction<span class=\"punctuation\">,</span> mental<span class=\"operator\">$</span>loneliness<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## \tPearson&#x27;s product-moment correlation</span><br><span class=\"line\">## </span><br><span class=\"line\">## data:  mental$satisfaction and mental$loneliness</span><br><span class=\"line\">## t = -25.374, df = 7998, p-value &lt; 2.2e-16</span><br><span class=\"line\">## alternative hypothesis: true correlation is not equal to 0</span><br><span class=\"line\">## 95 percent confidence interval:</span><br><span class=\"line\">##  -0.2931116 -0.2525481</span><br><span class=\"line\">## sample estimates:</span><br><span class=\"line\">##        cor </span><br><span class=\"line\">## -0.2729512</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># p-value 값이 0.05 미만이므로 유의미한 통계이다.</span></span><br><span class=\"line\"><span class=\"comment\"># 삶의 만족도와 외로움은 약한 수준에서 부적인 상관관계에 있다.</span></span><br><span class=\"line\"><span class=\"comment\"># 즉, 삶의 만족도가 높아지면 외로움이 약간 줄어드는 관계이다.</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"연구문제3\"><a href=\"#연구문제3\" class=\"headerlink\" title=\"연구문제3\"></a>연구문제3</h3><ul>\n<li>가족신뢰도, 경제안정도, 건강상태가 삶의 만족도와 외로움에 미치는 영향<br>  </li>\n<li>3개 독립변수가 삶의 만족도에 미치는 영향</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RA <span class=\"operator\">&lt;-</span> lm<span class=\"punctuation\">(</span>data <span class=\"operator\">=</span> mental<span class=\"punctuation\">,</span> satisfaction<span class=\"operator\">~</span>family_belief<span class=\"operator\">+</span>wealth<span class=\"operator\">+</span>health<span class=\"punctuation\">)</span></span><br><span class=\"line\">summary<span class=\"punctuation\">(</span>RA<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## Call:</span><br><span class=\"line\">## lm(formula = satisfaction ~ family_belief + wealth + health, </span><br><span class=\"line\">##     data = mental)</span><br><span class=\"line\">## </span><br><span class=\"line\">## Residuals:</span><br><span class=\"line\">##     Min      1Q  Median      3Q     Max </span><br><span class=\"line\">## -6.8274 -0.9431 -0.0425  1.0569  6.1986 </span><br><span class=\"line\">## </span><br><span class=\"line\">## Coefficients:</span><br><span class=\"line\">##               Estimate Std. Error t value Pr(&gt;|t|)    </span><br><span class=\"line\">## (Intercept)    2.07613    0.13765   15.08   &lt;2e-16 ***</span><br><span class=\"line\">## family_belief  0.36851    0.03196   11.53   &lt;2e-16 ***</span><br><span class=\"line\">## wealth         0.26016    0.01089   23.88   &lt;2e-16 ***</span><br><span class=\"line\">## health         0.36403    0.02206   16.50   &lt;2e-16 ***</span><br><span class=\"line\">## ---</span><br><span class=\"line\">## Signif. codes:  0 &#x27;***&#x27; 0.001 &#x27;**&#x27; 0.01 &#x27;*&#x27; 0.05 &#x27;.&#x27; 0.1 &#x27; &#x27; 1</span><br><span class=\"line\">## </span><br><span class=\"line\">## Residual standard error: 1.627 on 7996 degrees of freedom</span><br><span class=\"line\">## Multiple R-squared:  0.1386,\tAdjusted R-squared:  0.1383 </span><br><span class=\"line\">## F-statistic: 428.8 on 3 and 7996 DF,  p-value: &lt; 2.2e-16</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># p-value 값이 0.05 미만이므로 유의미한 통계이다.</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>삶의 만족도 &#x3D; 2.07613 + 0.36851 x 가족신뢰도 + 0.26016 x 경제안정도 + 0.36403 x 건강상태<br>  </li>\n<li>영향력은 차이가 있지만 가족신뢰도, 경제안정도, 건강상태가 좋아지면 모두 삶의 만족도에 긍정적인 영향을 끼친다.</li>\n<li>이 회귀식의 설명력은 0.1383 으로 매우 낮은 편이다.<br> </li>\n<li>3개 독립변수가 외로움에 미치는 영향</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RA <span class=\"operator\">&lt;-</span> lm<span class=\"punctuation\">(</span>data<span class=\"operator\">=</span>mental<span class=\"punctuation\">,</span> loneliness<span class=\"operator\">~</span>family_belief<span class=\"operator\">+</span>wealth<span class=\"operator\">+</span>health<span class=\"punctuation\">)</span></span><br><span class=\"line\">summary<span class=\"punctuation\">(</span>RA<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## Call:</span><br><span class=\"line\">## lm(formula = loneliness ~ family_belief + wealth + health, data = mental)</span><br><span class=\"line\">## </span><br><span class=\"line\">## Residuals:</span><br><span class=\"line\">##      Min       1Q   Median       3Q      Max </span><br><span class=\"line\">## -2.24066 -0.64247  0.01863  0.43022  2.83959 </span><br><span class=\"line\">## </span><br><span class=\"line\">## Coefficients:</span><br><span class=\"line\">##                Estimate Std. Error t value Pr(&gt;|t|)    </span><br><span class=\"line\">## (Intercept)    3.652247   0.063109   57.87   &lt;2e-16 ***</span><br><span class=\"line\">## family_belief -0.220274   0.014654  -15.03   &lt;2e-16 ***</span><br><span class=\"line\">## wealth        -0.072686   0.004995  -14.55   &lt;2e-16 ***</span><br><span class=\"line\">## health        -0.191313   0.010116  -18.91   &lt;2e-16 ***</span><br><span class=\"line\">## ---</span><br><span class=\"line\">## Signif. codes:  0 &#x27;***&#x27; 0.001 &#x27;**&#x27; 0.01 &#x27;*&#x27; 0.05 &#x27;.&#x27; 0.1 &#x27; &#x27; 1</span><br><span class=\"line\">## </span><br><span class=\"line\">## Residual standard error: 0.746 on 7996 degrees of freedom</span><br><span class=\"line\">## Multiple R-squared:  0.1157,\tAdjusted R-squared:  0.1154 </span><br><span class=\"line\">## F-statistic: 348.9 on 3 and 7996 DF,  p-value: &lt; 2.2e-16</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># p-value 값이 0.05 미만이므로 유의미한 통계이다.</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>외로움 &#x3D; 3.652247 - 0.220274 x 가족신뢰도 - 0.072686 x 경제안정도 - 0.191313 x 건강상태<br>  </li>\n<li>영향력은 다르지만 가족신뢰도, 경제안정도, 건강상태가 나빠질 수록 외로움도 커진다.</li>\n<li>이 회귀식의 설명력은 0.1154로 매우 낮은편이다.<br></li>\n</ul>\n<h3 id=\"연구문제4\"><a href=\"#연구문제4\" class=\"headerlink\" title=\"연구문제4\"></a>연구문제4</h3><ul>\n<li>성, 연령, 지역별 삶의 만족도 차이<br>  </li>\n<li>성별로 삶의 만족도에서 차이가 있는지 독립표본 t 검정으로 알아본다.</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">t.test<span class=\"punctuation\">(</span>data<span class=\"operator\">=</span>mental<span class=\"punctuation\">,</span> satisfaction<span class=\"operator\">~</span>sex<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## \tWelch Two Sample t-test</span><br><span class=\"line\">## </span><br><span class=\"line\">## data:  satisfaction by sex</span><br><span class=\"line\">## t = -3.7719, df = 7997.6, p-value = 0.0001632</span><br><span class=\"line\">## alternative hypothesis: true difference in means between group 남성 and group 여성 is not equal to 0</span><br><span class=\"line\">## 95 percent confidence interval:</span><br><span class=\"line\">##  -0.22446298 -0.07094075</span><br><span class=\"line\">## sample estimates:</span><br><span class=\"line\">## mean in group 남성 mean in group 여성 </span><br><span class=\"line\">##           5.962852           6.110554</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># p-value 값이 0.05 미만이므로 유의미한 통계이다.</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>남성 평균은 5.962852, 여성 평균은 6.110554 이므로 여성의 만족도가 남성보다 높다고 할 수 있다.<br>  </li>\n<li>연령대별 삶의 만족도 차이</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mental <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  group_by<span class=\"punctuation\">(</span>age<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  summarise<span class=\"punctuation\">(</span>삶의_만족도_평균<span class=\"operator\">=</span>mean<span class=\"punctuation\">(</span>satisfaction<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  arrange<span class=\"punctuation\">(</span>desc<span class=\"punctuation\">(</span>삶의_만족도_평균<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## # A tibble: 5 × 2</span><br><span class=\"line\">##   age   삶의_만족도_평균</span><br><span class=\"line\">##   &lt;chr&gt;            &lt;dbl&gt;</span><br><span class=\"line\">## 1 30대              6.13</span><br><span class=\"line\">## 2 50대              6.08</span><br><span class=\"line\">## 3 40대              6.05</span><br><span class=\"line\">## 4 20대              6.04</span><br><span class=\"line\">## 5 60대              5.84</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>30대가 평균 6.13점으로 가장 높고 60대가 되면 삶의 만족도가 낮아진다.</p>\n<br>  \n</li>\n<li><p>지역별 삶의 만족도 분석</p>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">area_satisfaction <span class=\"operator\">&lt;-</span> mental <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  group_by<span class=\"punctuation\">(</span>area<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  summarise<span class=\"punctuation\">(</span>m<span class=\"operator\">=</span>mean<span class=\"punctuation\">(</span>satisfaction<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  arrange<span class=\"punctuation\">(</span>desc<span class=\"punctuation\">(</span>m<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>그래프로 나타내기</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data<span class=\"operator\">=</span>area_satisfaction<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> reorder<span class=\"punctuation\">(</span>area<span class=\"punctuation\">,</span> m<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span>y<span class=\"operator\">=</span>m<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span></span><br><span class=\"line\">  geom_col<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span></span><br><span class=\"line\">  ggtitle<span class=\"punctuation\">(</span><span class=\"string\">&quot;지역별 만족도&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> </span><br><span class=\"line\">  labs<span class=\"punctuation\">(</span></span><br><span class=\"line\">    x <span class=\"operator\">=</span> <span class=\"string\">&quot;지역&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    y <span class=\"operator\">=</span> <span class=\"string\">&quot;만족도&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  coord_flip<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0624/unnamed-chunk-22-1.png\"><!-- --></p>\n"},{"title":"복습","output":{"html_document":{"keep_md":true}},"autoThumbnailImage":"yes","date":"2022-06-23T00:45:00.000Z","_content":"\n- 똑같은 코드 입력은 의미 없다. 다른 데이터로 만들어 볼 것!!! \n<!-- excerpt -->\n\n- iris 데이터, sepal.length, sepal.width 활용해서 종별로 산점도를 그리세요\n  + 제목과 X축, Y축 제목을 변경하세요\n  + 제목은 자유\n  + X축 -> 길이, Y축 -> 너비\n\n\n\n```r\nlibrary(ggplot2)\n\nstr(iris)\n```\n\n```\n## 'data.frame':\t150 obs. of  5 variables:\n##  $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n##  $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...\n##  $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...\n##  $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...\n##  $ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ...\n```\n\n```r\nggplot(iris, aes(x = Sepal.Length, \n                 y =Sepal.Width, colour = Species)) +\n  geom_point()+\n  labs(\n    title = \"자유\",\n    subtitle = \"Freedom\",\n    x = \"길이\",\n    y = \"너비\",\n    ) +\n  \n  # 항목별로 색깔 바꾸기\n  scale_color_manual(    \n    labels = c(\"setosa\", \"versicolor\", \"virginica\"),\n    values = c(\"red\", \"blue\", \"green\")\n  ) +\n  \n  #그래프 테마 바꾸기\n  theme_dark()\n```\n\n![](/images/0623/unnamed-chunk-1-1.png)<!-- -->\n","source":"_posts/remind.md","raw":"---\ntitle: \"복습\"\noutput:\n  html_document:\n    keep_md: true\nautoThumbnailImage: yes\ndate: '2022-06-23 09:45:00'\n---\n\n- 똑같은 코드 입력은 의미 없다. 다른 데이터로 만들어 볼 것!!! \n<!-- excerpt -->\n\n- iris 데이터, sepal.length, sepal.width 활용해서 종별로 산점도를 그리세요\n  + 제목과 X축, Y축 제목을 변경하세요\n  + 제목은 자유\n  + X축 -> 길이, Y축 -> 너비\n\n\n\n```r\nlibrary(ggplot2)\n\nstr(iris)\n```\n\n```\n## 'data.frame':\t150 obs. of  5 variables:\n##  $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n##  $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...\n##  $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...\n##  $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...\n##  $ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ...\n```\n\n```r\nggplot(iris, aes(x = Sepal.Length, \n                 y =Sepal.Width, colour = Species)) +\n  geom_point()+\n  labs(\n    title = \"자유\",\n    subtitle = \"Freedom\",\n    x = \"길이\",\n    y = \"너비\",\n    ) +\n  \n  # 항목별로 색깔 바꾸기\n  scale_color_manual(    \n    labels = c(\"setosa\", \"versicolor\", \"virginica\"),\n    values = c(\"red\", \"blue\", \"green\")\n  ) +\n  \n  #그래프 테마 바꾸기\n  theme_dark()\n```\n\n![](/images/0623/unnamed-chunk-1-1.png)<!-- -->\n","slug":"remind","published":1,"updated":"2022-07-10T13:44:49.890Z","_id":"cl5fcok7z0017jku01jua8iri","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n</li>\n<li><p>iris 데이터, sepal.length, sepal.width 활용해서 종별로 산점도를 그리세요</p>\n<ul>\n<li>제목과 X축, Y축 제목을 변경하세요</li>\n<li>제목은 자유</li>\n<li>X축 -&gt; 길이, Y축 -&gt; 너비</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>ggplot2<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">str<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## &#x27;data.frame&#x27;:\t150 obs. of  5 variables:</span><br><span class=\"line\">##  $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...</span><br><span class=\"line\">##  $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...</span><br><span class=\"line\">##  $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...</span><br><span class=\"line\">##  $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...</span><br><span class=\"line\">##  $ Species     : Factor w/ 3 levels &quot;setosa&quot;,&quot;versicolor&quot;,..: 1 1 1 1 1 1 1 1 1 1 ...</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> Sepal.Length<span class=\"punctuation\">,</span> </span><br><span class=\"line\">                 y <span class=\"operator\">=</span>Sepal.Width<span class=\"punctuation\">,</span> colour <span class=\"operator\">=</span> Species<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  geom_point<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span></span><br><span class=\"line\">  labs<span class=\"punctuation\">(</span></span><br><span class=\"line\">    title <span class=\"operator\">=</span> <span class=\"string\">&quot;자유&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    subtitle <span class=\"operator\">=</span> <span class=\"string\">&quot;Freedom&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    x <span class=\"operator\">=</span> <span class=\"string\">&quot;길이&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    y <span class=\"operator\">=</span> <span class=\"string\">&quot;너비&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># 항목별로 색깔 바꾸기</span></span><br><span class=\"line\">  scale_color_manual<span class=\"punctuation\">(</span>    </span><br><span class=\"line\">    labels <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;setosa&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;versicolor&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;virginica&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    values <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;red&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;blue&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;green&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">#그래프 테마 바꾸기</span></span><br><span class=\"line\">  theme_dark<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0623/unnamed-chunk-1-1.png\"><!-- --></p>","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"<ul>\n<li><p>똑같은 코드 입력은 의미 없다. 다른 데이터로 만들어 볼 것!!! </p>","more":"<ul>\n<li><p>똑같은 코드 입력은 의미 없다. 다른 데이터로 만들어 볼 것!!! </p>\n<!-- excerpt -->\n</li>\n<li><p>iris 데이터, sepal.length, sepal.width 활용해서 종별로 산점도를 그리세요</p>\n<ul>\n<li>제목과 X축, Y축 제목을 변경하세요</li>\n<li>제목은 자유</li>\n<li>X축 -&gt; 길이, Y축 -&gt; 너비</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>ggplot2<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">str<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## &#x27;data.frame&#x27;:\t150 obs. of  5 variables:</span><br><span class=\"line\">##  $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...</span><br><span class=\"line\">##  $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...</span><br><span class=\"line\">##  $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...</span><br><span class=\"line\">##  $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...</span><br><span class=\"line\">##  $ Species     : Factor w/ 3 levels &quot;setosa&quot;,&quot;versicolor&quot;,..: 1 1 1 1 1 1 1 1 1 1 ...</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> Sepal.Length<span class=\"punctuation\">,</span> </span><br><span class=\"line\">                 y <span class=\"operator\">=</span>Sepal.Width<span class=\"punctuation\">,</span> colour <span class=\"operator\">=</span> Species<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  geom_point<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span></span><br><span class=\"line\">  labs<span class=\"punctuation\">(</span></span><br><span class=\"line\">    title <span class=\"operator\">=</span> <span class=\"string\">&quot;자유&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    subtitle <span class=\"operator\">=</span> <span class=\"string\">&quot;Freedom&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    x <span class=\"operator\">=</span> <span class=\"string\">&quot;길이&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    y <span class=\"operator\">=</span> <span class=\"string\">&quot;너비&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># 항목별로 색깔 바꾸기</span></span><br><span class=\"line\">  scale_color_manual<span class=\"punctuation\">(</span>    </span><br><span class=\"line\">    labels <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;setosa&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;versicolor&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;virginica&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    values <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;red&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;blue&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;green&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">#그래프 테마 바꾸기</span></span><br><span class=\"line\">  theme_dark<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0623/unnamed-chunk-1-1.png\"><!-- --></p>\n"},{"title":"test","output":{"html_document":{"keep_md":true}},"autoThumbnailImage":"yes","date":"2022-06-20T00:00:00.000Z","_content":"\ntest\n<!-- excerpt -->\n\n\n## csv 파일 불러오기\n- csv 파일을 불러온다.\n\n\n```r\nmpg1<-read.csv(\"mpg1.csv\")\nstr(mpg1)\n```\n\n```\n## 'data.frame':\t234 obs. of  5 variables:\n##  $ manufacturer: chr  \"audi\" \"audi\" \"audi\" \"audi\" ...\n##  $ trans       : chr  \"auto\" \"manual\" \"manual\" \"auto\" ...\n##  $ drv         : chr  \"f\" \"f\" \"f\" \"f\" ...\n##  $ cty         : int  18 21 20 21 16 18 18 18 16 20 ...\n##  $ hwy         : int  29 29 31 30 26 26 27 26 25 28 ...\n```\n\n## 데이터 시각화 하기\n- cty, hwy 산점도를 그려본다. \n\n```r\nlibrary(ggplot2)\n\nggplot(mpg1, aes(x = cty, y = hwy)) + \n  geom_point()\n```\n\n![](/images/rmd_0620/unnamed-chunk-2-1.png)<!-- -->\n\n\n\n\n\n\n","source":"_posts/test.md","raw":"---\ntitle: \"test\"\noutput:\n  html_document:\n    keep_md: true\nautoThumbnailImage: yes\ndate: '2022-06-20'\n---\n\ntest\n<!-- excerpt -->\n\n\n## csv 파일 불러오기\n- csv 파일을 불러온다.\n\n\n```r\nmpg1<-read.csv(\"mpg1.csv\")\nstr(mpg1)\n```\n\n```\n## 'data.frame':\t234 obs. of  5 variables:\n##  $ manufacturer: chr  \"audi\" \"audi\" \"audi\" \"audi\" ...\n##  $ trans       : chr  \"auto\" \"manual\" \"manual\" \"auto\" ...\n##  $ drv         : chr  \"f\" \"f\" \"f\" \"f\" ...\n##  $ cty         : int  18 21 20 21 16 18 18 18 16 20 ...\n##  $ hwy         : int  29 29 31 30 26 26 27 26 25 28 ...\n```\n\n## 데이터 시각화 하기\n- cty, hwy 산점도를 그려본다. \n\n```r\nlibrary(ggplot2)\n\nggplot(mpg1, aes(x = cty, y = hwy)) + \n  geom_point()\n```\n\n![](/images/rmd_0620/unnamed-chunk-2-1.png)<!-- -->\n\n\n\n\n\n\n","slug":"test","published":1,"updated":"2022-07-10T15:26:32.903Z","_id":"cl5fcok7z0019jku0024r5zo0","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n\n<h2 id=\"csv-파일-불러오기\"><a href=\"#csv-파일-불러오기\" class=\"headerlink\" title=\"csv 파일 불러오기\"></a>csv 파일 불러오기</h2><ul>\n<li>csv 파일을 불러온다.</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1<span class=\"operator\">&lt;-</span>read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;mpg1.csv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">str<span class=\"punctuation\">(</span>mpg1<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## &#x27;data.frame&#x27;:\t234 obs. of  5 variables:</span><br><span class=\"line\">##  $ manufacturer: chr  &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; ...</span><br><span class=\"line\">##  $ trans       : chr  &quot;auto&quot; &quot;manual&quot; &quot;manual&quot; &quot;auto&quot; ...</span><br><span class=\"line\">##  $ drv         : chr  &quot;f&quot; &quot;f&quot; &quot;f&quot; &quot;f&quot; ...</span><br><span class=\"line\">##  $ cty         : int  18 21 20 21 16 18 18 18 16 20 ...</span><br><span class=\"line\">##  $ hwy         : int  29 29 31 30 26 26 27 26 25 28 ...</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"데이터-시각화-하기\"><a href=\"#데이터-시각화-하기\" class=\"headerlink\" title=\"데이터 시각화 하기\"></a>데이터 시각화 하기</h2><ul>\n<li>cty, hwy 산점도를 그려본다.</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>ggplot2<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">ggplot<span class=\"punctuation\">(</span>mpg1<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> cty<span class=\"punctuation\">,</span> y <span class=\"operator\">=</span> hwy<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> </span><br><span class=\"line\">  geom_point<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/rmd_0620/unnamed-chunk-2-1.png\"><!-- --></p>","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"<p>test</p>","more":"<p>test</p>\n<!-- excerpt -->\n\n\n<h2 id=\"csv-파일-불러오기\"><a href=\"#csv-파일-불러오기\" class=\"headerlink\" title=\"csv 파일 불러오기\"></a>csv 파일 불러오기</h2><ul>\n<li>csv 파일을 불러온다.</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpg1<span class=\"operator\">&lt;-</span>read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;mpg1.csv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">str<span class=\"punctuation\">(</span>mpg1<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## &#x27;data.frame&#x27;:\t234 obs. of  5 variables:</span><br><span class=\"line\">##  $ manufacturer: chr  &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; ...</span><br><span class=\"line\">##  $ trans       : chr  &quot;auto&quot; &quot;manual&quot; &quot;manual&quot; &quot;auto&quot; ...</span><br><span class=\"line\">##  $ drv         : chr  &quot;f&quot; &quot;f&quot; &quot;f&quot; &quot;f&quot; ...</span><br><span class=\"line\">##  $ cty         : int  18 21 20 21 16 18 18 18 16 20 ...</span><br><span class=\"line\">##  $ hwy         : int  29 29 31 30 26 26 27 26 25 28 ...</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"데이터-시각화-하기\"><a href=\"#데이터-시각화-하기\" class=\"headerlink\" title=\"데이터 시각화 하기\"></a>데이터 시각화 하기</h2><ul>\n<li>cty, hwy 산점도를 그려본다.</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>ggplot2<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">ggplot<span class=\"punctuation\">(</span>mpg1<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> cty<span class=\"punctuation\">,</span> y <span class=\"operator\">=</span> hwy<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> </span><br><span class=\"line\">  geom_point<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/rmd_0620/unnamed-chunk-2-1.png\"><!-- --></p>\n"},{"title":"블로그 설정(한글)","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","thumbnailImage":"seoul.jpg","thumbnailImagePosition":"left","autoThumbnailImage":true,"date":"2022-07-07T23:50:55.000Z","_content":"\n- 출처 https://ujoy7851.github.io/2019/03/24/hexo-theme/\n<!-- more -->","source":"_posts/블로그 설정.md","raw":"---\ntitle: \"블로그 설정(한글)\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: 블로그\nthumbnailImage: seoul.jpg\nthumbnailImagePosition: left\nautoThumbnailImage: true\ndate: '2022-07-08 08:50:55'\n---\n\n- 출처 https://ujoy7851.github.io/2019/03/24/hexo-theme/\n<!-- more -->","slug":"블로그 설정","published":1,"updated":"2022-07-10T13:53:25.882Z","_id":"cl5fcok82001djku0bw0e0c9f","comments":1,"layout":"post","photos":[],"link":"","content":"<ul>\n<li>출처 <a href=\"https://ujoy7851.github.io/2019/03/24/hexo-theme/\">https://ujoy7851.github.io/2019/03/24/hexo-theme/</a><span id=\"more\"></span></li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/07/08/%EB%B8%94%EB%A1%9C%EA%B7%B8%20%EC%84%A4%EC%A0%95/seoul.jpg","excerpt":"<ul>\n<li>출처 <a href=\"https://ujoy7851.github.io/2019/03/24/hexo-theme/\">https://ujoy7851.github.io/2019/03/24/hexo-theme/</a>","more":"</li>\n</ul>"},{"title":"kaggle 과제","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"thumbnailImage":"kaggle-logo.png","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-07-07T08:16:55.000Z","_content":"\nKaggle 과제\n<!-- excerpt -->\n\n## 라이브러리 불러오기\n- 주요 라이브러리 버전을 확인한다.\n\n\n```python\nimport pandas as pd\nimport numpy as np\nimport matplotlib as mpl\nimport seaborn as sns\nimport sklearn\nimport xgboost as xgb\nimport lightgbm as lgb\n\nprint(\"pandas version:\", pd.__version__)\nprint(\"numpy version:\", np.__version__)\nprint(\"matplotlib version:\", mpl.__version__)\nprint(\"seaborn version:\", sns.__version__)\nprint(\"sklearn version:\", sklearn.__version__)\nprint(\"xgboost version:\", xgb.__version__)\nprint(\"lightgbm version:\", lgb.__version__)\n```\n\n    pandas version: 1.4.2\n    numpy version: 1.21.5\n    matplotlib version: 3.5.1\n    seaborn version: 0.11.2\n    sklearn version: 1.0.2\n    xgboost version: 1.6.1\n    lightgbm version: 3.3.2\n    \n\n## 데이터 불러오기\n- pandas 활용\n\n\n```python\nDATA_PATH = '/kaggle/input/house-prices-advanced-regression-techniques/'\ntrain = pd.read_csv(DATA_PATH + \"train.csv\")\ntest = pd.read_csv(DATA_PATH + \"test.csv\")\n\nprint(\"Datasets are uploaded\")\n```\n\n    Datasets are uploaded\n    \n\n## 데이터 둘러보기\n- 데이터를 둘러봅니다.\n- train : 행 갯수 1460 열 갯수 81\n- test : 행 갯수 1459, 열 갯수 80\n\n\n```python\ntrain.shape, test.shape\n```\n\n\n\n\n    ((1460, 81), (1459, 80))\n\n\n\n\n```python\ntrain.info()\n```\n\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 1460 entries, 0 to 1459\n    Data columns (total 81 columns):\n     #   Column         Non-Null Count  Dtype  \n    ---  ------         --------------  -----  \n     0   Id             1460 non-null   int64  \n     1   MSSubClass     1460 non-null   int64  \n     2   MSZoning       1460 non-null   object \n     3   LotFrontage    1201 non-null   float64\n     4   LotArea        1460 non-null   int64  \n     5   Street         1460 non-null   object \n     6   Alley          91 non-null     object \n     7   LotShape       1460 non-null   object \n     8   LandContour    1460 non-null   object \n     9   Utilities      1460 non-null   object \n     10  LotConfig      1460 non-null   object \n     11  LandSlope      1460 non-null   object \n     12  Neighborhood   1460 non-null   object \n     13  Condition1     1460 non-null   object \n     14  Condition2     1460 non-null   object \n     15  BldgType       1460 non-null   object \n     16  HouseStyle     1460 non-null   object \n     17  OverallQual    1460 non-null   int64  \n     18  OverallCond    1460 non-null   int64  \n     19  YearBuilt      1460 non-null   int64  \n     20  YearRemodAdd   1460 non-null   int64  \n     21  RoofStyle      1460 non-null   object \n     22  RoofMatl       1460 non-null   object \n     23  Exterior1st    1460 non-null   object \n     24  Exterior2nd    1460 non-null   object \n     25  MasVnrType     1452 non-null   object \n     26  MasVnrArea     1452 non-null   float64\n     27  ExterQual      1460 non-null   object \n     28  ExterCond      1460 non-null   object \n     29  Foundation     1460 non-null   object \n     30  BsmtQual       1423 non-null   object \n     31  BsmtCond       1423 non-null   object \n     32  BsmtExposure   1422 non-null   object \n     33  BsmtFinType1   1423 non-null   object \n     34  BsmtFinSF1     1460 non-null   int64  \n     35  BsmtFinType2   1422 non-null   object \n     36  BsmtFinSF2     1460 non-null   int64  \n     37  BsmtUnfSF      1460 non-null   int64  \n     38  TotalBsmtSF    1460 non-null   int64  \n     39  Heating        1460 non-null   object \n     40  HeatingQC      1460 non-null   object \n     41  CentralAir     1460 non-null   object \n     42  Electrical     1459 non-null   object \n     43  1stFlrSF       1460 non-null   int64  \n     44  2ndFlrSF       1460 non-null   int64  \n     45  LowQualFinSF   1460 non-null   int64  \n     46  GrLivArea      1460 non-null   int64  \n     47  BsmtFullBath   1460 non-null   int64  \n     48  BsmtHalfBath   1460 non-null   int64  \n     49  FullBath       1460 non-null   int64  \n     50  HalfBath       1460 non-null   int64  \n     51  BedroomAbvGr   1460 non-null   int64  \n     52  KitchenAbvGr   1460 non-null   int64  \n     53  KitchenQual    1460 non-null   object \n     54  TotRmsAbvGrd   1460 non-null   int64  \n     55  Functional     1460 non-null   object \n     56  Fireplaces     1460 non-null   int64  \n     57  FireplaceQu    770 non-null    object \n     58  GarageType     1379 non-null   object \n     59  GarageYrBlt    1379 non-null   float64\n     60  GarageFinish   1379 non-null   object \n     61  GarageCars     1460 non-null   int64  \n     62  GarageArea     1460 non-null   int64  \n     63  GarageQual     1379 non-null   object \n     64  GarageCond     1379 non-null   object \n     65  PavedDrive     1460 non-null   object \n     66  WoodDeckSF     1460 non-null   int64  \n     67  OpenPorchSF    1460 non-null   int64  \n     68  EnclosedPorch  1460 non-null   int64  \n     69  3SsnPorch      1460 non-null   int64  \n     70  ScreenPorch    1460 non-null   int64  \n     71  PoolArea       1460 non-null   int64  \n     72  PoolQC         7 non-null      object \n     73  Fence          281 non-null    object \n     74  MiscFeature    54 non-null     object \n     75  MiscVal        1460 non-null   int64  \n     76  MoSold         1460 non-null   int64  \n     77  YrSold         1460 non-null   int64  \n     78  SaleType       1460 non-null   object \n     79  SaleCondition  1460 non-null   object \n     80  SalePrice      1460 non-null   int64  \n    dtypes: float64(3), int64(35), object(43)\n    memory usage: 924.0+ KB\n    \n\n\n```python\ntest.info()\n```\n\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 1459 entries, 0 to 1458\n    Data columns (total 80 columns):\n     #   Column         Non-Null Count  Dtype  \n    ---  ------         --------------  -----  \n     0   Id             1459 non-null   int64  \n     1   MSSubClass     1459 non-null   int64  \n     2   MSZoning       1455 non-null   object \n     3   LotFrontage    1232 non-null   float64\n     4   LotArea        1459 non-null   int64  \n     5   Street         1459 non-null   object \n     6   Alley          107 non-null    object \n     7   LotShape       1459 non-null   object \n     8   LandContour    1459 non-null   object \n     9   Utilities      1457 non-null   object \n     10  LotConfig      1459 non-null   object \n     11  LandSlope      1459 non-null   object \n     12  Neighborhood   1459 non-null   object \n     13  Condition1     1459 non-null   object \n     14  Condition2     1459 non-null   object \n     15  BldgType       1459 non-null   object \n     16  HouseStyle     1459 non-null   object \n     17  OverallQual    1459 non-null   int64  \n     18  OverallCond    1459 non-null   int64  \n     19  YearBuilt      1459 non-null   int64  \n     20  YearRemodAdd   1459 non-null   int64  \n     21  RoofStyle      1459 non-null   object \n     22  RoofMatl       1459 non-null   object \n     23  Exterior1st    1458 non-null   object \n     24  Exterior2nd    1458 non-null   object \n     25  MasVnrType     1443 non-null   object \n     26  MasVnrArea     1444 non-null   float64\n     27  ExterQual      1459 non-null   object \n     28  ExterCond      1459 non-null   object \n     29  Foundation     1459 non-null   object \n     30  BsmtQual       1415 non-null   object \n     31  BsmtCond       1414 non-null   object \n     32  BsmtExposure   1415 non-null   object \n     33  BsmtFinType1   1417 non-null   object \n     34  BsmtFinSF1     1458 non-null   float64\n     35  BsmtFinType2   1417 non-null   object \n     36  BsmtFinSF2     1458 non-null   float64\n     37  BsmtUnfSF      1458 non-null   float64\n     38  TotalBsmtSF    1458 non-null   float64\n     39  Heating        1459 non-null   object \n     40  HeatingQC      1459 non-null   object \n     41  CentralAir     1459 non-null   object \n     42  Electrical     1459 non-null   object \n     43  1stFlrSF       1459 non-null   int64  \n     44  2ndFlrSF       1459 non-null   int64  \n     45  LowQualFinSF   1459 non-null   int64  \n     46  GrLivArea      1459 non-null   int64  \n     47  BsmtFullBath   1457 non-null   float64\n     48  BsmtHalfBath   1457 non-null   float64\n     49  FullBath       1459 non-null   int64  \n     50  HalfBath       1459 non-null   int64  \n     51  BedroomAbvGr   1459 non-null   int64  \n     52  KitchenAbvGr   1459 non-null   int64  \n     53  KitchenQual    1458 non-null   object \n     54  TotRmsAbvGrd   1459 non-null   int64  \n     55  Functional     1457 non-null   object \n     56  Fireplaces     1459 non-null   int64  \n     57  FireplaceQu    729 non-null    object \n     58  GarageType     1383 non-null   object \n     59  GarageYrBlt    1381 non-null   float64\n     60  GarageFinish   1381 non-null   object \n     61  GarageCars     1458 non-null   float64\n     62  GarageArea     1458 non-null   float64\n     63  GarageQual     1381 non-null   object \n     64  GarageCond     1381 non-null   object \n     65  PavedDrive     1459 non-null   object \n     66  WoodDeckSF     1459 non-null   int64  \n     67  OpenPorchSF    1459 non-null   int64  \n     68  EnclosedPorch  1459 non-null   int64  \n     69  3SsnPorch      1459 non-null   int64  \n     70  ScreenPorch    1459 non-null   int64  \n     71  PoolArea       1459 non-null   int64  \n     72  PoolQC         3 non-null      object \n     73  Fence          290 non-null    object \n     74  MiscFeature    51 non-null     object \n     75  MiscVal        1459 non-null   int64  \n     76  MoSold         1459 non-null   int64  \n     77  YrSold         1459 non-null   int64  \n     78  SaleType       1458 non-null   object \n     79  SaleCondition  1459 non-null   object \n    dtypes: float64(11), int64(26), object(43)\n    memory usage: 912.0+ KB\n    \n\n## 데이터 시각화\n- 여기에서는 생략\n- 종속변수 분포는 확인\n\n- 샤피로 검정\n- 정규분포인가?\n    + 정규분포 X ---> 로그변환, 박스콕스 변환 등등\n    + 정규분포로 만들어 줘야 함.\n- 선형모델의 성능을 올리기 위해서는 이 작업을 해야 함\n\n\n```python\nimport matplotlib.pyplot as plt\nfrom scipy.stats import norm\n(mu, sigma) = norm.fit(train['SalePrice'])\nprint(\"평균:\", mu)\nprint(\"표준편차:\", sigma)\n\nfig, ax = plt.subplots(figsize=(10, 6))\nsns.histplot(train['SalePrice'])\nax.set(title =\"SalePrice Distribution\")\nax.axvline(mu, color = 'r', linestyle = '--')\nax.text(mu + 10000, 150, 'Mean of SalePrice', color = 'r')\nplt.show()\n```\n\n    평균: 180921.19589041095\n    표준편차: 79415.29188606751\n    \n\n\n    \n![png](/images/0707/output_10_1.png)\n    \n\n\n- 로그변환을 해서 정규분포로 변환해준다.\n\n\n```python\ntrain['SalePrice'][:10]  # 로그변환을 한 값의 예측 나중에 값 다 구하고 다시 지수변환 해야되는 것 기억\n```\n\n\n\n\n    0    208500\n    1    181500\n    2    223500\n    3    140000\n    4    250000\n    5    143000\n    6    307000\n    7    200000\n    8    129900\n    9    118000\n    Name: SalePrice, dtype: int64\n\n\n\n\n```python\ntrain['SalePrice'] = np.log1p(train['SalePrice'])\n\n(mu, sigma) = norm.fit(train['SalePrice'])\nprint(\"평균:\", mu)\nprint(\"표준편차:\", sigma)\n\nfig, ax = plt.subplots(figsize=(10, 6))\nsns.histplot(train['SalePrice'])\nax.set(title =\"SalePrice Distribution\")\nax.axvline(mu, color = 'r', linestyle = '--')\nax.text(mu + 0.001, 160, 'Mean of SalePrice', color = 'r')\nax.set_ylim(0, 170)\nplt.show()\n```\n\n    평균: 12.024057394918406\n    표준편차: 0.39931245219387496\n    \n\n\n    \n![png](/images/0707/output_13_1.png)\n    \n\n\n## 데이터 전처리\n- 컬럼 갯수가 많다? ==> 어떤 컬럼을 없앨 것인가?\n- 머신러닝 연산 속도부터 높여야 함.\n\n### 데이터 ID 값 제거\n- 머신러닝 = 패턴분석\n  + 패턴이 안보이는 컬럼은 삭제해라\n\n\n```python\ntrain_ID = train['Id']\ntest_ID = test['Id']\n\ntrain = train.drop(['Id'], axis = 1)  # 이런 제거 작업은 train과 test 같이 작업하는 것이 좋다.\ntrain.shape\n```\n\n\n\n\n    (1460, 80)\n\n\n\n\n```python\ntest = test.drop(['Id'], axis = 1)\ntest.shape\n```\n\n\n\n\n    (1459, 79)\n\n\n\n### Y값 추출\n- train 데이터에 SalePrice 만 따로 저장한다\n\n\n```python\ny = train['SalePrice']\ntrain = train.drop('SalePrice', axis = 1)\ntrain.shape\n```\n\n\n\n\n    (1460, 79)\n\n\n\n\n```python\ntest.shape\n```\n\n\n\n\n    (1459, 79)\n\n\n\n### 데이터 합치기\n- 성능을 높이고 싶다면 ==> train 따로 정리 / test 따로 정리\n  + 이렇게 하면 Data Leakage 오류를 범할 가능성이 높음\n\n\n```python\nall_df = pd.concat([train, test]).reset_index(drop=True)\nall_df.shape\n```\n\n\n\n\n    (2919, 79)\n\n\n\n## 결측치 확인\n- 결측치의 비율 확인하는 사용자 정의 함수 작성\n\n\n```python\ndef check_na(data, head_num = 6):\n  isnull_na = (data.isnull().sum() / len(data)) * 100\n  data_na = isnull_na.drop(isnull_na[isnull_na == 0].index).sort_values(ascending=False)\n  missing_data = pd.DataFrame({'Missing Ratio' :data_na, \n                               'Data Type': data.dtypes[data_na.index]})\n  print(\"결측치 데이터 컬럼과 건수:\\n\", missing_data.head(head_num))\n\ncheck_na(all_df, 20)\n# PoolQC나 MiscFeature, Alley 같은 건 결측치가 엄청 많으니까 삭제해도 될건데...\n# FireplaceQu 같은 48점짜리는 어떻게 결측치를 처리할 것인가? 지워야되나?\n```\n\n    결측치 데이터 컬럼과 건수:\n                   Missing Ratio Data Type\n    PoolQC            99.657417    object\n    MiscFeature       96.402878    object\n    Alley             93.216855    object\n    Fence             80.438506    object\n    FireplaceQu       48.646797    object\n    LotFrontage       16.649538   float64\n    GarageFinish       5.447071    object\n    GarageQual         5.447071    object\n    GarageCond         5.447071    object\n    GarageYrBlt        5.447071   float64\n    GarageType         5.378554    object\n    BsmtExposure       2.809181    object\n    BsmtCond           2.809181    object\n    BsmtQual           2.774923    object\n    BsmtFinType2       2.740665    object\n    BsmtFinType1       2.706406    object\n    MasVnrType         0.822199    object\n    MasVnrArea         0.787941   float64\n    MSZoning           0.137033    object\n    BsmtFullBath       0.068517   float64\n    \n\n- 결측치 제거\n- 결측치 비율이 높은 변수들을 모두 제거하기로 함\n\n\n```python\nall_df = all_df.drop(['PoolQC', 'MiscFeature', 'Alley', 'Fence', 'FireplaceQu', 'LotFrontage'], axis = 1)\nprint(all_df.shape)\ncheck_na(all_df, 40)\n```\n\n    (2919, 73)\n    결측치 데이터 컬럼과 건수:\n                   Missing Ratio Data Type\n    GarageCond         5.447071    object\n    GarageQual         5.447071    object\n    GarageYrBlt        5.447071   float64\n    GarageFinish       5.447071    object\n    GarageType         5.378554    object\n    BsmtCond           2.809181    object\n    BsmtExposure       2.809181    object\n    BsmtQual           2.774923    object\n    BsmtFinType2       2.740665    object\n    BsmtFinType1       2.706406    object\n    MasVnrType         0.822199    object\n    MasVnrArea         0.787941   float64\n    MSZoning           0.137033    object\n    Functional         0.068517    object\n    Utilities          0.068517    object\n    BsmtFullBath       0.068517   float64\n    BsmtHalfBath       0.068517   float64\n    GarageArea         0.034258   float64\n    GarageCars         0.034258   float64\n    TotalBsmtSF        0.034258   float64\n    KitchenQual        0.034258    object\n    Electrical         0.034258    object\n    BsmtUnfSF          0.034258   float64\n    BsmtFinSF2         0.034258   float64\n    BsmtFinSF1         0.034258   float64\n    Exterior2nd        0.034258    object\n    Exterior1st        0.034258    object\n    SaleType           0.034258    object\n    \n\n## 결측치 채우기\n- train 데이터와 test 데이터가 섞이면 안됨.\n- train / test 분리해서 진행해야 함.\n- 문자데이터 : 자주 등장하는 빈도 값으로 채움\n- 숫자데이터 : 평균이 아니라, 중간값으로 채울 예정\n\n\n```python\nall_df['BsmtCond'].value_counts()\n```\n\n\n\n\n    TA    2606\n    Gd     122\n    Fa     104\n    Po       5\n    Name: BsmtCond, dtype: int64\n\n\n\n\n```python\nall_df['BsmtCond'].mode()[0]\n```\n\n\n\n\n    'TA'\n\n\n\n\n```python\nimport numpy as np\n\n# 문자열 데이터만 추출\ncat_all_vars = train.select_dtypes(exclude=[np.number])\nprint(\"The whole number of all_vars\", len(list(cat_all_vars)))\n\n# 문자열 데이터 중에서 이미 기 삭제했던 Feature들이 있었기 때문에, \n# 한번 더 Feature를 정리하는 코드를 작성한다. \n# 따라서 38개의 Feature만 추출했다. \nfinal_cat_vars = []\nfor v in cat_all_vars:\n    if v not in ['PoolQC', 'MiscFeature', 'Alley', 'Fence', 'FireplaceQu']:\n        final_cat_vars.append(v)\n\nprint(\"The whole number of final_cat_vars\", len(final_cat_vars))\n\n# 이제 각 Feature 마다 빈도수가 가장 많이 나타나는 값을 추가하는 코드를 작성한다. \nfor i in final_cat_vars:\n  all_df[i] = all_df[i].fillna(all_df[i].mode()[0])\n\n# 이제 수치형 데이터만 남은 것을 확인한다. \ncheck_na(all_df, 20)\n```\n\n    The whole number of all_vars 43\n    The whole number of final_cat_vars 38\n    결측치 데이터 컬럼과 건수:\n                   Missing Ratio Data Type\n    GarageYrBlt        5.447071   float64\n    MasVnrArea         0.787941   float64\n    BsmtFullBath       0.068517   float64\n    BsmtHalfBath       0.068517   float64\n    BsmtFinSF1         0.034258   float64\n    BsmtFinSF2         0.034258   float64\n    BsmtUnfSF          0.034258   float64\n    TotalBsmtSF        0.034258   float64\n    GarageCars         0.034258   float64\n    GarageArea         0.034258   float64\n    \n\n- 수치\n\n\n```python\nimport numpy as np\n\n# 방법은 기존과 동일하다. \n# 이번에는 수치형 데이터만 추출한다. \nnum_all_vars = list(train.select_dtypes(include=[np.number]))\nprint(\"The whole number of all_vars\", len(num_all_vars))\n\n# 수치형 데이터 중, 결측치가 많았던 `LotFrontage`만 처리한다. \nnum_all_vars.remove('LotFrontage')\nprint(\"The whole number of final_cat_vars\", len(num_all_vars))\n\n# 이번에는 수치형 데이터의 평균이 아닌 중간값을 지정했다. \nfor i in num_all_vars:\n  all_df[i].fillna(value=all_df[i].median(), inplace=True)\n\ncheck_na(all_df, 20)\n```\n\n    The whole number of all_vars 36\n    The whole number of final_cat_vars 35\n    결측치 데이터 컬럼과 건수:\n     Empty DataFrame\n    Columns: [Missing Ratio, Data Type]\n    Index: []\n    \n\n## 도출 변수\n- 새로운 도출 변수를 작성 (기존 변수 활용)\n- 기존 변수 제거\n\n- 각 층의 면적으로 모두 더해 전체 면적으로 계산한 새로운 변수를 작성한다.\n\n\n```python\nall_df['TotalSF'] = all_df['TotalBsmtSF'] + all_df['1stFlrSF'] + all_df['2ndFlrSF']\nall_df = all_df.drop(['TotalBsmtSF', '1stFlrSF', '2ndFlrSF'], axis=1)\nprint(all_df.shape)\n```\n\n    (2919, 71)\n    \n\n\n```python\nall_df['Total_Bathrooms'] = (all_df['FullBath'] + (0.5 * all_df['HalfBath']) + all_df['BsmtFullBath'] + (0.5 * all_df['BsmtHalfBath']))\nall_df['Total_porch_sf'] = (all_df['OpenPorchSF'] + all_df['3SsnPorch'] + all_df['EnclosedPorch'] + all_df['ScreenPorch'])\nall_df = all_df.drop(['FullBath', 'HalfBath', 'BsmtFullBath', 'BsmtHalfBath', 'OpenPorchSF', '3SsnPorch', 'EnclosedPorch', 'ScreenPorch'], axis=1)\nprint(all_df.shape)\n```\n\n    (2919, 65)\n    \n\n- 연도와 관련된 변수를 추출하는 코드 작성\n\n\n```python\nnum_all_vars = list(train.select_dtypes(include=[np.number]))\nyear_feature = []\nfor var in num_all_vars:\n  if 'Yr' in var:\n    year_feature.append(var)\n  elif 'Year' in var:\n    year_feature.append(var)\n  else:  \n    print(var, \"is not related with Year\")\nprint(year_feature)\n```\n\n    MSSubClass is not related with Year\n    LotFrontage is not related with Year\n    LotArea is not related with Year\n    OverallQual is not related with Year\n    OverallCond is not related with Year\n    MasVnrArea is not related with Year\n    BsmtFinSF1 is not related with Year\n    BsmtFinSF2 is not related with Year\n    BsmtUnfSF is not related with Year\n    TotalBsmtSF is not related with Year\n    1stFlrSF is not related with Year\n    2ndFlrSF is not related with Year\n    LowQualFinSF is not related with Year\n    GrLivArea is not related with Year\n    BsmtFullBath is not related with Year\n    BsmtHalfBath is not related with Year\n    FullBath is not related with Year\n    HalfBath is not related with Year\n    BedroomAbvGr is not related with Year\n    KitchenAbvGr is not related with Year\n    TotRmsAbvGrd is not related with Year\n    Fireplaces is not related with Year\n    GarageCars is not related with Year\n    GarageArea is not related with Year\n    WoodDeckSF is not related with Year\n    OpenPorchSF is not related with Year\n    EnclosedPorch is not related with Year\n    3SsnPorch is not related with Year\n    ScreenPorch is not related with Year\n    PoolArea is not related with Year\n    MiscVal is not related with Year\n    MoSold is not related with Year\n    ['YearBuilt', 'YearRemodAdd', 'GarageYrBlt', 'YrSold']\n    \n\n\n```python\nfig, ax = plt.subplots(3, 1, figsize=(10, 6), sharex=True, sharey=True)\nfor i, var in enumerate(year_feature):\n  if var != 'YrSold':\n    ax[i].scatter(train[var], y, alpha=0.3)\n    ax[i].set_title('{}'.format(var), size=15)\n    ax[i].set_ylabel('SalePrice', size=15, labelpad=12.5)\nplt.tight_layout()\nplt.show()\n```\n\n\n    \n![png](/images/0707/output_39_0.png)\n    \n\n\n\n```python\nall_df = all_df.drop(['YearBuilt', 'GarageYrBlt'], axis=1)\nprint(all_df.shape)\n```\n\n    (2919, 63)\n    \n\n\n```python\nYearsSinceRemodel = train['YrSold'].astype(int) - train['YearRemodAdd'].astype(int)\n\nfig, ax = plt.subplots(figsize=(10, 6))\nax.scatter(YearsSinceRemodel, y, alpha=0.3)\nplt.show()\n```\n\n\n    \n![png](/images/0707/output_41_0.png)\n    \n\n\n\n```python\nall_df['YearsSinceRemodel'] = all_df['YrSold'].astype(int) - all_df['YearRemodAdd'].astype(int)\nall_df = all_df.drop(['YrSold', 'YearRemodAdd'], axis=1)\nprint(all_df.shape)\n```\n\n    (2919, 62)\n    \n\n## 더미변수\n- 더미변수란 원 데이터를 독립변수를 0과 1로 변환하는 변수를 말함.\n\n\n```python\nall_df['PoolArea'].value_counts()\n```\n\n\n\n\n    0      2906\n    512       1\n    648       1\n    576       1\n    555       1\n    480       1\n    519       1\n    738       1\n    144       1\n    368       1\n    444       1\n    228       1\n    561       1\n    800       1\n    Name: PoolArea, dtype: int64\n\n\n\n- 사용자 정의 함수 만들기\n\n\n```python\ndef count_dummy(x):\n    if x > 0:\n        return 1\n    else:\n        return 0\n```\n\n\n```python\nall_df['PoolArea'] = all_df['PoolArea'].apply(count_dummy)\nall_df['PoolArea'].value_counts()\n```\n\n\n\n\n    0    2906\n    1      13\n    Name: PoolArea, dtype: int64\n\n\n\n\n```python\nall_df['GarageArea'] = all_df['GarageArea'].apply(count_dummy)\nall_df['GarageArea'].value_counts()\n```\n\n\n\n\n    1    2762\n    0     157\n    Name: GarageArea, dtype: int64\n\n\n\n\n```python\nall_df['Fireplaces'] = all_df['Fireplaces'].apply(count_dummy)\nall_df['Fireplaces'].value_counts()\n```\n\n\n\n\n    1    1499\n    0    1420\n    Name: Fireplaces, dtype: int64\n\n\n\n## 인코딩\n- 문자열이 있으면 쓸 수 없으므로 숫자로 바꿔준다\n  + 문자를 숫자로 변환해주는 코드를 인코딩 변환 이라고 한다.\n \n\n\n```python\n# 분류모형\n# 종속변수에 적용 (양성, 음성)\n# Label Encoder는 종속변수에만 적용\nfrom sklearn.preprocessing import LabelEncoder\nimport pandas as pd\n\ntemp = pd.DataFrame({'Food_Name': ['Apple', 'Chicken', 'Broccoli'], \n                     'Calories': [95, 231, 50]})\n\nencoder = LabelEncoder()\nencoder.fit(temp['Food_Name'])\nlabels = encoder.transform(temp['Food_Name'])\nprint(list(temp['Food_Name']), \"==>\", labels.tolist())\n```\n\n    ['Apple', 'Chicken', 'Broccoli'] ==> [0, 2, 1]\n    \n\n\n```python\nall_df.info()\n\n```\n\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 2919 entries, 0 to 2918\n    Data columns (total 62 columns):\n     #   Column             Non-Null Count  Dtype  \n    ---  ------             --------------  -----  \n     0   MSSubClass         2919 non-null   int64  \n     1   MSZoning           2919 non-null   object \n     2   LotArea            2919 non-null   int64  \n     3   Street             2919 non-null   object \n     4   LotShape           2919 non-null   object \n     5   LandContour        2919 non-null   object \n     6   Utilities          2919 non-null   object \n     7   LotConfig          2919 non-null   object \n     8   LandSlope          2919 non-null   object \n     9   Neighborhood       2919 non-null   object \n     10  Condition1         2919 non-null   object \n     11  Condition2         2919 non-null   object \n     12  BldgType           2919 non-null   object \n     13  HouseStyle         2919 non-null   object \n     14  OverallQual        2919 non-null   int64  \n     15  OverallCond        2919 non-null   int64  \n     16  RoofStyle          2919 non-null   object \n     17  RoofMatl           2919 non-null   object \n     18  Exterior1st        2919 non-null   object \n     19  Exterior2nd        2919 non-null   object \n     20  MasVnrType         2919 non-null   object \n     21  MasVnrArea         2919 non-null   float64\n     22  ExterQual          2919 non-null   object \n     23  ExterCond          2919 non-null   object \n     24  Foundation         2919 non-null   object \n     25  BsmtQual           2919 non-null   object \n     26  BsmtCond           2919 non-null   object \n     27  BsmtExposure       2919 non-null   object \n     28  BsmtFinType1       2919 non-null   object \n     29  BsmtFinSF1         2919 non-null   float64\n     30  BsmtFinType2       2919 non-null   object \n     31  BsmtFinSF2         2919 non-null   float64\n     32  BsmtUnfSF          2919 non-null   float64\n     33  Heating            2919 non-null   object \n     34  HeatingQC          2919 non-null   object \n     35  CentralAir         2919 non-null   object \n     36  Electrical         2919 non-null   object \n     37  LowQualFinSF       2919 non-null   int64  \n     38  GrLivArea          2919 non-null   int64  \n     39  BedroomAbvGr       2919 non-null   int64  \n     40  KitchenAbvGr       2919 non-null   int64  \n     41  KitchenQual        2919 non-null   object \n     42  TotRmsAbvGrd       2919 non-null   int64  \n     43  Functional         2919 non-null   object \n     44  Fireplaces         2919 non-null   int64  \n     45  GarageType         2919 non-null   object \n     46  GarageFinish       2919 non-null   object \n     47  GarageCars         2919 non-null   float64\n     48  GarageArea         2919 non-null   int64  \n     49  GarageQual         2919 non-null   object \n     50  GarageCond         2919 non-null   object \n     51  PavedDrive         2919 non-null   object \n     52  WoodDeckSF         2919 non-null   int64  \n     53  PoolArea           2919 non-null   int64  \n     54  MiscVal            2919 non-null   int64  \n     55  MoSold             2919 non-null   int64  \n     56  SaleType           2919 non-null   object \n     57  SaleCondition      2919 non-null   object \n     58  TotalSF            2919 non-null   float64\n     59  Total_Bathrooms    2919 non-null   float64\n     60  Total_porch_sf     2919 non-null   int64  \n     61  YearsSinceRemodel  2919 non-null   int32  \n    dtypes: float64(7), int32(1), int64(16), object(38)\n    memory usage: 1.4+ MB\n    \n\n## Label Encoding, Ordinal Encoding, One-Hot Encoding\n- 인코딩은 문자 데이터를 수치로 변환하는 방법론 중의 하나이다\n\n- OrdinalEncoder는 독립변수에만 쓴다.\n\n\n```python\n# Label Encoding, One-Hot Encoding은 종속변수에 쓴다 (남, 여)\n\n\nfrom sklearn.preprocessing import OrdinalEncoder\nimport pandas as pd\n\ntemp = pd.DataFrame({'Food_Name': ['Apple', 'Chicken', 'Broccoli'], \n                     'Calories': [95, 231, 50]})\n\nencoder = OrdinalEncoder()\nlabels = encoder.fit_transform(temp[['Food_Name']])\nprint(list(temp['Food_Name']), \"==>\", labels.tolist())\n```\n\n    ['Apple', 'Chicken', 'Broccoli'] ==> [[0.0], [2.0], [1.0]]\n    \n\n- pandas 메소드를 통해서 직접 숫자로 변환\n\n\n```python\ntemp = pd.DataFrame({'Food_Name': ['Apple', 'Chicken', 'Broccoli'], \n                     'Calories': [95, 231, 50]})\n\ntemp['Food_No'] = temp.Food_Name.replace(to_replace = ['Apple', 'Chicken', 'Broccoli'], value = [1, 2, 3])\nprint(temp[['Food_Name', 'Food_No']])\n```\n\n      Food_Name  Food_No\n    0     Apple        1\n    1   Chicken        2\n    2  Broccoli        3\n    \n\n- 원핫 인코딩\n   + scikit-learn 방식이 조금 복잡함\n   + 그래서 보통은 pandas get_dummies() 함수를 활용한다\n\n\n```python\nimport pandas as pd\nfrom sklearn.preprocessing import LabelBinarizer\n\ntemp = pd.DataFrame({'Food_Name': ['Apple', 'Chicken', 'Broccoli'], \n                     'Calories': [95, 231, 50]})\n\nencoder = LabelBinarizer()\nencoder.fit(temp['Food_Name'])\ntransformed = encoder.transform(temp['Food_Name'])\nohe_df = pd.DataFrame(transformed)\ntemp = pd.concat([temp, ohe_df], axis=1).drop(['Food_Name'], axis=1)\ntemp.columns = ['Calories', 'Food_Name_Apple', 'Food_Name_Broccoli', 'Food_Name_Chicken']\nprint(temp)\nprint(temp.shape)\n```\n\n       Calories  Food_Name_Apple  Food_Name_Broccoli  Food_Name_Chicken\n    0        95                1                   0                  0\n    1       231                0                   0                  1\n    2        50                0                   1                  0\n    (3, 4)\n    \n\n\n```python\nimport pandas as pd\n\ntemp = pd.DataFrame({'Food_Name': ['Apple', 'Chicken', 'Broccoli'], \n                     'Calories': [95, 231, 50]})\n\ntemp = pd.get_dummies(temp)\nprint(temp)\nprint(temp.shape)\n```\n\n       Calories  Food_Name_Apple  Food_Name_Broccoli  Food_Name_Chicken\n    0        95                1                   0                  0\n    1       231                0                   0                  1\n    2        50                0                   1                  0\n    (3, 4)\n    \n\n- 본 데이터 적용\n  + 여기서는 Ordinal Encoding 적용 안함. (단, 실전에서는 꼭 찾아서 해야함).\n- One-Hot Encoding 적용\n\n\n```python\nall_df = pd.get_dummies(all_df).reset_index(drop=True)\nall_df.shape\n```\n\n\n\n\n    (2919, 258)\n\n\n\n- train, test 데이터 합쳐서 진행\n- train, test 데이터 재분리\n\n\n```python\nX = all_df.iloc[:len(y), :]\ntest = all_df.iloc[len(y):, :]\n\nX.shape, y.shape, test.shape\n```\n\n\n\n\n    ((1460, 258), (1460,), (1459, 258))\n\n\n\n- 머신러닝을 위한 데이터 전처리가 끝남\n\n## 과제\n- 남은 시간동안 교재를 보고 머신러닝 학습 및 RMSE를 구하세요.\n- 데이터셋 분리\n  + X 데이터를 X_train, X_test, y_train, y_test로 분리\n\n\n```python\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size = 0.3, random_state=42)\nX_train.shape, X_test.shape, y_train.shape, y_test.shape\n```\n\n\n\n\n    ((1022, 258), (438, 258), (1022,), (438,))\n\n\n\n## 평가지표\n- MAE, MSE, RMSE\n\n### MAE\n- 실젯값과 예측값의 차이, 오차, 오차들의 절댓값 평균을 말함\n\n\n```python\nimport numpy as np\n\ndef mean_absolute_error(y_true, y_pred):\n    error = 0\n    for yt, yp in zip(y_true, y_pred):\n        # yt : 실젯값\n        # yp : 예측값\n        error = error + np.abs(yt - yp)\n        # 절댓값 오차의 평균\n    mae = error / len(y_true)\n    return mae\n\ndef mean_squared_error(y_true, y_pred):\n    error = 0\n    for yt, yp in zip(y_true, y_pred):\n        # yt : 실젯값\n        # yp : 예측값\n        error = error + (yt - yp) ** 2\n        # 제곱값 오차의 평균\n    mse = error / len(y_true)\n    return mse\n\ndef root_mean_squared_error(y_true, y_pred):\n    error = 0\n    for yt, yp in zip(y_true, y_pred):\n        # yt : 실젯값\n        # yp : 예측값\n        error = error + (yt - yp) ** 2\n        # 제곱값 오차의 평균\n    mse = error / len(y_true)\n    \n    # 제곱근 추가\n    rmse = np.round(np.sqrt(mse), 3)\n    return rmse\n\ny_true = [400, 300, 800]\ny_pred = [380, 320, 777]\n\nprint(\"MAE:\", mean_absolute_error(y_true, y_pred))\nprint(\"MSE:\", mean_squared_error(y_true, y_pred))\nprint(\"RMSE:\", root_mean_squared_error(y_true, y_pred))\n```\n\n    MAE: 21.0\n    MSE: 443.0\n    RMSE: 21.048\n    \n\n\n```python\nfrom sklearn.metrics import mean_squared_error\ndef rmse(y_true, y_pred):\n    return np.sqrt(mean_squared_error(y_true, y_pred))\n```\n\n## 머신러닝 모형 정의, 검증 평가\n- 교차 검증 함수 만들기\n\n\n```python\n# 교차 검증\nfrom sklearn.model_selection import KFold, cross_val_score \n\n# 모형 정의\nfrom sklearn.linear_model import LinearRegression \n\ndef cv_rmse(model, n_folds=5):\n    cv = KFold(n_splits = n_folds, random_state=42, shuffle=True)\n    rmse_list = np.sqrt(-cross_val_score(model, X, y, scoring='neg_mean_squared_error', cv=cv))\n    print('CV RMSE Value List:', np.round(rmse_list, 4))\n    print('CV RMSE mean List:', np.round(np.mean(rmse_list), 4))\n    return rmse_list\n```\n\n\n```python\n# 교차 검증\nfrom sklearn.model_selection import KFold, cross_val_score \n\n# 모형 정의\nfrom sklearn.linear_model import LinearRegression \n\ndef cv_rmse(model, n_folds=5):\n    cv = KFold(n_splits = n_folds, random_state=42, shuffle=True)\n    rmse_list = np.sqrt(-cross_val_score(model, X, y, scoring='neg_mean_squared_error', cv=cv))\n    print('CV RMSE Value List:', np.round(rmse_list, 4))\n    print('CV RMSE mean List:', np.round(np.mean(rmse_list), 4))\n    return rmse_list \n\nrmse_scores = {} \nlr_model = LinearRegression()\n\nscore = cv_rmse(lr_model, n_folds=5)\nprint('linear regression - mean : {:.4f} (std: {:.4f})'.format(score.mean(), score.std()))\n\nrmse_scores['Linear Regression'] = (score.mean(), score.std())\n```\n\n    CV RMSE Value List: [0.1279 0.1258 0.2213 0.1558 0.1113]\n    CV RMSE mean List: 0.1484\n    linear regression - mean : 0.1484 (std: 0.0392)\n    \n\n## 제출 방법\n\n\n```python\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.model_selection import KFold, cross_val_score\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor\n\n\ndef cv_rmse(model, n_folds=5):\n    cv = KFold(n_splits=n_folds, random_state=42, shuffle=True)\n    rmse_list = np.sqrt(-cross_val_score(model, X, y, scoring='neg_mean_squared_error', cv=cv))\n    print('CV RMSE value list:', np.round(rmse_list, 4))\n    print('CV RMSE mean value:', np.round(np.mean(rmse_list), 4))\n    return (rmse_list)\n\nn_folds = 5\nrmse_scores = {}\n#lr_model = LinearRegression()\nrf_model=RandomForestRegressor()\n```\n\n\n```python\nscore = cv_rmse(rf_model, n_folds)\nprint(\"linear regression - mean: {:.4f} (std: {:.4f})\".format(score.mean(), score.std()))\nrmse_scores['linear regression'] = (score.mean(), score.std())\n```\n\n    CV RMSE value list: [0.1445 0.1275 0.1778 0.1442 0.1217]\n    CV RMSE mean value: 0.1432\n    linear regression - mean: 0.1432 (std: 0.0195)\n    \n\n\n```python\nfrom sklearn.model_selection import cross_val_predict\n\n# X = all_df.iloc[:len(y), :]\n# X_test = all_df.iloc[len(y):, :]\n# X.shape, y.shape, X_test.shape\n\nrf_model_fit = rf_model.fit(X_train, y_train)\nfinal_preds = np.floor(np.expm1(rf_model_fit.predict(test)))\nprint(final_preds)\n```\n\n    [123399. 156138. 176533. ... 156601. 119066. 219373.]\n    \n\n\n```python\nsubmission = pd.read_csv(DATA_PATH + \"sample_submission.csv\")\nsubmission.iloc[:,1] = final_preds\nprint(submission.head())\nsubmission.to_csv(\"submission.csv\", index=False)\n```\n\n         Id  SalePrice\n    0  1461   123399.0\n    1  1462   156138.0\n    2  1463   176533.0\n    3  1464   183981.0\n    4  1465   194195.0\n    \n\n\n```python\nfrom sklearn.linear_model import LinearRegression\nlr_model = LinearRegression()\nlr_model.fit(X_train, y_train) \n\nprint(lr_model.score(X_train, y_train))\nprint(lr_model.score(X_test, y_test))\n```\n\n    0.9431219120690453\n    0.9023841611069845\n    \n","source":"_posts/lecture-in-humanedu.md","raw":"---\ntitle: \"kaggle 과제\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: Python\nclearReading: true\nthumbnailImage: kaggle-logo.png\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-07-07 17:16:55'\n---\n\nKaggle 과제\n<!-- excerpt -->\n\n## 라이브러리 불러오기\n- 주요 라이브러리 버전을 확인한다.\n\n\n```python\nimport pandas as pd\nimport numpy as np\nimport matplotlib as mpl\nimport seaborn as sns\nimport sklearn\nimport xgboost as xgb\nimport lightgbm as lgb\n\nprint(\"pandas version:\", pd.__version__)\nprint(\"numpy version:\", np.__version__)\nprint(\"matplotlib version:\", mpl.__version__)\nprint(\"seaborn version:\", sns.__version__)\nprint(\"sklearn version:\", sklearn.__version__)\nprint(\"xgboost version:\", xgb.__version__)\nprint(\"lightgbm version:\", lgb.__version__)\n```\n\n    pandas version: 1.4.2\n    numpy version: 1.21.5\n    matplotlib version: 3.5.1\n    seaborn version: 0.11.2\n    sklearn version: 1.0.2\n    xgboost version: 1.6.1\n    lightgbm version: 3.3.2\n    \n\n## 데이터 불러오기\n- pandas 활용\n\n\n```python\nDATA_PATH = '/kaggle/input/house-prices-advanced-regression-techniques/'\ntrain = pd.read_csv(DATA_PATH + \"train.csv\")\ntest = pd.read_csv(DATA_PATH + \"test.csv\")\n\nprint(\"Datasets are uploaded\")\n```\n\n    Datasets are uploaded\n    \n\n## 데이터 둘러보기\n- 데이터를 둘러봅니다.\n- train : 행 갯수 1460 열 갯수 81\n- test : 행 갯수 1459, 열 갯수 80\n\n\n```python\ntrain.shape, test.shape\n```\n\n\n\n\n    ((1460, 81), (1459, 80))\n\n\n\n\n```python\ntrain.info()\n```\n\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 1460 entries, 0 to 1459\n    Data columns (total 81 columns):\n     #   Column         Non-Null Count  Dtype  \n    ---  ------         --------------  -----  \n     0   Id             1460 non-null   int64  \n     1   MSSubClass     1460 non-null   int64  \n     2   MSZoning       1460 non-null   object \n     3   LotFrontage    1201 non-null   float64\n     4   LotArea        1460 non-null   int64  \n     5   Street         1460 non-null   object \n     6   Alley          91 non-null     object \n     7   LotShape       1460 non-null   object \n     8   LandContour    1460 non-null   object \n     9   Utilities      1460 non-null   object \n     10  LotConfig      1460 non-null   object \n     11  LandSlope      1460 non-null   object \n     12  Neighborhood   1460 non-null   object \n     13  Condition1     1460 non-null   object \n     14  Condition2     1460 non-null   object \n     15  BldgType       1460 non-null   object \n     16  HouseStyle     1460 non-null   object \n     17  OverallQual    1460 non-null   int64  \n     18  OverallCond    1460 non-null   int64  \n     19  YearBuilt      1460 non-null   int64  \n     20  YearRemodAdd   1460 non-null   int64  \n     21  RoofStyle      1460 non-null   object \n     22  RoofMatl       1460 non-null   object \n     23  Exterior1st    1460 non-null   object \n     24  Exterior2nd    1460 non-null   object \n     25  MasVnrType     1452 non-null   object \n     26  MasVnrArea     1452 non-null   float64\n     27  ExterQual      1460 non-null   object \n     28  ExterCond      1460 non-null   object \n     29  Foundation     1460 non-null   object \n     30  BsmtQual       1423 non-null   object \n     31  BsmtCond       1423 non-null   object \n     32  BsmtExposure   1422 non-null   object \n     33  BsmtFinType1   1423 non-null   object \n     34  BsmtFinSF1     1460 non-null   int64  \n     35  BsmtFinType2   1422 non-null   object \n     36  BsmtFinSF2     1460 non-null   int64  \n     37  BsmtUnfSF      1460 non-null   int64  \n     38  TotalBsmtSF    1460 non-null   int64  \n     39  Heating        1460 non-null   object \n     40  HeatingQC      1460 non-null   object \n     41  CentralAir     1460 non-null   object \n     42  Electrical     1459 non-null   object \n     43  1stFlrSF       1460 non-null   int64  \n     44  2ndFlrSF       1460 non-null   int64  \n     45  LowQualFinSF   1460 non-null   int64  \n     46  GrLivArea      1460 non-null   int64  \n     47  BsmtFullBath   1460 non-null   int64  \n     48  BsmtHalfBath   1460 non-null   int64  \n     49  FullBath       1460 non-null   int64  \n     50  HalfBath       1460 non-null   int64  \n     51  BedroomAbvGr   1460 non-null   int64  \n     52  KitchenAbvGr   1460 non-null   int64  \n     53  KitchenQual    1460 non-null   object \n     54  TotRmsAbvGrd   1460 non-null   int64  \n     55  Functional     1460 non-null   object \n     56  Fireplaces     1460 non-null   int64  \n     57  FireplaceQu    770 non-null    object \n     58  GarageType     1379 non-null   object \n     59  GarageYrBlt    1379 non-null   float64\n     60  GarageFinish   1379 non-null   object \n     61  GarageCars     1460 non-null   int64  \n     62  GarageArea     1460 non-null   int64  \n     63  GarageQual     1379 non-null   object \n     64  GarageCond     1379 non-null   object \n     65  PavedDrive     1460 non-null   object \n     66  WoodDeckSF     1460 non-null   int64  \n     67  OpenPorchSF    1460 non-null   int64  \n     68  EnclosedPorch  1460 non-null   int64  \n     69  3SsnPorch      1460 non-null   int64  \n     70  ScreenPorch    1460 non-null   int64  \n     71  PoolArea       1460 non-null   int64  \n     72  PoolQC         7 non-null      object \n     73  Fence          281 non-null    object \n     74  MiscFeature    54 non-null     object \n     75  MiscVal        1460 non-null   int64  \n     76  MoSold         1460 non-null   int64  \n     77  YrSold         1460 non-null   int64  \n     78  SaleType       1460 non-null   object \n     79  SaleCondition  1460 non-null   object \n     80  SalePrice      1460 non-null   int64  \n    dtypes: float64(3), int64(35), object(43)\n    memory usage: 924.0+ KB\n    \n\n\n```python\ntest.info()\n```\n\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 1459 entries, 0 to 1458\n    Data columns (total 80 columns):\n     #   Column         Non-Null Count  Dtype  \n    ---  ------         --------------  -----  \n     0   Id             1459 non-null   int64  \n     1   MSSubClass     1459 non-null   int64  \n     2   MSZoning       1455 non-null   object \n     3   LotFrontage    1232 non-null   float64\n     4   LotArea        1459 non-null   int64  \n     5   Street         1459 non-null   object \n     6   Alley          107 non-null    object \n     7   LotShape       1459 non-null   object \n     8   LandContour    1459 non-null   object \n     9   Utilities      1457 non-null   object \n     10  LotConfig      1459 non-null   object \n     11  LandSlope      1459 non-null   object \n     12  Neighborhood   1459 non-null   object \n     13  Condition1     1459 non-null   object \n     14  Condition2     1459 non-null   object \n     15  BldgType       1459 non-null   object \n     16  HouseStyle     1459 non-null   object \n     17  OverallQual    1459 non-null   int64  \n     18  OverallCond    1459 non-null   int64  \n     19  YearBuilt      1459 non-null   int64  \n     20  YearRemodAdd   1459 non-null   int64  \n     21  RoofStyle      1459 non-null   object \n     22  RoofMatl       1459 non-null   object \n     23  Exterior1st    1458 non-null   object \n     24  Exterior2nd    1458 non-null   object \n     25  MasVnrType     1443 non-null   object \n     26  MasVnrArea     1444 non-null   float64\n     27  ExterQual      1459 non-null   object \n     28  ExterCond      1459 non-null   object \n     29  Foundation     1459 non-null   object \n     30  BsmtQual       1415 non-null   object \n     31  BsmtCond       1414 non-null   object \n     32  BsmtExposure   1415 non-null   object \n     33  BsmtFinType1   1417 non-null   object \n     34  BsmtFinSF1     1458 non-null   float64\n     35  BsmtFinType2   1417 non-null   object \n     36  BsmtFinSF2     1458 non-null   float64\n     37  BsmtUnfSF      1458 non-null   float64\n     38  TotalBsmtSF    1458 non-null   float64\n     39  Heating        1459 non-null   object \n     40  HeatingQC      1459 non-null   object \n     41  CentralAir     1459 non-null   object \n     42  Electrical     1459 non-null   object \n     43  1stFlrSF       1459 non-null   int64  \n     44  2ndFlrSF       1459 non-null   int64  \n     45  LowQualFinSF   1459 non-null   int64  \n     46  GrLivArea      1459 non-null   int64  \n     47  BsmtFullBath   1457 non-null   float64\n     48  BsmtHalfBath   1457 non-null   float64\n     49  FullBath       1459 non-null   int64  \n     50  HalfBath       1459 non-null   int64  \n     51  BedroomAbvGr   1459 non-null   int64  \n     52  KitchenAbvGr   1459 non-null   int64  \n     53  KitchenQual    1458 non-null   object \n     54  TotRmsAbvGrd   1459 non-null   int64  \n     55  Functional     1457 non-null   object \n     56  Fireplaces     1459 non-null   int64  \n     57  FireplaceQu    729 non-null    object \n     58  GarageType     1383 non-null   object \n     59  GarageYrBlt    1381 non-null   float64\n     60  GarageFinish   1381 non-null   object \n     61  GarageCars     1458 non-null   float64\n     62  GarageArea     1458 non-null   float64\n     63  GarageQual     1381 non-null   object \n     64  GarageCond     1381 non-null   object \n     65  PavedDrive     1459 non-null   object \n     66  WoodDeckSF     1459 non-null   int64  \n     67  OpenPorchSF    1459 non-null   int64  \n     68  EnclosedPorch  1459 non-null   int64  \n     69  3SsnPorch      1459 non-null   int64  \n     70  ScreenPorch    1459 non-null   int64  \n     71  PoolArea       1459 non-null   int64  \n     72  PoolQC         3 non-null      object \n     73  Fence          290 non-null    object \n     74  MiscFeature    51 non-null     object \n     75  MiscVal        1459 non-null   int64  \n     76  MoSold         1459 non-null   int64  \n     77  YrSold         1459 non-null   int64  \n     78  SaleType       1458 non-null   object \n     79  SaleCondition  1459 non-null   object \n    dtypes: float64(11), int64(26), object(43)\n    memory usage: 912.0+ KB\n    \n\n## 데이터 시각화\n- 여기에서는 생략\n- 종속변수 분포는 확인\n\n- 샤피로 검정\n- 정규분포인가?\n    + 정규분포 X ---> 로그변환, 박스콕스 변환 등등\n    + 정규분포로 만들어 줘야 함.\n- 선형모델의 성능을 올리기 위해서는 이 작업을 해야 함\n\n\n```python\nimport matplotlib.pyplot as plt\nfrom scipy.stats import norm\n(mu, sigma) = norm.fit(train['SalePrice'])\nprint(\"평균:\", mu)\nprint(\"표준편차:\", sigma)\n\nfig, ax = plt.subplots(figsize=(10, 6))\nsns.histplot(train['SalePrice'])\nax.set(title =\"SalePrice Distribution\")\nax.axvline(mu, color = 'r', linestyle = '--')\nax.text(mu + 10000, 150, 'Mean of SalePrice', color = 'r')\nplt.show()\n```\n\n    평균: 180921.19589041095\n    표준편차: 79415.29188606751\n    \n\n\n    \n![png](/images/0707/output_10_1.png)\n    \n\n\n- 로그변환을 해서 정규분포로 변환해준다.\n\n\n```python\ntrain['SalePrice'][:10]  # 로그변환을 한 값의 예측 나중에 값 다 구하고 다시 지수변환 해야되는 것 기억\n```\n\n\n\n\n    0    208500\n    1    181500\n    2    223500\n    3    140000\n    4    250000\n    5    143000\n    6    307000\n    7    200000\n    8    129900\n    9    118000\n    Name: SalePrice, dtype: int64\n\n\n\n\n```python\ntrain['SalePrice'] = np.log1p(train['SalePrice'])\n\n(mu, sigma) = norm.fit(train['SalePrice'])\nprint(\"평균:\", mu)\nprint(\"표준편차:\", sigma)\n\nfig, ax = plt.subplots(figsize=(10, 6))\nsns.histplot(train['SalePrice'])\nax.set(title =\"SalePrice Distribution\")\nax.axvline(mu, color = 'r', linestyle = '--')\nax.text(mu + 0.001, 160, 'Mean of SalePrice', color = 'r')\nax.set_ylim(0, 170)\nplt.show()\n```\n\n    평균: 12.024057394918406\n    표준편차: 0.39931245219387496\n    \n\n\n    \n![png](/images/0707/output_13_1.png)\n    \n\n\n## 데이터 전처리\n- 컬럼 갯수가 많다? ==> 어떤 컬럼을 없앨 것인가?\n- 머신러닝 연산 속도부터 높여야 함.\n\n### 데이터 ID 값 제거\n- 머신러닝 = 패턴분석\n  + 패턴이 안보이는 컬럼은 삭제해라\n\n\n```python\ntrain_ID = train['Id']\ntest_ID = test['Id']\n\ntrain = train.drop(['Id'], axis = 1)  # 이런 제거 작업은 train과 test 같이 작업하는 것이 좋다.\ntrain.shape\n```\n\n\n\n\n    (1460, 80)\n\n\n\n\n```python\ntest = test.drop(['Id'], axis = 1)\ntest.shape\n```\n\n\n\n\n    (1459, 79)\n\n\n\n### Y값 추출\n- train 데이터에 SalePrice 만 따로 저장한다\n\n\n```python\ny = train['SalePrice']\ntrain = train.drop('SalePrice', axis = 1)\ntrain.shape\n```\n\n\n\n\n    (1460, 79)\n\n\n\n\n```python\ntest.shape\n```\n\n\n\n\n    (1459, 79)\n\n\n\n### 데이터 합치기\n- 성능을 높이고 싶다면 ==> train 따로 정리 / test 따로 정리\n  + 이렇게 하면 Data Leakage 오류를 범할 가능성이 높음\n\n\n```python\nall_df = pd.concat([train, test]).reset_index(drop=True)\nall_df.shape\n```\n\n\n\n\n    (2919, 79)\n\n\n\n## 결측치 확인\n- 결측치의 비율 확인하는 사용자 정의 함수 작성\n\n\n```python\ndef check_na(data, head_num = 6):\n  isnull_na = (data.isnull().sum() / len(data)) * 100\n  data_na = isnull_na.drop(isnull_na[isnull_na == 0].index).sort_values(ascending=False)\n  missing_data = pd.DataFrame({'Missing Ratio' :data_na, \n                               'Data Type': data.dtypes[data_na.index]})\n  print(\"결측치 데이터 컬럼과 건수:\\n\", missing_data.head(head_num))\n\ncheck_na(all_df, 20)\n# PoolQC나 MiscFeature, Alley 같은 건 결측치가 엄청 많으니까 삭제해도 될건데...\n# FireplaceQu 같은 48점짜리는 어떻게 결측치를 처리할 것인가? 지워야되나?\n```\n\n    결측치 데이터 컬럼과 건수:\n                   Missing Ratio Data Type\n    PoolQC            99.657417    object\n    MiscFeature       96.402878    object\n    Alley             93.216855    object\n    Fence             80.438506    object\n    FireplaceQu       48.646797    object\n    LotFrontage       16.649538   float64\n    GarageFinish       5.447071    object\n    GarageQual         5.447071    object\n    GarageCond         5.447071    object\n    GarageYrBlt        5.447071   float64\n    GarageType         5.378554    object\n    BsmtExposure       2.809181    object\n    BsmtCond           2.809181    object\n    BsmtQual           2.774923    object\n    BsmtFinType2       2.740665    object\n    BsmtFinType1       2.706406    object\n    MasVnrType         0.822199    object\n    MasVnrArea         0.787941   float64\n    MSZoning           0.137033    object\n    BsmtFullBath       0.068517   float64\n    \n\n- 결측치 제거\n- 결측치 비율이 높은 변수들을 모두 제거하기로 함\n\n\n```python\nall_df = all_df.drop(['PoolQC', 'MiscFeature', 'Alley', 'Fence', 'FireplaceQu', 'LotFrontage'], axis = 1)\nprint(all_df.shape)\ncheck_na(all_df, 40)\n```\n\n    (2919, 73)\n    결측치 데이터 컬럼과 건수:\n                   Missing Ratio Data Type\n    GarageCond         5.447071    object\n    GarageQual         5.447071    object\n    GarageYrBlt        5.447071   float64\n    GarageFinish       5.447071    object\n    GarageType         5.378554    object\n    BsmtCond           2.809181    object\n    BsmtExposure       2.809181    object\n    BsmtQual           2.774923    object\n    BsmtFinType2       2.740665    object\n    BsmtFinType1       2.706406    object\n    MasVnrType         0.822199    object\n    MasVnrArea         0.787941   float64\n    MSZoning           0.137033    object\n    Functional         0.068517    object\n    Utilities          0.068517    object\n    BsmtFullBath       0.068517   float64\n    BsmtHalfBath       0.068517   float64\n    GarageArea         0.034258   float64\n    GarageCars         0.034258   float64\n    TotalBsmtSF        0.034258   float64\n    KitchenQual        0.034258    object\n    Electrical         0.034258    object\n    BsmtUnfSF          0.034258   float64\n    BsmtFinSF2         0.034258   float64\n    BsmtFinSF1         0.034258   float64\n    Exterior2nd        0.034258    object\n    Exterior1st        0.034258    object\n    SaleType           0.034258    object\n    \n\n## 결측치 채우기\n- train 데이터와 test 데이터가 섞이면 안됨.\n- train / test 분리해서 진행해야 함.\n- 문자데이터 : 자주 등장하는 빈도 값으로 채움\n- 숫자데이터 : 평균이 아니라, 중간값으로 채울 예정\n\n\n```python\nall_df['BsmtCond'].value_counts()\n```\n\n\n\n\n    TA    2606\n    Gd     122\n    Fa     104\n    Po       5\n    Name: BsmtCond, dtype: int64\n\n\n\n\n```python\nall_df['BsmtCond'].mode()[0]\n```\n\n\n\n\n    'TA'\n\n\n\n\n```python\nimport numpy as np\n\n# 문자열 데이터만 추출\ncat_all_vars = train.select_dtypes(exclude=[np.number])\nprint(\"The whole number of all_vars\", len(list(cat_all_vars)))\n\n# 문자열 데이터 중에서 이미 기 삭제했던 Feature들이 있었기 때문에, \n# 한번 더 Feature를 정리하는 코드를 작성한다. \n# 따라서 38개의 Feature만 추출했다. \nfinal_cat_vars = []\nfor v in cat_all_vars:\n    if v not in ['PoolQC', 'MiscFeature', 'Alley', 'Fence', 'FireplaceQu']:\n        final_cat_vars.append(v)\n\nprint(\"The whole number of final_cat_vars\", len(final_cat_vars))\n\n# 이제 각 Feature 마다 빈도수가 가장 많이 나타나는 값을 추가하는 코드를 작성한다. \nfor i in final_cat_vars:\n  all_df[i] = all_df[i].fillna(all_df[i].mode()[0])\n\n# 이제 수치형 데이터만 남은 것을 확인한다. \ncheck_na(all_df, 20)\n```\n\n    The whole number of all_vars 43\n    The whole number of final_cat_vars 38\n    결측치 데이터 컬럼과 건수:\n                   Missing Ratio Data Type\n    GarageYrBlt        5.447071   float64\n    MasVnrArea         0.787941   float64\n    BsmtFullBath       0.068517   float64\n    BsmtHalfBath       0.068517   float64\n    BsmtFinSF1         0.034258   float64\n    BsmtFinSF2         0.034258   float64\n    BsmtUnfSF          0.034258   float64\n    TotalBsmtSF        0.034258   float64\n    GarageCars         0.034258   float64\n    GarageArea         0.034258   float64\n    \n\n- 수치\n\n\n```python\nimport numpy as np\n\n# 방법은 기존과 동일하다. \n# 이번에는 수치형 데이터만 추출한다. \nnum_all_vars = list(train.select_dtypes(include=[np.number]))\nprint(\"The whole number of all_vars\", len(num_all_vars))\n\n# 수치형 데이터 중, 결측치가 많았던 `LotFrontage`만 처리한다. \nnum_all_vars.remove('LotFrontage')\nprint(\"The whole number of final_cat_vars\", len(num_all_vars))\n\n# 이번에는 수치형 데이터의 평균이 아닌 중간값을 지정했다. \nfor i in num_all_vars:\n  all_df[i].fillna(value=all_df[i].median(), inplace=True)\n\ncheck_na(all_df, 20)\n```\n\n    The whole number of all_vars 36\n    The whole number of final_cat_vars 35\n    결측치 데이터 컬럼과 건수:\n     Empty DataFrame\n    Columns: [Missing Ratio, Data Type]\n    Index: []\n    \n\n## 도출 변수\n- 새로운 도출 변수를 작성 (기존 변수 활용)\n- 기존 변수 제거\n\n- 각 층의 면적으로 모두 더해 전체 면적으로 계산한 새로운 변수를 작성한다.\n\n\n```python\nall_df['TotalSF'] = all_df['TotalBsmtSF'] + all_df['1stFlrSF'] + all_df['2ndFlrSF']\nall_df = all_df.drop(['TotalBsmtSF', '1stFlrSF', '2ndFlrSF'], axis=1)\nprint(all_df.shape)\n```\n\n    (2919, 71)\n    \n\n\n```python\nall_df['Total_Bathrooms'] = (all_df['FullBath'] + (0.5 * all_df['HalfBath']) + all_df['BsmtFullBath'] + (0.5 * all_df['BsmtHalfBath']))\nall_df['Total_porch_sf'] = (all_df['OpenPorchSF'] + all_df['3SsnPorch'] + all_df['EnclosedPorch'] + all_df['ScreenPorch'])\nall_df = all_df.drop(['FullBath', 'HalfBath', 'BsmtFullBath', 'BsmtHalfBath', 'OpenPorchSF', '3SsnPorch', 'EnclosedPorch', 'ScreenPorch'], axis=1)\nprint(all_df.shape)\n```\n\n    (2919, 65)\n    \n\n- 연도와 관련된 변수를 추출하는 코드 작성\n\n\n```python\nnum_all_vars = list(train.select_dtypes(include=[np.number]))\nyear_feature = []\nfor var in num_all_vars:\n  if 'Yr' in var:\n    year_feature.append(var)\n  elif 'Year' in var:\n    year_feature.append(var)\n  else:  \n    print(var, \"is not related with Year\")\nprint(year_feature)\n```\n\n    MSSubClass is not related with Year\n    LotFrontage is not related with Year\n    LotArea is not related with Year\n    OverallQual is not related with Year\n    OverallCond is not related with Year\n    MasVnrArea is not related with Year\n    BsmtFinSF1 is not related with Year\n    BsmtFinSF2 is not related with Year\n    BsmtUnfSF is not related with Year\n    TotalBsmtSF is not related with Year\n    1stFlrSF is not related with Year\n    2ndFlrSF is not related with Year\n    LowQualFinSF is not related with Year\n    GrLivArea is not related with Year\n    BsmtFullBath is not related with Year\n    BsmtHalfBath is not related with Year\n    FullBath is not related with Year\n    HalfBath is not related with Year\n    BedroomAbvGr is not related with Year\n    KitchenAbvGr is not related with Year\n    TotRmsAbvGrd is not related with Year\n    Fireplaces is not related with Year\n    GarageCars is not related with Year\n    GarageArea is not related with Year\n    WoodDeckSF is not related with Year\n    OpenPorchSF is not related with Year\n    EnclosedPorch is not related with Year\n    3SsnPorch is not related with Year\n    ScreenPorch is not related with Year\n    PoolArea is not related with Year\n    MiscVal is not related with Year\n    MoSold is not related with Year\n    ['YearBuilt', 'YearRemodAdd', 'GarageYrBlt', 'YrSold']\n    \n\n\n```python\nfig, ax = plt.subplots(3, 1, figsize=(10, 6), sharex=True, sharey=True)\nfor i, var in enumerate(year_feature):\n  if var != 'YrSold':\n    ax[i].scatter(train[var], y, alpha=0.3)\n    ax[i].set_title('{}'.format(var), size=15)\n    ax[i].set_ylabel('SalePrice', size=15, labelpad=12.5)\nplt.tight_layout()\nplt.show()\n```\n\n\n    \n![png](/images/0707/output_39_0.png)\n    \n\n\n\n```python\nall_df = all_df.drop(['YearBuilt', 'GarageYrBlt'], axis=1)\nprint(all_df.shape)\n```\n\n    (2919, 63)\n    \n\n\n```python\nYearsSinceRemodel = train['YrSold'].astype(int) - train['YearRemodAdd'].astype(int)\n\nfig, ax = plt.subplots(figsize=(10, 6))\nax.scatter(YearsSinceRemodel, y, alpha=0.3)\nplt.show()\n```\n\n\n    \n![png](/images/0707/output_41_0.png)\n    \n\n\n\n```python\nall_df['YearsSinceRemodel'] = all_df['YrSold'].astype(int) - all_df['YearRemodAdd'].astype(int)\nall_df = all_df.drop(['YrSold', 'YearRemodAdd'], axis=1)\nprint(all_df.shape)\n```\n\n    (2919, 62)\n    \n\n## 더미변수\n- 더미변수란 원 데이터를 독립변수를 0과 1로 변환하는 변수를 말함.\n\n\n```python\nall_df['PoolArea'].value_counts()\n```\n\n\n\n\n    0      2906\n    512       1\n    648       1\n    576       1\n    555       1\n    480       1\n    519       1\n    738       1\n    144       1\n    368       1\n    444       1\n    228       1\n    561       1\n    800       1\n    Name: PoolArea, dtype: int64\n\n\n\n- 사용자 정의 함수 만들기\n\n\n```python\ndef count_dummy(x):\n    if x > 0:\n        return 1\n    else:\n        return 0\n```\n\n\n```python\nall_df['PoolArea'] = all_df['PoolArea'].apply(count_dummy)\nall_df['PoolArea'].value_counts()\n```\n\n\n\n\n    0    2906\n    1      13\n    Name: PoolArea, dtype: int64\n\n\n\n\n```python\nall_df['GarageArea'] = all_df['GarageArea'].apply(count_dummy)\nall_df['GarageArea'].value_counts()\n```\n\n\n\n\n    1    2762\n    0     157\n    Name: GarageArea, dtype: int64\n\n\n\n\n```python\nall_df['Fireplaces'] = all_df['Fireplaces'].apply(count_dummy)\nall_df['Fireplaces'].value_counts()\n```\n\n\n\n\n    1    1499\n    0    1420\n    Name: Fireplaces, dtype: int64\n\n\n\n## 인코딩\n- 문자열이 있으면 쓸 수 없으므로 숫자로 바꿔준다\n  + 문자를 숫자로 변환해주는 코드를 인코딩 변환 이라고 한다.\n \n\n\n```python\n# 분류모형\n# 종속변수에 적용 (양성, 음성)\n# Label Encoder는 종속변수에만 적용\nfrom sklearn.preprocessing import LabelEncoder\nimport pandas as pd\n\ntemp = pd.DataFrame({'Food_Name': ['Apple', 'Chicken', 'Broccoli'], \n                     'Calories': [95, 231, 50]})\n\nencoder = LabelEncoder()\nencoder.fit(temp['Food_Name'])\nlabels = encoder.transform(temp['Food_Name'])\nprint(list(temp['Food_Name']), \"==>\", labels.tolist())\n```\n\n    ['Apple', 'Chicken', 'Broccoli'] ==> [0, 2, 1]\n    \n\n\n```python\nall_df.info()\n\n```\n\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 2919 entries, 0 to 2918\n    Data columns (total 62 columns):\n     #   Column             Non-Null Count  Dtype  \n    ---  ------             --------------  -----  \n     0   MSSubClass         2919 non-null   int64  \n     1   MSZoning           2919 non-null   object \n     2   LotArea            2919 non-null   int64  \n     3   Street             2919 non-null   object \n     4   LotShape           2919 non-null   object \n     5   LandContour        2919 non-null   object \n     6   Utilities          2919 non-null   object \n     7   LotConfig          2919 non-null   object \n     8   LandSlope          2919 non-null   object \n     9   Neighborhood       2919 non-null   object \n     10  Condition1         2919 non-null   object \n     11  Condition2         2919 non-null   object \n     12  BldgType           2919 non-null   object \n     13  HouseStyle         2919 non-null   object \n     14  OverallQual        2919 non-null   int64  \n     15  OverallCond        2919 non-null   int64  \n     16  RoofStyle          2919 non-null   object \n     17  RoofMatl           2919 non-null   object \n     18  Exterior1st        2919 non-null   object \n     19  Exterior2nd        2919 non-null   object \n     20  MasVnrType         2919 non-null   object \n     21  MasVnrArea         2919 non-null   float64\n     22  ExterQual          2919 non-null   object \n     23  ExterCond          2919 non-null   object \n     24  Foundation         2919 non-null   object \n     25  BsmtQual           2919 non-null   object \n     26  BsmtCond           2919 non-null   object \n     27  BsmtExposure       2919 non-null   object \n     28  BsmtFinType1       2919 non-null   object \n     29  BsmtFinSF1         2919 non-null   float64\n     30  BsmtFinType2       2919 non-null   object \n     31  BsmtFinSF2         2919 non-null   float64\n     32  BsmtUnfSF          2919 non-null   float64\n     33  Heating            2919 non-null   object \n     34  HeatingQC          2919 non-null   object \n     35  CentralAir         2919 non-null   object \n     36  Electrical         2919 non-null   object \n     37  LowQualFinSF       2919 non-null   int64  \n     38  GrLivArea          2919 non-null   int64  \n     39  BedroomAbvGr       2919 non-null   int64  \n     40  KitchenAbvGr       2919 non-null   int64  \n     41  KitchenQual        2919 non-null   object \n     42  TotRmsAbvGrd       2919 non-null   int64  \n     43  Functional         2919 non-null   object \n     44  Fireplaces         2919 non-null   int64  \n     45  GarageType         2919 non-null   object \n     46  GarageFinish       2919 non-null   object \n     47  GarageCars         2919 non-null   float64\n     48  GarageArea         2919 non-null   int64  \n     49  GarageQual         2919 non-null   object \n     50  GarageCond         2919 non-null   object \n     51  PavedDrive         2919 non-null   object \n     52  WoodDeckSF         2919 non-null   int64  \n     53  PoolArea           2919 non-null   int64  \n     54  MiscVal            2919 non-null   int64  \n     55  MoSold             2919 non-null   int64  \n     56  SaleType           2919 non-null   object \n     57  SaleCondition      2919 non-null   object \n     58  TotalSF            2919 non-null   float64\n     59  Total_Bathrooms    2919 non-null   float64\n     60  Total_porch_sf     2919 non-null   int64  \n     61  YearsSinceRemodel  2919 non-null   int32  \n    dtypes: float64(7), int32(1), int64(16), object(38)\n    memory usage: 1.4+ MB\n    \n\n## Label Encoding, Ordinal Encoding, One-Hot Encoding\n- 인코딩은 문자 데이터를 수치로 변환하는 방법론 중의 하나이다\n\n- OrdinalEncoder는 독립변수에만 쓴다.\n\n\n```python\n# Label Encoding, One-Hot Encoding은 종속변수에 쓴다 (남, 여)\n\n\nfrom sklearn.preprocessing import OrdinalEncoder\nimport pandas as pd\n\ntemp = pd.DataFrame({'Food_Name': ['Apple', 'Chicken', 'Broccoli'], \n                     'Calories': [95, 231, 50]})\n\nencoder = OrdinalEncoder()\nlabels = encoder.fit_transform(temp[['Food_Name']])\nprint(list(temp['Food_Name']), \"==>\", labels.tolist())\n```\n\n    ['Apple', 'Chicken', 'Broccoli'] ==> [[0.0], [2.0], [1.0]]\n    \n\n- pandas 메소드를 통해서 직접 숫자로 변환\n\n\n```python\ntemp = pd.DataFrame({'Food_Name': ['Apple', 'Chicken', 'Broccoli'], \n                     'Calories': [95, 231, 50]})\n\ntemp['Food_No'] = temp.Food_Name.replace(to_replace = ['Apple', 'Chicken', 'Broccoli'], value = [1, 2, 3])\nprint(temp[['Food_Name', 'Food_No']])\n```\n\n      Food_Name  Food_No\n    0     Apple        1\n    1   Chicken        2\n    2  Broccoli        3\n    \n\n- 원핫 인코딩\n   + scikit-learn 방식이 조금 복잡함\n   + 그래서 보통은 pandas get_dummies() 함수를 활용한다\n\n\n```python\nimport pandas as pd\nfrom sklearn.preprocessing import LabelBinarizer\n\ntemp = pd.DataFrame({'Food_Name': ['Apple', 'Chicken', 'Broccoli'], \n                     'Calories': [95, 231, 50]})\n\nencoder = LabelBinarizer()\nencoder.fit(temp['Food_Name'])\ntransformed = encoder.transform(temp['Food_Name'])\nohe_df = pd.DataFrame(transformed)\ntemp = pd.concat([temp, ohe_df], axis=1).drop(['Food_Name'], axis=1)\ntemp.columns = ['Calories', 'Food_Name_Apple', 'Food_Name_Broccoli', 'Food_Name_Chicken']\nprint(temp)\nprint(temp.shape)\n```\n\n       Calories  Food_Name_Apple  Food_Name_Broccoli  Food_Name_Chicken\n    0        95                1                   0                  0\n    1       231                0                   0                  1\n    2        50                0                   1                  0\n    (3, 4)\n    \n\n\n```python\nimport pandas as pd\n\ntemp = pd.DataFrame({'Food_Name': ['Apple', 'Chicken', 'Broccoli'], \n                     'Calories': [95, 231, 50]})\n\ntemp = pd.get_dummies(temp)\nprint(temp)\nprint(temp.shape)\n```\n\n       Calories  Food_Name_Apple  Food_Name_Broccoli  Food_Name_Chicken\n    0        95                1                   0                  0\n    1       231                0                   0                  1\n    2        50                0                   1                  0\n    (3, 4)\n    \n\n- 본 데이터 적용\n  + 여기서는 Ordinal Encoding 적용 안함. (단, 실전에서는 꼭 찾아서 해야함).\n- One-Hot Encoding 적용\n\n\n```python\nall_df = pd.get_dummies(all_df).reset_index(drop=True)\nall_df.shape\n```\n\n\n\n\n    (2919, 258)\n\n\n\n- train, test 데이터 합쳐서 진행\n- train, test 데이터 재분리\n\n\n```python\nX = all_df.iloc[:len(y), :]\ntest = all_df.iloc[len(y):, :]\n\nX.shape, y.shape, test.shape\n```\n\n\n\n\n    ((1460, 258), (1460,), (1459, 258))\n\n\n\n- 머신러닝을 위한 데이터 전처리가 끝남\n\n## 과제\n- 남은 시간동안 교재를 보고 머신러닝 학습 및 RMSE를 구하세요.\n- 데이터셋 분리\n  + X 데이터를 X_train, X_test, y_train, y_test로 분리\n\n\n```python\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size = 0.3, random_state=42)\nX_train.shape, X_test.shape, y_train.shape, y_test.shape\n```\n\n\n\n\n    ((1022, 258), (438, 258), (1022,), (438,))\n\n\n\n## 평가지표\n- MAE, MSE, RMSE\n\n### MAE\n- 실젯값과 예측값의 차이, 오차, 오차들의 절댓값 평균을 말함\n\n\n```python\nimport numpy as np\n\ndef mean_absolute_error(y_true, y_pred):\n    error = 0\n    for yt, yp in zip(y_true, y_pred):\n        # yt : 실젯값\n        # yp : 예측값\n        error = error + np.abs(yt - yp)\n        # 절댓값 오차의 평균\n    mae = error / len(y_true)\n    return mae\n\ndef mean_squared_error(y_true, y_pred):\n    error = 0\n    for yt, yp in zip(y_true, y_pred):\n        # yt : 실젯값\n        # yp : 예측값\n        error = error + (yt - yp) ** 2\n        # 제곱값 오차의 평균\n    mse = error / len(y_true)\n    return mse\n\ndef root_mean_squared_error(y_true, y_pred):\n    error = 0\n    for yt, yp in zip(y_true, y_pred):\n        # yt : 실젯값\n        # yp : 예측값\n        error = error + (yt - yp) ** 2\n        # 제곱값 오차의 평균\n    mse = error / len(y_true)\n    \n    # 제곱근 추가\n    rmse = np.round(np.sqrt(mse), 3)\n    return rmse\n\ny_true = [400, 300, 800]\ny_pred = [380, 320, 777]\n\nprint(\"MAE:\", mean_absolute_error(y_true, y_pred))\nprint(\"MSE:\", mean_squared_error(y_true, y_pred))\nprint(\"RMSE:\", root_mean_squared_error(y_true, y_pred))\n```\n\n    MAE: 21.0\n    MSE: 443.0\n    RMSE: 21.048\n    \n\n\n```python\nfrom sklearn.metrics import mean_squared_error\ndef rmse(y_true, y_pred):\n    return np.sqrt(mean_squared_error(y_true, y_pred))\n```\n\n## 머신러닝 모형 정의, 검증 평가\n- 교차 검증 함수 만들기\n\n\n```python\n# 교차 검증\nfrom sklearn.model_selection import KFold, cross_val_score \n\n# 모형 정의\nfrom sklearn.linear_model import LinearRegression \n\ndef cv_rmse(model, n_folds=5):\n    cv = KFold(n_splits = n_folds, random_state=42, shuffle=True)\n    rmse_list = np.sqrt(-cross_val_score(model, X, y, scoring='neg_mean_squared_error', cv=cv))\n    print('CV RMSE Value List:', np.round(rmse_list, 4))\n    print('CV RMSE mean List:', np.round(np.mean(rmse_list), 4))\n    return rmse_list\n```\n\n\n```python\n# 교차 검증\nfrom sklearn.model_selection import KFold, cross_val_score \n\n# 모형 정의\nfrom sklearn.linear_model import LinearRegression \n\ndef cv_rmse(model, n_folds=5):\n    cv = KFold(n_splits = n_folds, random_state=42, shuffle=True)\n    rmse_list = np.sqrt(-cross_val_score(model, X, y, scoring='neg_mean_squared_error', cv=cv))\n    print('CV RMSE Value List:', np.round(rmse_list, 4))\n    print('CV RMSE mean List:', np.round(np.mean(rmse_list), 4))\n    return rmse_list \n\nrmse_scores = {} \nlr_model = LinearRegression()\n\nscore = cv_rmse(lr_model, n_folds=5)\nprint('linear regression - mean : {:.4f} (std: {:.4f})'.format(score.mean(), score.std()))\n\nrmse_scores['Linear Regression'] = (score.mean(), score.std())\n```\n\n    CV RMSE Value List: [0.1279 0.1258 0.2213 0.1558 0.1113]\n    CV RMSE mean List: 0.1484\n    linear regression - mean : 0.1484 (std: 0.0392)\n    \n\n## 제출 방법\n\n\n```python\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.model_selection import KFold, cross_val_score\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor\n\n\ndef cv_rmse(model, n_folds=5):\n    cv = KFold(n_splits=n_folds, random_state=42, shuffle=True)\n    rmse_list = np.sqrt(-cross_val_score(model, X, y, scoring='neg_mean_squared_error', cv=cv))\n    print('CV RMSE value list:', np.round(rmse_list, 4))\n    print('CV RMSE mean value:', np.round(np.mean(rmse_list), 4))\n    return (rmse_list)\n\nn_folds = 5\nrmse_scores = {}\n#lr_model = LinearRegression()\nrf_model=RandomForestRegressor()\n```\n\n\n```python\nscore = cv_rmse(rf_model, n_folds)\nprint(\"linear regression - mean: {:.4f} (std: {:.4f})\".format(score.mean(), score.std()))\nrmse_scores['linear regression'] = (score.mean(), score.std())\n```\n\n    CV RMSE value list: [0.1445 0.1275 0.1778 0.1442 0.1217]\n    CV RMSE mean value: 0.1432\n    linear regression - mean: 0.1432 (std: 0.0195)\n    \n\n\n```python\nfrom sklearn.model_selection import cross_val_predict\n\n# X = all_df.iloc[:len(y), :]\n# X_test = all_df.iloc[len(y):, :]\n# X.shape, y.shape, X_test.shape\n\nrf_model_fit = rf_model.fit(X_train, y_train)\nfinal_preds = np.floor(np.expm1(rf_model_fit.predict(test)))\nprint(final_preds)\n```\n\n    [123399. 156138. 176533. ... 156601. 119066. 219373.]\n    \n\n\n```python\nsubmission = pd.read_csv(DATA_PATH + \"sample_submission.csv\")\nsubmission.iloc[:,1] = final_preds\nprint(submission.head())\nsubmission.to_csv(\"submission.csv\", index=False)\n```\n\n         Id  SalePrice\n    0  1461   123399.0\n    1  1462   156138.0\n    2  1463   176533.0\n    3  1464   183981.0\n    4  1465   194195.0\n    \n\n\n```python\nfrom sklearn.linear_model import LinearRegression\nlr_model = LinearRegression()\nlr_model.fit(X_train, y_train) \n\nprint(lr_model.score(X_train, y_train))\nprint(lr_model.score(X_test, y_test))\n```\n\n    0.9431219120690453\n    0.9023841611069845\n    \n","slug":"lecture-in-humanedu","published":1,"updated":"2022-07-10T15:16:01.902Z","_id":"cl5fdf8ou0000uou044ivbcoo","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n<h2 id=\"라이브러리-불러오기\"><a href=\"#라이브러리-불러오기\" class=\"headerlink\" title=\"라이브러리 불러오기\"></a>라이브러리 불러오기</h2><ul>\n<li>주요 라이브러리 버전을 확인한다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib <span class=\"keyword\">as</span> mpl</span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns</span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn</span><br><span class=\"line\"><span class=\"keyword\">import</span> xgboost <span class=\"keyword\">as</span> xgb</span><br><span class=\"line\"><span class=\"keyword\">import</span> lightgbm <span class=\"keyword\">as</span> lgb</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;pandas version:&quot;</span>, pd.__version__)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;numpy version:&quot;</span>, np.__version__)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;matplotlib version:&quot;</span>, mpl.__version__)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;seaborn version:&quot;</span>, sns.__version__)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;sklearn version:&quot;</span>, sklearn.__version__)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;xgboost version:&quot;</span>, xgb.__version__)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;lightgbm version:&quot;</span>, lgb.__version__)</span><br></pre></td></tr></table></figure>\n\n<pre><code>pandas version: 1.4.2\nnumpy version: 1.21.5\nmatplotlib version: 3.5.1\nseaborn version: 0.11.2\nsklearn version: 1.0.2\nxgboost version: 1.6.1\nlightgbm version: 3.3.2\n</code></pre>\n<h2 id=\"데이터-불러오기\"><a href=\"#데이터-불러오기\" class=\"headerlink\" title=\"데이터 불러오기\"></a>데이터 불러오기</h2><ul>\n<li>pandas 활용</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DATA_PATH = <span class=\"string\">&#x27;/kaggle/input/house-prices-advanced-regression-techniques/&#x27;</span></span><br><span class=\"line\">train = pd.read_csv(DATA_PATH + <span class=\"string\">&quot;train.csv&quot;</span>)</span><br><span class=\"line\">test = pd.read_csv(DATA_PATH + <span class=\"string\">&quot;test.csv&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Datasets are uploaded&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Datasets are uploaded\n</code></pre>\n<h2 id=\"데이터-둘러보기\"><a href=\"#데이터-둘러보기\" class=\"headerlink\" title=\"데이터 둘러보기\"></a>데이터 둘러보기</h2><ul>\n<li>데이터를 둘러봅니다.</li>\n<li>train : 행 갯수 1460 열 갯수 81</li>\n<li>test : 행 갯수 1459, 열 갯수 80</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">train.shape, test.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>((1460, 81), (1459, 80))\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">train.info()</span><br></pre></td></tr></table></figure>\n\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 1460 entries, 0 to 1459\nData columns (total 81 columns):\n #   Column         Non-Null Count  Dtype  \n---  ------         --------------  -----  \n 0   Id             1460 non-null   int64  \n 1   MSSubClass     1460 non-null   int64  \n 2   MSZoning       1460 non-null   object \n 3   LotFrontage    1201 non-null   float64\n 4   LotArea        1460 non-null   int64  \n 5   Street         1460 non-null   object \n 6   Alley          91 non-null     object \n 7   LotShape       1460 non-null   object \n 8   LandContour    1460 non-null   object \n 9   Utilities      1460 non-null   object \n 10  LotConfig      1460 non-null   object \n 11  LandSlope      1460 non-null   object \n 12  Neighborhood   1460 non-null   object \n 13  Condition1     1460 non-null   object \n 14  Condition2     1460 non-null   object \n 15  BldgType       1460 non-null   object \n 16  HouseStyle     1460 non-null   object \n 17  OverallQual    1460 non-null   int64  \n 18  OverallCond    1460 non-null   int64  \n 19  YearBuilt      1460 non-null   int64  \n 20  YearRemodAdd   1460 non-null   int64  \n 21  RoofStyle      1460 non-null   object \n 22  RoofMatl       1460 non-null   object \n 23  Exterior1st    1460 non-null   object \n 24  Exterior2nd    1460 non-null   object \n 25  MasVnrType     1452 non-null   object \n 26  MasVnrArea     1452 non-null   float64\n 27  ExterQual      1460 non-null   object \n 28  ExterCond      1460 non-null   object \n 29  Foundation     1460 non-null   object \n 30  BsmtQual       1423 non-null   object \n 31  BsmtCond       1423 non-null   object \n 32  BsmtExposure   1422 non-null   object \n 33  BsmtFinType1   1423 non-null   object \n 34  BsmtFinSF1     1460 non-null   int64  \n 35  BsmtFinType2   1422 non-null   object \n 36  BsmtFinSF2     1460 non-null   int64  \n 37  BsmtUnfSF      1460 non-null   int64  \n 38  TotalBsmtSF    1460 non-null   int64  \n 39  Heating        1460 non-null   object \n 40  HeatingQC      1460 non-null   object \n 41  CentralAir     1460 non-null   object \n 42  Electrical     1459 non-null   object \n 43  1stFlrSF       1460 non-null   int64  \n 44  2ndFlrSF       1460 non-null   int64  \n 45  LowQualFinSF   1460 non-null   int64  \n 46  GrLivArea      1460 non-null   int64  \n 47  BsmtFullBath   1460 non-null   int64  \n 48  BsmtHalfBath   1460 non-null   int64  \n 49  FullBath       1460 non-null   int64  \n 50  HalfBath       1460 non-null   int64  \n 51  BedroomAbvGr   1460 non-null   int64  \n 52  KitchenAbvGr   1460 non-null   int64  \n 53  KitchenQual    1460 non-null   object \n 54  TotRmsAbvGrd   1460 non-null   int64  \n 55  Functional     1460 non-null   object \n 56  Fireplaces     1460 non-null   int64  \n 57  FireplaceQu    770 non-null    object \n 58  GarageType     1379 non-null   object \n 59  GarageYrBlt    1379 non-null   float64\n 60  GarageFinish   1379 non-null   object \n 61  GarageCars     1460 non-null   int64  \n 62  GarageArea     1460 non-null   int64  \n 63  GarageQual     1379 non-null   object \n 64  GarageCond     1379 non-null   object \n 65  PavedDrive     1460 non-null   object \n 66  WoodDeckSF     1460 non-null   int64  \n 67  OpenPorchSF    1460 non-null   int64  \n 68  EnclosedPorch  1460 non-null   int64  \n 69  3SsnPorch      1460 non-null   int64  \n 70  ScreenPorch    1460 non-null   int64  \n 71  PoolArea       1460 non-null   int64  \n 72  PoolQC         7 non-null      object \n 73  Fence          281 non-null    object \n 74  MiscFeature    54 non-null     object \n 75  MiscVal        1460 non-null   int64  \n 76  MoSold         1460 non-null   int64  \n 77  YrSold         1460 non-null   int64  \n 78  SaleType       1460 non-null   object \n 79  SaleCondition  1460 non-null   object \n 80  SalePrice      1460 non-null   int64  \ndtypes: float64(3), int64(35), object(43)\nmemory usage: 924.0+ KB\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">test.info()</span><br></pre></td></tr></table></figure>\n\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 1459 entries, 0 to 1458\nData columns (total 80 columns):\n #   Column         Non-Null Count  Dtype  \n---  ------         --------------  -----  \n 0   Id             1459 non-null   int64  \n 1   MSSubClass     1459 non-null   int64  \n 2   MSZoning       1455 non-null   object \n 3   LotFrontage    1232 non-null   float64\n 4   LotArea        1459 non-null   int64  \n 5   Street         1459 non-null   object \n 6   Alley          107 non-null    object \n 7   LotShape       1459 non-null   object \n 8   LandContour    1459 non-null   object \n 9   Utilities      1457 non-null   object \n 10  LotConfig      1459 non-null   object \n 11  LandSlope      1459 non-null   object \n 12  Neighborhood   1459 non-null   object \n 13  Condition1     1459 non-null   object \n 14  Condition2     1459 non-null   object \n 15  BldgType       1459 non-null   object \n 16  HouseStyle     1459 non-null   object \n 17  OverallQual    1459 non-null   int64  \n 18  OverallCond    1459 non-null   int64  \n 19  YearBuilt      1459 non-null   int64  \n 20  YearRemodAdd   1459 non-null   int64  \n 21  RoofStyle      1459 non-null   object \n 22  RoofMatl       1459 non-null   object \n 23  Exterior1st    1458 non-null   object \n 24  Exterior2nd    1458 non-null   object \n 25  MasVnrType     1443 non-null   object \n 26  MasVnrArea     1444 non-null   float64\n 27  ExterQual      1459 non-null   object \n 28  ExterCond      1459 non-null   object \n 29  Foundation     1459 non-null   object \n 30  BsmtQual       1415 non-null   object \n 31  BsmtCond       1414 non-null   object \n 32  BsmtExposure   1415 non-null   object \n 33  BsmtFinType1   1417 non-null   object \n 34  BsmtFinSF1     1458 non-null   float64\n 35  BsmtFinType2   1417 non-null   object \n 36  BsmtFinSF2     1458 non-null   float64\n 37  BsmtUnfSF      1458 non-null   float64\n 38  TotalBsmtSF    1458 non-null   float64\n 39  Heating        1459 non-null   object \n 40  HeatingQC      1459 non-null   object \n 41  CentralAir     1459 non-null   object \n 42  Electrical     1459 non-null   object \n 43  1stFlrSF       1459 non-null   int64  \n 44  2ndFlrSF       1459 non-null   int64  \n 45  LowQualFinSF   1459 non-null   int64  \n 46  GrLivArea      1459 non-null   int64  \n 47  BsmtFullBath   1457 non-null   float64\n 48  BsmtHalfBath   1457 non-null   float64\n 49  FullBath       1459 non-null   int64  \n 50  HalfBath       1459 non-null   int64  \n 51  BedroomAbvGr   1459 non-null   int64  \n 52  KitchenAbvGr   1459 non-null   int64  \n 53  KitchenQual    1458 non-null   object \n 54  TotRmsAbvGrd   1459 non-null   int64  \n 55  Functional     1457 non-null   object \n 56  Fireplaces     1459 non-null   int64  \n 57  FireplaceQu    729 non-null    object \n 58  GarageType     1383 non-null   object \n 59  GarageYrBlt    1381 non-null   float64\n 60  GarageFinish   1381 non-null   object \n 61  GarageCars     1458 non-null   float64\n 62  GarageArea     1458 non-null   float64\n 63  GarageQual     1381 non-null   object \n 64  GarageCond     1381 non-null   object \n 65  PavedDrive     1459 non-null   object \n 66  WoodDeckSF     1459 non-null   int64  \n 67  OpenPorchSF    1459 non-null   int64  \n 68  EnclosedPorch  1459 non-null   int64  \n 69  3SsnPorch      1459 non-null   int64  \n 70  ScreenPorch    1459 non-null   int64  \n 71  PoolArea       1459 non-null   int64  \n 72  PoolQC         3 non-null      object \n 73  Fence          290 non-null    object \n 74  MiscFeature    51 non-null     object \n 75  MiscVal        1459 non-null   int64  \n 76  MoSold         1459 non-null   int64  \n 77  YrSold         1459 non-null   int64  \n 78  SaleType       1458 non-null   object \n 79  SaleCondition  1459 non-null   object \ndtypes: float64(11), int64(26), object(43)\nmemory usage: 912.0+ KB\n</code></pre>\n<h2 id=\"데이터-시각화\"><a href=\"#데이터-시각화\" class=\"headerlink\" title=\"데이터 시각화\"></a>데이터 시각화</h2><ul>\n<li><p>여기에서는 생략</p>\n</li>\n<li><p>종속변수 분포는 확인</p>\n</li>\n<li><p>샤피로 검정</p>\n</li>\n<li><p>정규분포인가?</p>\n<ul>\n<li>정규분포 X —&gt; 로그변환, 박스콕스 변환 등등</li>\n<li>정규분포로 만들어 줘야 함.</li>\n</ul>\n</li>\n<li><p>선형모델의 성능을 올리기 위해서는 이 작업을 해야 함</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> scipy.stats <span class=\"keyword\">import</span> norm</span><br><span class=\"line\">(mu, sigma) = norm.fit(train[<span class=\"string\">&#x27;SalePrice&#x27;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;평균:&quot;</span>, mu)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;표준편차:&quot;</span>, sigma)</span><br><span class=\"line\"></span><br><span class=\"line\">fig, ax = plt.subplots(figsize=(<span class=\"number\">10</span>, <span class=\"number\">6</span>))</span><br><span class=\"line\">sns.histplot(train[<span class=\"string\">&#x27;SalePrice&#x27;</span>])</span><br><span class=\"line\">ax.<span class=\"built_in\">set</span>(title =<span class=\"string\">&quot;SalePrice Distribution&quot;</span>)</span><br><span class=\"line\">ax.axvline(mu, color = <span class=\"string\">&#x27;r&#x27;</span>, linestyle = <span class=\"string\">&#x27;--&#x27;</span>)</span><br><span class=\"line\">ax.text(mu + <span class=\"number\">10000</span>, <span class=\"number\">150</span>, <span class=\"string\">&#x27;Mean of SalePrice&#x27;</span>, color = <span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n<pre><code>평균: 180921.19589041095\n표준편차: 79415.29188606751\n</code></pre>\n<p><img src=\"/images/0707/output_10_1.png\" alt=\"png\"></p>\n<ul>\n<li>로그변환을 해서 정규분포로 변환해준다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">train[<span class=\"string\">&#x27;SalePrice&#x27;</span>][:<span class=\"number\">10</span>]  <span class=\"comment\"># 로그변환을 한 값의 예측 나중에 값 다 구하고 다시 지수변환 해야되는 것 기억</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>0    208500\n1    181500\n2    223500\n3    140000\n4    250000\n5    143000\n6    307000\n7    200000\n8    129900\n9    118000\nName: SalePrice, dtype: int64\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">train[<span class=\"string\">&#x27;SalePrice&#x27;</span>] = np.log1p(train[<span class=\"string\">&#x27;SalePrice&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">(mu, sigma) = norm.fit(train[<span class=\"string\">&#x27;SalePrice&#x27;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;평균:&quot;</span>, mu)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;표준편차:&quot;</span>, sigma)</span><br><span class=\"line\"></span><br><span class=\"line\">fig, ax = plt.subplots(figsize=(<span class=\"number\">10</span>, <span class=\"number\">6</span>))</span><br><span class=\"line\">sns.histplot(train[<span class=\"string\">&#x27;SalePrice&#x27;</span>])</span><br><span class=\"line\">ax.<span class=\"built_in\">set</span>(title =<span class=\"string\">&quot;SalePrice Distribution&quot;</span>)</span><br><span class=\"line\">ax.axvline(mu, color = <span class=\"string\">&#x27;r&#x27;</span>, linestyle = <span class=\"string\">&#x27;--&#x27;</span>)</span><br><span class=\"line\">ax.text(mu + <span class=\"number\">0.001</span>, <span class=\"number\">160</span>, <span class=\"string\">&#x27;Mean of SalePrice&#x27;</span>, color = <span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\">ax.set_ylim(<span class=\"number\">0</span>, <span class=\"number\">170</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n<pre><code>평균: 12.024057394918406\n표준편차: 0.39931245219387496\n</code></pre>\n<p><img src=\"/images/0707/output_13_1.png\" alt=\"png\"></p>\n<h2 id=\"데이터-전처리\"><a href=\"#데이터-전처리\" class=\"headerlink\" title=\"데이터 전처리\"></a>데이터 전처리</h2><ul>\n<li>컬럼 갯수가 많다? &#x3D;&#x3D;&gt; 어떤 컬럼을 없앨 것인가?</li>\n<li>머신러닝 연산 속도부터 높여야 함.</li>\n</ul>\n<h3 id=\"데이터-ID-값-제거\"><a href=\"#데이터-ID-값-제거\" class=\"headerlink\" title=\"데이터 ID 값 제거\"></a>데이터 ID 값 제거</h3><ul>\n<li>머신러닝 &#x3D; 패턴분석<ul>\n<li>패턴이 안보이는 컬럼은 삭제해라</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">train_ID = train[<span class=\"string\">&#x27;Id&#x27;</span>]</span><br><span class=\"line\">test_ID = test[<span class=\"string\">&#x27;Id&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">train = train.drop([<span class=\"string\">&#x27;Id&#x27;</span>], axis = <span class=\"number\">1</span>)  <span class=\"comment\"># 이런 제거 작업은 train과 test 같이 작업하는 것이 좋다.</span></span><br><span class=\"line\">train.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>(1460, 80)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">test = test.drop([<span class=\"string\">&#x27;Id&#x27;</span>], axis = <span class=\"number\">1</span>)</span><br><span class=\"line\">test.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>(1459, 79)\n</code></pre>\n<h3 id=\"Y값-추출\"><a href=\"#Y값-추출\" class=\"headerlink\" title=\"Y값 추출\"></a>Y값 추출</h3><ul>\n<li>train 데이터에 SalePrice 만 따로 저장한다</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">y = train[<span class=\"string\">&#x27;SalePrice&#x27;</span>]</span><br><span class=\"line\">train = train.drop(<span class=\"string\">&#x27;SalePrice&#x27;</span>, axis = <span class=\"number\">1</span>)</span><br><span class=\"line\">train.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>(1460, 79)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">test.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>(1459, 79)\n</code></pre>\n<h3 id=\"데이터-합치기\"><a href=\"#데이터-합치기\" class=\"headerlink\" title=\"데이터 합치기\"></a>데이터 합치기</h3><ul>\n<li>성능을 높이고 싶다면 &#x3D;&#x3D;&gt; train 따로 정리 &#x2F; test 따로 정리<ul>\n<li>이렇게 하면 Data Leakage 오류를 범할 가능성이 높음</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all_df = pd.concat([train, test]).reset_index(drop=<span class=\"literal\">True</span>)</span><br><span class=\"line\">all_df.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>(2919, 79)\n</code></pre>\n<h2 id=\"결측치-확인\"><a href=\"#결측치-확인\" class=\"headerlink\" title=\"결측치 확인\"></a>결측치 확인</h2><ul>\n<li>결측치의 비율 확인하는 사용자 정의 함수 작성</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">check_na</span>(<span class=\"params\">data, head_num = <span class=\"number\">6</span></span>):</span><br><span class=\"line\">  isnull_na = (data.isnull().<span class=\"built_in\">sum</span>() / <span class=\"built_in\">len</span>(data)) * <span class=\"number\">100</span></span><br><span class=\"line\">  data_na = isnull_na.drop(isnull_na[isnull_na == <span class=\"number\">0</span>].index).sort_values(ascending=<span class=\"literal\">False</span>)</span><br><span class=\"line\">  missing_data = pd.DataFrame(&#123;<span class=\"string\">&#x27;Missing Ratio&#x27;</span> :data_na, </span><br><span class=\"line\">                               <span class=\"string\">&#x27;Data Type&#x27;</span>: data.dtypes[data_na.index]&#125;)</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;결측치 데이터 컬럼과 건수:\\n&quot;</span>, missing_data.head(head_num))</span><br><span class=\"line\"></span><br><span class=\"line\">check_na(all_df, <span class=\"number\">20</span>)</span><br><span class=\"line\"><span class=\"comment\"># PoolQC나 MiscFeature, Alley 같은 건 결측치가 엄청 많으니까 삭제해도 될건데...</span></span><br><span class=\"line\"><span class=\"comment\"># FireplaceQu 같은 48점짜리는 어떻게 결측치를 처리할 것인가? 지워야되나?</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>결측치 데이터 컬럼과 건수:\n               Missing Ratio Data Type\nPoolQC            99.657417    object\nMiscFeature       96.402878    object\nAlley             93.216855    object\nFence             80.438506    object\nFireplaceQu       48.646797    object\nLotFrontage       16.649538   float64\nGarageFinish       5.447071    object\nGarageQual         5.447071    object\nGarageCond         5.447071    object\nGarageYrBlt        5.447071   float64\nGarageType         5.378554    object\nBsmtExposure       2.809181    object\nBsmtCond           2.809181    object\nBsmtQual           2.774923    object\nBsmtFinType2       2.740665    object\nBsmtFinType1       2.706406    object\nMasVnrType         0.822199    object\nMasVnrArea         0.787941   float64\nMSZoning           0.137033    object\nBsmtFullBath       0.068517   float64\n</code></pre>\n<ul>\n<li>결측치 제거</li>\n<li>결측치 비율이 높은 변수들을 모두 제거하기로 함</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all_df = all_df.drop([<span class=\"string\">&#x27;PoolQC&#x27;</span>, <span class=\"string\">&#x27;MiscFeature&#x27;</span>, <span class=\"string\">&#x27;Alley&#x27;</span>, <span class=\"string\">&#x27;Fence&#x27;</span>, <span class=\"string\">&#x27;FireplaceQu&#x27;</span>, <span class=\"string\">&#x27;LotFrontage&#x27;</span>], axis = <span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(all_df.shape)</span><br><span class=\"line\">check_na(all_df, <span class=\"number\">40</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(2919, 73)\n결측치 데이터 컬럼과 건수:\n               Missing Ratio Data Type\nGarageCond         5.447071    object\nGarageQual         5.447071    object\nGarageYrBlt        5.447071   float64\nGarageFinish       5.447071    object\nGarageType         5.378554    object\nBsmtCond           2.809181    object\nBsmtExposure       2.809181    object\nBsmtQual           2.774923    object\nBsmtFinType2       2.740665    object\nBsmtFinType1       2.706406    object\nMasVnrType         0.822199    object\nMasVnrArea         0.787941   float64\nMSZoning           0.137033    object\nFunctional         0.068517    object\nUtilities          0.068517    object\nBsmtFullBath       0.068517   float64\nBsmtHalfBath       0.068517   float64\nGarageArea         0.034258   float64\nGarageCars         0.034258   float64\nTotalBsmtSF        0.034258   float64\nKitchenQual        0.034258    object\nElectrical         0.034258    object\nBsmtUnfSF          0.034258   float64\nBsmtFinSF2         0.034258   float64\nBsmtFinSF1         0.034258   float64\nExterior2nd        0.034258    object\nExterior1st        0.034258    object\nSaleType           0.034258    object\n</code></pre>\n<h2 id=\"결측치-채우기\"><a href=\"#결측치-채우기\" class=\"headerlink\" title=\"결측치 채우기\"></a>결측치 채우기</h2><ul>\n<li>train 데이터와 test 데이터가 섞이면 안됨.</li>\n<li>train &#x2F; test 분리해서 진행해야 함.</li>\n<li>문자데이터 : 자주 등장하는 빈도 값으로 채움</li>\n<li>숫자데이터 : 평균이 아니라, 중간값으로 채울 예정</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all_df[<span class=\"string\">&#x27;BsmtCond&#x27;</span>].value_counts()</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>TA    2606\nGd     122\nFa     104\nPo       5\nName: BsmtCond, dtype: int64\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all_df[<span class=\"string\">&#x27;BsmtCond&#x27;</span>].mode()[<span class=\"number\">0</span>]</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&#39;TA&#39;\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 문자열 데이터만 추출</span></span><br><span class=\"line\">cat_all_vars = train.select_dtypes(exclude=[np.number])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;The whole number of all_vars&quot;</span>, <span class=\"built_in\">len</span>(<span class=\"built_in\">list</span>(cat_all_vars)))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 문자열 데이터 중에서 이미 기 삭제했던 Feature들이 있었기 때문에, </span></span><br><span class=\"line\"><span class=\"comment\"># 한번 더 Feature를 정리하는 코드를 작성한다. </span></span><br><span class=\"line\"><span class=\"comment\"># 따라서 38개의 Feature만 추출했다. </span></span><br><span class=\"line\">final_cat_vars = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> v <span class=\"keyword\">in</span> cat_all_vars:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> v <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> [<span class=\"string\">&#x27;PoolQC&#x27;</span>, <span class=\"string\">&#x27;MiscFeature&#x27;</span>, <span class=\"string\">&#x27;Alley&#x27;</span>, <span class=\"string\">&#x27;Fence&#x27;</span>, <span class=\"string\">&#x27;FireplaceQu&#x27;</span>]:</span><br><span class=\"line\">        final_cat_vars.append(v)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;The whole number of final_cat_vars&quot;</span>, <span class=\"built_in\">len</span>(final_cat_vars))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 이제 각 Feature 마다 빈도수가 가장 많이 나타나는 값을 추가하는 코드를 작성한다. </span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> final_cat_vars:</span><br><span class=\"line\">  all_df[i] = all_df[i].fillna(all_df[i].mode()[<span class=\"number\">0</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 이제 수치형 데이터만 남은 것을 확인한다. </span></span><br><span class=\"line\">check_na(all_df, <span class=\"number\">20</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>The whole number of all_vars 43\nThe whole number of final_cat_vars 38\n결측치 데이터 컬럼과 건수:\n               Missing Ratio Data Type\nGarageYrBlt        5.447071   float64\nMasVnrArea         0.787941   float64\nBsmtFullBath       0.068517   float64\nBsmtHalfBath       0.068517   float64\nBsmtFinSF1         0.034258   float64\nBsmtFinSF2         0.034258   float64\nBsmtUnfSF          0.034258   float64\nTotalBsmtSF        0.034258   float64\nGarageCars         0.034258   float64\nGarageArea         0.034258   float64\n</code></pre>\n<ul>\n<li>수치</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 방법은 기존과 동일하다. </span></span><br><span class=\"line\"><span class=\"comment\"># 이번에는 수치형 데이터만 추출한다. </span></span><br><span class=\"line\">num_all_vars = <span class=\"built_in\">list</span>(train.select_dtypes(include=[np.number]))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;The whole number of all_vars&quot;</span>, <span class=\"built_in\">len</span>(num_all_vars))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 수치형 데이터 중, 결측치가 많았던 `LotFrontage`만 처리한다. </span></span><br><span class=\"line\">num_all_vars.remove(<span class=\"string\">&#x27;LotFrontage&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;The whole number of final_cat_vars&quot;</span>, <span class=\"built_in\">len</span>(num_all_vars))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 이번에는 수치형 데이터의 평균이 아닌 중간값을 지정했다. </span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> num_all_vars:</span><br><span class=\"line\">  all_df[i].fillna(value=all_df[i].median(), inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">check_na(all_df, <span class=\"number\">20</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>The whole number of all_vars 36\nThe whole number of final_cat_vars 35\n결측치 데이터 컬럼과 건수:\n Empty DataFrame\nColumns: [Missing Ratio, Data Type]\nIndex: []\n</code></pre>\n<h2 id=\"도출-변수\"><a href=\"#도출-변수\" class=\"headerlink\" title=\"도출 변수\"></a>도출 변수</h2><ul>\n<li><p>새로운 도출 변수를 작성 (기존 변수 활용)</p>\n</li>\n<li><p>기존 변수 제거</p>\n</li>\n<li><p>각 층의 면적으로 모두 더해 전체 면적으로 계산한 새로운 변수를 작성한다.</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all_df[<span class=\"string\">&#x27;TotalSF&#x27;</span>] = all_df[<span class=\"string\">&#x27;TotalBsmtSF&#x27;</span>] + all_df[<span class=\"string\">&#x27;1stFlrSF&#x27;</span>] + all_df[<span class=\"string\">&#x27;2ndFlrSF&#x27;</span>]</span><br><span class=\"line\">all_df = all_df.drop([<span class=\"string\">&#x27;TotalBsmtSF&#x27;</span>, <span class=\"string\">&#x27;1stFlrSF&#x27;</span>, <span class=\"string\">&#x27;2ndFlrSF&#x27;</span>], axis=<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(all_df.shape)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(2919, 71)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all_df[<span class=\"string\">&#x27;Total_Bathrooms&#x27;</span>] = (all_df[<span class=\"string\">&#x27;FullBath&#x27;</span>] + (<span class=\"number\">0.5</span> * all_df[<span class=\"string\">&#x27;HalfBath&#x27;</span>]) + all_df[<span class=\"string\">&#x27;BsmtFullBath&#x27;</span>] + (<span class=\"number\">0.5</span> * all_df[<span class=\"string\">&#x27;BsmtHalfBath&#x27;</span>]))</span><br><span class=\"line\">all_df[<span class=\"string\">&#x27;Total_porch_sf&#x27;</span>] = (all_df[<span class=\"string\">&#x27;OpenPorchSF&#x27;</span>] + all_df[<span class=\"string\">&#x27;3SsnPorch&#x27;</span>] + all_df[<span class=\"string\">&#x27;EnclosedPorch&#x27;</span>] + all_df[<span class=\"string\">&#x27;ScreenPorch&#x27;</span>])</span><br><span class=\"line\">all_df = all_df.drop([<span class=\"string\">&#x27;FullBath&#x27;</span>, <span class=\"string\">&#x27;HalfBath&#x27;</span>, <span class=\"string\">&#x27;BsmtFullBath&#x27;</span>, <span class=\"string\">&#x27;BsmtHalfBath&#x27;</span>, <span class=\"string\">&#x27;OpenPorchSF&#x27;</span>, <span class=\"string\">&#x27;3SsnPorch&#x27;</span>, <span class=\"string\">&#x27;EnclosedPorch&#x27;</span>, <span class=\"string\">&#x27;ScreenPorch&#x27;</span>], axis=<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(all_df.shape)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(2919, 65)\n</code></pre>\n<ul>\n<li>연도와 관련된 변수를 추출하는 코드 작성</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">num_all_vars = <span class=\"built_in\">list</span>(train.select_dtypes(include=[np.number]))</span><br><span class=\"line\">year_feature = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> var <span class=\"keyword\">in</span> num_all_vars:</span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"string\">&#x27;Yr&#x27;</span> <span class=\"keyword\">in</span> var:</span><br><span class=\"line\">    year_feature.append(var)</span><br><span class=\"line\">  <span class=\"keyword\">elif</span> <span class=\"string\">&#x27;Year&#x27;</span> <span class=\"keyword\">in</span> var:</span><br><span class=\"line\">    year_feature.append(var)</span><br><span class=\"line\">  <span class=\"keyword\">else</span>:  </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(var, <span class=\"string\">&quot;is not related with Year&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(year_feature)</span><br></pre></td></tr></table></figure>\n\n<pre><code>MSSubClass is not related with Year\nLotFrontage is not related with Year\nLotArea is not related with Year\nOverallQual is not related with Year\nOverallCond is not related with Year\nMasVnrArea is not related with Year\nBsmtFinSF1 is not related with Year\nBsmtFinSF2 is not related with Year\nBsmtUnfSF is not related with Year\nTotalBsmtSF is not related with Year\n1stFlrSF is not related with Year\n2ndFlrSF is not related with Year\nLowQualFinSF is not related with Year\nGrLivArea is not related with Year\nBsmtFullBath is not related with Year\nBsmtHalfBath is not related with Year\nFullBath is not related with Year\nHalfBath is not related with Year\nBedroomAbvGr is not related with Year\nKitchenAbvGr is not related with Year\nTotRmsAbvGrd is not related with Year\nFireplaces is not related with Year\nGarageCars is not related with Year\nGarageArea is not related with Year\nWoodDeckSF is not related with Year\nOpenPorchSF is not related with Year\nEnclosedPorch is not related with Year\n3SsnPorch is not related with Year\nScreenPorch is not related with Year\nPoolArea is not related with Year\nMiscVal is not related with Year\nMoSold is not related with Year\n[&#39;YearBuilt&#39;, &#39;YearRemodAdd&#39;, &#39;GarageYrBlt&#39;, &#39;YrSold&#39;]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fig, ax = plt.subplots(<span class=\"number\">3</span>, <span class=\"number\">1</span>, figsize=(<span class=\"number\">10</span>, <span class=\"number\">6</span>), sharex=<span class=\"literal\">True</span>, sharey=<span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i, var <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(year_feature):</span><br><span class=\"line\">  <span class=\"keyword\">if</span> var != <span class=\"string\">&#x27;YrSold&#x27;</span>:</span><br><span class=\"line\">    ax[i].scatter(train[var], y, alpha=<span class=\"number\">0.3</span>)</span><br><span class=\"line\">    ax[i].set_title(<span class=\"string\">&#x27;&#123;&#125;&#x27;</span>.<span class=\"built_in\">format</span>(var), size=<span class=\"number\">15</span>)</span><br><span class=\"line\">    ax[i].set_ylabel(<span class=\"string\">&#x27;SalePrice&#x27;</span>, size=<span class=\"number\">15</span>, labelpad=<span class=\"number\">12.5</span>)</span><br><span class=\"line\">plt.tight_layout()</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0707/output_39_0.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all_df = all_df.drop([<span class=\"string\">&#x27;YearBuilt&#x27;</span>, <span class=\"string\">&#x27;GarageYrBlt&#x27;</span>], axis=<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(all_df.shape)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(2919, 63)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">YearsSinceRemodel = train[<span class=\"string\">&#x27;YrSold&#x27;</span>].astype(<span class=\"built_in\">int</span>) - train[<span class=\"string\">&#x27;YearRemodAdd&#x27;</span>].astype(<span class=\"built_in\">int</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">fig, ax = plt.subplots(figsize=(<span class=\"number\">10</span>, <span class=\"number\">6</span>))</span><br><span class=\"line\">ax.scatter(YearsSinceRemodel, y, alpha=<span class=\"number\">0.3</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0707/output_41_0.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all_df[<span class=\"string\">&#x27;YearsSinceRemodel&#x27;</span>] = all_df[<span class=\"string\">&#x27;YrSold&#x27;</span>].astype(<span class=\"built_in\">int</span>) - all_df[<span class=\"string\">&#x27;YearRemodAdd&#x27;</span>].astype(<span class=\"built_in\">int</span>)</span><br><span class=\"line\">all_df = all_df.drop([<span class=\"string\">&#x27;YrSold&#x27;</span>, <span class=\"string\">&#x27;YearRemodAdd&#x27;</span>], axis=<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(all_df.shape)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(2919, 62)\n</code></pre>\n<h2 id=\"더미변수\"><a href=\"#더미변수\" class=\"headerlink\" title=\"더미변수\"></a>더미변수</h2><ul>\n<li>더미변수란 원 데이터를 독립변수를 0과 1로 변환하는 변수를 말함.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all_df[<span class=\"string\">&#x27;PoolArea&#x27;</span>].value_counts()</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>0      2906\n512       1\n648       1\n576       1\n555       1\n480       1\n519       1\n738       1\n144       1\n368       1\n444       1\n228       1\n561       1\n800       1\nName: PoolArea, dtype: int64\n</code></pre>\n<ul>\n<li>사용자 정의 함수 만들기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">count_dummy</span>(<span class=\"params\">x</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all_df[<span class=\"string\">&#x27;PoolArea&#x27;</span>] = all_df[<span class=\"string\">&#x27;PoolArea&#x27;</span>].apply(count_dummy)</span><br><span class=\"line\">all_df[<span class=\"string\">&#x27;PoolArea&#x27;</span>].value_counts()</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>0    2906\n1      13\nName: PoolArea, dtype: int64\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all_df[<span class=\"string\">&#x27;GarageArea&#x27;</span>] = all_df[<span class=\"string\">&#x27;GarageArea&#x27;</span>].apply(count_dummy)</span><br><span class=\"line\">all_df[<span class=\"string\">&#x27;GarageArea&#x27;</span>].value_counts()</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>1    2762\n0     157\nName: GarageArea, dtype: int64\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all_df[<span class=\"string\">&#x27;Fireplaces&#x27;</span>] = all_df[<span class=\"string\">&#x27;Fireplaces&#x27;</span>].apply(count_dummy)</span><br><span class=\"line\">all_df[<span class=\"string\">&#x27;Fireplaces&#x27;</span>].value_counts()</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>1    1499\n0    1420\nName: Fireplaces, dtype: int64\n</code></pre>\n<h2 id=\"인코딩\"><a href=\"#인코딩\" class=\"headerlink\" title=\"인코딩\"></a>인코딩</h2><ul>\n<li>문자열이 있으면 쓸 수 없으므로 숫자로 바꿔준다<ul>\n<li>문자를 숫자로 변환해주는 코드를 인코딩 변환 이라고 한다.</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 분류모형</span></span><br><span class=\"line\"><span class=\"comment\"># 종속변수에 적용 (양성, 음성)</span></span><br><span class=\"line\"><span class=\"comment\"># Label Encoder는 종속변수에만 적용</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> LabelEncoder</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"></span><br><span class=\"line\">temp = pd.DataFrame(&#123;<span class=\"string\">&#x27;Food_Name&#x27;</span>: [<span class=\"string\">&#x27;Apple&#x27;</span>, <span class=\"string\">&#x27;Chicken&#x27;</span>, <span class=\"string\">&#x27;Broccoli&#x27;</span>], </span><br><span class=\"line\">                     <span class=\"string\">&#x27;Calories&#x27;</span>: [<span class=\"number\">95</span>, <span class=\"number\">231</span>, <span class=\"number\">50</span>]&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">encoder = LabelEncoder()</span><br><span class=\"line\">encoder.fit(temp[<span class=\"string\">&#x27;Food_Name&#x27;</span>])</span><br><span class=\"line\">labels = encoder.transform(temp[<span class=\"string\">&#x27;Food_Name&#x27;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">list</span>(temp[<span class=\"string\">&#x27;Food_Name&#x27;</span>]), <span class=\"string\">&quot;==&gt;&quot;</span>, labels.tolist())</span><br></pre></td></tr></table></figure>\n\n<pre><code>[&#39;Apple&#39;, &#39;Chicken&#39;, &#39;Broccoli&#39;] ==&gt; [0, 2, 1]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all_df.info()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 2919 entries, 0 to 2918\nData columns (total 62 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   MSSubClass         2919 non-null   int64  \n 1   MSZoning           2919 non-null   object \n 2   LotArea            2919 non-null   int64  \n 3   Street             2919 non-null   object \n 4   LotShape           2919 non-null   object \n 5   LandContour        2919 non-null   object \n 6   Utilities          2919 non-null   object \n 7   LotConfig          2919 non-null   object \n 8   LandSlope          2919 non-null   object \n 9   Neighborhood       2919 non-null   object \n 10  Condition1         2919 non-null   object \n 11  Condition2         2919 non-null   object \n 12  BldgType           2919 non-null   object \n 13  HouseStyle         2919 non-null   object \n 14  OverallQual        2919 non-null   int64  \n 15  OverallCond        2919 non-null   int64  \n 16  RoofStyle          2919 non-null   object \n 17  RoofMatl           2919 non-null   object \n 18  Exterior1st        2919 non-null   object \n 19  Exterior2nd        2919 non-null   object \n 20  MasVnrType         2919 non-null   object \n 21  MasVnrArea         2919 non-null   float64\n 22  ExterQual          2919 non-null   object \n 23  ExterCond          2919 non-null   object \n 24  Foundation         2919 non-null   object \n 25  BsmtQual           2919 non-null   object \n 26  BsmtCond           2919 non-null   object \n 27  BsmtExposure       2919 non-null   object \n 28  BsmtFinType1       2919 non-null   object \n 29  BsmtFinSF1         2919 non-null   float64\n 30  BsmtFinType2       2919 non-null   object \n 31  BsmtFinSF2         2919 non-null   float64\n 32  BsmtUnfSF          2919 non-null   float64\n 33  Heating            2919 non-null   object \n 34  HeatingQC          2919 non-null   object \n 35  CentralAir         2919 non-null   object \n 36  Electrical         2919 non-null   object \n 37  LowQualFinSF       2919 non-null   int64  \n 38  GrLivArea          2919 non-null   int64  \n 39  BedroomAbvGr       2919 non-null   int64  \n 40  KitchenAbvGr       2919 non-null   int64  \n 41  KitchenQual        2919 non-null   object \n 42  TotRmsAbvGrd       2919 non-null   int64  \n 43  Functional         2919 non-null   object \n 44  Fireplaces         2919 non-null   int64  \n 45  GarageType         2919 non-null   object \n 46  GarageFinish       2919 non-null   object \n 47  GarageCars         2919 non-null   float64\n 48  GarageArea         2919 non-null   int64  \n 49  GarageQual         2919 non-null   object \n 50  GarageCond         2919 non-null   object \n 51  PavedDrive         2919 non-null   object \n 52  WoodDeckSF         2919 non-null   int64  \n 53  PoolArea           2919 non-null   int64  \n 54  MiscVal            2919 non-null   int64  \n 55  MoSold             2919 non-null   int64  \n 56  SaleType           2919 non-null   object \n 57  SaleCondition      2919 non-null   object \n 58  TotalSF            2919 non-null   float64\n 59  Total_Bathrooms    2919 non-null   float64\n 60  Total_porch_sf     2919 non-null   int64  \n 61  YearsSinceRemodel  2919 non-null   int32  \ndtypes: float64(7), int32(1), int64(16), object(38)\nmemory usage: 1.4+ MB\n</code></pre>\n<h2 id=\"Label-Encoding-Ordinal-Encoding-One-Hot-Encoding\"><a href=\"#Label-Encoding-Ordinal-Encoding-One-Hot-Encoding\" class=\"headerlink\" title=\"Label Encoding, Ordinal Encoding, One-Hot Encoding\"></a>Label Encoding, Ordinal Encoding, One-Hot Encoding</h2><ul>\n<li><p>인코딩은 문자 데이터를 수치로 변환하는 방법론 중의 하나이다</p>\n</li>\n<li><p>OrdinalEncoder는 독립변수에만 쓴다.</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Label Encoding, One-Hot Encoding은 종속변수에 쓴다 (남, 여)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> OrdinalEncoder</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"></span><br><span class=\"line\">temp = pd.DataFrame(&#123;<span class=\"string\">&#x27;Food_Name&#x27;</span>: [<span class=\"string\">&#x27;Apple&#x27;</span>, <span class=\"string\">&#x27;Chicken&#x27;</span>, <span class=\"string\">&#x27;Broccoli&#x27;</span>], </span><br><span class=\"line\">                     <span class=\"string\">&#x27;Calories&#x27;</span>: [<span class=\"number\">95</span>, <span class=\"number\">231</span>, <span class=\"number\">50</span>]&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">encoder = OrdinalEncoder()</span><br><span class=\"line\">labels = encoder.fit_transform(temp[[<span class=\"string\">&#x27;Food_Name&#x27;</span>]])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">list</span>(temp[<span class=\"string\">&#x27;Food_Name&#x27;</span>]), <span class=\"string\">&quot;==&gt;&quot;</span>, labels.tolist())</span><br></pre></td></tr></table></figure>\n\n<pre><code>[&#39;Apple&#39;, &#39;Chicken&#39;, &#39;Broccoli&#39;] ==&gt; [[0.0], [2.0], [1.0]]\n</code></pre>\n<ul>\n<li>pandas 메소드를 통해서 직접 숫자로 변환</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp = pd.DataFrame(&#123;<span class=\"string\">&#x27;Food_Name&#x27;</span>: [<span class=\"string\">&#x27;Apple&#x27;</span>, <span class=\"string\">&#x27;Chicken&#x27;</span>, <span class=\"string\">&#x27;Broccoli&#x27;</span>], </span><br><span class=\"line\">                     <span class=\"string\">&#x27;Calories&#x27;</span>: [<span class=\"number\">95</span>, <span class=\"number\">231</span>, <span class=\"number\">50</span>]&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">temp[<span class=\"string\">&#x27;Food_No&#x27;</span>] = temp.Food_Name.replace(to_replace = [<span class=\"string\">&#x27;Apple&#x27;</span>, <span class=\"string\">&#x27;Chicken&#x27;</span>, <span class=\"string\">&#x27;Broccoli&#x27;</span>], value = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp[[<span class=\"string\">&#x27;Food_Name&#x27;</span>, <span class=\"string\">&#x27;Food_No&#x27;</span>]])</span><br></pre></td></tr></table></figure>\n\n<pre><code>  Food_Name  Food_No\n0     Apple        1\n1   Chicken        2\n2  Broccoli        3\n</code></pre>\n<ul>\n<li>원핫 인코딩<ul>\n<li>scikit-learn 방식이 조금 복잡함</li>\n<li>그래서 보통은 pandas get_dummies() 함수를 활용한다</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> LabelBinarizer</span><br><span class=\"line\"></span><br><span class=\"line\">temp = pd.DataFrame(&#123;<span class=\"string\">&#x27;Food_Name&#x27;</span>: [<span class=\"string\">&#x27;Apple&#x27;</span>, <span class=\"string\">&#x27;Chicken&#x27;</span>, <span class=\"string\">&#x27;Broccoli&#x27;</span>], </span><br><span class=\"line\">                     <span class=\"string\">&#x27;Calories&#x27;</span>: [<span class=\"number\">95</span>, <span class=\"number\">231</span>, <span class=\"number\">50</span>]&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">encoder = LabelBinarizer()</span><br><span class=\"line\">encoder.fit(temp[<span class=\"string\">&#x27;Food_Name&#x27;</span>])</span><br><span class=\"line\">transformed = encoder.transform(temp[<span class=\"string\">&#x27;Food_Name&#x27;</span>])</span><br><span class=\"line\">ohe_df = pd.DataFrame(transformed)</span><br><span class=\"line\">temp = pd.concat([temp, ohe_df], axis=<span class=\"number\">1</span>).drop([<span class=\"string\">&#x27;Food_Name&#x27;</span>], axis=<span class=\"number\">1</span>)</span><br><span class=\"line\">temp.columns = [<span class=\"string\">&#x27;Calories&#x27;</span>, <span class=\"string\">&#x27;Food_Name_Apple&#x27;</span>, <span class=\"string\">&#x27;Food_Name_Broccoli&#x27;</span>, <span class=\"string\">&#x27;Food_Name_Chicken&#x27;</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp.shape)</span><br></pre></td></tr></table></figure>\n\n<pre><code>   Calories  Food_Name_Apple  Food_Name_Broccoli  Food_Name_Chicken\n0        95                1                   0                  0\n1       231                0                   0                  1\n2        50                0                   1                  0\n(3, 4)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"></span><br><span class=\"line\">temp = pd.DataFrame(&#123;<span class=\"string\">&#x27;Food_Name&#x27;</span>: [<span class=\"string\">&#x27;Apple&#x27;</span>, <span class=\"string\">&#x27;Chicken&#x27;</span>, <span class=\"string\">&#x27;Broccoli&#x27;</span>], </span><br><span class=\"line\">                     <span class=\"string\">&#x27;Calories&#x27;</span>: [<span class=\"number\">95</span>, <span class=\"number\">231</span>, <span class=\"number\">50</span>]&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">temp = pd.get_dummies(temp)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp.shape)</span><br></pre></td></tr></table></figure>\n\n<pre><code>   Calories  Food_Name_Apple  Food_Name_Broccoli  Food_Name_Chicken\n0        95                1                   0                  0\n1       231                0                   0                  1\n2        50                0                   1                  0\n(3, 4)\n</code></pre>\n<ul>\n<li>본 데이터 적용<ul>\n<li>여기서는 Ordinal Encoding 적용 안함. (단, 실전에서는 꼭 찾아서 해야함).</li>\n</ul>\n</li>\n<li>One-Hot Encoding 적용</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all_df = pd.get_dummies(all_df).reset_index(drop=<span class=\"literal\">True</span>)</span><br><span class=\"line\">all_df.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>(2919, 258)\n</code></pre>\n<ul>\n<li>train, test 데이터 합쳐서 진행</li>\n<li>train, test 데이터 재분리</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">X = all_df.iloc[:<span class=\"built_in\">len</span>(y), :]</span><br><span class=\"line\">test = all_df.iloc[<span class=\"built_in\">len</span>(y):, :]</span><br><span class=\"line\"></span><br><span class=\"line\">X.shape, y.shape, test.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>((1460, 258), (1460,), (1459, 258))\n</code></pre>\n<ul>\n<li>머신러닝을 위한 데이터 전처리가 끝남</li>\n</ul>\n<h2 id=\"과제\"><a href=\"#과제\" class=\"headerlink\" title=\"과제\"></a>과제</h2><ul>\n<li>남은 시간동안 교재를 보고 머신러닝 학습 및 RMSE를 구하세요.</li>\n<li>데이터셋 분리<ul>\n<li>X 데이터를 X_train, X_test, y_train, y_test로 분리</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(</span><br><span class=\"line\">    X, y, test_size = <span class=\"number\">0.3</span>, random_state=<span class=\"number\">42</span>)</span><br><span class=\"line\">X_train.shape, X_test.shape, y_train.shape, y_test.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>((1022, 258), (438, 258), (1022,), (438,))\n</code></pre>\n<h2 id=\"평가지표\"><a href=\"#평가지표\" class=\"headerlink\" title=\"평가지표\"></a>평가지표</h2><ul>\n<li>MAE, MSE, RMSE</li>\n</ul>\n<h3 id=\"MAE\"><a href=\"#MAE\" class=\"headerlink\" title=\"MAE\"></a>MAE</h3><ul>\n<li>실젯값과 예측값의 차이, 오차, 오차들의 절댓값 평균을 말함</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">mean_absolute_error</span>(<span class=\"params\">y_true, y_pred</span>):</span><br><span class=\"line\">    error = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> yt, yp <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(y_true, y_pred):</span><br><span class=\"line\">        <span class=\"comment\"># yt : 실젯값</span></span><br><span class=\"line\">        <span class=\"comment\"># yp : 예측값</span></span><br><span class=\"line\">        error = error + np.<span class=\"built_in\">abs</span>(yt - yp)</span><br><span class=\"line\">        <span class=\"comment\"># 절댓값 오차의 평균</span></span><br><span class=\"line\">    mae = error / <span class=\"built_in\">len</span>(y_true)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> mae</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">mean_squared_error</span>(<span class=\"params\">y_true, y_pred</span>):</span><br><span class=\"line\">    error = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> yt, yp <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(y_true, y_pred):</span><br><span class=\"line\">        <span class=\"comment\"># yt : 실젯값</span></span><br><span class=\"line\">        <span class=\"comment\"># yp : 예측값</span></span><br><span class=\"line\">        error = error + (yt - yp) ** <span class=\"number\">2</span></span><br><span class=\"line\">        <span class=\"comment\"># 제곱값 오차의 평균</span></span><br><span class=\"line\">    mse = error / <span class=\"built_in\">len</span>(y_true)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> mse</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">root_mean_squared_error</span>(<span class=\"params\">y_true, y_pred</span>):</span><br><span class=\"line\">    error = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> yt, yp <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(y_true, y_pred):</span><br><span class=\"line\">        <span class=\"comment\"># yt : 실젯값</span></span><br><span class=\"line\">        <span class=\"comment\"># yp : 예측값</span></span><br><span class=\"line\">        error = error + (yt - yp) ** <span class=\"number\">2</span></span><br><span class=\"line\">        <span class=\"comment\"># 제곱값 오차의 평균</span></span><br><span class=\"line\">    mse = error / <span class=\"built_in\">len</span>(y_true)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 제곱근 추가</span></span><br><span class=\"line\">    rmse = np.<span class=\"built_in\">round</span>(np.sqrt(mse), <span class=\"number\">3</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> rmse</span><br><span class=\"line\"></span><br><span class=\"line\">y_true = [<span class=\"number\">400</span>, <span class=\"number\">300</span>, <span class=\"number\">800</span>]</span><br><span class=\"line\">y_pred = [<span class=\"number\">380</span>, <span class=\"number\">320</span>, <span class=\"number\">777</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;MAE:&quot;</span>, mean_absolute_error(y_true, y_pred))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;MSE:&quot;</span>, mean_squared_error(y_true, y_pred))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;RMSE:&quot;</span>, root_mean_squared_error(y_true, y_pred))</span><br></pre></td></tr></table></figure>\n\n<pre><code>MAE: 21.0\nMSE: 443.0\nRMSE: 21.048\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> mean_squared_error</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">rmse</span>(<span class=\"params\">y_true, y_pred</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> np.sqrt(mean_squared_error(y_true, y_pred))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"머신러닝-모형-정의-검증-평가\"><a href=\"#머신러닝-모형-정의-검증-평가\" class=\"headerlink\" title=\"머신러닝 모형 정의, 검증 평가\"></a>머신러닝 모형 정의, 검증 평가</h2><ul>\n<li>교차 검증 함수 만들기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 교차 검증</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> KFold, cross_val_score </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 모형 정의</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LinearRegression </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">cv_rmse</span>(<span class=\"params\">model, n_folds=<span class=\"number\">5</span></span>):</span><br><span class=\"line\">    cv = KFold(n_splits = n_folds, random_state=<span class=\"number\">42</span>, shuffle=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    rmse_list = np.sqrt(-cross_val_score(model, X, y, scoring=<span class=\"string\">&#x27;neg_mean_squared_error&#x27;</span>, cv=cv))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;CV RMSE Value List:&#x27;</span>, np.<span class=\"built_in\">round</span>(rmse_list, <span class=\"number\">4</span>))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;CV RMSE mean List:&#x27;</span>, np.<span class=\"built_in\">round</span>(np.mean(rmse_list), <span class=\"number\">4</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> rmse_list</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 교차 검증</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> KFold, cross_val_score </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 모형 정의</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LinearRegression </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">cv_rmse</span>(<span class=\"params\">model, n_folds=<span class=\"number\">5</span></span>):</span><br><span class=\"line\">    cv = KFold(n_splits = n_folds, random_state=<span class=\"number\">42</span>, shuffle=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    rmse_list = np.sqrt(-cross_val_score(model, X, y, scoring=<span class=\"string\">&#x27;neg_mean_squared_error&#x27;</span>, cv=cv))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;CV RMSE Value List:&#x27;</span>, np.<span class=\"built_in\">round</span>(rmse_list, <span class=\"number\">4</span>))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;CV RMSE mean List:&#x27;</span>, np.<span class=\"built_in\">round</span>(np.mean(rmse_list), <span class=\"number\">4</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> rmse_list </span><br><span class=\"line\"></span><br><span class=\"line\">rmse_scores = &#123;&#125; </span><br><span class=\"line\">lr_model = LinearRegression()</span><br><span class=\"line\"></span><br><span class=\"line\">score = cv_rmse(lr_model, n_folds=<span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;linear regression - mean : &#123;:.4f&#125; (std: &#123;:.4f&#125;)&#x27;</span>.<span class=\"built_in\">format</span>(score.mean(), score.std()))</span><br><span class=\"line\"></span><br><span class=\"line\">rmse_scores[<span class=\"string\">&#x27;Linear Regression&#x27;</span>] = (score.mean(), score.std())</span><br></pre></td></tr></table></figure>\n\n<pre><code>CV RMSE Value List: [0.1279 0.1258 0.2213 0.1558 0.1113]\nCV RMSE mean List: 0.1484\nlinear regression - mean : 0.1484 (std: 0.0392)\n</code></pre>\n<h2 id=\"제출-방법\"><a href=\"#제출-방법\" class=\"headerlink\" title=\"제출 방법\"></a>제출 방법</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> mean_squared_error</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> KFold, cross_val_score</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LinearRegression</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> RandomForestRegressor</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">cv_rmse</span>(<span class=\"params\">model, n_folds=<span class=\"number\">5</span></span>):</span><br><span class=\"line\">    cv = KFold(n_splits=n_folds, random_state=<span class=\"number\">42</span>, shuffle=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    rmse_list = np.sqrt(-cross_val_score(model, X, y, scoring=<span class=\"string\">&#x27;neg_mean_squared_error&#x27;</span>, cv=cv))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;CV RMSE value list:&#x27;</span>, np.<span class=\"built_in\">round</span>(rmse_list, <span class=\"number\">4</span>))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;CV RMSE mean value:&#x27;</span>, np.<span class=\"built_in\">round</span>(np.mean(rmse_list), <span class=\"number\">4</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (rmse_list)</span><br><span class=\"line\"></span><br><span class=\"line\">n_folds = <span class=\"number\">5</span></span><br><span class=\"line\">rmse_scores = &#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">#lr_model = LinearRegression()</span></span><br><span class=\"line\">rf_model=RandomForestRegressor()</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">score = cv_rmse(rf_model, n_folds)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;linear regression - mean: &#123;:.4f&#125; (std: &#123;:.4f&#125;)&quot;</span>.<span class=\"built_in\">format</span>(score.mean(), score.std()))</span><br><span class=\"line\">rmse_scores[<span class=\"string\">&#x27;linear regression&#x27;</span>] = (score.mean(), score.std())</span><br></pre></td></tr></table></figure>\n\n<pre><code>CV RMSE value list: [0.1445 0.1275 0.1778 0.1442 0.1217]\nCV RMSE mean value: 0.1432\nlinear regression - mean: 0.1432 (std: 0.0195)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> cross_val_predict</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># X = all_df.iloc[:len(y), :]</span></span><br><span class=\"line\"><span class=\"comment\"># X_test = all_df.iloc[len(y):, :]</span></span><br><span class=\"line\"><span class=\"comment\"># X.shape, y.shape, X_test.shape</span></span><br><span class=\"line\"></span><br><span class=\"line\">rf_model_fit = rf_model.fit(X_train, y_train)</span><br><span class=\"line\">final_preds = np.floor(np.expm1(rf_model_fit.predict(test)))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(final_preds)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[123399. 156138. 176533. ... 156601. 119066. 219373.]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">submission = pd.read_csv(DATA_PATH + <span class=\"string\">&quot;sample_submission.csv&quot;</span>)</span><br><span class=\"line\">submission.iloc[:,<span class=\"number\">1</span>] = final_preds</span><br><span class=\"line\"><span class=\"built_in\">print</span>(submission.head())</span><br><span class=\"line\">submission.to_csv(<span class=\"string\">&quot;submission.csv&quot;</span>, index=<span class=\"literal\">False</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>     Id  SalePrice\n0  1461   123399.0\n1  1462   156138.0\n2  1463   176533.0\n3  1464   183981.0\n4  1465   194195.0\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LinearRegression</span><br><span class=\"line\">lr_model = LinearRegression()</span><br><span class=\"line\">lr_model.fit(X_train, y_train) </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(lr_model.score(X_train, y_train))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(lr_model.score(X_test, y_test))</span><br></pre></td></tr></table></figure>\n\n<pre><code>0.9431219120690453\n0.9023841611069845\n</code></pre>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/07/07/lecture-in-humanedu/kaggle-logo.png","excerpt":"<p>Kaggle 과제</p>","more":"<p>Kaggle 과제</p>\n<!-- excerpt -->\n\n<h2 id=\"라이브러리-불러오기\"><a href=\"#라이브러리-불러오기\" class=\"headerlink\" title=\"라이브러리 불러오기\"></a>라이브러리 불러오기</h2><ul>\n<li>주요 라이브러리 버전을 확인한다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib <span class=\"keyword\">as</span> mpl</span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns</span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn</span><br><span class=\"line\"><span class=\"keyword\">import</span> xgboost <span class=\"keyword\">as</span> xgb</span><br><span class=\"line\"><span class=\"keyword\">import</span> lightgbm <span class=\"keyword\">as</span> lgb</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;pandas version:&quot;</span>, pd.__version__)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;numpy version:&quot;</span>, np.__version__)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;matplotlib version:&quot;</span>, mpl.__version__)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;seaborn version:&quot;</span>, sns.__version__)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;sklearn version:&quot;</span>, sklearn.__version__)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;xgboost version:&quot;</span>, xgb.__version__)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;lightgbm version:&quot;</span>, lgb.__version__)</span><br></pre></td></tr></table></figure>\n\n<pre><code>pandas version: 1.4.2\nnumpy version: 1.21.5\nmatplotlib version: 3.5.1\nseaborn version: 0.11.2\nsklearn version: 1.0.2\nxgboost version: 1.6.1\nlightgbm version: 3.3.2\n</code></pre>\n<h2 id=\"데이터-불러오기\"><a href=\"#데이터-불러오기\" class=\"headerlink\" title=\"데이터 불러오기\"></a>데이터 불러오기</h2><ul>\n<li>pandas 활용</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DATA_PATH = <span class=\"string\">&#x27;/kaggle/input/house-prices-advanced-regression-techniques/&#x27;</span></span><br><span class=\"line\">train = pd.read_csv(DATA_PATH + <span class=\"string\">&quot;train.csv&quot;</span>)</span><br><span class=\"line\">test = pd.read_csv(DATA_PATH + <span class=\"string\">&quot;test.csv&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Datasets are uploaded&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Datasets are uploaded\n</code></pre>\n<h2 id=\"데이터-둘러보기\"><a href=\"#데이터-둘러보기\" class=\"headerlink\" title=\"데이터 둘러보기\"></a>데이터 둘러보기</h2><ul>\n<li>데이터를 둘러봅니다.</li>\n<li>train : 행 갯수 1460 열 갯수 81</li>\n<li>test : 행 갯수 1459, 열 갯수 80</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">train.shape, test.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>((1460, 81), (1459, 80))\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">train.info()</span><br></pre></td></tr></table></figure>\n\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 1460 entries, 0 to 1459\nData columns (total 81 columns):\n #   Column         Non-Null Count  Dtype  \n---  ------         --------------  -----  \n 0   Id             1460 non-null   int64  \n 1   MSSubClass     1460 non-null   int64  \n 2   MSZoning       1460 non-null   object \n 3   LotFrontage    1201 non-null   float64\n 4   LotArea        1460 non-null   int64  \n 5   Street         1460 non-null   object \n 6   Alley          91 non-null     object \n 7   LotShape       1460 non-null   object \n 8   LandContour    1460 non-null   object \n 9   Utilities      1460 non-null   object \n 10  LotConfig      1460 non-null   object \n 11  LandSlope      1460 non-null   object \n 12  Neighborhood   1460 non-null   object \n 13  Condition1     1460 non-null   object \n 14  Condition2     1460 non-null   object \n 15  BldgType       1460 non-null   object \n 16  HouseStyle     1460 non-null   object \n 17  OverallQual    1460 non-null   int64  \n 18  OverallCond    1460 non-null   int64  \n 19  YearBuilt      1460 non-null   int64  \n 20  YearRemodAdd   1460 non-null   int64  \n 21  RoofStyle      1460 non-null   object \n 22  RoofMatl       1460 non-null   object \n 23  Exterior1st    1460 non-null   object \n 24  Exterior2nd    1460 non-null   object \n 25  MasVnrType     1452 non-null   object \n 26  MasVnrArea     1452 non-null   float64\n 27  ExterQual      1460 non-null   object \n 28  ExterCond      1460 non-null   object \n 29  Foundation     1460 non-null   object \n 30  BsmtQual       1423 non-null   object \n 31  BsmtCond       1423 non-null   object \n 32  BsmtExposure   1422 non-null   object \n 33  BsmtFinType1   1423 non-null   object \n 34  BsmtFinSF1     1460 non-null   int64  \n 35  BsmtFinType2   1422 non-null   object \n 36  BsmtFinSF2     1460 non-null   int64  \n 37  BsmtUnfSF      1460 non-null   int64  \n 38  TotalBsmtSF    1460 non-null   int64  \n 39  Heating        1460 non-null   object \n 40  HeatingQC      1460 non-null   object \n 41  CentralAir     1460 non-null   object \n 42  Electrical     1459 non-null   object \n 43  1stFlrSF       1460 non-null   int64  \n 44  2ndFlrSF       1460 non-null   int64  \n 45  LowQualFinSF   1460 non-null   int64  \n 46  GrLivArea      1460 non-null   int64  \n 47  BsmtFullBath   1460 non-null   int64  \n 48  BsmtHalfBath   1460 non-null   int64  \n 49  FullBath       1460 non-null   int64  \n 50  HalfBath       1460 non-null   int64  \n 51  BedroomAbvGr   1460 non-null   int64  \n 52  KitchenAbvGr   1460 non-null   int64  \n 53  KitchenQual    1460 non-null   object \n 54  TotRmsAbvGrd   1460 non-null   int64  \n 55  Functional     1460 non-null   object \n 56  Fireplaces     1460 non-null   int64  \n 57  FireplaceQu    770 non-null    object \n 58  GarageType     1379 non-null   object \n 59  GarageYrBlt    1379 non-null   float64\n 60  GarageFinish   1379 non-null   object \n 61  GarageCars     1460 non-null   int64  \n 62  GarageArea     1460 non-null   int64  \n 63  GarageQual     1379 non-null   object \n 64  GarageCond     1379 non-null   object \n 65  PavedDrive     1460 non-null   object \n 66  WoodDeckSF     1460 non-null   int64  \n 67  OpenPorchSF    1460 non-null   int64  \n 68  EnclosedPorch  1460 non-null   int64  \n 69  3SsnPorch      1460 non-null   int64  \n 70  ScreenPorch    1460 non-null   int64  \n 71  PoolArea       1460 non-null   int64  \n 72  PoolQC         7 non-null      object \n 73  Fence          281 non-null    object \n 74  MiscFeature    54 non-null     object \n 75  MiscVal        1460 non-null   int64  \n 76  MoSold         1460 non-null   int64  \n 77  YrSold         1460 non-null   int64  \n 78  SaleType       1460 non-null   object \n 79  SaleCondition  1460 non-null   object \n 80  SalePrice      1460 non-null   int64  \ndtypes: float64(3), int64(35), object(43)\nmemory usage: 924.0+ KB\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">test.info()</span><br></pre></td></tr></table></figure>\n\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 1459 entries, 0 to 1458\nData columns (total 80 columns):\n #   Column         Non-Null Count  Dtype  \n---  ------         --------------  -----  \n 0   Id             1459 non-null   int64  \n 1   MSSubClass     1459 non-null   int64  \n 2   MSZoning       1455 non-null   object \n 3   LotFrontage    1232 non-null   float64\n 4   LotArea        1459 non-null   int64  \n 5   Street         1459 non-null   object \n 6   Alley          107 non-null    object \n 7   LotShape       1459 non-null   object \n 8   LandContour    1459 non-null   object \n 9   Utilities      1457 non-null   object \n 10  LotConfig      1459 non-null   object \n 11  LandSlope      1459 non-null   object \n 12  Neighborhood   1459 non-null   object \n 13  Condition1     1459 non-null   object \n 14  Condition2     1459 non-null   object \n 15  BldgType       1459 non-null   object \n 16  HouseStyle     1459 non-null   object \n 17  OverallQual    1459 non-null   int64  \n 18  OverallCond    1459 non-null   int64  \n 19  YearBuilt      1459 non-null   int64  \n 20  YearRemodAdd   1459 non-null   int64  \n 21  RoofStyle      1459 non-null   object \n 22  RoofMatl       1459 non-null   object \n 23  Exterior1st    1458 non-null   object \n 24  Exterior2nd    1458 non-null   object \n 25  MasVnrType     1443 non-null   object \n 26  MasVnrArea     1444 non-null   float64\n 27  ExterQual      1459 non-null   object \n 28  ExterCond      1459 non-null   object \n 29  Foundation     1459 non-null   object \n 30  BsmtQual       1415 non-null   object \n 31  BsmtCond       1414 non-null   object \n 32  BsmtExposure   1415 non-null   object \n 33  BsmtFinType1   1417 non-null   object \n 34  BsmtFinSF1     1458 non-null   float64\n 35  BsmtFinType2   1417 non-null   object \n 36  BsmtFinSF2     1458 non-null   float64\n 37  BsmtUnfSF      1458 non-null   float64\n 38  TotalBsmtSF    1458 non-null   float64\n 39  Heating        1459 non-null   object \n 40  HeatingQC      1459 non-null   object \n 41  CentralAir     1459 non-null   object \n 42  Electrical     1459 non-null   object \n 43  1stFlrSF       1459 non-null   int64  \n 44  2ndFlrSF       1459 non-null   int64  \n 45  LowQualFinSF   1459 non-null   int64  \n 46  GrLivArea      1459 non-null   int64  \n 47  BsmtFullBath   1457 non-null   float64\n 48  BsmtHalfBath   1457 non-null   float64\n 49  FullBath       1459 non-null   int64  \n 50  HalfBath       1459 non-null   int64  \n 51  BedroomAbvGr   1459 non-null   int64  \n 52  KitchenAbvGr   1459 non-null   int64  \n 53  KitchenQual    1458 non-null   object \n 54  TotRmsAbvGrd   1459 non-null   int64  \n 55  Functional     1457 non-null   object \n 56  Fireplaces     1459 non-null   int64  \n 57  FireplaceQu    729 non-null    object \n 58  GarageType     1383 non-null   object \n 59  GarageYrBlt    1381 non-null   float64\n 60  GarageFinish   1381 non-null   object \n 61  GarageCars     1458 non-null   float64\n 62  GarageArea     1458 non-null   float64\n 63  GarageQual     1381 non-null   object \n 64  GarageCond     1381 non-null   object \n 65  PavedDrive     1459 non-null   object \n 66  WoodDeckSF     1459 non-null   int64  \n 67  OpenPorchSF    1459 non-null   int64  \n 68  EnclosedPorch  1459 non-null   int64  \n 69  3SsnPorch      1459 non-null   int64  \n 70  ScreenPorch    1459 non-null   int64  \n 71  PoolArea       1459 non-null   int64  \n 72  PoolQC         3 non-null      object \n 73  Fence          290 non-null    object \n 74  MiscFeature    51 non-null     object \n 75  MiscVal        1459 non-null   int64  \n 76  MoSold         1459 non-null   int64  \n 77  YrSold         1459 non-null   int64  \n 78  SaleType       1458 non-null   object \n 79  SaleCondition  1459 non-null   object \ndtypes: float64(11), int64(26), object(43)\nmemory usage: 912.0+ KB\n</code></pre>\n<h2 id=\"데이터-시각화\"><a href=\"#데이터-시각화\" class=\"headerlink\" title=\"데이터 시각화\"></a>데이터 시각화</h2><ul>\n<li><p>여기에서는 생략</p>\n</li>\n<li><p>종속변수 분포는 확인</p>\n</li>\n<li><p>샤피로 검정</p>\n</li>\n<li><p>정규분포인가?</p>\n<ul>\n<li>정규분포 X —&gt; 로그변환, 박스콕스 변환 등등</li>\n<li>정규분포로 만들어 줘야 함.</li>\n</ul>\n</li>\n<li><p>선형모델의 성능을 올리기 위해서는 이 작업을 해야 함</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> scipy.stats <span class=\"keyword\">import</span> norm</span><br><span class=\"line\">(mu, sigma) = norm.fit(train[<span class=\"string\">&#x27;SalePrice&#x27;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;평균:&quot;</span>, mu)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;표준편차:&quot;</span>, sigma)</span><br><span class=\"line\"></span><br><span class=\"line\">fig, ax = plt.subplots(figsize=(<span class=\"number\">10</span>, <span class=\"number\">6</span>))</span><br><span class=\"line\">sns.histplot(train[<span class=\"string\">&#x27;SalePrice&#x27;</span>])</span><br><span class=\"line\">ax.<span class=\"built_in\">set</span>(title =<span class=\"string\">&quot;SalePrice Distribution&quot;</span>)</span><br><span class=\"line\">ax.axvline(mu, color = <span class=\"string\">&#x27;r&#x27;</span>, linestyle = <span class=\"string\">&#x27;--&#x27;</span>)</span><br><span class=\"line\">ax.text(mu + <span class=\"number\">10000</span>, <span class=\"number\">150</span>, <span class=\"string\">&#x27;Mean of SalePrice&#x27;</span>, color = <span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n<pre><code>평균: 180921.19589041095\n표준편차: 79415.29188606751\n</code></pre>\n<p><img src=\"/images/0707/output_10_1.png\" alt=\"png\"></p>\n<ul>\n<li>로그변환을 해서 정규분포로 변환해준다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">train[<span class=\"string\">&#x27;SalePrice&#x27;</span>][:<span class=\"number\">10</span>]  <span class=\"comment\"># 로그변환을 한 값의 예측 나중에 값 다 구하고 다시 지수변환 해야되는 것 기억</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>0    208500\n1    181500\n2    223500\n3    140000\n4    250000\n5    143000\n6    307000\n7    200000\n8    129900\n9    118000\nName: SalePrice, dtype: int64\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">train[<span class=\"string\">&#x27;SalePrice&#x27;</span>] = np.log1p(train[<span class=\"string\">&#x27;SalePrice&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">(mu, sigma) = norm.fit(train[<span class=\"string\">&#x27;SalePrice&#x27;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;평균:&quot;</span>, mu)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;표준편차:&quot;</span>, sigma)</span><br><span class=\"line\"></span><br><span class=\"line\">fig, ax = plt.subplots(figsize=(<span class=\"number\">10</span>, <span class=\"number\">6</span>))</span><br><span class=\"line\">sns.histplot(train[<span class=\"string\">&#x27;SalePrice&#x27;</span>])</span><br><span class=\"line\">ax.<span class=\"built_in\">set</span>(title =<span class=\"string\">&quot;SalePrice Distribution&quot;</span>)</span><br><span class=\"line\">ax.axvline(mu, color = <span class=\"string\">&#x27;r&#x27;</span>, linestyle = <span class=\"string\">&#x27;--&#x27;</span>)</span><br><span class=\"line\">ax.text(mu + <span class=\"number\">0.001</span>, <span class=\"number\">160</span>, <span class=\"string\">&#x27;Mean of SalePrice&#x27;</span>, color = <span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\">ax.set_ylim(<span class=\"number\">0</span>, <span class=\"number\">170</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n<pre><code>평균: 12.024057394918406\n표준편차: 0.39931245219387496\n</code></pre>\n<p><img src=\"/images/0707/output_13_1.png\" alt=\"png\"></p>\n<h2 id=\"데이터-전처리\"><a href=\"#데이터-전처리\" class=\"headerlink\" title=\"데이터 전처리\"></a>데이터 전처리</h2><ul>\n<li>컬럼 갯수가 많다? &#x3D;&#x3D;&gt; 어떤 컬럼을 없앨 것인가?</li>\n<li>머신러닝 연산 속도부터 높여야 함.</li>\n</ul>\n<h3 id=\"데이터-ID-값-제거\"><a href=\"#데이터-ID-값-제거\" class=\"headerlink\" title=\"데이터 ID 값 제거\"></a>데이터 ID 값 제거</h3><ul>\n<li>머신러닝 &#x3D; 패턴분석<ul>\n<li>패턴이 안보이는 컬럼은 삭제해라</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">train_ID = train[<span class=\"string\">&#x27;Id&#x27;</span>]</span><br><span class=\"line\">test_ID = test[<span class=\"string\">&#x27;Id&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">train = train.drop([<span class=\"string\">&#x27;Id&#x27;</span>], axis = <span class=\"number\">1</span>)  <span class=\"comment\"># 이런 제거 작업은 train과 test 같이 작업하는 것이 좋다.</span></span><br><span class=\"line\">train.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>(1460, 80)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">test = test.drop([<span class=\"string\">&#x27;Id&#x27;</span>], axis = <span class=\"number\">1</span>)</span><br><span class=\"line\">test.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>(1459, 79)\n</code></pre>\n<h3 id=\"Y값-추출\"><a href=\"#Y값-추출\" class=\"headerlink\" title=\"Y값 추출\"></a>Y값 추출</h3><ul>\n<li>train 데이터에 SalePrice 만 따로 저장한다</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">y = train[<span class=\"string\">&#x27;SalePrice&#x27;</span>]</span><br><span class=\"line\">train = train.drop(<span class=\"string\">&#x27;SalePrice&#x27;</span>, axis = <span class=\"number\">1</span>)</span><br><span class=\"line\">train.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>(1460, 79)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">test.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>(1459, 79)\n</code></pre>\n<h3 id=\"데이터-합치기\"><a href=\"#데이터-합치기\" class=\"headerlink\" title=\"데이터 합치기\"></a>데이터 합치기</h3><ul>\n<li>성능을 높이고 싶다면 &#x3D;&#x3D;&gt; train 따로 정리 &#x2F; test 따로 정리<ul>\n<li>이렇게 하면 Data Leakage 오류를 범할 가능성이 높음</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all_df = pd.concat([train, test]).reset_index(drop=<span class=\"literal\">True</span>)</span><br><span class=\"line\">all_df.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>(2919, 79)\n</code></pre>\n<h2 id=\"결측치-확인\"><a href=\"#결측치-확인\" class=\"headerlink\" title=\"결측치 확인\"></a>결측치 확인</h2><ul>\n<li>결측치의 비율 확인하는 사용자 정의 함수 작성</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">check_na</span>(<span class=\"params\">data, head_num = <span class=\"number\">6</span></span>):</span><br><span class=\"line\">  isnull_na = (data.isnull().<span class=\"built_in\">sum</span>() / <span class=\"built_in\">len</span>(data)) * <span class=\"number\">100</span></span><br><span class=\"line\">  data_na = isnull_na.drop(isnull_na[isnull_na == <span class=\"number\">0</span>].index).sort_values(ascending=<span class=\"literal\">False</span>)</span><br><span class=\"line\">  missing_data = pd.DataFrame(&#123;<span class=\"string\">&#x27;Missing Ratio&#x27;</span> :data_na, </span><br><span class=\"line\">                               <span class=\"string\">&#x27;Data Type&#x27;</span>: data.dtypes[data_na.index]&#125;)</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;결측치 데이터 컬럼과 건수:\\n&quot;</span>, missing_data.head(head_num))</span><br><span class=\"line\"></span><br><span class=\"line\">check_na(all_df, <span class=\"number\">20</span>)</span><br><span class=\"line\"><span class=\"comment\"># PoolQC나 MiscFeature, Alley 같은 건 결측치가 엄청 많으니까 삭제해도 될건데...</span></span><br><span class=\"line\"><span class=\"comment\"># FireplaceQu 같은 48점짜리는 어떻게 결측치를 처리할 것인가? 지워야되나?</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>결측치 데이터 컬럼과 건수:\n               Missing Ratio Data Type\nPoolQC            99.657417    object\nMiscFeature       96.402878    object\nAlley             93.216855    object\nFence             80.438506    object\nFireplaceQu       48.646797    object\nLotFrontage       16.649538   float64\nGarageFinish       5.447071    object\nGarageQual         5.447071    object\nGarageCond         5.447071    object\nGarageYrBlt        5.447071   float64\nGarageType         5.378554    object\nBsmtExposure       2.809181    object\nBsmtCond           2.809181    object\nBsmtQual           2.774923    object\nBsmtFinType2       2.740665    object\nBsmtFinType1       2.706406    object\nMasVnrType         0.822199    object\nMasVnrArea         0.787941   float64\nMSZoning           0.137033    object\nBsmtFullBath       0.068517   float64\n</code></pre>\n<ul>\n<li>결측치 제거</li>\n<li>결측치 비율이 높은 변수들을 모두 제거하기로 함</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all_df = all_df.drop([<span class=\"string\">&#x27;PoolQC&#x27;</span>, <span class=\"string\">&#x27;MiscFeature&#x27;</span>, <span class=\"string\">&#x27;Alley&#x27;</span>, <span class=\"string\">&#x27;Fence&#x27;</span>, <span class=\"string\">&#x27;FireplaceQu&#x27;</span>, <span class=\"string\">&#x27;LotFrontage&#x27;</span>], axis = <span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(all_df.shape)</span><br><span class=\"line\">check_na(all_df, <span class=\"number\">40</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(2919, 73)\n결측치 데이터 컬럼과 건수:\n               Missing Ratio Data Type\nGarageCond         5.447071    object\nGarageQual         5.447071    object\nGarageYrBlt        5.447071   float64\nGarageFinish       5.447071    object\nGarageType         5.378554    object\nBsmtCond           2.809181    object\nBsmtExposure       2.809181    object\nBsmtQual           2.774923    object\nBsmtFinType2       2.740665    object\nBsmtFinType1       2.706406    object\nMasVnrType         0.822199    object\nMasVnrArea         0.787941   float64\nMSZoning           0.137033    object\nFunctional         0.068517    object\nUtilities          0.068517    object\nBsmtFullBath       0.068517   float64\nBsmtHalfBath       0.068517   float64\nGarageArea         0.034258   float64\nGarageCars         0.034258   float64\nTotalBsmtSF        0.034258   float64\nKitchenQual        0.034258    object\nElectrical         0.034258    object\nBsmtUnfSF          0.034258   float64\nBsmtFinSF2         0.034258   float64\nBsmtFinSF1         0.034258   float64\nExterior2nd        0.034258    object\nExterior1st        0.034258    object\nSaleType           0.034258    object\n</code></pre>\n<h2 id=\"결측치-채우기\"><a href=\"#결측치-채우기\" class=\"headerlink\" title=\"결측치 채우기\"></a>결측치 채우기</h2><ul>\n<li>train 데이터와 test 데이터가 섞이면 안됨.</li>\n<li>train &#x2F; test 분리해서 진행해야 함.</li>\n<li>문자데이터 : 자주 등장하는 빈도 값으로 채움</li>\n<li>숫자데이터 : 평균이 아니라, 중간값으로 채울 예정</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all_df[<span class=\"string\">&#x27;BsmtCond&#x27;</span>].value_counts()</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>TA    2606\nGd     122\nFa     104\nPo       5\nName: BsmtCond, dtype: int64\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all_df[<span class=\"string\">&#x27;BsmtCond&#x27;</span>].mode()[<span class=\"number\">0</span>]</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>&#39;TA&#39;\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 문자열 데이터만 추출</span></span><br><span class=\"line\">cat_all_vars = train.select_dtypes(exclude=[np.number])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;The whole number of all_vars&quot;</span>, <span class=\"built_in\">len</span>(<span class=\"built_in\">list</span>(cat_all_vars)))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 문자열 데이터 중에서 이미 기 삭제했던 Feature들이 있었기 때문에, </span></span><br><span class=\"line\"><span class=\"comment\"># 한번 더 Feature를 정리하는 코드를 작성한다. </span></span><br><span class=\"line\"><span class=\"comment\"># 따라서 38개의 Feature만 추출했다. </span></span><br><span class=\"line\">final_cat_vars = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> v <span class=\"keyword\">in</span> cat_all_vars:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> v <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> [<span class=\"string\">&#x27;PoolQC&#x27;</span>, <span class=\"string\">&#x27;MiscFeature&#x27;</span>, <span class=\"string\">&#x27;Alley&#x27;</span>, <span class=\"string\">&#x27;Fence&#x27;</span>, <span class=\"string\">&#x27;FireplaceQu&#x27;</span>]:</span><br><span class=\"line\">        final_cat_vars.append(v)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;The whole number of final_cat_vars&quot;</span>, <span class=\"built_in\">len</span>(final_cat_vars))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 이제 각 Feature 마다 빈도수가 가장 많이 나타나는 값을 추가하는 코드를 작성한다. </span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> final_cat_vars:</span><br><span class=\"line\">  all_df[i] = all_df[i].fillna(all_df[i].mode()[<span class=\"number\">0</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 이제 수치형 데이터만 남은 것을 확인한다. </span></span><br><span class=\"line\">check_na(all_df, <span class=\"number\">20</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>The whole number of all_vars 43\nThe whole number of final_cat_vars 38\n결측치 데이터 컬럼과 건수:\n               Missing Ratio Data Type\nGarageYrBlt        5.447071   float64\nMasVnrArea         0.787941   float64\nBsmtFullBath       0.068517   float64\nBsmtHalfBath       0.068517   float64\nBsmtFinSF1         0.034258   float64\nBsmtFinSF2         0.034258   float64\nBsmtUnfSF          0.034258   float64\nTotalBsmtSF        0.034258   float64\nGarageCars         0.034258   float64\nGarageArea         0.034258   float64\n</code></pre>\n<ul>\n<li>수치</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 방법은 기존과 동일하다. </span></span><br><span class=\"line\"><span class=\"comment\"># 이번에는 수치형 데이터만 추출한다. </span></span><br><span class=\"line\">num_all_vars = <span class=\"built_in\">list</span>(train.select_dtypes(include=[np.number]))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;The whole number of all_vars&quot;</span>, <span class=\"built_in\">len</span>(num_all_vars))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 수치형 데이터 중, 결측치가 많았던 `LotFrontage`만 처리한다. </span></span><br><span class=\"line\">num_all_vars.remove(<span class=\"string\">&#x27;LotFrontage&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;The whole number of final_cat_vars&quot;</span>, <span class=\"built_in\">len</span>(num_all_vars))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 이번에는 수치형 데이터의 평균이 아닌 중간값을 지정했다. </span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> num_all_vars:</span><br><span class=\"line\">  all_df[i].fillna(value=all_df[i].median(), inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">check_na(all_df, <span class=\"number\">20</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>The whole number of all_vars 36\nThe whole number of final_cat_vars 35\n결측치 데이터 컬럼과 건수:\n Empty DataFrame\nColumns: [Missing Ratio, Data Type]\nIndex: []\n</code></pre>\n<h2 id=\"도출-변수\"><a href=\"#도출-변수\" class=\"headerlink\" title=\"도출 변수\"></a>도출 변수</h2><ul>\n<li><p>새로운 도출 변수를 작성 (기존 변수 활용)</p>\n</li>\n<li><p>기존 변수 제거</p>\n</li>\n<li><p>각 층의 면적으로 모두 더해 전체 면적으로 계산한 새로운 변수를 작성한다.</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all_df[<span class=\"string\">&#x27;TotalSF&#x27;</span>] = all_df[<span class=\"string\">&#x27;TotalBsmtSF&#x27;</span>] + all_df[<span class=\"string\">&#x27;1stFlrSF&#x27;</span>] + all_df[<span class=\"string\">&#x27;2ndFlrSF&#x27;</span>]</span><br><span class=\"line\">all_df = all_df.drop([<span class=\"string\">&#x27;TotalBsmtSF&#x27;</span>, <span class=\"string\">&#x27;1stFlrSF&#x27;</span>, <span class=\"string\">&#x27;2ndFlrSF&#x27;</span>], axis=<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(all_df.shape)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(2919, 71)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all_df[<span class=\"string\">&#x27;Total_Bathrooms&#x27;</span>] = (all_df[<span class=\"string\">&#x27;FullBath&#x27;</span>] + (<span class=\"number\">0.5</span> * all_df[<span class=\"string\">&#x27;HalfBath&#x27;</span>]) + all_df[<span class=\"string\">&#x27;BsmtFullBath&#x27;</span>] + (<span class=\"number\">0.5</span> * all_df[<span class=\"string\">&#x27;BsmtHalfBath&#x27;</span>]))</span><br><span class=\"line\">all_df[<span class=\"string\">&#x27;Total_porch_sf&#x27;</span>] = (all_df[<span class=\"string\">&#x27;OpenPorchSF&#x27;</span>] + all_df[<span class=\"string\">&#x27;3SsnPorch&#x27;</span>] + all_df[<span class=\"string\">&#x27;EnclosedPorch&#x27;</span>] + all_df[<span class=\"string\">&#x27;ScreenPorch&#x27;</span>])</span><br><span class=\"line\">all_df = all_df.drop([<span class=\"string\">&#x27;FullBath&#x27;</span>, <span class=\"string\">&#x27;HalfBath&#x27;</span>, <span class=\"string\">&#x27;BsmtFullBath&#x27;</span>, <span class=\"string\">&#x27;BsmtHalfBath&#x27;</span>, <span class=\"string\">&#x27;OpenPorchSF&#x27;</span>, <span class=\"string\">&#x27;3SsnPorch&#x27;</span>, <span class=\"string\">&#x27;EnclosedPorch&#x27;</span>, <span class=\"string\">&#x27;ScreenPorch&#x27;</span>], axis=<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(all_df.shape)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(2919, 65)\n</code></pre>\n<ul>\n<li>연도와 관련된 변수를 추출하는 코드 작성</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">num_all_vars = <span class=\"built_in\">list</span>(train.select_dtypes(include=[np.number]))</span><br><span class=\"line\">year_feature = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> var <span class=\"keyword\">in</span> num_all_vars:</span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"string\">&#x27;Yr&#x27;</span> <span class=\"keyword\">in</span> var:</span><br><span class=\"line\">    year_feature.append(var)</span><br><span class=\"line\">  <span class=\"keyword\">elif</span> <span class=\"string\">&#x27;Year&#x27;</span> <span class=\"keyword\">in</span> var:</span><br><span class=\"line\">    year_feature.append(var)</span><br><span class=\"line\">  <span class=\"keyword\">else</span>:  </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(var, <span class=\"string\">&quot;is not related with Year&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(year_feature)</span><br></pre></td></tr></table></figure>\n\n<pre><code>MSSubClass is not related with Year\nLotFrontage is not related with Year\nLotArea is not related with Year\nOverallQual is not related with Year\nOverallCond is not related with Year\nMasVnrArea is not related with Year\nBsmtFinSF1 is not related with Year\nBsmtFinSF2 is not related with Year\nBsmtUnfSF is not related with Year\nTotalBsmtSF is not related with Year\n1stFlrSF is not related with Year\n2ndFlrSF is not related with Year\nLowQualFinSF is not related with Year\nGrLivArea is not related with Year\nBsmtFullBath is not related with Year\nBsmtHalfBath is not related with Year\nFullBath is not related with Year\nHalfBath is not related with Year\nBedroomAbvGr is not related with Year\nKitchenAbvGr is not related with Year\nTotRmsAbvGrd is not related with Year\nFireplaces is not related with Year\nGarageCars is not related with Year\nGarageArea is not related with Year\nWoodDeckSF is not related with Year\nOpenPorchSF is not related with Year\nEnclosedPorch is not related with Year\n3SsnPorch is not related with Year\nScreenPorch is not related with Year\nPoolArea is not related with Year\nMiscVal is not related with Year\nMoSold is not related with Year\n[&#39;YearBuilt&#39;, &#39;YearRemodAdd&#39;, &#39;GarageYrBlt&#39;, &#39;YrSold&#39;]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fig, ax = plt.subplots(<span class=\"number\">3</span>, <span class=\"number\">1</span>, figsize=(<span class=\"number\">10</span>, <span class=\"number\">6</span>), sharex=<span class=\"literal\">True</span>, sharey=<span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i, var <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(year_feature):</span><br><span class=\"line\">  <span class=\"keyword\">if</span> var != <span class=\"string\">&#x27;YrSold&#x27;</span>:</span><br><span class=\"line\">    ax[i].scatter(train[var], y, alpha=<span class=\"number\">0.3</span>)</span><br><span class=\"line\">    ax[i].set_title(<span class=\"string\">&#x27;&#123;&#125;&#x27;</span>.<span class=\"built_in\">format</span>(var), size=<span class=\"number\">15</span>)</span><br><span class=\"line\">    ax[i].set_ylabel(<span class=\"string\">&#x27;SalePrice&#x27;</span>, size=<span class=\"number\">15</span>, labelpad=<span class=\"number\">12.5</span>)</span><br><span class=\"line\">plt.tight_layout()</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0707/output_39_0.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all_df = all_df.drop([<span class=\"string\">&#x27;YearBuilt&#x27;</span>, <span class=\"string\">&#x27;GarageYrBlt&#x27;</span>], axis=<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(all_df.shape)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(2919, 63)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">YearsSinceRemodel = train[<span class=\"string\">&#x27;YrSold&#x27;</span>].astype(<span class=\"built_in\">int</span>) - train[<span class=\"string\">&#x27;YearRemodAdd&#x27;</span>].astype(<span class=\"built_in\">int</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">fig, ax = plt.subplots(figsize=(<span class=\"number\">10</span>, <span class=\"number\">6</span>))</span><br><span class=\"line\">ax.scatter(YearsSinceRemodel, y, alpha=<span class=\"number\">0.3</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0707/output_41_0.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all_df[<span class=\"string\">&#x27;YearsSinceRemodel&#x27;</span>] = all_df[<span class=\"string\">&#x27;YrSold&#x27;</span>].astype(<span class=\"built_in\">int</span>) - all_df[<span class=\"string\">&#x27;YearRemodAdd&#x27;</span>].astype(<span class=\"built_in\">int</span>)</span><br><span class=\"line\">all_df = all_df.drop([<span class=\"string\">&#x27;YrSold&#x27;</span>, <span class=\"string\">&#x27;YearRemodAdd&#x27;</span>], axis=<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(all_df.shape)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(2919, 62)\n</code></pre>\n<h2 id=\"더미변수\"><a href=\"#더미변수\" class=\"headerlink\" title=\"더미변수\"></a>더미변수</h2><ul>\n<li>더미변수란 원 데이터를 독립변수를 0과 1로 변환하는 변수를 말함.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all_df[<span class=\"string\">&#x27;PoolArea&#x27;</span>].value_counts()</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>0      2906\n512       1\n648       1\n576       1\n555       1\n480       1\n519       1\n738       1\n144       1\n368       1\n444       1\n228       1\n561       1\n800       1\nName: PoolArea, dtype: int64\n</code></pre>\n<ul>\n<li>사용자 정의 함수 만들기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">count_dummy</span>(<span class=\"params\">x</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all_df[<span class=\"string\">&#x27;PoolArea&#x27;</span>] = all_df[<span class=\"string\">&#x27;PoolArea&#x27;</span>].apply(count_dummy)</span><br><span class=\"line\">all_df[<span class=\"string\">&#x27;PoolArea&#x27;</span>].value_counts()</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>0    2906\n1      13\nName: PoolArea, dtype: int64\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all_df[<span class=\"string\">&#x27;GarageArea&#x27;</span>] = all_df[<span class=\"string\">&#x27;GarageArea&#x27;</span>].apply(count_dummy)</span><br><span class=\"line\">all_df[<span class=\"string\">&#x27;GarageArea&#x27;</span>].value_counts()</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>1    2762\n0     157\nName: GarageArea, dtype: int64\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all_df[<span class=\"string\">&#x27;Fireplaces&#x27;</span>] = all_df[<span class=\"string\">&#x27;Fireplaces&#x27;</span>].apply(count_dummy)</span><br><span class=\"line\">all_df[<span class=\"string\">&#x27;Fireplaces&#x27;</span>].value_counts()</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>1    1499\n0    1420\nName: Fireplaces, dtype: int64\n</code></pre>\n<h2 id=\"인코딩\"><a href=\"#인코딩\" class=\"headerlink\" title=\"인코딩\"></a>인코딩</h2><ul>\n<li>문자열이 있으면 쓸 수 없으므로 숫자로 바꿔준다<ul>\n<li>문자를 숫자로 변환해주는 코드를 인코딩 변환 이라고 한다.</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 분류모형</span></span><br><span class=\"line\"><span class=\"comment\"># 종속변수에 적용 (양성, 음성)</span></span><br><span class=\"line\"><span class=\"comment\"># Label Encoder는 종속변수에만 적용</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> LabelEncoder</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"></span><br><span class=\"line\">temp = pd.DataFrame(&#123;<span class=\"string\">&#x27;Food_Name&#x27;</span>: [<span class=\"string\">&#x27;Apple&#x27;</span>, <span class=\"string\">&#x27;Chicken&#x27;</span>, <span class=\"string\">&#x27;Broccoli&#x27;</span>], </span><br><span class=\"line\">                     <span class=\"string\">&#x27;Calories&#x27;</span>: [<span class=\"number\">95</span>, <span class=\"number\">231</span>, <span class=\"number\">50</span>]&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">encoder = LabelEncoder()</span><br><span class=\"line\">encoder.fit(temp[<span class=\"string\">&#x27;Food_Name&#x27;</span>])</span><br><span class=\"line\">labels = encoder.transform(temp[<span class=\"string\">&#x27;Food_Name&#x27;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">list</span>(temp[<span class=\"string\">&#x27;Food_Name&#x27;</span>]), <span class=\"string\">&quot;==&gt;&quot;</span>, labels.tolist())</span><br></pre></td></tr></table></figure>\n\n<pre><code>[&#39;Apple&#39;, &#39;Chicken&#39;, &#39;Broccoli&#39;] ==&gt; [0, 2, 1]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all_df.info()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 2919 entries, 0 to 2918\nData columns (total 62 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   MSSubClass         2919 non-null   int64  \n 1   MSZoning           2919 non-null   object \n 2   LotArea            2919 non-null   int64  \n 3   Street             2919 non-null   object \n 4   LotShape           2919 non-null   object \n 5   LandContour        2919 non-null   object \n 6   Utilities          2919 non-null   object \n 7   LotConfig          2919 non-null   object \n 8   LandSlope          2919 non-null   object \n 9   Neighborhood       2919 non-null   object \n 10  Condition1         2919 non-null   object \n 11  Condition2         2919 non-null   object \n 12  BldgType           2919 non-null   object \n 13  HouseStyle         2919 non-null   object \n 14  OverallQual        2919 non-null   int64  \n 15  OverallCond        2919 non-null   int64  \n 16  RoofStyle          2919 non-null   object \n 17  RoofMatl           2919 non-null   object \n 18  Exterior1st        2919 non-null   object \n 19  Exterior2nd        2919 non-null   object \n 20  MasVnrType         2919 non-null   object \n 21  MasVnrArea         2919 non-null   float64\n 22  ExterQual          2919 non-null   object \n 23  ExterCond          2919 non-null   object \n 24  Foundation         2919 non-null   object \n 25  BsmtQual           2919 non-null   object \n 26  BsmtCond           2919 non-null   object \n 27  BsmtExposure       2919 non-null   object \n 28  BsmtFinType1       2919 non-null   object \n 29  BsmtFinSF1         2919 non-null   float64\n 30  BsmtFinType2       2919 non-null   object \n 31  BsmtFinSF2         2919 non-null   float64\n 32  BsmtUnfSF          2919 non-null   float64\n 33  Heating            2919 non-null   object \n 34  HeatingQC          2919 non-null   object \n 35  CentralAir         2919 non-null   object \n 36  Electrical         2919 non-null   object \n 37  LowQualFinSF       2919 non-null   int64  \n 38  GrLivArea          2919 non-null   int64  \n 39  BedroomAbvGr       2919 non-null   int64  \n 40  KitchenAbvGr       2919 non-null   int64  \n 41  KitchenQual        2919 non-null   object \n 42  TotRmsAbvGrd       2919 non-null   int64  \n 43  Functional         2919 non-null   object \n 44  Fireplaces         2919 non-null   int64  \n 45  GarageType         2919 non-null   object \n 46  GarageFinish       2919 non-null   object \n 47  GarageCars         2919 non-null   float64\n 48  GarageArea         2919 non-null   int64  \n 49  GarageQual         2919 non-null   object \n 50  GarageCond         2919 non-null   object \n 51  PavedDrive         2919 non-null   object \n 52  WoodDeckSF         2919 non-null   int64  \n 53  PoolArea           2919 non-null   int64  \n 54  MiscVal            2919 non-null   int64  \n 55  MoSold             2919 non-null   int64  \n 56  SaleType           2919 non-null   object \n 57  SaleCondition      2919 non-null   object \n 58  TotalSF            2919 non-null   float64\n 59  Total_Bathrooms    2919 non-null   float64\n 60  Total_porch_sf     2919 non-null   int64  \n 61  YearsSinceRemodel  2919 non-null   int32  \ndtypes: float64(7), int32(1), int64(16), object(38)\nmemory usage: 1.4+ MB\n</code></pre>\n<h2 id=\"Label-Encoding-Ordinal-Encoding-One-Hot-Encoding\"><a href=\"#Label-Encoding-Ordinal-Encoding-One-Hot-Encoding\" class=\"headerlink\" title=\"Label Encoding, Ordinal Encoding, One-Hot Encoding\"></a>Label Encoding, Ordinal Encoding, One-Hot Encoding</h2><ul>\n<li><p>인코딩은 문자 데이터를 수치로 변환하는 방법론 중의 하나이다</p>\n</li>\n<li><p>OrdinalEncoder는 독립변수에만 쓴다.</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Label Encoding, One-Hot Encoding은 종속변수에 쓴다 (남, 여)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> OrdinalEncoder</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"></span><br><span class=\"line\">temp = pd.DataFrame(&#123;<span class=\"string\">&#x27;Food_Name&#x27;</span>: [<span class=\"string\">&#x27;Apple&#x27;</span>, <span class=\"string\">&#x27;Chicken&#x27;</span>, <span class=\"string\">&#x27;Broccoli&#x27;</span>], </span><br><span class=\"line\">                     <span class=\"string\">&#x27;Calories&#x27;</span>: [<span class=\"number\">95</span>, <span class=\"number\">231</span>, <span class=\"number\">50</span>]&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">encoder = OrdinalEncoder()</span><br><span class=\"line\">labels = encoder.fit_transform(temp[[<span class=\"string\">&#x27;Food_Name&#x27;</span>]])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">list</span>(temp[<span class=\"string\">&#x27;Food_Name&#x27;</span>]), <span class=\"string\">&quot;==&gt;&quot;</span>, labels.tolist())</span><br></pre></td></tr></table></figure>\n\n<pre><code>[&#39;Apple&#39;, &#39;Chicken&#39;, &#39;Broccoli&#39;] ==&gt; [[0.0], [2.0], [1.0]]\n</code></pre>\n<ul>\n<li>pandas 메소드를 통해서 직접 숫자로 변환</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp = pd.DataFrame(&#123;<span class=\"string\">&#x27;Food_Name&#x27;</span>: [<span class=\"string\">&#x27;Apple&#x27;</span>, <span class=\"string\">&#x27;Chicken&#x27;</span>, <span class=\"string\">&#x27;Broccoli&#x27;</span>], </span><br><span class=\"line\">                     <span class=\"string\">&#x27;Calories&#x27;</span>: [<span class=\"number\">95</span>, <span class=\"number\">231</span>, <span class=\"number\">50</span>]&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">temp[<span class=\"string\">&#x27;Food_No&#x27;</span>] = temp.Food_Name.replace(to_replace = [<span class=\"string\">&#x27;Apple&#x27;</span>, <span class=\"string\">&#x27;Chicken&#x27;</span>, <span class=\"string\">&#x27;Broccoli&#x27;</span>], value = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp[[<span class=\"string\">&#x27;Food_Name&#x27;</span>, <span class=\"string\">&#x27;Food_No&#x27;</span>]])</span><br></pre></td></tr></table></figure>\n\n<pre><code>  Food_Name  Food_No\n0     Apple        1\n1   Chicken        2\n2  Broccoli        3\n</code></pre>\n<ul>\n<li>원핫 인코딩<ul>\n<li>scikit-learn 방식이 조금 복잡함</li>\n<li>그래서 보통은 pandas get_dummies() 함수를 활용한다</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> LabelBinarizer</span><br><span class=\"line\"></span><br><span class=\"line\">temp = pd.DataFrame(&#123;<span class=\"string\">&#x27;Food_Name&#x27;</span>: [<span class=\"string\">&#x27;Apple&#x27;</span>, <span class=\"string\">&#x27;Chicken&#x27;</span>, <span class=\"string\">&#x27;Broccoli&#x27;</span>], </span><br><span class=\"line\">                     <span class=\"string\">&#x27;Calories&#x27;</span>: [<span class=\"number\">95</span>, <span class=\"number\">231</span>, <span class=\"number\">50</span>]&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">encoder = LabelBinarizer()</span><br><span class=\"line\">encoder.fit(temp[<span class=\"string\">&#x27;Food_Name&#x27;</span>])</span><br><span class=\"line\">transformed = encoder.transform(temp[<span class=\"string\">&#x27;Food_Name&#x27;</span>])</span><br><span class=\"line\">ohe_df = pd.DataFrame(transformed)</span><br><span class=\"line\">temp = pd.concat([temp, ohe_df], axis=<span class=\"number\">1</span>).drop([<span class=\"string\">&#x27;Food_Name&#x27;</span>], axis=<span class=\"number\">1</span>)</span><br><span class=\"line\">temp.columns = [<span class=\"string\">&#x27;Calories&#x27;</span>, <span class=\"string\">&#x27;Food_Name_Apple&#x27;</span>, <span class=\"string\">&#x27;Food_Name_Broccoli&#x27;</span>, <span class=\"string\">&#x27;Food_Name_Chicken&#x27;</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp.shape)</span><br></pre></td></tr></table></figure>\n\n<pre><code>   Calories  Food_Name_Apple  Food_Name_Broccoli  Food_Name_Chicken\n0        95                1                   0                  0\n1       231                0                   0                  1\n2        50                0                   1                  0\n(3, 4)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"></span><br><span class=\"line\">temp = pd.DataFrame(&#123;<span class=\"string\">&#x27;Food_Name&#x27;</span>: [<span class=\"string\">&#x27;Apple&#x27;</span>, <span class=\"string\">&#x27;Chicken&#x27;</span>, <span class=\"string\">&#x27;Broccoli&#x27;</span>], </span><br><span class=\"line\">                     <span class=\"string\">&#x27;Calories&#x27;</span>: [<span class=\"number\">95</span>, <span class=\"number\">231</span>, <span class=\"number\">50</span>]&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">temp = pd.get_dummies(temp)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp.shape)</span><br></pre></td></tr></table></figure>\n\n<pre><code>   Calories  Food_Name_Apple  Food_Name_Broccoli  Food_Name_Chicken\n0        95                1                   0                  0\n1       231                0                   0                  1\n2        50                0                   1                  0\n(3, 4)\n</code></pre>\n<ul>\n<li>본 데이터 적용<ul>\n<li>여기서는 Ordinal Encoding 적용 안함. (단, 실전에서는 꼭 찾아서 해야함).</li>\n</ul>\n</li>\n<li>One-Hot Encoding 적용</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all_df = pd.get_dummies(all_df).reset_index(drop=<span class=\"literal\">True</span>)</span><br><span class=\"line\">all_df.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>(2919, 258)\n</code></pre>\n<ul>\n<li>train, test 데이터 합쳐서 진행</li>\n<li>train, test 데이터 재분리</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">X = all_df.iloc[:<span class=\"built_in\">len</span>(y), :]</span><br><span class=\"line\">test = all_df.iloc[<span class=\"built_in\">len</span>(y):, :]</span><br><span class=\"line\"></span><br><span class=\"line\">X.shape, y.shape, test.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>((1460, 258), (1460,), (1459, 258))\n</code></pre>\n<ul>\n<li>머신러닝을 위한 데이터 전처리가 끝남</li>\n</ul>\n<h2 id=\"과제\"><a href=\"#과제\" class=\"headerlink\" title=\"과제\"></a>과제</h2><ul>\n<li>남은 시간동안 교재를 보고 머신러닝 학습 및 RMSE를 구하세요.</li>\n<li>데이터셋 분리<ul>\n<li>X 데이터를 X_train, X_test, y_train, y_test로 분리</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(</span><br><span class=\"line\">    X, y, test_size = <span class=\"number\">0.3</span>, random_state=<span class=\"number\">42</span>)</span><br><span class=\"line\">X_train.shape, X_test.shape, y_train.shape, y_test.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>((1022, 258), (438, 258), (1022,), (438,))\n</code></pre>\n<h2 id=\"평가지표\"><a href=\"#평가지표\" class=\"headerlink\" title=\"평가지표\"></a>평가지표</h2><ul>\n<li>MAE, MSE, RMSE</li>\n</ul>\n<h3 id=\"MAE\"><a href=\"#MAE\" class=\"headerlink\" title=\"MAE\"></a>MAE</h3><ul>\n<li>실젯값과 예측값의 차이, 오차, 오차들의 절댓값 평균을 말함</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">mean_absolute_error</span>(<span class=\"params\">y_true, y_pred</span>):</span><br><span class=\"line\">    error = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> yt, yp <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(y_true, y_pred):</span><br><span class=\"line\">        <span class=\"comment\"># yt : 실젯값</span></span><br><span class=\"line\">        <span class=\"comment\"># yp : 예측값</span></span><br><span class=\"line\">        error = error + np.<span class=\"built_in\">abs</span>(yt - yp)</span><br><span class=\"line\">        <span class=\"comment\"># 절댓값 오차의 평균</span></span><br><span class=\"line\">    mae = error / <span class=\"built_in\">len</span>(y_true)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> mae</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">mean_squared_error</span>(<span class=\"params\">y_true, y_pred</span>):</span><br><span class=\"line\">    error = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> yt, yp <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(y_true, y_pred):</span><br><span class=\"line\">        <span class=\"comment\"># yt : 실젯값</span></span><br><span class=\"line\">        <span class=\"comment\"># yp : 예측값</span></span><br><span class=\"line\">        error = error + (yt - yp) ** <span class=\"number\">2</span></span><br><span class=\"line\">        <span class=\"comment\"># 제곱값 오차의 평균</span></span><br><span class=\"line\">    mse = error / <span class=\"built_in\">len</span>(y_true)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> mse</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">root_mean_squared_error</span>(<span class=\"params\">y_true, y_pred</span>):</span><br><span class=\"line\">    error = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> yt, yp <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(y_true, y_pred):</span><br><span class=\"line\">        <span class=\"comment\"># yt : 실젯값</span></span><br><span class=\"line\">        <span class=\"comment\"># yp : 예측값</span></span><br><span class=\"line\">        error = error + (yt - yp) ** <span class=\"number\">2</span></span><br><span class=\"line\">        <span class=\"comment\"># 제곱값 오차의 평균</span></span><br><span class=\"line\">    mse = error / <span class=\"built_in\">len</span>(y_true)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 제곱근 추가</span></span><br><span class=\"line\">    rmse = np.<span class=\"built_in\">round</span>(np.sqrt(mse), <span class=\"number\">3</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> rmse</span><br><span class=\"line\"></span><br><span class=\"line\">y_true = [<span class=\"number\">400</span>, <span class=\"number\">300</span>, <span class=\"number\">800</span>]</span><br><span class=\"line\">y_pred = [<span class=\"number\">380</span>, <span class=\"number\">320</span>, <span class=\"number\">777</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;MAE:&quot;</span>, mean_absolute_error(y_true, y_pred))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;MSE:&quot;</span>, mean_squared_error(y_true, y_pred))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;RMSE:&quot;</span>, root_mean_squared_error(y_true, y_pred))</span><br></pre></td></tr></table></figure>\n\n<pre><code>MAE: 21.0\nMSE: 443.0\nRMSE: 21.048\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> mean_squared_error</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">rmse</span>(<span class=\"params\">y_true, y_pred</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> np.sqrt(mean_squared_error(y_true, y_pred))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"머신러닝-모형-정의-검증-평가\"><a href=\"#머신러닝-모형-정의-검증-평가\" class=\"headerlink\" title=\"머신러닝 모형 정의, 검증 평가\"></a>머신러닝 모형 정의, 검증 평가</h2><ul>\n<li>교차 검증 함수 만들기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 교차 검증</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> KFold, cross_val_score </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 모형 정의</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LinearRegression </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">cv_rmse</span>(<span class=\"params\">model, n_folds=<span class=\"number\">5</span></span>):</span><br><span class=\"line\">    cv = KFold(n_splits = n_folds, random_state=<span class=\"number\">42</span>, shuffle=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    rmse_list = np.sqrt(-cross_val_score(model, X, y, scoring=<span class=\"string\">&#x27;neg_mean_squared_error&#x27;</span>, cv=cv))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;CV RMSE Value List:&#x27;</span>, np.<span class=\"built_in\">round</span>(rmse_list, <span class=\"number\">4</span>))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;CV RMSE mean List:&#x27;</span>, np.<span class=\"built_in\">round</span>(np.mean(rmse_list), <span class=\"number\">4</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> rmse_list</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 교차 검증</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> KFold, cross_val_score </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 모형 정의</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LinearRegression </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">cv_rmse</span>(<span class=\"params\">model, n_folds=<span class=\"number\">5</span></span>):</span><br><span class=\"line\">    cv = KFold(n_splits = n_folds, random_state=<span class=\"number\">42</span>, shuffle=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    rmse_list = np.sqrt(-cross_val_score(model, X, y, scoring=<span class=\"string\">&#x27;neg_mean_squared_error&#x27;</span>, cv=cv))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;CV RMSE Value List:&#x27;</span>, np.<span class=\"built_in\">round</span>(rmse_list, <span class=\"number\">4</span>))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;CV RMSE mean List:&#x27;</span>, np.<span class=\"built_in\">round</span>(np.mean(rmse_list), <span class=\"number\">4</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> rmse_list </span><br><span class=\"line\"></span><br><span class=\"line\">rmse_scores = &#123;&#125; </span><br><span class=\"line\">lr_model = LinearRegression()</span><br><span class=\"line\"></span><br><span class=\"line\">score = cv_rmse(lr_model, n_folds=<span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;linear regression - mean : &#123;:.4f&#125; (std: &#123;:.4f&#125;)&#x27;</span>.<span class=\"built_in\">format</span>(score.mean(), score.std()))</span><br><span class=\"line\"></span><br><span class=\"line\">rmse_scores[<span class=\"string\">&#x27;Linear Regression&#x27;</span>] = (score.mean(), score.std())</span><br></pre></td></tr></table></figure>\n\n<pre><code>CV RMSE Value List: [0.1279 0.1258 0.2213 0.1558 0.1113]\nCV RMSE mean List: 0.1484\nlinear regression - mean : 0.1484 (std: 0.0392)\n</code></pre>\n<h2 id=\"제출-방법\"><a href=\"#제출-방법\" class=\"headerlink\" title=\"제출 방법\"></a>제출 방법</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> mean_squared_error</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> KFold, cross_val_score</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LinearRegression</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> RandomForestRegressor</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">cv_rmse</span>(<span class=\"params\">model, n_folds=<span class=\"number\">5</span></span>):</span><br><span class=\"line\">    cv = KFold(n_splits=n_folds, random_state=<span class=\"number\">42</span>, shuffle=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    rmse_list = np.sqrt(-cross_val_score(model, X, y, scoring=<span class=\"string\">&#x27;neg_mean_squared_error&#x27;</span>, cv=cv))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;CV RMSE value list:&#x27;</span>, np.<span class=\"built_in\">round</span>(rmse_list, <span class=\"number\">4</span>))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;CV RMSE mean value:&#x27;</span>, np.<span class=\"built_in\">round</span>(np.mean(rmse_list), <span class=\"number\">4</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (rmse_list)</span><br><span class=\"line\"></span><br><span class=\"line\">n_folds = <span class=\"number\">5</span></span><br><span class=\"line\">rmse_scores = &#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">#lr_model = LinearRegression()</span></span><br><span class=\"line\">rf_model=RandomForestRegressor()</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">score = cv_rmse(rf_model, n_folds)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;linear regression - mean: &#123;:.4f&#125; (std: &#123;:.4f&#125;)&quot;</span>.<span class=\"built_in\">format</span>(score.mean(), score.std()))</span><br><span class=\"line\">rmse_scores[<span class=\"string\">&#x27;linear regression&#x27;</span>] = (score.mean(), score.std())</span><br></pre></td></tr></table></figure>\n\n<pre><code>CV RMSE value list: [0.1445 0.1275 0.1778 0.1442 0.1217]\nCV RMSE mean value: 0.1432\nlinear regression - mean: 0.1432 (std: 0.0195)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> cross_val_predict</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># X = all_df.iloc[:len(y), :]</span></span><br><span class=\"line\"><span class=\"comment\"># X_test = all_df.iloc[len(y):, :]</span></span><br><span class=\"line\"><span class=\"comment\"># X.shape, y.shape, X_test.shape</span></span><br><span class=\"line\"></span><br><span class=\"line\">rf_model_fit = rf_model.fit(X_train, y_train)</span><br><span class=\"line\">final_preds = np.floor(np.expm1(rf_model_fit.predict(test)))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(final_preds)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[123399. 156138. 176533. ... 156601. 119066. 219373.]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">submission = pd.read_csv(DATA_PATH + <span class=\"string\">&quot;sample_submission.csv&quot;</span>)</span><br><span class=\"line\">submission.iloc[:,<span class=\"number\">1</span>] = final_preds</span><br><span class=\"line\"><span class=\"built_in\">print</span>(submission.head())</span><br><span class=\"line\">submission.to_csv(<span class=\"string\">&quot;submission.csv&quot;</span>, index=<span class=\"literal\">False</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>     Id  SalePrice\n0  1461   123399.0\n1  1462   156138.0\n2  1463   176533.0\n3  1464   183981.0\n4  1465   194195.0\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LinearRegression</span><br><span class=\"line\">lr_model = LinearRegression()</span><br><span class=\"line\">lr_model.fit(X_train, y_train) </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(lr_model.score(X_train, y_train))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(lr_model.score(X_test, y_test))</span><br></pre></td></tr></table></figure>\n\n<pre><code>0.9431219120690453\n0.9023841611069845\n</code></pre>\n"},{"title":"2022-06-17 메모","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"thumbnailImage":"05.png","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-06-17T00:00:00.000Z","_content":"\n블로그 만들기\n<!-- excerpt -->\n\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n\n\n# 0617\n\n블로그 만들기\n\n- 티스토리 블로그 / 네이버 블로그 / medium ← 개발\n- 깃허브 블로그\n\n알아야 할 것 → hugo, hexo, jekyll, html, css, git & github, 터미널 명령어, 마크다운\n\nIT/기획자 (제안서) →→ **티스토리 블로그**\n\n개발자(코딩) →→ **깃허브 블로그**\n\n# Hexo 설치\n\nnodejs 홈페이지에서\n\n![Untitled](/images/0617/Untitled.png)\n\n왼쪽꺼 다운로드\n\n설치시 Add to PATH 선택 후 다운\n\n![Untitled](/images/0617/Untitled%201.png)\n\n![Untitled](/images/0617/Untitled%202.png)\n\n- Node 뜨면 아무키나 누르고 powershell 진입\n- 설치 완료 후 cmd 에서 node -v 입력\n\n![Untitled](/images/0617/Untitled%203.png)\n\n- npm install -g hexo-cli 입력 후 엔터\n\n![Untitled](/images/0617/Untitled%204.png)\n\n---\n\n# 블로그 만들기\n\n- 바탕화면에서 git bash 후 hexo init blog 입력\n\n![Untitled](/images/0617/Untitled%205.png)\n\n- cd blog —> ls 차례대로 입력\n\n![Untitled](/images/0617/Untitled%206.png)\n\n- github 에서 0616에서 배웠던 업로드 한다. (git add . 로 모든 파일 업로드)\n- 바탕화면에 blog 폴더 우클릭 후 PyCharm 으로 열기\n\n![Untitled](/images/0617/Untitled%207.png)\n\n- 터미널 열고\n\n![Untitled](/images/0617/Untitled%208.png)\n\n- npm install\n- npm install hexo-server --save\n- npm install hexo-deployer-git --save 차례대로 입력\n- hexo server 입력\n\n![Untitled](/images/0617/Untitled%209.png)\n\n- 하이퍼링크 클릭하면 블로그 완성\n\n---\n\n# 블로그 배포하기\n\n- github 들어가서 “본인닉네임.github.io” 로 만들기\n- hexo 들어가서\n\n![Untitled](/images/0617/Untitled%2010.png)\n\n저렇게 쓰기(NeewLife 자리에 본인 닉네임)\n\n- 맨 밑에 내려와서\n\n![Untitled](/images/0617/Untitled%2011.png)\n\n**https://github.com/본인닉네임/본인닉네임.github.io.git** 임\n\n- 다시 깃배쉬 밑에 “hexo generate, hexo deploy” 입력\n\n![Untitled](/images/0617/Untitled%2012.png)\n\n![Untitled](/images/0617/Untitled%2013.png)\n\n- 주소창에 “본인닉네임.github.io” 검색하면 Hexo 블로그 배포완료된걸 확인\n\n![Untitled](/images/0617/Untitled%2014.png)\n\n- 다 됐으면 git add . 로 업로드\n\n- 주의사항\n\n중간에 ***# Site*** 부분만 수정가능\n\n![Untitled](/images/0617/Untitled%2015.png)\n\n---\n\n- rtools42 다운받기\n\n![Untitled](/images/0617/Untitled%2016.png)\n\n- R Studio 들어가서 설정\n\n![Untitled](/images/0617/Untitled%2017.png)\n\n- Soft-wrap R source files 체크\n\n![Untitled](/images/0617/Untitled%2018.png)\n\n- Default text encoding UTF-8 로 변경\n- Apperarance에서 Pastel On Dark로 설정\n\n![Untitled](/images/0617/Untitled%2019.png)\n\n- github에서 R_lecture 새로 만들기(README 체크 하기)\n- 바탕화면에서 git bash로 R_lecture 불러오기(주소 복사 후 git clone)\n- R Studio에서\n\n![Untitled](/images/0617/Untitled%2020.png)\n\n![Untitled](/images/0617/Untitled%2021.png)\n\n- 만들고 data, docs, source 폴더 만들기\n\n![Untitled](/images/0617/Untitled%2022.png)\n\n- source 폴더로 들어가서 경로로 설정해주기\n\n![Untitled](/images/0617/Untitled%2023.png)\n\n- 새 스크립트 만들기\n\n![Untitled](/images/0617/Untitled%2024.png)\n\n- day01로 저장해보면 source 폴더안에 저장이 된다\n\n![Untitled](/images/0617/Untitled%2025.png)\n\n---\n\n- day01 폴더를 day0617로 변경한 뒤\n\n![Untitled](/images/0617/Untitled%2026.png)\n\n입력 후 ctrl + enter 누른다.\n\n![Untitled](/images/0617/Untitled%2027.png)\n\n- 이 창이 뜬다면 성공\n- library(ggplot2) 입력 후 ctrl + enter 누르기\n\n![Untitled](/images/0617/Untitled%2028.png)\n\n—> ggplot2 패키지 내의 함수들을 사용하겠다는 명령어이다.\n\n# 함수 공부방법\n\n- [https://cran.r-project.org/](https://cran.r-project.org/)에서 ggplot2 package 설명서 찾아가서\n\ngeom_point 함수 example에서 싹다 드래그\n\n![Untitled](/images/0617/Untitled%2029.png)\n\n- R Studio 에 붙여넣기\n\n![Untitled](/images/0617/Untitled%2030.png)\n\n- ctrl + enter 로 하나씩 실행해보면서 익혀보기\n- aes가 뭔데? 싶으면\n\n![Untitled](/images/0617/Untitled%2031.png)\n\n- 저기서 aes 클릭해서\n\n![Untitled](/images/0617/Untitled%2032.png)\n\n- 또 공부\n- 영어 모르겠으면 파파고에 복붙\n- 하다 모르겠다?\n\n![Untitled](/images/0617/Untitled%2033.png)\n\n- Cheat Sheets 활용\n- [http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html](http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html)\n\n      ===>조금 더 나은 표\n\n---\n\n![Untitled](/images/0617/Untitled%2034.png)\n\n- 함수의 분포도\n\n![Untitled](/images/0617/Untitled%2035.png)\n\n- 함수의 그래프 형태(다음과 같이 나온다)\n\n![Untitled](/images/0617/Untitled%2036.png)\n\n---\n\n- R Markdown 클릭\n\n![Untitled](/images/0617/Untitled%2037.png)\n\n- Document로 만들기\n\n![Untitled](/images/0617/Untitled%2038.png)\n\n- 초록색 C 아이콘 클릭 후 R 클릭\n\n![Untitled](/images/0617/Untitled%2039.png)\n\n- ##R Markdown 밑으로 지우고\n\n```r\n## ggplot2 시각화\n- 다음과 같이 시각화를 작성한다.\n\n'''{r}\n\nlibrary(ggplot2)\n\nggplot(data = iris, aes(x = Sepal.Length,\ny = Sepal.Width)) +\ngeom_point()\n\n'''\n```\n\n- 입력한 후 맨 위에 **output** 부분을 다음과 같이 변경한다.(shift + enter 로 줄바꿈)\n    \n    ![Untitled](/images/0617/Untitled%2040.png)\n    \n- 그 후에 저장\n- 바탕화면의 R_lecture\\source 안에 “day0617” Markdown 원본파일을\n- blog\\source 에 복붙한다.\n\n![Untitled](/images/0617/Untitled%2041.png)\n\n- blog 폴더를 PyCharm 으로 열어서 hexo server 하면 업로드 끝\n\n![Untitled](/images/0617/Untitled%2042.png)","source":"_posts/0617.md","raw":"---\ntitle: \"2022-06-17 메모\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: 블로그\nclearReading: true\nthumbnailImage: 05.png\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-06-17'\n---\n\n블로그 만들기\n<!-- excerpt -->\n\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n\n\n# 0617\n\n블로그 만들기\n\n- 티스토리 블로그 / 네이버 블로그 / medium ← 개발\n- 깃허브 블로그\n\n알아야 할 것 → hugo, hexo, jekyll, html, css, git & github, 터미널 명령어, 마크다운\n\nIT/기획자 (제안서) →→ **티스토리 블로그**\n\n개발자(코딩) →→ **깃허브 블로그**\n\n# Hexo 설치\n\nnodejs 홈페이지에서\n\n![Untitled](/images/0617/Untitled.png)\n\n왼쪽꺼 다운로드\n\n설치시 Add to PATH 선택 후 다운\n\n![Untitled](/images/0617/Untitled%201.png)\n\n![Untitled](/images/0617/Untitled%202.png)\n\n- Node 뜨면 아무키나 누르고 powershell 진입\n- 설치 완료 후 cmd 에서 node -v 입력\n\n![Untitled](/images/0617/Untitled%203.png)\n\n- npm install -g hexo-cli 입력 후 엔터\n\n![Untitled](/images/0617/Untitled%204.png)\n\n---\n\n# 블로그 만들기\n\n- 바탕화면에서 git bash 후 hexo init blog 입력\n\n![Untitled](/images/0617/Untitled%205.png)\n\n- cd blog —> ls 차례대로 입력\n\n![Untitled](/images/0617/Untitled%206.png)\n\n- github 에서 0616에서 배웠던 업로드 한다. (git add . 로 모든 파일 업로드)\n- 바탕화면에 blog 폴더 우클릭 후 PyCharm 으로 열기\n\n![Untitled](/images/0617/Untitled%207.png)\n\n- 터미널 열고\n\n![Untitled](/images/0617/Untitled%208.png)\n\n- npm install\n- npm install hexo-server --save\n- npm install hexo-deployer-git --save 차례대로 입력\n- hexo server 입력\n\n![Untitled](/images/0617/Untitled%209.png)\n\n- 하이퍼링크 클릭하면 블로그 완성\n\n---\n\n# 블로그 배포하기\n\n- github 들어가서 “본인닉네임.github.io” 로 만들기\n- hexo 들어가서\n\n![Untitled](/images/0617/Untitled%2010.png)\n\n저렇게 쓰기(NeewLife 자리에 본인 닉네임)\n\n- 맨 밑에 내려와서\n\n![Untitled](/images/0617/Untitled%2011.png)\n\n**https://github.com/본인닉네임/본인닉네임.github.io.git** 임\n\n- 다시 깃배쉬 밑에 “hexo generate, hexo deploy” 입력\n\n![Untitled](/images/0617/Untitled%2012.png)\n\n![Untitled](/images/0617/Untitled%2013.png)\n\n- 주소창에 “본인닉네임.github.io” 검색하면 Hexo 블로그 배포완료된걸 확인\n\n![Untitled](/images/0617/Untitled%2014.png)\n\n- 다 됐으면 git add . 로 업로드\n\n- 주의사항\n\n중간에 ***# Site*** 부분만 수정가능\n\n![Untitled](/images/0617/Untitled%2015.png)\n\n---\n\n- rtools42 다운받기\n\n![Untitled](/images/0617/Untitled%2016.png)\n\n- R Studio 들어가서 설정\n\n![Untitled](/images/0617/Untitled%2017.png)\n\n- Soft-wrap R source files 체크\n\n![Untitled](/images/0617/Untitled%2018.png)\n\n- Default text encoding UTF-8 로 변경\n- Apperarance에서 Pastel On Dark로 설정\n\n![Untitled](/images/0617/Untitled%2019.png)\n\n- github에서 R_lecture 새로 만들기(README 체크 하기)\n- 바탕화면에서 git bash로 R_lecture 불러오기(주소 복사 후 git clone)\n- R Studio에서\n\n![Untitled](/images/0617/Untitled%2020.png)\n\n![Untitled](/images/0617/Untitled%2021.png)\n\n- 만들고 data, docs, source 폴더 만들기\n\n![Untitled](/images/0617/Untitled%2022.png)\n\n- source 폴더로 들어가서 경로로 설정해주기\n\n![Untitled](/images/0617/Untitled%2023.png)\n\n- 새 스크립트 만들기\n\n![Untitled](/images/0617/Untitled%2024.png)\n\n- day01로 저장해보면 source 폴더안에 저장이 된다\n\n![Untitled](/images/0617/Untitled%2025.png)\n\n---\n\n- day01 폴더를 day0617로 변경한 뒤\n\n![Untitled](/images/0617/Untitled%2026.png)\n\n입력 후 ctrl + enter 누른다.\n\n![Untitled](/images/0617/Untitled%2027.png)\n\n- 이 창이 뜬다면 성공\n- library(ggplot2) 입력 후 ctrl + enter 누르기\n\n![Untitled](/images/0617/Untitled%2028.png)\n\n—> ggplot2 패키지 내의 함수들을 사용하겠다는 명령어이다.\n\n# 함수 공부방법\n\n- [https://cran.r-project.org/](https://cran.r-project.org/)에서 ggplot2 package 설명서 찾아가서\n\ngeom_point 함수 example에서 싹다 드래그\n\n![Untitled](/images/0617/Untitled%2029.png)\n\n- R Studio 에 붙여넣기\n\n![Untitled](/images/0617/Untitled%2030.png)\n\n- ctrl + enter 로 하나씩 실행해보면서 익혀보기\n- aes가 뭔데? 싶으면\n\n![Untitled](/images/0617/Untitled%2031.png)\n\n- 저기서 aes 클릭해서\n\n![Untitled](/images/0617/Untitled%2032.png)\n\n- 또 공부\n- 영어 모르겠으면 파파고에 복붙\n- 하다 모르겠다?\n\n![Untitled](/images/0617/Untitled%2033.png)\n\n- Cheat Sheets 활용\n- [http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html](http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html)\n\n      ===>조금 더 나은 표\n\n---\n\n![Untitled](/images/0617/Untitled%2034.png)\n\n- 함수의 분포도\n\n![Untitled](/images/0617/Untitled%2035.png)\n\n- 함수의 그래프 형태(다음과 같이 나온다)\n\n![Untitled](/images/0617/Untitled%2036.png)\n\n---\n\n- R Markdown 클릭\n\n![Untitled](/images/0617/Untitled%2037.png)\n\n- Document로 만들기\n\n![Untitled](/images/0617/Untitled%2038.png)\n\n- 초록색 C 아이콘 클릭 후 R 클릭\n\n![Untitled](/images/0617/Untitled%2039.png)\n\n- ##R Markdown 밑으로 지우고\n\n```r\n## ggplot2 시각화\n- 다음과 같이 시각화를 작성한다.\n\n'''{r}\n\nlibrary(ggplot2)\n\nggplot(data = iris, aes(x = Sepal.Length,\ny = Sepal.Width)) +\ngeom_point()\n\n'''\n```\n\n- 입력한 후 맨 위에 **output** 부분을 다음과 같이 변경한다.(shift + enter 로 줄바꿈)\n    \n    ![Untitled](/images/0617/Untitled%2040.png)\n    \n- 그 후에 저장\n- 바탕화면의 R_lecture\\source 안에 “day0617” Markdown 원본파일을\n- blog\\source 에 복붙한다.\n\n![Untitled](/images/0617/Untitled%2041.png)\n\n- blog 폴더를 PyCharm 으로 열어서 hexo server 하면 업로드 끝\n\n![Untitled](/images/0617/Untitled%2042.png)","slug":"0617","published":1,"updated":"2022-07-10T15:41:34.124Z","_id":"cl5fh3s3j0000ywu06x0060ai","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n\n<figure class=\"highlight plaintext\"><figcaption><span>setup, include</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">knitr::opts_chunk$set(echo = TRUE)</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"0617\"><a href=\"#0617\" class=\"headerlink\" title=\"0617\"></a>0617</h1><p>블로그 만들기</p>\n<ul>\n<li>티스토리 블로그 &#x2F; 네이버 블로그 &#x2F; medium ← 개발</li>\n<li>깃허브 블로그</li>\n</ul>\n<p>알아야 할 것 → hugo, hexo, jekyll, html, css, git &amp; github, 터미널 명령어, 마크다운</p>\n<p>IT&#x2F;기획자 (제안서) →→ <strong>티스토리 블로그</strong></p>\n<p>개발자(코딩) →→ <strong>깃허브 블로그</strong></p>\n<h1 id=\"Hexo-설치\"><a href=\"#Hexo-설치\" class=\"headerlink\" title=\"Hexo 설치\"></a>Hexo 설치</h1><p>nodejs 홈페이지에서</p>\n<p><img src=\"/images/0617/Untitled.png\" alt=\"Untitled\"></p>\n<p>왼쪽꺼 다운로드</p>\n<p>설치시 Add to PATH 선택 후 다운</p>\n<p><img src=\"/images/0617/Untitled%201.png\" alt=\"Untitled\"></p>\n<p><img src=\"/images/0617/Untitled%202.png\" alt=\"Untitled\"></p>\n<ul>\n<li>Node 뜨면 아무키나 누르고 powershell 진입</li>\n<li>설치 완료 후 cmd 에서 node -v 입력</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%203.png\" alt=\"Untitled\"></p>\n<ul>\n<li>npm install -g hexo-cli 입력 후 엔터</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%204.png\" alt=\"Untitled\"></p>\n<hr>\n<h1 id=\"블로그-만들기\"><a href=\"#블로그-만들기\" class=\"headerlink\" title=\"블로그 만들기\"></a>블로그 만들기</h1><ul>\n<li>바탕화면에서 git bash 후 hexo init blog 입력</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%205.png\" alt=\"Untitled\"></p>\n<ul>\n<li>cd blog —&gt; ls 차례대로 입력</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%206.png\" alt=\"Untitled\"></p>\n<ul>\n<li>github 에서 0616에서 배웠던 업로드 한다. (git add . 로 모든 파일 업로드)</li>\n<li>바탕화면에 blog 폴더 우클릭 후 PyCharm 으로 열기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%207.png\" alt=\"Untitled\"></p>\n<ul>\n<li>터미널 열고</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%208.png\" alt=\"Untitled\"></p>\n<ul>\n<li>npm install</li>\n<li>npm install hexo-server –save</li>\n<li>npm install hexo-deployer-git –save 차례대로 입력</li>\n<li>hexo server 입력</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%209.png\" alt=\"Untitled\"></p>\n<ul>\n<li>하이퍼링크 클릭하면 블로그 완성</li>\n</ul>\n<hr>\n<h1 id=\"블로그-배포하기\"><a href=\"#블로그-배포하기\" class=\"headerlink\" title=\"블로그 배포하기\"></a>블로그 배포하기</h1><ul>\n<li>github 들어가서 “본인닉네임.github.io” 로 만들기</li>\n<li>hexo 들어가서</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2010.png\" alt=\"Untitled\"></p>\n<p>저렇게 쓰기(NeewLife 자리에 본인 닉네임)</p>\n<ul>\n<li>맨 밑에 내려와서</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2011.png\" alt=\"Untitled\"></p>\n<p><strong><a href=\"https://github.com/%EB%B3%B8%EC%9D%B8%EB%8B%89%EB%84%A4%EC%9E%84/%EB%B3%B8%EC%9D%B8%EB%8B%89%EB%84%A4%EC%9E%84.github.io.git\">https://github.com/본인닉네임/본인닉네임.github.io.git</a></strong> 임</p>\n<ul>\n<li>다시 깃배쉬 밑에 “hexo generate, hexo deploy” 입력</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2012.png\" alt=\"Untitled\"></p>\n<p><img src=\"/images/0617/Untitled%2013.png\" alt=\"Untitled\"></p>\n<ul>\n<li>주소창에 “본인닉네임.github.io” 검색하면 Hexo 블로그 배포완료된걸 확인</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2014.png\" alt=\"Untitled\"></p>\n<ul>\n<li><p>다 됐으면 git add . 로 업로드</p>\n</li>\n<li><p>주의사항</p>\n</li>\n</ul>\n<p>중간에 <em><strong># Site</strong></em> 부분만 수정가능</p>\n<p><img src=\"/images/0617/Untitled%2015.png\" alt=\"Untitled\"></p>\n<hr>\n<ul>\n<li>rtools42 다운받기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2016.png\" alt=\"Untitled\"></p>\n<ul>\n<li>R Studio 들어가서 설정</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2017.png\" alt=\"Untitled\"></p>\n<ul>\n<li>Soft-wrap R source files 체크</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2018.png\" alt=\"Untitled\"></p>\n<ul>\n<li>Default text encoding UTF-8 로 변경</li>\n<li>Apperarance에서 Pastel On Dark로 설정</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2019.png\" alt=\"Untitled\"></p>\n<ul>\n<li>github에서 R_lecture 새로 만들기(README 체크 하기)</li>\n<li>바탕화면에서 git bash로 R_lecture 불러오기(주소 복사 후 git clone)</li>\n<li>R Studio에서</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2020.png\" alt=\"Untitled\"></p>\n<p><img src=\"/images/0617/Untitled%2021.png\" alt=\"Untitled\"></p>\n<ul>\n<li>만들고 data, docs, source 폴더 만들기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2022.png\" alt=\"Untitled\"></p>\n<ul>\n<li>source 폴더로 들어가서 경로로 설정해주기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2023.png\" alt=\"Untitled\"></p>\n<ul>\n<li>새 스크립트 만들기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2024.png\" alt=\"Untitled\"></p>\n<ul>\n<li>day01로 저장해보면 source 폴더안에 저장이 된다</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2025.png\" alt=\"Untitled\"></p>\n<hr>\n<ul>\n<li>day01 폴더를 day0617로 변경한 뒤</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2026.png\" alt=\"Untitled\"></p>\n<p>입력 후 ctrl + enter 누른다.</p>\n<p><img src=\"/images/0617/Untitled%2027.png\" alt=\"Untitled\"></p>\n<ul>\n<li>이 창이 뜬다면 성공</li>\n<li>library(ggplot2) 입력 후 ctrl + enter 누르기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2028.png\" alt=\"Untitled\"></p>\n<p>—&gt; ggplot2 패키지 내의 함수들을 사용하겠다는 명령어이다.</p>\n<h1 id=\"함수-공부방법\"><a href=\"#함수-공부방법\" class=\"headerlink\" title=\"함수 공부방법\"></a>함수 공부방법</h1><ul>\n<li><a href=\"https://cran.r-project.org/\">https://cran.r-project.org/</a>에서 ggplot2 package 설명서 찾아가서</li>\n</ul>\n<p>geom_point 함수 example에서 싹다 드래그</p>\n<p><img src=\"/images/0617/Untitled%2029.png\" alt=\"Untitled\"></p>\n<ul>\n<li>R Studio 에 붙여넣기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2030.png\" alt=\"Untitled\"></p>\n<ul>\n<li>ctrl + enter 로 하나씩 실행해보면서 익혀보기</li>\n<li>aes가 뭔데? 싶으면</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2031.png\" alt=\"Untitled\"></p>\n<ul>\n<li>저기서 aes 클릭해서</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2032.png\" alt=\"Untitled\"></p>\n<ul>\n<li>또 공부</li>\n<li>영어 모르겠으면 파파고에 복붙</li>\n<li>하다 모르겠다?</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2033.png\" alt=\"Untitled\"></p>\n<ul>\n<li><p>Cheat Sheets 활용</p>\n</li>\n<li><p><a href=\"http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html\">http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html</a></p>\n<pre><code>===&gt;조금 더 나은 표\n</code></pre>\n</li>\n</ul>\n<hr>\n<p><img src=\"/images/0617/Untitled%2034.png\" alt=\"Untitled\"></p>\n<ul>\n<li>함수의 분포도</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2035.png\" alt=\"Untitled\"></p>\n<ul>\n<li>함수의 그래프 형태(다음과 같이 나온다)</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2036.png\" alt=\"Untitled\"></p>\n<hr>\n<ul>\n<li>R Markdown 클릭</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2037.png\" alt=\"Untitled\"></p>\n<ul>\n<li>Document로 만들기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2038.png\" alt=\"Untitled\"></p>\n<ul>\n<li>초록색 C 아이콘 클릭 후 R 클릭</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2039.png\" alt=\"Untitled\"></p>\n<ul>\n<li>##R Markdown 밑으로 지우고</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## ggplot2 시각화</span></span><br><span class=\"line\"><span class=\"operator\">-</span> 다음과 같이 시각화를 작성한다.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;</span><span class=\"string\">&#x27;&#123;r&#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">library(ggplot2)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">ggplot(data = iris, aes(x = Sepal.Length,</span></span><br><span class=\"line\"><span class=\"string\">y = Sepal.Width)) +</span></span><br><span class=\"line\"><span class=\"string\">geom_point()</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&#x27;</span><span class=\"string\">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>입력한 후 맨 위에 <strong>output</strong> 부분을 다음과 같이 변경한다.(shift + enter 로 줄바꿈)</p>\n<p>  <img src=\"/images/0617/Untitled%2040.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>그 후에 저장</p>\n</li>\n<li><p>바탕화면의 R_lecture\\source 안에 “day0617” Markdown 원본파일을</p>\n</li>\n<li><p>blog\\source 에 복붙한다.</p>\n</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2041.png\" alt=\"Untitled\"></p>\n<ul>\n<li>blog 폴더를 PyCharm 으로 열어서 hexo server 하면 업로드 끝</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2042.png\" alt=\"Untitled\"></p>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/06/17/0617/05.png","excerpt":"<p>블로그 만들기</p>","more":"<p>블로그 만들기</p>\n<!-- excerpt -->\n\n\n<figure class=\"highlight plaintext\"><figcaption><span>setup, include</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">knitr::opts_chunk$set(echo = TRUE)</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"0617\"><a href=\"#0617\" class=\"headerlink\" title=\"0617\"></a>0617</h1><p>블로그 만들기</p>\n<ul>\n<li>티스토리 블로그 &#x2F; 네이버 블로그 &#x2F; medium ← 개발</li>\n<li>깃허브 블로그</li>\n</ul>\n<p>알아야 할 것 → hugo, hexo, jekyll, html, css, git &amp; github, 터미널 명령어, 마크다운</p>\n<p>IT&#x2F;기획자 (제안서) →→ <strong>티스토리 블로그</strong></p>\n<p>개발자(코딩) →→ <strong>깃허브 블로그</strong></p>\n<h1 id=\"Hexo-설치\"><a href=\"#Hexo-설치\" class=\"headerlink\" title=\"Hexo 설치\"></a>Hexo 설치</h1><p>nodejs 홈페이지에서</p>\n<p><img src=\"/images/0617/Untitled.png\" alt=\"Untitled\"></p>\n<p>왼쪽꺼 다운로드</p>\n<p>설치시 Add to PATH 선택 후 다운</p>\n<p><img src=\"/images/0617/Untitled%201.png\" alt=\"Untitled\"></p>\n<p><img src=\"/images/0617/Untitled%202.png\" alt=\"Untitled\"></p>\n<ul>\n<li>Node 뜨면 아무키나 누르고 powershell 진입</li>\n<li>설치 완료 후 cmd 에서 node -v 입력</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%203.png\" alt=\"Untitled\"></p>\n<ul>\n<li>npm install -g hexo-cli 입력 후 엔터</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%204.png\" alt=\"Untitled\"></p>\n<hr>\n<h1 id=\"블로그-만들기\"><a href=\"#블로그-만들기\" class=\"headerlink\" title=\"블로그 만들기\"></a>블로그 만들기</h1><ul>\n<li>바탕화면에서 git bash 후 hexo init blog 입력</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%205.png\" alt=\"Untitled\"></p>\n<ul>\n<li>cd blog —&gt; ls 차례대로 입력</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%206.png\" alt=\"Untitled\"></p>\n<ul>\n<li>github 에서 0616에서 배웠던 업로드 한다. (git add . 로 모든 파일 업로드)</li>\n<li>바탕화면에 blog 폴더 우클릭 후 PyCharm 으로 열기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%207.png\" alt=\"Untitled\"></p>\n<ul>\n<li>터미널 열고</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%208.png\" alt=\"Untitled\"></p>\n<ul>\n<li>npm install</li>\n<li>npm install hexo-server –save</li>\n<li>npm install hexo-deployer-git –save 차례대로 입력</li>\n<li>hexo server 입력</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%209.png\" alt=\"Untitled\"></p>\n<ul>\n<li>하이퍼링크 클릭하면 블로그 완성</li>\n</ul>\n<hr>\n<h1 id=\"블로그-배포하기\"><a href=\"#블로그-배포하기\" class=\"headerlink\" title=\"블로그 배포하기\"></a>블로그 배포하기</h1><ul>\n<li>github 들어가서 “본인닉네임.github.io” 로 만들기</li>\n<li>hexo 들어가서</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2010.png\" alt=\"Untitled\"></p>\n<p>저렇게 쓰기(NeewLife 자리에 본인 닉네임)</p>\n<ul>\n<li>맨 밑에 내려와서</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2011.png\" alt=\"Untitled\"></p>\n<p><strong><a href=\"https://github.com/%EB%B3%B8%EC%9D%B8%EB%8B%89%EB%84%A4%EC%9E%84/%EB%B3%B8%EC%9D%B8%EB%8B%89%EB%84%A4%EC%9E%84.github.io.git\">https://github.com/본인닉네임/본인닉네임.github.io.git</a></strong> 임</p>\n<ul>\n<li>다시 깃배쉬 밑에 “hexo generate, hexo deploy” 입력</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2012.png\" alt=\"Untitled\"></p>\n<p><img src=\"/images/0617/Untitled%2013.png\" alt=\"Untitled\"></p>\n<ul>\n<li>주소창에 “본인닉네임.github.io” 검색하면 Hexo 블로그 배포완료된걸 확인</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2014.png\" alt=\"Untitled\"></p>\n<ul>\n<li><p>다 됐으면 git add . 로 업로드</p>\n</li>\n<li><p>주의사항</p>\n</li>\n</ul>\n<p>중간에 <em><strong># Site</strong></em> 부분만 수정가능</p>\n<p><img src=\"/images/0617/Untitled%2015.png\" alt=\"Untitled\"></p>\n<hr>\n<ul>\n<li>rtools42 다운받기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2016.png\" alt=\"Untitled\"></p>\n<ul>\n<li>R Studio 들어가서 설정</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2017.png\" alt=\"Untitled\"></p>\n<ul>\n<li>Soft-wrap R source files 체크</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2018.png\" alt=\"Untitled\"></p>\n<ul>\n<li>Default text encoding UTF-8 로 변경</li>\n<li>Apperarance에서 Pastel On Dark로 설정</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2019.png\" alt=\"Untitled\"></p>\n<ul>\n<li>github에서 R_lecture 새로 만들기(README 체크 하기)</li>\n<li>바탕화면에서 git bash로 R_lecture 불러오기(주소 복사 후 git clone)</li>\n<li>R Studio에서</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2020.png\" alt=\"Untitled\"></p>\n<p><img src=\"/images/0617/Untitled%2021.png\" alt=\"Untitled\"></p>\n<ul>\n<li>만들고 data, docs, source 폴더 만들기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2022.png\" alt=\"Untitled\"></p>\n<ul>\n<li>source 폴더로 들어가서 경로로 설정해주기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2023.png\" alt=\"Untitled\"></p>\n<ul>\n<li>새 스크립트 만들기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2024.png\" alt=\"Untitled\"></p>\n<ul>\n<li>day01로 저장해보면 source 폴더안에 저장이 된다</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2025.png\" alt=\"Untitled\"></p>\n<hr>\n<ul>\n<li>day01 폴더를 day0617로 변경한 뒤</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2026.png\" alt=\"Untitled\"></p>\n<p>입력 후 ctrl + enter 누른다.</p>\n<p><img src=\"/images/0617/Untitled%2027.png\" alt=\"Untitled\"></p>\n<ul>\n<li>이 창이 뜬다면 성공</li>\n<li>library(ggplot2) 입력 후 ctrl + enter 누르기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2028.png\" alt=\"Untitled\"></p>\n<p>—&gt; ggplot2 패키지 내의 함수들을 사용하겠다는 명령어이다.</p>\n<h1 id=\"함수-공부방법\"><a href=\"#함수-공부방법\" class=\"headerlink\" title=\"함수 공부방법\"></a>함수 공부방법</h1><ul>\n<li><a href=\"https://cran.r-project.org/\">https://cran.r-project.org/</a>에서 ggplot2 package 설명서 찾아가서</li>\n</ul>\n<p>geom_point 함수 example에서 싹다 드래그</p>\n<p><img src=\"/images/0617/Untitled%2029.png\" alt=\"Untitled\"></p>\n<ul>\n<li>R Studio 에 붙여넣기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2030.png\" alt=\"Untitled\"></p>\n<ul>\n<li>ctrl + enter 로 하나씩 실행해보면서 익혀보기</li>\n<li>aes가 뭔데? 싶으면</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2031.png\" alt=\"Untitled\"></p>\n<ul>\n<li>저기서 aes 클릭해서</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2032.png\" alt=\"Untitled\"></p>\n<ul>\n<li>또 공부</li>\n<li>영어 모르겠으면 파파고에 복붙</li>\n<li>하다 모르겠다?</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2033.png\" alt=\"Untitled\"></p>\n<ul>\n<li><p>Cheat Sheets 활용</p>\n</li>\n<li><p><a href=\"http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html\">http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html</a></p>\n<pre><code>===&gt;조금 더 나은 표\n</code></pre>\n</li>\n</ul>\n<hr>\n<p><img src=\"/images/0617/Untitled%2034.png\" alt=\"Untitled\"></p>\n<ul>\n<li>함수의 분포도</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2035.png\" alt=\"Untitled\"></p>\n<ul>\n<li>함수의 그래프 형태(다음과 같이 나온다)</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2036.png\" alt=\"Untitled\"></p>\n<hr>\n<ul>\n<li>R Markdown 클릭</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2037.png\" alt=\"Untitled\"></p>\n<ul>\n<li>Document로 만들기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2038.png\" alt=\"Untitled\"></p>\n<ul>\n<li>초록색 C 아이콘 클릭 후 R 클릭</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2039.png\" alt=\"Untitled\"></p>\n<ul>\n<li>##R Markdown 밑으로 지우고</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## ggplot2 시각화</span></span><br><span class=\"line\"><span class=\"operator\">-</span> 다음과 같이 시각화를 작성한다.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;</span><span class=\"string\">&#x27;&#123;r&#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">library(ggplot2)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">ggplot(data = iris, aes(x = Sepal.Length,</span></span><br><span class=\"line\"><span class=\"string\">y = Sepal.Width)) +</span></span><br><span class=\"line\"><span class=\"string\">geom_point()</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&#x27;</span><span class=\"string\">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>입력한 후 맨 위에 <strong>output</strong> 부분을 다음과 같이 변경한다.(shift + enter 로 줄바꿈)</p>\n<p>  <img src=\"/images/0617/Untitled%2040.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>그 후에 저장</p>\n</li>\n<li><p>바탕화면의 R_lecture\\source 안에 “day0617” Markdown 원본파일을</p>\n</li>\n<li><p>blog\\source 에 복붙한다.</p>\n</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2041.png\" alt=\"Untitled\"></p>\n<ul>\n<li>blog 폴더를 PyCharm 으로 열어서 hexo server 하면 업로드 끝</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2042.png\" alt=\"Untitled\"></p>\n"},{"title":"PyQt5 Tutorial Basic","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"thumbnailImage":"PyQt-Logo.wine.png","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-07-16T13:45:55.000Z","_content":"\nPyQt5 Basic\n<!-- excerpt -->\n\n# PyQt5 Tutorial Basics\n\n# PyQt5를 이용해서 간단한 창 만들기\n\n## 기초 창 띄우기\n\n---\n\n### 코드\n\n```python\nimport sys\nfrom PyQt5.QtWidgets import QApplication, QWidget\n\nclass MyApp(QWidget):\n\n    def __init__(self):\n        super().__init__()\n        self.initUI()\n\n    def initUI(self):\n        self.setWindowTitle('My First Application')\n        self.move(300, 300)\n        self.resize(400, 200)\n        self.show()\n\nif __name__ == '__main__':\n   app = QApplication(sys.argv)\n   ex = MyApp()\n   sys.exit(app.exec_())\n\n```\n\n### 설명\n\n---\n\n```python\n        self.setWindowTitle('My First Application')\n        self.move(300, 300)\n        self.resize(400, 200)\n        self.show()\n\n```\n\n- setWindowTitle() 은 타이틀창의 제목 설정\n- move() 는 스크린의 x = 300px, y = 300px 의 위치로 이동\n- resize() 는 크기를 너비 400px, 높이 200px 로 조절\n- show() 는 스크린 출력함수\n\n```python\nif __name__ == '__main__':\n\n```\n\n- '**name**' 은 현재 모듈의 이름이 저장되는 내장 변수\n- 만약에 '[moduleA.py](http://modulea.py/)' 라는 코드를 import 해서 예제 코드를 수행하면 __name__은 'moduleA' 가 된다.\n- 코드를 직접 짜서 실행할 경우 **name** 은 **main** 이 된다.\n- 즉, 코드를 보고 직접 실행하는지 모듈을 통해 불러오는지를 확인할 수 있다.\n\n```python\n    app = QApplication(sys.argv)\n\n```\n\n- 모든 PyQt5 애플리케이션은 애플리케이션 객체를 생성해야 한다.\n- 출처 : [https://wikidocs.net/21920](https://wikidocs.net/21920)\n\n### 결과\n\n---\n\n![2_1_opening.png](/images/PyCharm Tutorial Basics/2_1_opening.png)\n\n## 어플리케이션 아이콘 넣기\n\n---\n\n- 타이틀바의 왼쪽 끝에 보여질 작은 이미지 넣기\n- 아이콘으로 사용할 이미지 파일을 저장한다.\n    \n    ![web.png](/images/PyCharm Tutorial Basics/web.png)\n    \n\n### 코드\n\n```python\nimport sys\nfrom PyQt5.QtWidgets import QApplication, QWidget\nfrom PyQt5.QtGui import QIcon\n\nclass MyApp(QWidget):\n\n  def __init__(self):\n      super().__init__()\n      self.initUI()\n\n  def initUI(self):\n      self.setWindowTitle('Icon')\n      self.setWindowIcon(QIcon('web.png'))\n      self.setGeometry(300, 300, 300, 200)\n      self.show()\n\nif __name__ == '__main__':\n  app = QApplication(sys.argv)\n  ex = MyApp()\n  sys.exit(app.exec_())\n\n```\n\n### 설명\n\n---\n\n```python\nself.setWindowIcon(QIcon('web.png'))\n\n```\n\n- setWindowIcon() 는 어플리케이션 아이콘을 설정함\n- QIcon 객체를 따로 생성하여 QIcon()에 보여질 이미지('web.png')를 입력\n- 이미지 파일을 다른 폴더에 따로 저장할 경우 경로까지 같이 입력하면 된다.\n\n```python\nself.setGeometry(300, 300, 300, 200)\n\n```\n\n- setGeometry() 는 창의 위치와 크기를 설정함.\n- 1, 2번째 변수는 창의 x, y 위치를 결정하고 / 3, 4번째 변수는 창의 너비와 높이를 결정함\n- 출처 : [https://wikidocs.net/21853](https://wikidocs.net/21853)\n\n### 결과\n\n---\n\n![2_2_icon.png](/images/PyCharm Tutorial Basics/2_2_icon.png)\n\n## 창 닫기 버튼\n\n---\n\n### 코드\n\n```python\nimport sys\nfrom PyQt5.QtWidgets import QApplication, QWidget, QPushButton\nfrom PyQt5.QtCore import QCoreApplication\n\nclass MyApp(QWidget):\n\n  def __init__(self):\n      super().__init__()\n      self.initUI()\n\n  def initUI(self):\n      btn = QPushButton('Quit', self)\n      btn.move(50, 50)\n      btn.resize(btn.sizeHint())\n      btn.clicked.connect(QCoreApplication.instance().quit)\n\n      self.setWindowTitle('Quit Button')\n      self.setGeometry(300, 300, 300, 200)\n      self.show()\n\nif __name__ == '__main__':\n    app = QApplication(sys.argv)\n    ex = MyApp()\n    sys.exit(app.exec_())\n\n```\n\n### 설명\n\n---\n\n```python\nfrom PyQt5.QtCore import QCoreApplication\n\n```\n\n- QtCore 모듈의 QCoreApplication 클래스를 불러온다\n\n```python\nbtn = QPushButton('Quit', self)\n\n```\n\n- 버튼을 하나 만든다.\n- 이 버튼(btn) 은 QPushButton 클래스의 인스턴스이다.\n- 생성자 (QPushButton())의 첫 번째 파라미터에는 버튼에 표시될 텍스트를 입력하고, 두 번째 파라미터에는 버튼이 위치할 부모위젯을 입력한다.\n\n```python\nbtn.clicked.connect(QCoreApplication.instance().quit)\n\n```\n\n- PyQt5 에서의 이벤트 처리는 [시그널과 슬롯](https://wikidocs.net/22020) 메커니즘으로 이루어진다.\n- 버튼(btn)을 클릭하면 'clicked' 시그널이 만들어진다.\n- instance() 는 현재 인스턴스를 반환한다.\n- clicked 시그널은 어플리케이션을 종료하는 quit() 에 연결된다.\n- 이렇게 발신자와 수신자, 두 객체간에 커뮤니케이션이 이루어져야 한다.\n- 여기에서는 발신자는 푸시버튼 (btn)이고, 수신자는 어플리케이션 객체(app)이다.\n- 마찬가지로 버튼 위치도 조정 가능하다.\n\n### 결과\n\n---\n\n![2_3_closing.png](/images/PyCharm Tutorial Basics/2_3_closing.png)\n\n## 툴팁 나타내기\n\n---\n\n### 코드\n\n```python\nimport sys\nfrom PyQt5.QtWidgets import QApplication, QWidget, QPushButton, QToolTip\nfrom PyQt5.QtGui import QFont\n\nclass MyApp(QWidget):\n\n    def __init__(self):\n        super().__init__()\n        self.initUI()\n\n    def initUI(self):\n        QToolTip.setFont(QFont('SansSerif', 10))\n        self.setToolTip('This is a <b>QWidget</b> widget')\n\n        btn = QPushButton('Button', self)\n        btn.setToolTip('This is a <b>QPushButton</b> widget')\n        btn.move(50, 50)\n        btn.resize(btn.sizeHint())\n\n        self.setWindowTitle('Tooltips')\n        self.setGeometry(300, 300, 300, 200)\n        self.show()\n\nif __name__ == '__main__':\n    app = QApplication(sys.argv)\n    ex = MyApp()\n    sys.exit(app.exec_())\n\n```\n\n### 설명\n\n---\n\n```python\nQToolTip.setFont(QFont('SansSerif', 10))\nself.setToolTip('This is a <b>QWidget</b> widget')\n\n```\n\n- 먼저 툴팁에 사용될 폰트를 설정한다. 여기에서는 10px 크기의 'SansSerif' 폰트를 사용한다.\n- 툴팁을 만들기 위해서는 setToolTip() 을 사용해서, 표시될 텍스트를 입력한다.\n\n```python\nbtn = QPushButton('Button', self)\nbtn.setToolTip('This is a <b>QPushButton</b> widget')\n\n```\n\n- 푸시버튼을 하나 만들고, 이 버튼에도 툴팁을 달아준다.\n\n```python\nbtn.move(50, 50)\nbtn.resize(btn.sizeHint())\n\n```\n\n- 버튼의 위치와 크기를 설정\n- sizeHint() 는 버튼을 적절한 크기로 설정하도록 해준다\n- 출처 : [https://wikidocs.net/21860](https://wikidocs.net/21860)\n\n### 결과\n\n---\n\n![2_4_tooltip.png](/images/PyCharm Tutorial Basics/2_4_tooltip.png)\n\n## 상태바 만들기\n\n### 개념\n\n---\n\n- 메인창은 메뉴바, 툴바, 상태바를 갖는 전형적인 어플리케이션 창이다.\n- QMenuBar, QToolBar, QDockWidget, QStatusBar 등의 고유의 레이아웃을 가지고 있다.\n- 가운데 영역에 중심위젯을 위한 영역을 갖고 있으며, 여기에는 어떤 위젯도 들어올 수 있다.\n\n![mainwindowlayout.png](/images/PyCharm Tutorial Basics/mainwindowlayout.png)\n\n- QMainWindow 클래스를 이용해서 메인 어플리케이션 창을 만들 수 있다.\n- QStatuseBar를 이용해서 메인 창에 상태바(status bar)를 하나 만들어보자.\n- 상태바는 어플리케이션의 현재 상태를 알려주기 위해 어플리케이션의 하단에 위치하는 위젯이다\n- 상태바에 텍스트를 표시하기 위해서는 showMessage() 를 사용한다\n- 텍스트를 사라지게 하고 싶다면 clearMessage() 를 사용하거나, showMessage() 에 텍스트가 표시되는 시간도 설정할 수 있다.\n- 현재 상태바에 표시되는 메세지 텍스트를 갖고 오고 싶을 때는 currentMessage()를 사용한다.\n- QStatusBar 클래스는 상태바에 표시되는 메세지가 바뀔 때 마다 messageChanged() 시그널을 발생시킨다\n\n### 코드\n\n```python\nimport sys\nfrom PyQt5.QtWidgets import QApplication, QMainWindow\n\nclass MyApp(QMainWindow):\n\n    def __init__(self):\n        super().__init__()\n        self.initUI()\n\n    def initUI(self):\n        self.statusBar().showMessage('Ready')\n\n        self.setWindowTitle('Statusbar')\n        self.setGeometry(300, 300, 300, 200)\n        self.show()\n\nif __name__ == '__main__':\n    app = QApplication(sys.argv)\n    ex = MyApp()\n    sys.exit(app.exec_())\n```\n\n### 설명\n\n---\n\n```python\nself.statusBar().showMessage('Ready')\n```\n\n- 상태바는 QMainWindow 클래스의 statusBar() 를 이용해서 만드는데, statusBar() 를 최초로 호출함으로써 만들어진다.\n- 그 다음 호출부터는 상태바 객체를 반환한다.\n- showMessage()를 통해 상태바에 보여질 메세지를 설정할 수 있다.\n- 출처 : [https://wikidocs.net/21928](https://wikidocs.net/21928)\n\n### 결과\n\n---\n\n![2_5_statusbar.png](/images/PyCharm Tutorial Basics/2_5_statusbar.png)\n\n## 메뉴바 만들기\n\n### 개념\n\n---\n\n- GUI 어플리케이션에서 메뉴바(menu bar)는 흔하게 사용된다.\n- 다양한 명령들의 모음이 메뉴바에 위치한다. ([QMenuBar 공식 문서](https://doc.qt.io/qt-5/qmenubar.html))\n- 우선 폴더안에 메뉴에 해당하는 아이콘(exit.png)을 저장한다\n    \n    ![exit.png](/images/PyCharm Tutorial Basics/exit.png)\n    \n\n### 코드\n\n```python\nimport sys\nfrom PyQt5.QtWidgets import QApplication, QMainWindow, QAction, qApp\nfrom PyQt5.QtGui import QIcon\n\nclass MyApp(QMainWindow):\n\n    def __init__(self):\n        super().__init__()\n        self.initUI()\n\n    def initUI(self):\n        exitAction = QAction(QIcon('exit.png'), 'Exit', self)\n        exitAction.setShortcut('Ctrl+Q')\n        exitAction.setStatusTip('Exit application')\n        exitAction.triggered.connect(qApp.quit)\n\n        self.statusBar()\n\n        menubar = self.menuBar()\n        menubar.setNativeMenuBar(False)\n        filemenu = menubar.addMenu('&File')\n        filemenu.addAction(exitAction)\n\n        self.setWindowTitle('Menubar')\n        self.setGeometry(300, 300, 300, 200)\n        self.show()\n\nif __name__ == '__main__':\n    app = QApplication(sys.argv)\n    ex = MyApp()\n    sys.exit(app.exec_())\n```\n\n- 어플리케이션을 종료하는 메뉴바를 만들었다. 이 기능은 단축키 (Ctrl+Q)로도 실행이 가능하다.\n\n### 설명\n\n---\n\n```python\nexitAction = QAction(QIcon('exit.png'), 'Exit', self)\nexitAction.setShortcut('Ctrl+Q')\nexitAction.setStatusTip('Exit application')\n```\n\n- 아이콘 (exit.png)과 ‘Exit’ 라벨을 갖는 하나의 동작 (action)을 만들고, 이 동작에 대해 단축키(shortcut)를 정의한다.\n- 또한 메뉴에 마우스를 올렸을 때, 상태바에 나타날 상태팁을 setStatusTip()을 사용하여 설정한다.\n\n```python\nexitAction.triggered.connect(qApp.quit)\n```\n\n- 이 동작을 선택했을 때, 생성된 (triggered) 시그널이 QApplication 위젯의 quit() 에 연결되고, 어플리케이션을 종료하게 된다.\n\n```python\nmenubar = self.menuBar()\nmenubar.setNativeMenuBar(False)\nfileMenu = menubar.addMenu('&File')\nfileMenu.addAction(exitAction)\n```\n\n- menuBar() 는 메뉴바를 생성한다. 이어서 ‘File’ 메뉴를 하나 만들고, 거기에 ‘exitAction’ 동작을 추가한다.\n- ‘&File’ 의 앰퍼샌드(ampersand,&)는 간편하게 단축키를 설정하도록 해준다.\n- ‘F’ 앞에 앰퍼샌드(&)가 있으므로’Alt+F’ 가 File 메뉴의 단축키가 된다. 만약 ‘File’의 ‘i’ 앞에 ‘&’을 넣으면 ‘Alt+I’가 단축키가 된다.\n- 출처 : [https://wikidocs.net/21866](https://wikidocs.net/21866)\n\n### 결과\n\n---\n\n![2_6_menubar.png](/images/PyCharm Tutorial Basics/2_6_menubar.png)\n\n## 툴바 만들기\n\n---\n\n- 메뉴(menu)가 어플리케이션에서 사용되는 모든 명령의 모음이라면, 툴바(toolbar)는 자주 사용하는 명령들을 더 편리하게 사용하도록 해준다.\n- 폴더 안에 툴바의 각 기능에 해당하는 아이콘들을 저장한다\n\n![save.png](/images/PyCharm Tutorial Basics/save.png)\n\nsave.png\n\n![edit.png](/images/PyCharm Tutorial Basics/edit.png)\n\nedit.png\n\n![print.png](/images/PyCharm Tutorial Basics/print.png)\n\nprint.png\n\n![exit.png](/images/PyCharm Tutorial Basics/exit%201.png)\n\nexit.png\n\n### 코드\n\n```python\nimport sys\nfrom PyQt5.QtWidgets import QApplication, QMainWindow, QAction, qApp\nfrom PyQt5.QtGui import QIcon\n\nclass MyApp(QMainWindow):\n\n    def __init__(self):\n        super().__init__()\n        self.initUI()\n\n    def initUI(self):\n        exitAction = QAction(QIcon('exit.png'), 'Exit', self)\n        exitAction.setShortcut('Ctrl+Q')\n        exitAction.setStatusTip('Exit application')\n        exitAction.triggered.connect(qApp.quit)\n\n        self.statusBar()\n\n        self.toolbar = self.addToolBar('Exit')\n        self.toolbar.addAction(exitAction)\n\n        self.setWindowTitle('Toolbar')\n        self.setGeometry(300, 300, 300, 200)\n        self.show()\n\nif __name__ == '__main__':\n    app = QApplication(sys.argv)\n    ex = MyApp()\n    sys.exit(app.exec_())\n```\n\n### 설명\n\n---\n\n```python\nexitAction = QAction(QIcon('exit.png'), 'Exit', self)\nexitAction.setShortcut('Ctrl+Q')\nexitAction.setStatusTip('Exit application')\nexitAction.triggered.connect(qApp.quit)\n```\n\n- 메뉴바의 경우와 마찬가지로 QAction 객체를 하나 생성한다.\n- 이 객체는 아이콘 (exit.png), 라벨 (’Exit’)을 포함하고, 단축키 (Ctrl+Q)를 통해 실행가능하다.\n- 상태바에 메세지(’Exit application’) 를 보여주고, 클릭 시 생성되는 시그널은 quit() 에 연결되어있다.\n\n```python\nself.toolbar = self.addToolBar('Exit')\nself.toolbar.addAction(exitAction)\n```\n\n- addToolbar()를 이용해서 툴바를 만들고, addAction() 을 이용해서 툴바에 exitAction 동작을 추가한다\n- 출처 : [https://wikidocs.net/21932](https://wikidocs.net/21932)\n\n### 결과\n\n---\n\n![2_7_toolbar.png](/images/PyCharm Tutorial Basics/2_7_toolbar.png)\n\n## 창을 화면의 가운데로 띄우기\n\n---\n\n![2_8_centering.png](/images/PyCharm Tutorial Basics/2_8_centering.png)\n\n### 코드\n\n```python\nimport sys\nfrom PyQt5.QtWidgets import QApplication, QWidget, QDesktopWidget\n\nclass MyApp(QWidget):\n\n    def __init__(self):\n        super().__init__()\n        self.initUI()\n\n    def initUI(self):\n        self.setWindowTitle('Centering')\n        self.resize(500, 350)\n        self.center()\n        self.show()\n\n    def center(self):\n        qr = self.frameGeometry()\n        cp = QDesktopWidget().availableGeometry().center()\n        qr.moveCenter(cp)\n        self.move(qr.topLeft())\n\nif __name__ == '__main__':\n    app = QApplication(sys.argv)\n    ex = MyApp()\n    sys.exit(app.exec_())\n```\n\n### 설명\n\n---\n\n```python\nself.center()\n```\n\n- center() 를 통해서 창이 화면의 가운데로 위치하게 된다.\n\n```python\nqr = self.frameGeometry()\n```\n\n- frameGeometry() 를 이용해서 창의 위치와 크기 정보를 가져온다.\n\n```python\ncp = QDesktopWidget().availableGeometry().center()\n```\n\n- 사용하는 모니터 화면의 가운데 위치를 파악한다.\n\n```python\nqr.moveCenter(cp)\n```\n\n- 창의 직사각형 위치를 화면의 중심의 위치로 이동시킨다.\n\n```python\nself.move(qr.topLeft())\n```\n\n- 현재 창을, 화면의 중심으로 이동했던 직사각형(qr)의 위치로 이동시킨다.\n- 결과적으로 현재 창의 중심이 화면의 중심과 일치하게 돼서 창이 가운데에 나타난다.\n- 출처 : [https://wikidocs.net/26684](https://wikidocs.net/26684)\n\n## 날짜와 시간 표시하기\n\n### 날짜 표시하기(QDate)\n\n---\n\n- QDate 클래스는 날짜와 관련된 기능들을 제공한다.\n\n### 현재 날짜 출력하기\n\n---\n\n```python\nfrom PyQt5.QtCore import QDate\n\nnow = QDate.currentDate()\nprint(now.toString())\n```\n\n- currentDate() 는 현재 날짜를 반환한다.\n- toString() 는 현재 날짜를 문자열로 출력할 수 있다.\n\n### 날짜 형식 지정하기\n\n---\n\n- toString() 의 format 파라미터를 설정함으로써 날짜의 형식을 정할 수 있다.\n\n```python\nfrom PyQt5.QtCore import QDate, Qt\n\nnow = QDate.currentDate()\nprint(now.toString('d.M.yy'))\nprint(now.toString('dd.MM.yyyy'))\nprint(now.toString('ddd.MMMM.yyyy'))\n```\n\n- ‘d’는 일(day), ‘M’은 달(month), ‘y’는 연도(year)를 나타낸다. 각 문자의 개수에 따라 날짜의 형식이 다르게 출력된다.\n\n```python\nprint(now.toString(Qt.ISODate))\nprint(now.toString(Qt.DefaultLocaleLongDate))\n```\n\n- Qt.ISODate, Qt.DefaultLocaleLongDate를 입력함으로써 ISO 표준 형식 또는 어플리케이션의 기본 설정에 맞게 출력할 수 있다.\n\n### 시간 표시하기(QTime)\n\n---\n\n- QTime 클래스를 이용해서 현재의 시간을 출력할 수 있다.\n\n### 현재 시간 출력하기\n\n---\n\n```python\nfrom PyQt5.QtCore import QTime\n\ntime = QTime.currentTime()\nprint(time.toString())\n```\n\n- currentTime() 은 현재 시간을 반환한다.\n- toString() 은 현재 시간을 문자열로 반환한다.\n\n### 시간 형식 설정하기\n\n---\n\n```python\nfrom PyQt5.QtCore import QTime, Qt\n\ntime = QTime.currentTime()\nprint(time.toString('h.m.s'))\nprint(time.toString('hh.mm.ss'))\nprint(time.toString('hh.mm.ss.zzz'))\nprint(time.toString(Qt.DefaultLocaleLongDate))\nprint(time.toString(Qt.DefaultLocaleShortDate))\n```\n\n- ‘h’는 시간(hour), ‘m’은 분(minute), ‘s’는 초(second), 그리고 ‘z’는 1000분의 1초를 나타낸다\n- 날짜와 마찬가지로 Qt.DefaultLocaleLongDate 또는 Qt.DefaultLocaleShortDate 등으로 시간의 형식을 설정할 수 있다.\n\n### 날짜와 시간 표시하기(QDateTime)\n\n---\n\n- QDateTime 클래스를 이용해서 현재 날짜와 시간을 함께 출력할 수 있다.\n\n### 현재 날짜와 시간 출력하기\n\n---\n\n```python\nfrom PyQt5.QtCore import QDateTime\n\ndatetime = QDateTime.currentDateTime()\nprint(datetime.toString())\n```\n\n- currentDateTime() 은 현재의 날짜와 시간을 나타내준다.\n- toString() 은 날짜와 시간을 문자열 형태로 변환해준다.\n\n### 날짜와 시간 형식 설정하기\n\n---\n\n```python\nfrom PyQt5.QtCore import QDateTime, Qt\n\ndatetime = QDateTime.currentDateTime()\nprint(datetime.toString('d.M.yy hh:mm:ss'))\nprint(datetime.toString('dd.MM.yyyy, hh:mm:ss'))\nprint(datetime.toString(Qt.DefaultLocaleLongDate))\nprint(datetime.toString(Qt.DefaultLocaleShortDate))\n```\n\n- 위의 예제에서와 마찬가지로 날짜에 대해 ‘d’, ‘M’, ‘y’, 시간에 대해 ‘h’, ‘m’, ‘s’ 등을 사용해서 날짜와 시간이 표시되는 형식을 설정할 수 있다.\n- 또한 Qt.DefaultLocaleLongDate 또는 Qt.DefaultLocaleShortDate 를 입력할 수 있다.\n\n### 상태표시줄에 날짜 표시하기\n\n---\n\n### 코드\n\n```python\nimport sys\nfrom PyQt5.QtWidgets import QApplication, QMainWindow\nfrom PyQt5.QtCore import QDate, Qt\n\nclass MyApp(QMainWindow):\n\n    def __init__(self):\n        super().__init__()\n        self.date = QDate.currentDate()\n        self.initUI()\n\n    def initUI(self):\n        self.statusBar().showMessage(self.date.toString(Qt.DefaultLocaleLongDate))\n\n        self.setWindowTitle('Date')\n        self.setGeometry(300, 300, 400, 200)\n        self.show()\n\nif __name__ == '__main__':\n    app = QApplication(sys.argv)\n    ex = MyApp()\n    sys.exit(app.exec_())\n```\n\n- currentDate() 를 통해 현재 날짜를 얻고 showMessage() 로 상태표시줄에 현재 날짜를 표시한다\n- 출처 : [https://wikidocs.net/22074](https://wikidocs.net/22074)\n\n### 결과\n\n![2_9_showing_date.png](/images/PyCharm Tutorial Basics/2_9_showing_date.png)\n\n## 스타일 꾸며보기\n\n---\n\n### 코드\n\n```python\nimport sys\nfrom PyQt5.QtWidgets import QApplication, QWidget, QLabel, QVBoxLayout\n\nclass MyApp(QWidget):\n\n    def __init__(self):\n        super().__init__()\n        self.initUI()\n\n    def initUI(self):\n\n        lbl_red = QLabel('Red')\n        lbl_green = QLabel('Green')\n        lbl_blue = QLabel('Blue')\n\n        lbl_red.setStyleSheet(\"color: red;\"\n                             \"border-style: solid;\"\n                             \"border-width: 2px;\"\n                             \"border-color: #FA8072;\"\n                             \"border-radius: 3px\")\n        lbl_green.setStyleSheet(\"color: green;\"\n                               \"background-color: #7FFFD4\")\n        lbl_blue.setStyleSheet(\"color: blue;\"\n                              \"background-color: #87CEFA;\"\n                              \"border-style: dashed;\"\n                              \"border-width: 3px;\"\n                              \"border-color: #1E90FF\")\n\n        vbox = QVBoxLayout()\n        vbox.addWidget(lbl_red)\n        vbox.addWidget(lbl_green)\n        vbox.addWidget(lbl_blue)\n\n        self.setLayout(vbox)\n\n        self.setWindowTitle('Stylesheet')\n        self.setGeometry(300, 300, 300, 200)\n        self.show()\n\nif __name__ == '__main__':\n    app = QApplication(sys.argv)\n    ex = MyApp()\n    sys.exit(app.exec_())\n```\n\n### 설명\n\n---\n\n```python\nlbl_red = QLabel('Red')\nlbl_green = QLabel('Green')\nlbl_blue = QLabel('Blue')\n```\n\n- QLabel 클래스를 이용해서 3개의 라벨 위젯을 만든다\n- 텍스트는 각각 ‘Red’, ‘Green’, ‘Blue’ 로 설정한다\n\n```python\nlbl_red.setStyleSheet(\"color: red;\"\n\"border-style: solid;\"\n\"border-width: 2px;\"\n\"border-color: #FA8072;\"\n\"border-radius: 3px\")\n```\n\n- setStyleSheet() 를 이용해서 글자색을 빨간색(red)으로\n- 경계선을 실선(solid)으로\n- 경계선 두께를 2px로\n- 경계선 색을 #FA8072 색으로\n- 경계선의 모서리를 3px만큼 둥글게 설정한다\n\n```python\nlbl_green.setStyleSheet(\"color: green;\"\n                        \"background-color: #7FFFD4\")\n```\n\n- 마찬가지로, lbl_green 라벨의 글자색을 녹색(green)으로\n- 배경색을 #7FFFD4 색으로 설정한다\n\n```python\nlbl_blue.setStyleSheet(\"color: blue;\"\n                       \"background-color: #87CEFA;\"\n                       \"border-style: dashed;\"\n                       \"border-width: 3px;\"\n                       \"border-color: #1E90FF\")\n```\n\n- lbl_blue 라벨의 글자색을 파란색(blue)으로\n- 배경색을 #87CEFA 색으로\n- 경계선을 대쉬 스타일로\n- 경계선 두께를 3px로\n- 경계선 색을 #1E90FF으로 설정합니다\n\n```python\nvbox = QVBoxLayout()\nvbox.addWidget(lbl_red)\nvbox.addWidget(lbl_green)\nvbox.addWidget(lbl_blue)\n\nself.setLayout(vbox)\n```\n\n- 수직 박스 레이아웃(QVBoxLayout())을 이용해서 세 개의 라벨 위젯을 수직으로 배치한다\n\n### 결과\n\n---\n\n![2_10_stylesheets_8r6WeZv.png](/images/PyCharm Tutorial Basics/2_10_stylesheets_8r6WeZv.png)","source":"_posts/PyQt5 Tutorial Basics.md","raw":"---\ntitle: \"PyQt5 Tutorial Basic\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: PyQt5\nclearReading: true\nthumbnailImage: PyQt-Logo.wine.png\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-07-16 22:45:55'\n---\n\nPyQt5 Basic\n<!-- excerpt -->\n\n# PyQt5 Tutorial Basics\n\n# PyQt5를 이용해서 간단한 창 만들기\n\n## 기초 창 띄우기\n\n---\n\n### 코드\n\n```python\nimport sys\nfrom PyQt5.QtWidgets import QApplication, QWidget\n\nclass MyApp(QWidget):\n\n    def __init__(self):\n        super().__init__()\n        self.initUI()\n\n    def initUI(self):\n        self.setWindowTitle('My First Application')\n        self.move(300, 300)\n        self.resize(400, 200)\n        self.show()\n\nif __name__ == '__main__':\n   app = QApplication(sys.argv)\n   ex = MyApp()\n   sys.exit(app.exec_())\n\n```\n\n### 설명\n\n---\n\n```python\n        self.setWindowTitle('My First Application')\n        self.move(300, 300)\n        self.resize(400, 200)\n        self.show()\n\n```\n\n- setWindowTitle() 은 타이틀창의 제목 설정\n- move() 는 스크린의 x = 300px, y = 300px 의 위치로 이동\n- resize() 는 크기를 너비 400px, 높이 200px 로 조절\n- show() 는 스크린 출력함수\n\n```python\nif __name__ == '__main__':\n\n```\n\n- '**name**' 은 현재 모듈의 이름이 저장되는 내장 변수\n- 만약에 '[moduleA.py](http://modulea.py/)' 라는 코드를 import 해서 예제 코드를 수행하면 __name__은 'moduleA' 가 된다.\n- 코드를 직접 짜서 실행할 경우 **name** 은 **main** 이 된다.\n- 즉, 코드를 보고 직접 실행하는지 모듈을 통해 불러오는지를 확인할 수 있다.\n\n```python\n    app = QApplication(sys.argv)\n\n```\n\n- 모든 PyQt5 애플리케이션은 애플리케이션 객체를 생성해야 한다.\n- 출처 : [https://wikidocs.net/21920](https://wikidocs.net/21920)\n\n### 결과\n\n---\n\n![2_1_opening.png](/images/PyCharm Tutorial Basics/2_1_opening.png)\n\n## 어플리케이션 아이콘 넣기\n\n---\n\n- 타이틀바의 왼쪽 끝에 보여질 작은 이미지 넣기\n- 아이콘으로 사용할 이미지 파일을 저장한다.\n    \n    ![web.png](/images/PyCharm Tutorial Basics/web.png)\n    \n\n### 코드\n\n```python\nimport sys\nfrom PyQt5.QtWidgets import QApplication, QWidget\nfrom PyQt5.QtGui import QIcon\n\nclass MyApp(QWidget):\n\n  def __init__(self):\n      super().__init__()\n      self.initUI()\n\n  def initUI(self):\n      self.setWindowTitle('Icon')\n      self.setWindowIcon(QIcon('web.png'))\n      self.setGeometry(300, 300, 300, 200)\n      self.show()\n\nif __name__ == '__main__':\n  app = QApplication(sys.argv)\n  ex = MyApp()\n  sys.exit(app.exec_())\n\n```\n\n### 설명\n\n---\n\n```python\nself.setWindowIcon(QIcon('web.png'))\n\n```\n\n- setWindowIcon() 는 어플리케이션 아이콘을 설정함\n- QIcon 객체를 따로 생성하여 QIcon()에 보여질 이미지('web.png')를 입력\n- 이미지 파일을 다른 폴더에 따로 저장할 경우 경로까지 같이 입력하면 된다.\n\n```python\nself.setGeometry(300, 300, 300, 200)\n\n```\n\n- setGeometry() 는 창의 위치와 크기를 설정함.\n- 1, 2번째 변수는 창의 x, y 위치를 결정하고 / 3, 4번째 변수는 창의 너비와 높이를 결정함\n- 출처 : [https://wikidocs.net/21853](https://wikidocs.net/21853)\n\n### 결과\n\n---\n\n![2_2_icon.png](/images/PyCharm Tutorial Basics/2_2_icon.png)\n\n## 창 닫기 버튼\n\n---\n\n### 코드\n\n```python\nimport sys\nfrom PyQt5.QtWidgets import QApplication, QWidget, QPushButton\nfrom PyQt5.QtCore import QCoreApplication\n\nclass MyApp(QWidget):\n\n  def __init__(self):\n      super().__init__()\n      self.initUI()\n\n  def initUI(self):\n      btn = QPushButton('Quit', self)\n      btn.move(50, 50)\n      btn.resize(btn.sizeHint())\n      btn.clicked.connect(QCoreApplication.instance().quit)\n\n      self.setWindowTitle('Quit Button')\n      self.setGeometry(300, 300, 300, 200)\n      self.show()\n\nif __name__ == '__main__':\n    app = QApplication(sys.argv)\n    ex = MyApp()\n    sys.exit(app.exec_())\n\n```\n\n### 설명\n\n---\n\n```python\nfrom PyQt5.QtCore import QCoreApplication\n\n```\n\n- QtCore 모듈의 QCoreApplication 클래스를 불러온다\n\n```python\nbtn = QPushButton('Quit', self)\n\n```\n\n- 버튼을 하나 만든다.\n- 이 버튼(btn) 은 QPushButton 클래스의 인스턴스이다.\n- 생성자 (QPushButton())의 첫 번째 파라미터에는 버튼에 표시될 텍스트를 입력하고, 두 번째 파라미터에는 버튼이 위치할 부모위젯을 입력한다.\n\n```python\nbtn.clicked.connect(QCoreApplication.instance().quit)\n\n```\n\n- PyQt5 에서의 이벤트 처리는 [시그널과 슬롯](https://wikidocs.net/22020) 메커니즘으로 이루어진다.\n- 버튼(btn)을 클릭하면 'clicked' 시그널이 만들어진다.\n- instance() 는 현재 인스턴스를 반환한다.\n- clicked 시그널은 어플리케이션을 종료하는 quit() 에 연결된다.\n- 이렇게 발신자와 수신자, 두 객체간에 커뮤니케이션이 이루어져야 한다.\n- 여기에서는 발신자는 푸시버튼 (btn)이고, 수신자는 어플리케이션 객체(app)이다.\n- 마찬가지로 버튼 위치도 조정 가능하다.\n\n### 결과\n\n---\n\n![2_3_closing.png](/images/PyCharm Tutorial Basics/2_3_closing.png)\n\n## 툴팁 나타내기\n\n---\n\n### 코드\n\n```python\nimport sys\nfrom PyQt5.QtWidgets import QApplication, QWidget, QPushButton, QToolTip\nfrom PyQt5.QtGui import QFont\n\nclass MyApp(QWidget):\n\n    def __init__(self):\n        super().__init__()\n        self.initUI()\n\n    def initUI(self):\n        QToolTip.setFont(QFont('SansSerif', 10))\n        self.setToolTip('This is a <b>QWidget</b> widget')\n\n        btn = QPushButton('Button', self)\n        btn.setToolTip('This is a <b>QPushButton</b> widget')\n        btn.move(50, 50)\n        btn.resize(btn.sizeHint())\n\n        self.setWindowTitle('Tooltips')\n        self.setGeometry(300, 300, 300, 200)\n        self.show()\n\nif __name__ == '__main__':\n    app = QApplication(sys.argv)\n    ex = MyApp()\n    sys.exit(app.exec_())\n\n```\n\n### 설명\n\n---\n\n```python\nQToolTip.setFont(QFont('SansSerif', 10))\nself.setToolTip('This is a <b>QWidget</b> widget')\n\n```\n\n- 먼저 툴팁에 사용될 폰트를 설정한다. 여기에서는 10px 크기의 'SansSerif' 폰트를 사용한다.\n- 툴팁을 만들기 위해서는 setToolTip() 을 사용해서, 표시될 텍스트를 입력한다.\n\n```python\nbtn = QPushButton('Button', self)\nbtn.setToolTip('This is a <b>QPushButton</b> widget')\n\n```\n\n- 푸시버튼을 하나 만들고, 이 버튼에도 툴팁을 달아준다.\n\n```python\nbtn.move(50, 50)\nbtn.resize(btn.sizeHint())\n\n```\n\n- 버튼의 위치와 크기를 설정\n- sizeHint() 는 버튼을 적절한 크기로 설정하도록 해준다\n- 출처 : [https://wikidocs.net/21860](https://wikidocs.net/21860)\n\n### 결과\n\n---\n\n![2_4_tooltip.png](/images/PyCharm Tutorial Basics/2_4_tooltip.png)\n\n## 상태바 만들기\n\n### 개념\n\n---\n\n- 메인창은 메뉴바, 툴바, 상태바를 갖는 전형적인 어플리케이션 창이다.\n- QMenuBar, QToolBar, QDockWidget, QStatusBar 등의 고유의 레이아웃을 가지고 있다.\n- 가운데 영역에 중심위젯을 위한 영역을 갖고 있으며, 여기에는 어떤 위젯도 들어올 수 있다.\n\n![mainwindowlayout.png](/images/PyCharm Tutorial Basics/mainwindowlayout.png)\n\n- QMainWindow 클래스를 이용해서 메인 어플리케이션 창을 만들 수 있다.\n- QStatuseBar를 이용해서 메인 창에 상태바(status bar)를 하나 만들어보자.\n- 상태바는 어플리케이션의 현재 상태를 알려주기 위해 어플리케이션의 하단에 위치하는 위젯이다\n- 상태바에 텍스트를 표시하기 위해서는 showMessage() 를 사용한다\n- 텍스트를 사라지게 하고 싶다면 clearMessage() 를 사용하거나, showMessage() 에 텍스트가 표시되는 시간도 설정할 수 있다.\n- 현재 상태바에 표시되는 메세지 텍스트를 갖고 오고 싶을 때는 currentMessage()를 사용한다.\n- QStatusBar 클래스는 상태바에 표시되는 메세지가 바뀔 때 마다 messageChanged() 시그널을 발생시킨다\n\n### 코드\n\n```python\nimport sys\nfrom PyQt5.QtWidgets import QApplication, QMainWindow\n\nclass MyApp(QMainWindow):\n\n    def __init__(self):\n        super().__init__()\n        self.initUI()\n\n    def initUI(self):\n        self.statusBar().showMessage('Ready')\n\n        self.setWindowTitle('Statusbar')\n        self.setGeometry(300, 300, 300, 200)\n        self.show()\n\nif __name__ == '__main__':\n    app = QApplication(sys.argv)\n    ex = MyApp()\n    sys.exit(app.exec_())\n```\n\n### 설명\n\n---\n\n```python\nself.statusBar().showMessage('Ready')\n```\n\n- 상태바는 QMainWindow 클래스의 statusBar() 를 이용해서 만드는데, statusBar() 를 최초로 호출함으로써 만들어진다.\n- 그 다음 호출부터는 상태바 객체를 반환한다.\n- showMessage()를 통해 상태바에 보여질 메세지를 설정할 수 있다.\n- 출처 : [https://wikidocs.net/21928](https://wikidocs.net/21928)\n\n### 결과\n\n---\n\n![2_5_statusbar.png](/images/PyCharm Tutorial Basics/2_5_statusbar.png)\n\n## 메뉴바 만들기\n\n### 개념\n\n---\n\n- GUI 어플리케이션에서 메뉴바(menu bar)는 흔하게 사용된다.\n- 다양한 명령들의 모음이 메뉴바에 위치한다. ([QMenuBar 공식 문서](https://doc.qt.io/qt-5/qmenubar.html))\n- 우선 폴더안에 메뉴에 해당하는 아이콘(exit.png)을 저장한다\n    \n    ![exit.png](/images/PyCharm Tutorial Basics/exit.png)\n    \n\n### 코드\n\n```python\nimport sys\nfrom PyQt5.QtWidgets import QApplication, QMainWindow, QAction, qApp\nfrom PyQt5.QtGui import QIcon\n\nclass MyApp(QMainWindow):\n\n    def __init__(self):\n        super().__init__()\n        self.initUI()\n\n    def initUI(self):\n        exitAction = QAction(QIcon('exit.png'), 'Exit', self)\n        exitAction.setShortcut('Ctrl+Q')\n        exitAction.setStatusTip('Exit application')\n        exitAction.triggered.connect(qApp.quit)\n\n        self.statusBar()\n\n        menubar = self.menuBar()\n        menubar.setNativeMenuBar(False)\n        filemenu = menubar.addMenu('&File')\n        filemenu.addAction(exitAction)\n\n        self.setWindowTitle('Menubar')\n        self.setGeometry(300, 300, 300, 200)\n        self.show()\n\nif __name__ == '__main__':\n    app = QApplication(sys.argv)\n    ex = MyApp()\n    sys.exit(app.exec_())\n```\n\n- 어플리케이션을 종료하는 메뉴바를 만들었다. 이 기능은 단축키 (Ctrl+Q)로도 실행이 가능하다.\n\n### 설명\n\n---\n\n```python\nexitAction = QAction(QIcon('exit.png'), 'Exit', self)\nexitAction.setShortcut('Ctrl+Q')\nexitAction.setStatusTip('Exit application')\n```\n\n- 아이콘 (exit.png)과 ‘Exit’ 라벨을 갖는 하나의 동작 (action)을 만들고, 이 동작에 대해 단축키(shortcut)를 정의한다.\n- 또한 메뉴에 마우스를 올렸을 때, 상태바에 나타날 상태팁을 setStatusTip()을 사용하여 설정한다.\n\n```python\nexitAction.triggered.connect(qApp.quit)\n```\n\n- 이 동작을 선택했을 때, 생성된 (triggered) 시그널이 QApplication 위젯의 quit() 에 연결되고, 어플리케이션을 종료하게 된다.\n\n```python\nmenubar = self.menuBar()\nmenubar.setNativeMenuBar(False)\nfileMenu = menubar.addMenu('&File')\nfileMenu.addAction(exitAction)\n```\n\n- menuBar() 는 메뉴바를 생성한다. 이어서 ‘File’ 메뉴를 하나 만들고, 거기에 ‘exitAction’ 동작을 추가한다.\n- ‘&File’ 의 앰퍼샌드(ampersand,&)는 간편하게 단축키를 설정하도록 해준다.\n- ‘F’ 앞에 앰퍼샌드(&)가 있으므로’Alt+F’ 가 File 메뉴의 단축키가 된다. 만약 ‘File’의 ‘i’ 앞에 ‘&’을 넣으면 ‘Alt+I’가 단축키가 된다.\n- 출처 : [https://wikidocs.net/21866](https://wikidocs.net/21866)\n\n### 결과\n\n---\n\n![2_6_menubar.png](/images/PyCharm Tutorial Basics/2_6_menubar.png)\n\n## 툴바 만들기\n\n---\n\n- 메뉴(menu)가 어플리케이션에서 사용되는 모든 명령의 모음이라면, 툴바(toolbar)는 자주 사용하는 명령들을 더 편리하게 사용하도록 해준다.\n- 폴더 안에 툴바의 각 기능에 해당하는 아이콘들을 저장한다\n\n![save.png](/images/PyCharm Tutorial Basics/save.png)\n\nsave.png\n\n![edit.png](/images/PyCharm Tutorial Basics/edit.png)\n\nedit.png\n\n![print.png](/images/PyCharm Tutorial Basics/print.png)\n\nprint.png\n\n![exit.png](/images/PyCharm Tutorial Basics/exit%201.png)\n\nexit.png\n\n### 코드\n\n```python\nimport sys\nfrom PyQt5.QtWidgets import QApplication, QMainWindow, QAction, qApp\nfrom PyQt5.QtGui import QIcon\n\nclass MyApp(QMainWindow):\n\n    def __init__(self):\n        super().__init__()\n        self.initUI()\n\n    def initUI(self):\n        exitAction = QAction(QIcon('exit.png'), 'Exit', self)\n        exitAction.setShortcut('Ctrl+Q')\n        exitAction.setStatusTip('Exit application')\n        exitAction.triggered.connect(qApp.quit)\n\n        self.statusBar()\n\n        self.toolbar = self.addToolBar('Exit')\n        self.toolbar.addAction(exitAction)\n\n        self.setWindowTitle('Toolbar')\n        self.setGeometry(300, 300, 300, 200)\n        self.show()\n\nif __name__ == '__main__':\n    app = QApplication(sys.argv)\n    ex = MyApp()\n    sys.exit(app.exec_())\n```\n\n### 설명\n\n---\n\n```python\nexitAction = QAction(QIcon('exit.png'), 'Exit', self)\nexitAction.setShortcut('Ctrl+Q')\nexitAction.setStatusTip('Exit application')\nexitAction.triggered.connect(qApp.quit)\n```\n\n- 메뉴바의 경우와 마찬가지로 QAction 객체를 하나 생성한다.\n- 이 객체는 아이콘 (exit.png), 라벨 (’Exit’)을 포함하고, 단축키 (Ctrl+Q)를 통해 실행가능하다.\n- 상태바에 메세지(’Exit application’) 를 보여주고, 클릭 시 생성되는 시그널은 quit() 에 연결되어있다.\n\n```python\nself.toolbar = self.addToolBar('Exit')\nself.toolbar.addAction(exitAction)\n```\n\n- addToolbar()를 이용해서 툴바를 만들고, addAction() 을 이용해서 툴바에 exitAction 동작을 추가한다\n- 출처 : [https://wikidocs.net/21932](https://wikidocs.net/21932)\n\n### 결과\n\n---\n\n![2_7_toolbar.png](/images/PyCharm Tutorial Basics/2_7_toolbar.png)\n\n## 창을 화면의 가운데로 띄우기\n\n---\n\n![2_8_centering.png](/images/PyCharm Tutorial Basics/2_8_centering.png)\n\n### 코드\n\n```python\nimport sys\nfrom PyQt5.QtWidgets import QApplication, QWidget, QDesktopWidget\n\nclass MyApp(QWidget):\n\n    def __init__(self):\n        super().__init__()\n        self.initUI()\n\n    def initUI(self):\n        self.setWindowTitle('Centering')\n        self.resize(500, 350)\n        self.center()\n        self.show()\n\n    def center(self):\n        qr = self.frameGeometry()\n        cp = QDesktopWidget().availableGeometry().center()\n        qr.moveCenter(cp)\n        self.move(qr.topLeft())\n\nif __name__ == '__main__':\n    app = QApplication(sys.argv)\n    ex = MyApp()\n    sys.exit(app.exec_())\n```\n\n### 설명\n\n---\n\n```python\nself.center()\n```\n\n- center() 를 통해서 창이 화면의 가운데로 위치하게 된다.\n\n```python\nqr = self.frameGeometry()\n```\n\n- frameGeometry() 를 이용해서 창의 위치와 크기 정보를 가져온다.\n\n```python\ncp = QDesktopWidget().availableGeometry().center()\n```\n\n- 사용하는 모니터 화면의 가운데 위치를 파악한다.\n\n```python\nqr.moveCenter(cp)\n```\n\n- 창의 직사각형 위치를 화면의 중심의 위치로 이동시킨다.\n\n```python\nself.move(qr.topLeft())\n```\n\n- 현재 창을, 화면의 중심으로 이동했던 직사각형(qr)의 위치로 이동시킨다.\n- 결과적으로 현재 창의 중심이 화면의 중심과 일치하게 돼서 창이 가운데에 나타난다.\n- 출처 : [https://wikidocs.net/26684](https://wikidocs.net/26684)\n\n## 날짜와 시간 표시하기\n\n### 날짜 표시하기(QDate)\n\n---\n\n- QDate 클래스는 날짜와 관련된 기능들을 제공한다.\n\n### 현재 날짜 출력하기\n\n---\n\n```python\nfrom PyQt5.QtCore import QDate\n\nnow = QDate.currentDate()\nprint(now.toString())\n```\n\n- currentDate() 는 현재 날짜를 반환한다.\n- toString() 는 현재 날짜를 문자열로 출력할 수 있다.\n\n### 날짜 형식 지정하기\n\n---\n\n- toString() 의 format 파라미터를 설정함으로써 날짜의 형식을 정할 수 있다.\n\n```python\nfrom PyQt5.QtCore import QDate, Qt\n\nnow = QDate.currentDate()\nprint(now.toString('d.M.yy'))\nprint(now.toString('dd.MM.yyyy'))\nprint(now.toString('ddd.MMMM.yyyy'))\n```\n\n- ‘d’는 일(day), ‘M’은 달(month), ‘y’는 연도(year)를 나타낸다. 각 문자의 개수에 따라 날짜의 형식이 다르게 출력된다.\n\n```python\nprint(now.toString(Qt.ISODate))\nprint(now.toString(Qt.DefaultLocaleLongDate))\n```\n\n- Qt.ISODate, Qt.DefaultLocaleLongDate를 입력함으로써 ISO 표준 형식 또는 어플리케이션의 기본 설정에 맞게 출력할 수 있다.\n\n### 시간 표시하기(QTime)\n\n---\n\n- QTime 클래스를 이용해서 현재의 시간을 출력할 수 있다.\n\n### 현재 시간 출력하기\n\n---\n\n```python\nfrom PyQt5.QtCore import QTime\n\ntime = QTime.currentTime()\nprint(time.toString())\n```\n\n- currentTime() 은 현재 시간을 반환한다.\n- toString() 은 현재 시간을 문자열로 반환한다.\n\n### 시간 형식 설정하기\n\n---\n\n```python\nfrom PyQt5.QtCore import QTime, Qt\n\ntime = QTime.currentTime()\nprint(time.toString('h.m.s'))\nprint(time.toString('hh.mm.ss'))\nprint(time.toString('hh.mm.ss.zzz'))\nprint(time.toString(Qt.DefaultLocaleLongDate))\nprint(time.toString(Qt.DefaultLocaleShortDate))\n```\n\n- ‘h’는 시간(hour), ‘m’은 분(minute), ‘s’는 초(second), 그리고 ‘z’는 1000분의 1초를 나타낸다\n- 날짜와 마찬가지로 Qt.DefaultLocaleLongDate 또는 Qt.DefaultLocaleShortDate 등으로 시간의 형식을 설정할 수 있다.\n\n### 날짜와 시간 표시하기(QDateTime)\n\n---\n\n- QDateTime 클래스를 이용해서 현재 날짜와 시간을 함께 출력할 수 있다.\n\n### 현재 날짜와 시간 출력하기\n\n---\n\n```python\nfrom PyQt5.QtCore import QDateTime\n\ndatetime = QDateTime.currentDateTime()\nprint(datetime.toString())\n```\n\n- currentDateTime() 은 현재의 날짜와 시간을 나타내준다.\n- toString() 은 날짜와 시간을 문자열 형태로 변환해준다.\n\n### 날짜와 시간 형식 설정하기\n\n---\n\n```python\nfrom PyQt5.QtCore import QDateTime, Qt\n\ndatetime = QDateTime.currentDateTime()\nprint(datetime.toString('d.M.yy hh:mm:ss'))\nprint(datetime.toString('dd.MM.yyyy, hh:mm:ss'))\nprint(datetime.toString(Qt.DefaultLocaleLongDate))\nprint(datetime.toString(Qt.DefaultLocaleShortDate))\n```\n\n- 위의 예제에서와 마찬가지로 날짜에 대해 ‘d’, ‘M’, ‘y’, 시간에 대해 ‘h’, ‘m’, ‘s’ 등을 사용해서 날짜와 시간이 표시되는 형식을 설정할 수 있다.\n- 또한 Qt.DefaultLocaleLongDate 또는 Qt.DefaultLocaleShortDate 를 입력할 수 있다.\n\n### 상태표시줄에 날짜 표시하기\n\n---\n\n### 코드\n\n```python\nimport sys\nfrom PyQt5.QtWidgets import QApplication, QMainWindow\nfrom PyQt5.QtCore import QDate, Qt\n\nclass MyApp(QMainWindow):\n\n    def __init__(self):\n        super().__init__()\n        self.date = QDate.currentDate()\n        self.initUI()\n\n    def initUI(self):\n        self.statusBar().showMessage(self.date.toString(Qt.DefaultLocaleLongDate))\n\n        self.setWindowTitle('Date')\n        self.setGeometry(300, 300, 400, 200)\n        self.show()\n\nif __name__ == '__main__':\n    app = QApplication(sys.argv)\n    ex = MyApp()\n    sys.exit(app.exec_())\n```\n\n- currentDate() 를 통해 현재 날짜를 얻고 showMessage() 로 상태표시줄에 현재 날짜를 표시한다\n- 출처 : [https://wikidocs.net/22074](https://wikidocs.net/22074)\n\n### 결과\n\n![2_9_showing_date.png](/images/PyCharm Tutorial Basics/2_9_showing_date.png)\n\n## 스타일 꾸며보기\n\n---\n\n### 코드\n\n```python\nimport sys\nfrom PyQt5.QtWidgets import QApplication, QWidget, QLabel, QVBoxLayout\n\nclass MyApp(QWidget):\n\n    def __init__(self):\n        super().__init__()\n        self.initUI()\n\n    def initUI(self):\n\n        lbl_red = QLabel('Red')\n        lbl_green = QLabel('Green')\n        lbl_blue = QLabel('Blue')\n\n        lbl_red.setStyleSheet(\"color: red;\"\n                             \"border-style: solid;\"\n                             \"border-width: 2px;\"\n                             \"border-color: #FA8072;\"\n                             \"border-radius: 3px\")\n        lbl_green.setStyleSheet(\"color: green;\"\n                               \"background-color: #7FFFD4\")\n        lbl_blue.setStyleSheet(\"color: blue;\"\n                              \"background-color: #87CEFA;\"\n                              \"border-style: dashed;\"\n                              \"border-width: 3px;\"\n                              \"border-color: #1E90FF\")\n\n        vbox = QVBoxLayout()\n        vbox.addWidget(lbl_red)\n        vbox.addWidget(lbl_green)\n        vbox.addWidget(lbl_blue)\n\n        self.setLayout(vbox)\n\n        self.setWindowTitle('Stylesheet')\n        self.setGeometry(300, 300, 300, 200)\n        self.show()\n\nif __name__ == '__main__':\n    app = QApplication(sys.argv)\n    ex = MyApp()\n    sys.exit(app.exec_())\n```\n\n### 설명\n\n---\n\n```python\nlbl_red = QLabel('Red')\nlbl_green = QLabel('Green')\nlbl_blue = QLabel('Blue')\n```\n\n- QLabel 클래스를 이용해서 3개의 라벨 위젯을 만든다\n- 텍스트는 각각 ‘Red’, ‘Green’, ‘Blue’ 로 설정한다\n\n```python\nlbl_red.setStyleSheet(\"color: red;\"\n\"border-style: solid;\"\n\"border-width: 2px;\"\n\"border-color: #FA8072;\"\n\"border-radius: 3px\")\n```\n\n- setStyleSheet() 를 이용해서 글자색을 빨간색(red)으로\n- 경계선을 실선(solid)으로\n- 경계선 두께를 2px로\n- 경계선 색을 #FA8072 색으로\n- 경계선의 모서리를 3px만큼 둥글게 설정한다\n\n```python\nlbl_green.setStyleSheet(\"color: green;\"\n                        \"background-color: #7FFFD4\")\n```\n\n- 마찬가지로, lbl_green 라벨의 글자색을 녹색(green)으로\n- 배경색을 #7FFFD4 색으로 설정한다\n\n```python\nlbl_blue.setStyleSheet(\"color: blue;\"\n                       \"background-color: #87CEFA;\"\n                       \"border-style: dashed;\"\n                       \"border-width: 3px;\"\n                       \"border-color: #1E90FF\")\n```\n\n- lbl_blue 라벨의 글자색을 파란색(blue)으로\n- 배경색을 #87CEFA 색으로\n- 경계선을 대쉬 스타일로\n- 경계선 두께를 3px로\n- 경계선 색을 #1E90FF으로 설정합니다\n\n```python\nvbox = QVBoxLayout()\nvbox.addWidget(lbl_red)\nvbox.addWidget(lbl_green)\nvbox.addWidget(lbl_blue)\n\nself.setLayout(vbox)\n```\n\n- 수직 박스 레이아웃(QVBoxLayout())을 이용해서 세 개의 라벨 위젯을 수직으로 배치한다\n\n### 결과\n\n---\n\n![2_10_stylesheets_8r6WeZv.png](/images/PyCharm Tutorial Basics/2_10_stylesheets_8r6WeZv.png)","slug":"PyQt5 Tutorial Basics","published":1,"updated":"2022-09-07T10:19:55.599Z","_id":"cl5ny0rny00002gu0eloy50p7","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n<h1 id=\"PyQt5-Tutorial-Basics\"><a href=\"#PyQt5-Tutorial-Basics\" class=\"headerlink\" title=\"PyQt5 Tutorial Basics\"></a>PyQt5 Tutorial Basics</h1><h1 id=\"PyQt5를-이용해서-간단한-창-만들기\"><a href=\"#PyQt5를-이용해서-간단한-창-만들기\" class=\"headerlink\" title=\"PyQt5를 이용해서 간단한 창 만들기\"></a>PyQt5를 이용해서 간단한 창 만들기</h1><h2 id=\"기초-창-띄우기\"><a href=\"#기초-창-띄우기\" class=\"headerlink\" title=\"기초 창 띄우기\"></a>기초 창 띄우기</h2><hr>\n<h3 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> QApplication, QWidget</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyApp</span>(<span class=\"title class_ inherited__\">QWidget</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">initUI</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;My First Application&#x27;</span>)</span><br><span class=\"line\">        self.move(<span class=\"number\">300</span>, <span class=\"number\">300</span>)</span><br><span class=\"line\">        self.resize(<span class=\"number\">400</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">   app = QApplication(sys.argv)</span><br><span class=\"line\">   ex = MyApp()</span><br><span class=\"line\">   sys.exit(app.exec_())</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"설명\"><a href=\"#설명\" class=\"headerlink\" title=\"설명\"></a>설명</h3><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self.setWindowTitle(<span class=\"string\">&#x27;My First Application&#x27;</span>)</span><br><span class=\"line\">self.move(<span class=\"number\">300</span>, <span class=\"number\">300</span>)</span><br><span class=\"line\">self.resize(<span class=\"number\">400</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\">self.show()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>setWindowTitle() 은 타이틀창의 제목 설정</li>\n<li>move() 는 스크린의 x &#x3D; 300px, y &#x3D; 300px 의 위치로 이동</li>\n<li>resize() 는 크기를 너비 400px, 높이 200px 로 조절</li>\n<li>show() 는 스크린 출력함수</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>‘<strong>name</strong>‘ 은 현재 모듈의 이름이 저장되는 내장 변수</li>\n<li>만약에 ‘<a href=\"http://modulea.py/\">moduleA.py</a>‘ 라는 코드를 import 해서 예제 코드를 수행하면 __name__은 ‘moduleA’ 가 된다.</li>\n<li>코드를 직접 짜서 실행할 경우 <strong>name</strong> 은 <strong>main</strong> 이 된다.</li>\n<li>즉, 코드를 보고 직접 실행하는지 모듈을 통해 불러오는지를 확인할 수 있다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app = QApplication(sys.argv)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>모든 PyQt5 애플리케이션은 애플리케이션 객체를 생성해야 한다.</li>\n<li>출처 : <a href=\"https://wikidocs.net/21920\">https://wikidocs.net/21920</a></li>\n</ul>\n<h3 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h3><hr>\n<p>![2_1_opening.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;2_1_opening.png)</p>\n<h2 id=\"어플리케이션-아이콘-넣기\"><a href=\"#어플리케이션-아이콘-넣기\" class=\"headerlink\" title=\"어플리케이션 아이콘 넣기\"></a>어플리케이션 아이콘 넣기</h2><hr>\n<ul>\n<li><p>타이틀바의 왼쪽 끝에 보여질 작은 이미지 넣기</p>\n</li>\n<li><p>아이콘으로 사용할 이미지 파일을 저장한다.</p>\n<p>  ![web.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;web.png)</p>\n</li>\n</ul>\n<h3 id=\"코드-1\"><a href=\"#코드-1\" class=\"headerlink\" title=\"코드\"></a>코드</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> QApplication, QWidget</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtGui <span class=\"keyword\">import</span> QIcon</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyApp</span>(<span class=\"title class_ inherited__\">QWidget</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">      <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\">      self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">initUI</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">      self.setWindowTitle(<span class=\"string\">&#x27;Icon&#x27;</span>)</span><br><span class=\"line\">      self.setWindowIcon(QIcon(<span class=\"string\">&#x27;web.png&#x27;</span>))</span><br><span class=\"line\">      self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\">      self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">  app = QApplication(sys.argv)</span><br><span class=\"line\">  ex = MyApp()</span><br><span class=\"line\">  sys.exit(app.exec_())</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"설명-1\"><a href=\"#설명-1\" class=\"headerlink\" title=\"설명\"></a>설명</h3><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self.setWindowIcon(QIcon(<span class=\"string\">&#x27;web.png&#x27;</span>))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>setWindowIcon() 는 어플리케이션 아이콘을 설정함</li>\n<li>QIcon 객체를 따로 생성하여 QIcon()에 보여질 이미지(‘web.png’)를 입력</li>\n<li>이미지 파일을 다른 폴더에 따로 저장할 경우 경로까지 같이 입력하면 된다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>setGeometry() 는 창의 위치와 크기를 설정함.</li>\n<li>1, 2번째 변수는 창의 x, y 위치를 결정하고 &#x2F; 3, 4번째 변수는 창의 너비와 높이를 결정함</li>\n<li>출처 : <a href=\"https://wikidocs.net/21853\">https://wikidocs.net/21853</a></li>\n</ul>\n<h3 id=\"결과-1\"><a href=\"#결과-1\" class=\"headerlink\" title=\"결과\"></a>결과</h3><hr>\n<p>![2_2_icon.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;2_2_icon.png)</p>\n<h2 id=\"창-닫기-버튼\"><a href=\"#창-닫기-버튼\" class=\"headerlink\" title=\"창 닫기 버튼\"></a>창 닫기 버튼</h2><hr>\n<h3 id=\"코드-2\"><a href=\"#코드-2\" class=\"headerlink\" title=\"코드\"></a>코드</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> QApplication, QWidget, QPushButton</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtCore <span class=\"keyword\">import</span> QCoreApplication</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyApp</span>(<span class=\"title class_ inherited__\">QWidget</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">      <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\">      self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">initUI</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">      btn = QPushButton(<span class=\"string\">&#x27;Quit&#x27;</span>, self)</span><br><span class=\"line\">      btn.move(<span class=\"number\">50</span>, <span class=\"number\">50</span>)</span><br><span class=\"line\">      btn.resize(btn.sizeHint())</span><br><span class=\"line\">      btn.clicked.connect(QCoreApplication.instance().quit)</span><br><span class=\"line\"></span><br><span class=\"line\">      self.setWindowTitle(<span class=\"string\">&#x27;Quit Button&#x27;</span>)</span><br><span class=\"line\">      self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\">      self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = MyApp()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"설명-2\"><a href=\"#설명-2\" class=\"headerlink\" title=\"설명\"></a>설명</h3><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtCore <span class=\"keyword\">import</span> QCoreApplication</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>QtCore 모듈의 QCoreApplication 클래스를 불러온다</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">btn = QPushButton(<span class=\"string\">&#x27;Quit&#x27;</span>, self)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>버튼을 하나 만든다.</li>\n<li>이 버튼(btn) 은 QPushButton 클래스의 인스턴스이다.</li>\n<li>생성자 (QPushButton())의 첫 번째 파라미터에는 버튼에 표시될 텍스트를 입력하고, 두 번째 파라미터에는 버튼이 위치할 부모위젯을 입력한다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">btn.clicked.connect(QCoreApplication.instance().quit)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>PyQt5 에서의 이벤트 처리는 <a href=\"https://wikidocs.net/22020\">시그널과 슬롯</a> 메커니즘으로 이루어진다.</li>\n<li>버튼(btn)을 클릭하면 ‘clicked’ 시그널이 만들어진다.</li>\n<li>instance() 는 현재 인스턴스를 반환한다.</li>\n<li>clicked 시그널은 어플리케이션을 종료하는 quit() 에 연결된다.</li>\n<li>이렇게 발신자와 수신자, 두 객체간에 커뮤니케이션이 이루어져야 한다.</li>\n<li>여기에서는 발신자는 푸시버튼 (btn)이고, 수신자는 어플리케이션 객체(app)이다.</li>\n<li>마찬가지로 버튼 위치도 조정 가능하다.</li>\n</ul>\n<h3 id=\"결과-2\"><a href=\"#결과-2\" class=\"headerlink\" title=\"결과\"></a>결과</h3><hr>\n<p>![2_3_closing.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;2_3_closing.png)</p>\n<h2 id=\"툴팁-나타내기\"><a href=\"#툴팁-나타내기\" class=\"headerlink\" title=\"툴팁 나타내기\"></a>툴팁 나타내기</h2><hr>\n<h3 id=\"코드-3\"><a href=\"#코드-3\" class=\"headerlink\" title=\"코드\"></a>코드</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> QApplication, QWidget, QPushButton, QToolTip</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtGui <span class=\"keyword\">import</span> QFont</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyApp</span>(<span class=\"title class_ inherited__\">QWidget</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">initUI</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        QToolTip.setFont(QFont(<span class=\"string\">&#x27;SansSerif&#x27;</span>, <span class=\"number\">10</span>))</span><br><span class=\"line\">        self.setToolTip(<span class=\"string\">&#x27;This is a &lt;b&gt;QWidget&lt;/b&gt; widget&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        btn = QPushButton(<span class=\"string\">&#x27;Button&#x27;</span>, self)</span><br><span class=\"line\">        btn.setToolTip(<span class=\"string\">&#x27;This is a &lt;b&gt;QPushButton&lt;/b&gt; widget&#x27;</span>)</span><br><span class=\"line\">        btn.move(<span class=\"number\">50</span>, <span class=\"number\">50</span>)</span><br><span class=\"line\">        btn.resize(btn.sizeHint())</span><br><span class=\"line\"></span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;Tooltips&#x27;</span>)</span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = MyApp()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"설명-3\"><a href=\"#설명-3\" class=\"headerlink\" title=\"설명\"></a>설명</h3><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QToolTip.setFont(QFont(<span class=\"string\">&#x27;SansSerif&#x27;</span>, <span class=\"number\">10</span>))</span><br><span class=\"line\">self.setToolTip(<span class=\"string\">&#x27;This is a &lt;b&gt;QWidget&lt;/b&gt; widget&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>먼저 툴팁에 사용될 폰트를 설정한다. 여기에서는 10px 크기의 ‘SansSerif’ 폰트를 사용한다.</li>\n<li>툴팁을 만들기 위해서는 setToolTip() 을 사용해서, 표시될 텍스트를 입력한다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">btn = QPushButton(<span class=\"string\">&#x27;Button&#x27;</span>, self)</span><br><span class=\"line\">btn.setToolTip(<span class=\"string\">&#x27;This is a &lt;b&gt;QPushButton&lt;/b&gt; widget&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>푸시버튼을 하나 만들고, 이 버튼에도 툴팁을 달아준다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">btn.move(<span class=\"number\">50</span>, <span class=\"number\">50</span>)</span><br><span class=\"line\">btn.resize(btn.sizeHint())</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>버튼의 위치와 크기를 설정</li>\n<li>sizeHint() 는 버튼을 적절한 크기로 설정하도록 해준다</li>\n<li>출처 : <a href=\"https://wikidocs.net/21860\">https://wikidocs.net/21860</a></li>\n</ul>\n<h3 id=\"결과-3\"><a href=\"#결과-3\" class=\"headerlink\" title=\"결과\"></a>결과</h3><hr>\n<p>![2_4_tooltip.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;2_4_tooltip.png)</p>\n<h2 id=\"상태바-만들기\"><a href=\"#상태바-만들기\" class=\"headerlink\" title=\"상태바 만들기\"></a>상태바 만들기</h2><h3 id=\"개념\"><a href=\"#개념\" class=\"headerlink\" title=\"개념\"></a>개념</h3><hr>\n<ul>\n<li>메인창은 메뉴바, 툴바, 상태바를 갖는 전형적인 어플리케이션 창이다.</li>\n<li>QMenuBar, QToolBar, QDockWidget, QStatusBar 등의 고유의 레이아웃을 가지고 있다.</li>\n<li>가운데 영역에 중심위젯을 위한 영역을 갖고 있으며, 여기에는 어떤 위젯도 들어올 수 있다.</li>\n</ul>\n<p>![mainwindowlayout.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;mainwindowlayout.png)</p>\n<ul>\n<li>QMainWindow 클래스를 이용해서 메인 어플리케이션 창을 만들 수 있다.</li>\n<li>QStatuseBar를 이용해서 메인 창에 상태바(status bar)를 하나 만들어보자.</li>\n<li>상태바는 어플리케이션의 현재 상태를 알려주기 위해 어플리케이션의 하단에 위치하는 위젯이다</li>\n<li>상태바에 텍스트를 표시하기 위해서는 showMessage() 를 사용한다</li>\n<li>텍스트를 사라지게 하고 싶다면 clearMessage() 를 사용하거나, showMessage() 에 텍스트가 표시되는 시간도 설정할 수 있다.</li>\n<li>현재 상태바에 표시되는 메세지 텍스트를 갖고 오고 싶을 때는 currentMessage()를 사용한다.</li>\n<li>QStatusBar 클래스는 상태바에 표시되는 메세지가 바뀔 때 마다 messageChanged() 시그널을 발생시킨다</li>\n</ul>\n<h3 id=\"코드-4\"><a href=\"#코드-4\" class=\"headerlink\" title=\"코드\"></a>코드</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> QApplication, QMainWindow</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyApp</span>(<span class=\"title class_ inherited__\">QMainWindow</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">initUI</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.statusBar().showMessage(<span class=\"string\">&#x27;Ready&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;Statusbar&#x27;</span>)</span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = MyApp()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"설명-4\"><a href=\"#설명-4\" class=\"headerlink\" title=\"설명\"></a>설명</h3><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self.statusBar().showMessage(<span class=\"string\">&#x27;Ready&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>상태바는 QMainWindow 클래스의 statusBar() 를 이용해서 만드는데, statusBar() 를 최초로 호출함으로써 만들어진다.</li>\n<li>그 다음 호출부터는 상태바 객체를 반환한다.</li>\n<li>showMessage()를 통해 상태바에 보여질 메세지를 설정할 수 있다.</li>\n<li>출처 : <a href=\"https://wikidocs.net/21928\">https://wikidocs.net/21928</a></li>\n</ul>\n<h3 id=\"결과-4\"><a href=\"#결과-4\" class=\"headerlink\" title=\"결과\"></a>결과</h3><hr>\n<p>![2_5_statusbar.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;2_5_statusbar.png)</p>\n<h2 id=\"메뉴바-만들기\"><a href=\"#메뉴바-만들기\" class=\"headerlink\" title=\"메뉴바 만들기\"></a>메뉴바 만들기</h2><h3 id=\"개념-1\"><a href=\"#개념-1\" class=\"headerlink\" title=\"개념\"></a>개념</h3><hr>\n<ul>\n<li><p>GUI 어플리케이션에서 메뉴바(menu bar)는 흔하게 사용된다.</p>\n</li>\n<li><p>다양한 명령들의 모음이 메뉴바에 위치한다. (<a href=\"https://doc.qt.io/qt-5/qmenubar.html\">QMenuBar 공식 문서</a>)</p>\n</li>\n<li><p>우선 폴더안에 메뉴에 해당하는 아이콘(exit.png)을 저장한다</p>\n<p>  ![exit.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;exit.png)</p>\n</li>\n</ul>\n<h3 id=\"코드-5\"><a href=\"#코드-5\" class=\"headerlink\" title=\"코드\"></a>코드</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> QApplication, QMainWindow, QAction, qApp</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtGui <span class=\"keyword\">import</span> QIcon</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyApp</span>(<span class=\"title class_ inherited__\">QMainWindow</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">initUI</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        exitAction = QAction(QIcon(<span class=\"string\">&#x27;exit.png&#x27;</span>), <span class=\"string\">&#x27;Exit&#x27;</span>, self)</span><br><span class=\"line\">        exitAction.setShortcut(<span class=\"string\">&#x27;Ctrl+Q&#x27;</span>)</span><br><span class=\"line\">        exitAction.setStatusTip(<span class=\"string\">&#x27;Exit application&#x27;</span>)</span><br><span class=\"line\">        exitAction.triggered.connect(qApp.quit)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.statusBar()</span><br><span class=\"line\"></span><br><span class=\"line\">        menubar = self.menuBar()</span><br><span class=\"line\">        menubar.setNativeMenuBar(<span class=\"literal\">False</span>)</span><br><span class=\"line\">        filemenu = menubar.addMenu(<span class=\"string\">&#x27;&amp;File&#x27;</span>)</span><br><span class=\"line\">        filemenu.addAction(exitAction)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;Menubar&#x27;</span>)</span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = MyApp()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>어플리케이션을 종료하는 메뉴바를 만들었다. 이 기능은 단축키 (Ctrl+Q)로도 실행이 가능하다.</li>\n</ul>\n<h3 id=\"설명-5\"><a href=\"#설명-5\" class=\"headerlink\" title=\"설명\"></a>설명</h3><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exitAction = QAction(QIcon(<span class=\"string\">&#x27;exit.png&#x27;</span>), <span class=\"string\">&#x27;Exit&#x27;</span>, self)</span><br><span class=\"line\">exitAction.setShortcut(<span class=\"string\">&#x27;Ctrl+Q&#x27;</span>)</span><br><span class=\"line\">exitAction.setStatusTip(<span class=\"string\">&#x27;Exit application&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>아이콘 (exit.png)과 ‘Exit’ 라벨을 갖는 하나의 동작 (action)을 만들고, 이 동작에 대해 단축키(shortcut)를 정의한다.</li>\n<li>또한 메뉴에 마우스를 올렸을 때, 상태바에 나타날 상태팁을 setStatusTip()을 사용하여 설정한다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exitAction.triggered.connect(qApp.quit)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>이 동작을 선택했을 때, 생성된 (triggered) 시그널이 QApplication 위젯의 quit() 에 연결되고, 어플리케이션을 종료하게 된다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menubar = self.menuBar()</span><br><span class=\"line\">menubar.setNativeMenuBar(<span class=\"literal\">False</span>)</span><br><span class=\"line\">fileMenu = menubar.addMenu(<span class=\"string\">&#x27;&amp;File&#x27;</span>)</span><br><span class=\"line\">fileMenu.addAction(exitAction)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>menuBar() 는 메뉴바를 생성한다. 이어서 ‘File’ 메뉴를 하나 만들고, 거기에 ‘exitAction’ 동작을 추가한다.</li>\n<li>‘&amp;File’ 의 앰퍼샌드(ampersand,&amp;)는 간편하게 단축키를 설정하도록 해준다.</li>\n<li>‘F’ 앞에 앰퍼샌드(&amp;)가 있으므로’Alt+F’ 가 File 메뉴의 단축키가 된다. 만약 ‘File’의 ‘i’ 앞에 ‘&amp;’을 넣으면 ‘Alt+I’가 단축키가 된다.</li>\n<li>출처 : <a href=\"https://wikidocs.net/21866\">https://wikidocs.net/21866</a></li>\n</ul>\n<h3 id=\"결과-5\"><a href=\"#결과-5\" class=\"headerlink\" title=\"결과\"></a>결과</h3><hr>\n<p>![2_6_menubar.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;2_6_menubar.png)</p>\n<h2 id=\"툴바-만들기\"><a href=\"#툴바-만들기\" class=\"headerlink\" title=\"툴바 만들기\"></a>툴바 만들기</h2><hr>\n<ul>\n<li>메뉴(menu)가 어플리케이션에서 사용되는 모든 명령의 모음이라면, 툴바(toolbar)는 자주 사용하는 명령들을 더 편리하게 사용하도록 해준다.</li>\n<li>폴더 안에 툴바의 각 기능에 해당하는 아이콘들을 저장한다</li>\n</ul>\n<p>![save.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;save.png)</p>\n<p>save.png</p>\n<p>![edit.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;edit.png)</p>\n<p>edit.png</p>\n<p>![print.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;print.png)</p>\n<p>print.png</p>\n<p>![exit.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;exit%201.png)</p>\n<p>exit.png</p>\n<h3 id=\"코드-6\"><a href=\"#코드-6\" class=\"headerlink\" title=\"코드\"></a>코드</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> QApplication, QMainWindow, QAction, qApp</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtGui <span class=\"keyword\">import</span> QIcon</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyApp</span>(<span class=\"title class_ inherited__\">QMainWindow</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">initUI</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        exitAction = QAction(QIcon(<span class=\"string\">&#x27;exit.png&#x27;</span>), <span class=\"string\">&#x27;Exit&#x27;</span>, self)</span><br><span class=\"line\">        exitAction.setShortcut(<span class=\"string\">&#x27;Ctrl+Q&#x27;</span>)</span><br><span class=\"line\">        exitAction.setStatusTip(<span class=\"string\">&#x27;Exit application&#x27;</span>)</span><br><span class=\"line\">        exitAction.triggered.connect(qApp.quit)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.statusBar()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.toolbar = self.addToolBar(<span class=\"string\">&#x27;Exit&#x27;</span>)</span><br><span class=\"line\">        self.toolbar.addAction(exitAction)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;Toolbar&#x27;</span>)</span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = MyApp()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"설명-6\"><a href=\"#설명-6\" class=\"headerlink\" title=\"설명\"></a>설명</h3><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exitAction = QAction(QIcon(<span class=\"string\">&#x27;exit.png&#x27;</span>), <span class=\"string\">&#x27;Exit&#x27;</span>, self)</span><br><span class=\"line\">exitAction.setShortcut(<span class=\"string\">&#x27;Ctrl+Q&#x27;</span>)</span><br><span class=\"line\">exitAction.setStatusTip(<span class=\"string\">&#x27;Exit application&#x27;</span>)</span><br><span class=\"line\">exitAction.triggered.connect(qApp.quit)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>메뉴바의 경우와 마찬가지로 QAction 객체를 하나 생성한다.</li>\n<li>이 객체는 아이콘 (exit.png), 라벨 (’Exit’)을 포함하고, 단축키 (Ctrl+Q)를 통해 실행가능하다.</li>\n<li>상태바에 메세지(’Exit application’) 를 보여주고, 클릭 시 생성되는 시그널은 quit() 에 연결되어있다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self.toolbar = self.addToolBar(<span class=\"string\">&#x27;Exit&#x27;</span>)</span><br><span class=\"line\">self.toolbar.addAction(exitAction)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>addToolbar()를 이용해서 툴바를 만들고, addAction() 을 이용해서 툴바에 exitAction 동작을 추가한다</li>\n<li>출처 : <a href=\"https://wikidocs.net/21932\">https://wikidocs.net/21932</a></li>\n</ul>\n<h3 id=\"결과-6\"><a href=\"#결과-6\" class=\"headerlink\" title=\"결과\"></a>결과</h3><hr>\n<p>![2_7_toolbar.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;2_7_toolbar.png)</p>\n<h2 id=\"창을-화면의-가운데로-띄우기\"><a href=\"#창을-화면의-가운데로-띄우기\" class=\"headerlink\" title=\"창을 화면의 가운데로 띄우기\"></a>창을 화면의 가운데로 띄우기</h2><hr>\n<p>![2_8_centering.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;2_8_centering.png)</p>\n<h3 id=\"코드-7\"><a href=\"#코드-7\" class=\"headerlink\" title=\"코드\"></a>코드</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> QApplication, QWidget, QDesktopWidget</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyApp</span>(<span class=\"title class_ inherited__\">QWidget</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">initUI</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;Centering&#x27;</span>)</span><br><span class=\"line\">        self.resize(<span class=\"number\">500</span>, <span class=\"number\">350</span>)</span><br><span class=\"line\">        self.center()</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">center</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        qr = self.frameGeometry()</span><br><span class=\"line\">        cp = QDesktopWidget().availableGeometry().center()</span><br><span class=\"line\">        qr.moveCenter(cp)</span><br><span class=\"line\">        self.move(qr.topLeft())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = MyApp()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"설명-7\"><a href=\"#설명-7\" class=\"headerlink\" title=\"설명\"></a>설명</h3><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self.center()</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>center() 를 통해서 창이 화면의 가운데로 위치하게 된다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qr = self.frameGeometry()</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>frameGeometry() 를 이용해서 창의 위치와 크기 정보를 가져온다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp = QDesktopWidget().availableGeometry().center()</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>사용하는 모니터 화면의 가운데 위치를 파악한다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qr.moveCenter(cp)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>창의 직사각형 위치를 화면의 중심의 위치로 이동시킨다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self.move(qr.topLeft())</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>현재 창을, 화면의 중심으로 이동했던 직사각형(qr)의 위치로 이동시킨다.</li>\n<li>결과적으로 현재 창의 중심이 화면의 중심과 일치하게 돼서 창이 가운데에 나타난다.</li>\n<li>출처 : <a href=\"https://wikidocs.net/26684\">https://wikidocs.net/26684</a></li>\n</ul>\n<h2 id=\"날짜와-시간-표시하기\"><a href=\"#날짜와-시간-표시하기\" class=\"headerlink\" title=\"날짜와 시간 표시하기\"></a>날짜와 시간 표시하기</h2><h3 id=\"날짜-표시하기-QDate\"><a href=\"#날짜-표시하기-QDate\" class=\"headerlink\" title=\"날짜 표시하기(QDate)\"></a>날짜 표시하기(QDate)</h3><hr>\n<ul>\n<li>QDate 클래스는 날짜와 관련된 기능들을 제공한다.</li>\n</ul>\n<h3 id=\"현재-날짜-출력하기\"><a href=\"#현재-날짜-출력하기\" class=\"headerlink\" title=\"현재 날짜 출력하기\"></a>현재 날짜 출력하기</h3><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtCore <span class=\"keyword\">import</span> QDate</span><br><span class=\"line\"></span><br><span class=\"line\">now = QDate.currentDate()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(now.toString())</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>currentDate() 는 현재 날짜를 반환한다.</li>\n<li>toString() 는 현재 날짜를 문자열로 출력할 수 있다.</li>\n</ul>\n<h3 id=\"날짜-형식-지정하기\"><a href=\"#날짜-형식-지정하기\" class=\"headerlink\" title=\"날짜 형식 지정하기\"></a>날짜 형식 지정하기</h3><hr>\n<ul>\n<li>toString() 의 format 파라미터를 설정함으로써 날짜의 형식을 정할 수 있다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtCore <span class=\"keyword\">import</span> QDate, Qt</span><br><span class=\"line\"></span><br><span class=\"line\">now = QDate.currentDate()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(now.toString(<span class=\"string\">&#x27;d.M.yy&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(now.toString(<span class=\"string\">&#x27;dd.MM.yyyy&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(now.toString(<span class=\"string\">&#x27;ddd.MMMM.yyyy&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>‘d’는 일(day), ‘M’은 달(month), ‘y’는 연도(year)를 나타낸다. 각 문자의 개수에 따라 날짜의 형식이 다르게 출력된다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(now.toString(Qt.ISODate))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(now.toString(Qt.DefaultLocaleLongDate))</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Qt.ISODate, Qt.DefaultLocaleLongDate를 입력함으로써 ISO 표준 형식 또는 어플리케이션의 기본 설정에 맞게 출력할 수 있다.</li>\n</ul>\n<h3 id=\"시간-표시하기-QTime\"><a href=\"#시간-표시하기-QTime\" class=\"headerlink\" title=\"시간 표시하기(QTime)\"></a>시간 표시하기(QTime)</h3><hr>\n<ul>\n<li>QTime 클래스를 이용해서 현재의 시간을 출력할 수 있다.</li>\n</ul>\n<h3 id=\"현재-시간-출력하기\"><a href=\"#현재-시간-출력하기\" class=\"headerlink\" title=\"현재 시간 출력하기\"></a>현재 시간 출력하기</h3><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtCore <span class=\"keyword\">import</span> QTime</span><br><span class=\"line\"></span><br><span class=\"line\">time = QTime.currentTime()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.toString())</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>currentTime() 은 현재 시간을 반환한다.</li>\n<li>toString() 은 현재 시간을 문자열로 반환한다.</li>\n</ul>\n<h3 id=\"시간-형식-설정하기\"><a href=\"#시간-형식-설정하기\" class=\"headerlink\" title=\"시간 형식 설정하기\"></a>시간 형식 설정하기</h3><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtCore <span class=\"keyword\">import</span> QTime, Qt</span><br><span class=\"line\"></span><br><span class=\"line\">time = QTime.currentTime()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.toString(<span class=\"string\">&#x27;h.m.s&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.toString(<span class=\"string\">&#x27;hh.mm.ss&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.toString(<span class=\"string\">&#x27;hh.mm.ss.zzz&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.toString(Qt.DefaultLocaleLongDate))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.toString(Qt.DefaultLocaleShortDate))</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>‘h’는 시간(hour), ‘m’은 분(minute), ‘s’는 초(second), 그리고 ‘z’는 1000분의 1초를 나타낸다</li>\n<li>날짜와 마찬가지로 Qt.DefaultLocaleLongDate 또는 Qt.DefaultLocaleShortDate 등으로 시간의 형식을 설정할 수 있다.</li>\n</ul>\n<h3 id=\"날짜와-시간-표시하기-QDateTime\"><a href=\"#날짜와-시간-표시하기-QDateTime\" class=\"headerlink\" title=\"날짜와 시간 표시하기(QDateTime)\"></a>날짜와 시간 표시하기(QDateTime)</h3><hr>\n<ul>\n<li>QDateTime 클래스를 이용해서 현재 날짜와 시간을 함께 출력할 수 있다.</li>\n</ul>\n<h3 id=\"현재-날짜와-시간-출력하기\"><a href=\"#현재-날짜와-시간-출력하기\" class=\"headerlink\" title=\"현재 날짜와 시간 출력하기\"></a>현재 날짜와 시간 출력하기</h3><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtCore <span class=\"keyword\">import</span> QDateTime</span><br><span class=\"line\"></span><br><span class=\"line\">datetime = QDateTime.currentDateTime()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(datetime.toString())</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>currentDateTime() 은 현재의 날짜와 시간을 나타내준다.</li>\n<li>toString() 은 날짜와 시간을 문자열 형태로 변환해준다.</li>\n</ul>\n<h3 id=\"날짜와-시간-형식-설정하기\"><a href=\"#날짜와-시간-형식-설정하기\" class=\"headerlink\" title=\"날짜와 시간 형식 설정하기\"></a>날짜와 시간 형식 설정하기</h3><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtCore <span class=\"keyword\">import</span> QDateTime, Qt</span><br><span class=\"line\"></span><br><span class=\"line\">datetime = QDateTime.currentDateTime()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(datetime.toString(<span class=\"string\">&#x27;d.M.yy hh:mm:ss&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(datetime.toString(<span class=\"string\">&#x27;dd.MM.yyyy, hh:mm:ss&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(datetime.toString(Qt.DefaultLocaleLongDate))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(datetime.toString(Qt.DefaultLocaleShortDate))</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>위의 예제에서와 마찬가지로 날짜에 대해 ‘d’, ‘M’, ‘y’, 시간에 대해 ‘h’, ‘m’, ‘s’ 등을 사용해서 날짜와 시간이 표시되는 형식을 설정할 수 있다.</li>\n<li>또한 Qt.DefaultLocaleLongDate 또는 Qt.DefaultLocaleShortDate 를 입력할 수 있다.</li>\n</ul>\n<h3 id=\"상태표시줄에-날짜-표시하기\"><a href=\"#상태표시줄에-날짜-표시하기\" class=\"headerlink\" title=\"상태표시줄에 날짜 표시하기\"></a>상태표시줄에 날짜 표시하기</h3><hr>\n<h3 id=\"코드-8\"><a href=\"#코드-8\" class=\"headerlink\" title=\"코드\"></a>코드</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> QApplication, QMainWindow</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtCore <span class=\"keyword\">import</span> QDate, Qt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyApp</span>(<span class=\"title class_ inherited__\">QMainWindow</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\">        self.date = QDate.currentDate()</span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">initUI</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.statusBar().showMessage(self.date.toString(Qt.DefaultLocaleLongDate))</span><br><span class=\"line\"></span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;Date&#x27;</span>)</span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">400</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = MyApp()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>currentDate() 를 통해 현재 날짜를 얻고 showMessage() 로 상태표시줄에 현재 날짜를 표시한다</li>\n<li>출처 : <a href=\"https://wikidocs.net/22074\">https://wikidocs.net/22074</a></li>\n</ul>\n<h3 id=\"결과-7\"><a href=\"#결과-7\" class=\"headerlink\" title=\"결과\"></a>결과</h3><p>![2_9_showing_date.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;2_9_showing_date.png)</p>\n<h2 id=\"스타일-꾸며보기\"><a href=\"#스타일-꾸며보기\" class=\"headerlink\" title=\"스타일 꾸며보기\"></a>스타일 꾸며보기</h2><hr>\n<h3 id=\"코드-9\"><a href=\"#코드-9\" class=\"headerlink\" title=\"코드\"></a>코드</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> QApplication, QWidget, QLabel, QVBoxLayout</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyApp</span>(<span class=\"title class_ inherited__\">QWidget</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">initUI</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">        lbl_red = QLabel(<span class=\"string\">&#x27;Red&#x27;</span>)</span><br><span class=\"line\">        lbl_green = QLabel(<span class=\"string\">&#x27;Green&#x27;</span>)</span><br><span class=\"line\">        lbl_blue = QLabel(<span class=\"string\">&#x27;Blue&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        lbl_red.setStyleSheet(<span class=\"string\">&quot;color: red;&quot;</span></span><br><span class=\"line\">                             <span class=\"string\">&quot;border-style: solid;&quot;</span></span><br><span class=\"line\">                             <span class=\"string\">&quot;border-width: 2px;&quot;</span></span><br><span class=\"line\">                             <span class=\"string\">&quot;border-color: #FA8072;&quot;</span></span><br><span class=\"line\">                             <span class=\"string\">&quot;border-radius: 3px&quot;</span>)</span><br><span class=\"line\">        lbl_green.setStyleSheet(<span class=\"string\">&quot;color: green;&quot;</span></span><br><span class=\"line\">                               <span class=\"string\">&quot;background-color: #7FFFD4&quot;</span>)</span><br><span class=\"line\">        lbl_blue.setStyleSheet(<span class=\"string\">&quot;color: blue;&quot;</span></span><br><span class=\"line\">                              <span class=\"string\">&quot;background-color: #87CEFA;&quot;</span></span><br><span class=\"line\">                              <span class=\"string\">&quot;border-style: dashed;&quot;</span></span><br><span class=\"line\">                              <span class=\"string\">&quot;border-width: 3px;&quot;</span></span><br><span class=\"line\">                              <span class=\"string\">&quot;border-color: #1E90FF&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        vbox = QVBoxLayout()</span><br><span class=\"line\">        vbox.addWidget(lbl_red)</span><br><span class=\"line\">        vbox.addWidget(lbl_green)</span><br><span class=\"line\">        vbox.addWidget(lbl_blue)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.setLayout(vbox)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;Stylesheet&#x27;</span>)</span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = MyApp()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"설명-8\"><a href=\"#설명-8\" class=\"headerlink\" title=\"설명\"></a>설명</h3><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lbl_red = QLabel(<span class=\"string\">&#x27;Red&#x27;</span>)</span><br><span class=\"line\">lbl_green = QLabel(<span class=\"string\">&#x27;Green&#x27;</span>)</span><br><span class=\"line\">lbl_blue = QLabel(<span class=\"string\">&#x27;Blue&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>QLabel 클래스를 이용해서 3개의 라벨 위젯을 만든다</li>\n<li>텍스트는 각각 ‘Red’, ‘Green’, ‘Blue’ 로 설정한다</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lbl_red.setStyleSheet(<span class=\"string\">&quot;color: red;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;border-style: solid;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;border-width: 2px;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;border-color: #FA8072;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;border-radius: 3px&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>setStyleSheet() 를 이용해서 글자색을 빨간색(red)으로</li>\n<li>경계선을 실선(solid)으로</li>\n<li>경계선 두께를 2px로</li>\n<li>경계선 색을 #FA8072 색으로</li>\n<li>경계선의 모서리를 3px만큼 둥글게 설정한다</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lbl_green.setStyleSheet(<span class=\"string\">&quot;color: green;&quot;</span></span><br><span class=\"line\">                        <span class=\"string\">&quot;background-color: #7FFFD4&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>마찬가지로, lbl_green 라벨의 글자색을 녹색(green)으로</li>\n<li>배경색을 #7FFFD4 색으로 설정한다</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lbl_blue.setStyleSheet(<span class=\"string\">&quot;color: blue;&quot;</span></span><br><span class=\"line\">                       <span class=\"string\">&quot;background-color: #87CEFA;&quot;</span></span><br><span class=\"line\">                       <span class=\"string\">&quot;border-style: dashed;&quot;</span></span><br><span class=\"line\">                       <span class=\"string\">&quot;border-width: 3px;&quot;</span></span><br><span class=\"line\">                       <span class=\"string\">&quot;border-color: #1E90FF&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>lbl_blue 라벨의 글자색을 파란색(blue)으로</li>\n<li>배경색을 #87CEFA 색으로</li>\n<li>경계선을 대쉬 스타일로</li>\n<li>경계선 두께를 3px로</li>\n<li>경계선 색을 #1E90FF으로 설정합니다</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vbox = QVBoxLayout()</span><br><span class=\"line\">vbox.addWidget(lbl_red)</span><br><span class=\"line\">vbox.addWidget(lbl_green)</span><br><span class=\"line\">vbox.addWidget(lbl_blue)</span><br><span class=\"line\"></span><br><span class=\"line\">self.setLayout(vbox)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>수직 박스 레이아웃(QVBoxLayout())을 이용해서 세 개의 라벨 위젯을 수직으로 배치한다</li>\n</ul>\n<h3 id=\"결과-8\"><a href=\"#결과-8\" class=\"headerlink\" title=\"결과\"></a>결과</h3><hr>\n<p>![2_10_stylesheets_8r6WeZv.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;2_10_stylesheets_8r6WeZv.png)</p>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/07/16/PyQt5%20Tutorial%20Basics/PyQt-Logo.wine.png","excerpt":"<p>PyQt5 Basic</p>","more":"<p>PyQt5 Basic</p>\n<!-- excerpt -->\n\n<h1 id=\"PyQt5-Tutorial-Basics\"><a href=\"#PyQt5-Tutorial-Basics\" class=\"headerlink\" title=\"PyQt5 Tutorial Basics\"></a>PyQt5 Tutorial Basics</h1><h1 id=\"PyQt5를-이용해서-간단한-창-만들기\"><a href=\"#PyQt5를-이용해서-간단한-창-만들기\" class=\"headerlink\" title=\"PyQt5를 이용해서 간단한 창 만들기\"></a>PyQt5를 이용해서 간단한 창 만들기</h1><h2 id=\"기초-창-띄우기\"><a href=\"#기초-창-띄우기\" class=\"headerlink\" title=\"기초 창 띄우기\"></a>기초 창 띄우기</h2><hr>\n<h3 id=\"코드\"><a href=\"#코드\" class=\"headerlink\" title=\"코드\"></a>코드</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> QApplication, QWidget</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyApp</span>(<span class=\"title class_ inherited__\">QWidget</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">initUI</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;My First Application&#x27;</span>)</span><br><span class=\"line\">        self.move(<span class=\"number\">300</span>, <span class=\"number\">300</span>)</span><br><span class=\"line\">        self.resize(<span class=\"number\">400</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">   app = QApplication(sys.argv)</span><br><span class=\"line\">   ex = MyApp()</span><br><span class=\"line\">   sys.exit(app.exec_())</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"설명\"><a href=\"#설명\" class=\"headerlink\" title=\"설명\"></a>설명</h3><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self.setWindowTitle(<span class=\"string\">&#x27;My First Application&#x27;</span>)</span><br><span class=\"line\">self.move(<span class=\"number\">300</span>, <span class=\"number\">300</span>)</span><br><span class=\"line\">self.resize(<span class=\"number\">400</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\">self.show()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>setWindowTitle() 은 타이틀창의 제목 설정</li>\n<li>move() 는 스크린의 x &#x3D; 300px, y &#x3D; 300px 의 위치로 이동</li>\n<li>resize() 는 크기를 너비 400px, 높이 200px 로 조절</li>\n<li>show() 는 스크린 출력함수</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>‘<strong>name</strong>‘ 은 현재 모듈의 이름이 저장되는 내장 변수</li>\n<li>만약에 ‘<a href=\"http://modulea.py/\">moduleA.py</a>‘ 라는 코드를 import 해서 예제 코드를 수행하면 __name__은 ‘moduleA’ 가 된다.</li>\n<li>코드를 직접 짜서 실행할 경우 <strong>name</strong> 은 <strong>main</strong> 이 된다.</li>\n<li>즉, 코드를 보고 직접 실행하는지 모듈을 통해 불러오는지를 확인할 수 있다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app = QApplication(sys.argv)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>모든 PyQt5 애플리케이션은 애플리케이션 객체를 생성해야 한다.</li>\n<li>출처 : <a href=\"https://wikidocs.net/21920\">https://wikidocs.net/21920</a></li>\n</ul>\n<h3 id=\"결과\"><a href=\"#결과\" class=\"headerlink\" title=\"결과\"></a>결과</h3><hr>\n<p>![2_1_opening.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;2_1_opening.png)</p>\n<h2 id=\"어플리케이션-아이콘-넣기\"><a href=\"#어플리케이션-아이콘-넣기\" class=\"headerlink\" title=\"어플리케이션 아이콘 넣기\"></a>어플리케이션 아이콘 넣기</h2><hr>\n<ul>\n<li><p>타이틀바의 왼쪽 끝에 보여질 작은 이미지 넣기</p>\n</li>\n<li><p>아이콘으로 사용할 이미지 파일을 저장한다.</p>\n<p>  ![web.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;web.png)</p>\n</li>\n</ul>\n<h3 id=\"코드-1\"><a href=\"#코드-1\" class=\"headerlink\" title=\"코드\"></a>코드</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> QApplication, QWidget</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtGui <span class=\"keyword\">import</span> QIcon</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyApp</span>(<span class=\"title class_ inherited__\">QWidget</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">      <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\">      self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">initUI</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">      self.setWindowTitle(<span class=\"string\">&#x27;Icon&#x27;</span>)</span><br><span class=\"line\">      self.setWindowIcon(QIcon(<span class=\"string\">&#x27;web.png&#x27;</span>))</span><br><span class=\"line\">      self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\">      self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">  app = QApplication(sys.argv)</span><br><span class=\"line\">  ex = MyApp()</span><br><span class=\"line\">  sys.exit(app.exec_())</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"설명-1\"><a href=\"#설명-1\" class=\"headerlink\" title=\"설명\"></a>설명</h3><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self.setWindowIcon(QIcon(<span class=\"string\">&#x27;web.png&#x27;</span>))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>setWindowIcon() 는 어플리케이션 아이콘을 설정함</li>\n<li>QIcon 객체를 따로 생성하여 QIcon()에 보여질 이미지(‘web.png’)를 입력</li>\n<li>이미지 파일을 다른 폴더에 따로 저장할 경우 경로까지 같이 입력하면 된다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>setGeometry() 는 창의 위치와 크기를 설정함.</li>\n<li>1, 2번째 변수는 창의 x, y 위치를 결정하고 &#x2F; 3, 4번째 변수는 창의 너비와 높이를 결정함</li>\n<li>출처 : <a href=\"https://wikidocs.net/21853\">https://wikidocs.net/21853</a></li>\n</ul>\n<h3 id=\"결과-1\"><a href=\"#결과-1\" class=\"headerlink\" title=\"결과\"></a>결과</h3><hr>\n<p>![2_2_icon.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;2_2_icon.png)</p>\n<h2 id=\"창-닫기-버튼\"><a href=\"#창-닫기-버튼\" class=\"headerlink\" title=\"창 닫기 버튼\"></a>창 닫기 버튼</h2><hr>\n<h3 id=\"코드-2\"><a href=\"#코드-2\" class=\"headerlink\" title=\"코드\"></a>코드</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> QApplication, QWidget, QPushButton</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtCore <span class=\"keyword\">import</span> QCoreApplication</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyApp</span>(<span class=\"title class_ inherited__\">QWidget</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">      <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\">      self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">initUI</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">      btn = QPushButton(<span class=\"string\">&#x27;Quit&#x27;</span>, self)</span><br><span class=\"line\">      btn.move(<span class=\"number\">50</span>, <span class=\"number\">50</span>)</span><br><span class=\"line\">      btn.resize(btn.sizeHint())</span><br><span class=\"line\">      btn.clicked.connect(QCoreApplication.instance().quit)</span><br><span class=\"line\"></span><br><span class=\"line\">      self.setWindowTitle(<span class=\"string\">&#x27;Quit Button&#x27;</span>)</span><br><span class=\"line\">      self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\">      self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = MyApp()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"설명-2\"><a href=\"#설명-2\" class=\"headerlink\" title=\"설명\"></a>설명</h3><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtCore <span class=\"keyword\">import</span> QCoreApplication</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>QtCore 모듈의 QCoreApplication 클래스를 불러온다</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">btn = QPushButton(<span class=\"string\">&#x27;Quit&#x27;</span>, self)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>버튼을 하나 만든다.</li>\n<li>이 버튼(btn) 은 QPushButton 클래스의 인스턴스이다.</li>\n<li>생성자 (QPushButton())의 첫 번째 파라미터에는 버튼에 표시될 텍스트를 입력하고, 두 번째 파라미터에는 버튼이 위치할 부모위젯을 입력한다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">btn.clicked.connect(QCoreApplication.instance().quit)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>PyQt5 에서의 이벤트 처리는 <a href=\"https://wikidocs.net/22020\">시그널과 슬롯</a> 메커니즘으로 이루어진다.</li>\n<li>버튼(btn)을 클릭하면 ‘clicked’ 시그널이 만들어진다.</li>\n<li>instance() 는 현재 인스턴스를 반환한다.</li>\n<li>clicked 시그널은 어플리케이션을 종료하는 quit() 에 연결된다.</li>\n<li>이렇게 발신자와 수신자, 두 객체간에 커뮤니케이션이 이루어져야 한다.</li>\n<li>여기에서는 발신자는 푸시버튼 (btn)이고, 수신자는 어플리케이션 객체(app)이다.</li>\n<li>마찬가지로 버튼 위치도 조정 가능하다.</li>\n</ul>\n<h3 id=\"결과-2\"><a href=\"#결과-2\" class=\"headerlink\" title=\"결과\"></a>결과</h3><hr>\n<p>![2_3_closing.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;2_3_closing.png)</p>\n<h2 id=\"툴팁-나타내기\"><a href=\"#툴팁-나타내기\" class=\"headerlink\" title=\"툴팁 나타내기\"></a>툴팁 나타내기</h2><hr>\n<h3 id=\"코드-3\"><a href=\"#코드-3\" class=\"headerlink\" title=\"코드\"></a>코드</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> QApplication, QWidget, QPushButton, QToolTip</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtGui <span class=\"keyword\">import</span> QFont</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyApp</span>(<span class=\"title class_ inherited__\">QWidget</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">initUI</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        QToolTip.setFont(QFont(<span class=\"string\">&#x27;SansSerif&#x27;</span>, <span class=\"number\">10</span>))</span><br><span class=\"line\">        self.setToolTip(<span class=\"string\">&#x27;This is a &lt;b&gt;QWidget&lt;/b&gt; widget&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        btn = QPushButton(<span class=\"string\">&#x27;Button&#x27;</span>, self)</span><br><span class=\"line\">        btn.setToolTip(<span class=\"string\">&#x27;This is a &lt;b&gt;QPushButton&lt;/b&gt; widget&#x27;</span>)</span><br><span class=\"line\">        btn.move(<span class=\"number\">50</span>, <span class=\"number\">50</span>)</span><br><span class=\"line\">        btn.resize(btn.sizeHint())</span><br><span class=\"line\"></span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;Tooltips&#x27;</span>)</span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = MyApp()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"설명-3\"><a href=\"#설명-3\" class=\"headerlink\" title=\"설명\"></a>설명</h3><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QToolTip.setFont(QFont(<span class=\"string\">&#x27;SansSerif&#x27;</span>, <span class=\"number\">10</span>))</span><br><span class=\"line\">self.setToolTip(<span class=\"string\">&#x27;This is a &lt;b&gt;QWidget&lt;/b&gt; widget&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>먼저 툴팁에 사용될 폰트를 설정한다. 여기에서는 10px 크기의 ‘SansSerif’ 폰트를 사용한다.</li>\n<li>툴팁을 만들기 위해서는 setToolTip() 을 사용해서, 표시될 텍스트를 입력한다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">btn = QPushButton(<span class=\"string\">&#x27;Button&#x27;</span>, self)</span><br><span class=\"line\">btn.setToolTip(<span class=\"string\">&#x27;This is a &lt;b&gt;QPushButton&lt;/b&gt; widget&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>푸시버튼을 하나 만들고, 이 버튼에도 툴팁을 달아준다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">btn.move(<span class=\"number\">50</span>, <span class=\"number\">50</span>)</span><br><span class=\"line\">btn.resize(btn.sizeHint())</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>버튼의 위치와 크기를 설정</li>\n<li>sizeHint() 는 버튼을 적절한 크기로 설정하도록 해준다</li>\n<li>출처 : <a href=\"https://wikidocs.net/21860\">https://wikidocs.net/21860</a></li>\n</ul>\n<h3 id=\"결과-3\"><a href=\"#결과-3\" class=\"headerlink\" title=\"결과\"></a>결과</h3><hr>\n<p>![2_4_tooltip.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;2_4_tooltip.png)</p>\n<h2 id=\"상태바-만들기\"><a href=\"#상태바-만들기\" class=\"headerlink\" title=\"상태바 만들기\"></a>상태바 만들기</h2><h3 id=\"개념\"><a href=\"#개념\" class=\"headerlink\" title=\"개념\"></a>개념</h3><hr>\n<ul>\n<li>메인창은 메뉴바, 툴바, 상태바를 갖는 전형적인 어플리케이션 창이다.</li>\n<li>QMenuBar, QToolBar, QDockWidget, QStatusBar 등의 고유의 레이아웃을 가지고 있다.</li>\n<li>가운데 영역에 중심위젯을 위한 영역을 갖고 있으며, 여기에는 어떤 위젯도 들어올 수 있다.</li>\n</ul>\n<p>![mainwindowlayout.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;mainwindowlayout.png)</p>\n<ul>\n<li>QMainWindow 클래스를 이용해서 메인 어플리케이션 창을 만들 수 있다.</li>\n<li>QStatuseBar를 이용해서 메인 창에 상태바(status bar)를 하나 만들어보자.</li>\n<li>상태바는 어플리케이션의 현재 상태를 알려주기 위해 어플리케이션의 하단에 위치하는 위젯이다</li>\n<li>상태바에 텍스트를 표시하기 위해서는 showMessage() 를 사용한다</li>\n<li>텍스트를 사라지게 하고 싶다면 clearMessage() 를 사용하거나, showMessage() 에 텍스트가 표시되는 시간도 설정할 수 있다.</li>\n<li>현재 상태바에 표시되는 메세지 텍스트를 갖고 오고 싶을 때는 currentMessage()를 사용한다.</li>\n<li>QStatusBar 클래스는 상태바에 표시되는 메세지가 바뀔 때 마다 messageChanged() 시그널을 발생시킨다</li>\n</ul>\n<h3 id=\"코드-4\"><a href=\"#코드-4\" class=\"headerlink\" title=\"코드\"></a>코드</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> QApplication, QMainWindow</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyApp</span>(<span class=\"title class_ inherited__\">QMainWindow</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">initUI</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.statusBar().showMessage(<span class=\"string\">&#x27;Ready&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;Statusbar&#x27;</span>)</span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = MyApp()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"설명-4\"><a href=\"#설명-4\" class=\"headerlink\" title=\"설명\"></a>설명</h3><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self.statusBar().showMessage(<span class=\"string\">&#x27;Ready&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>상태바는 QMainWindow 클래스의 statusBar() 를 이용해서 만드는데, statusBar() 를 최초로 호출함으로써 만들어진다.</li>\n<li>그 다음 호출부터는 상태바 객체를 반환한다.</li>\n<li>showMessage()를 통해 상태바에 보여질 메세지를 설정할 수 있다.</li>\n<li>출처 : <a href=\"https://wikidocs.net/21928\">https://wikidocs.net/21928</a></li>\n</ul>\n<h3 id=\"결과-4\"><a href=\"#결과-4\" class=\"headerlink\" title=\"결과\"></a>결과</h3><hr>\n<p>![2_5_statusbar.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;2_5_statusbar.png)</p>\n<h2 id=\"메뉴바-만들기\"><a href=\"#메뉴바-만들기\" class=\"headerlink\" title=\"메뉴바 만들기\"></a>메뉴바 만들기</h2><h3 id=\"개념-1\"><a href=\"#개념-1\" class=\"headerlink\" title=\"개념\"></a>개념</h3><hr>\n<ul>\n<li><p>GUI 어플리케이션에서 메뉴바(menu bar)는 흔하게 사용된다.</p>\n</li>\n<li><p>다양한 명령들의 모음이 메뉴바에 위치한다. (<a href=\"https://doc.qt.io/qt-5/qmenubar.html\">QMenuBar 공식 문서</a>)</p>\n</li>\n<li><p>우선 폴더안에 메뉴에 해당하는 아이콘(exit.png)을 저장한다</p>\n<p>  ![exit.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;exit.png)</p>\n</li>\n</ul>\n<h3 id=\"코드-5\"><a href=\"#코드-5\" class=\"headerlink\" title=\"코드\"></a>코드</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> QApplication, QMainWindow, QAction, qApp</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtGui <span class=\"keyword\">import</span> QIcon</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyApp</span>(<span class=\"title class_ inherited__\">QMainWindow</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">initUI</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        exitAction = QAction(QIcon(<span class=\"string\">&#x27;exit.png&#x27;</span>), <span class=\"string\">&#x27;Exit&#x27;</span>, self)</span><br><span class=\"line\">        exitAction.setShortcut(<span class=\"string\">&#x27;Ctrl+Q&#x27;</span>)</span><br><span class=\"line\">        exitAction.setStatusTip(<span class=\"string\">&#x27;Exit application&#x27;</span>)</span><br><span class=\"line\">        exitAction.triggered.connect(qApp.quit)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.statusBar()</span><br><span class=\"line\"></span><br><span class=\"line\">        menubar = self.menuBar()</span><br><span class=\"line\">        menubar.setNativeMenuBar(<span class=\"literal\">False</span>)</span><br><span class=\"line\">        filemenu = menubar.addMenu(<span class=\"string\">&#x27;&amp;File&#x27;</span>)</span><br><span class=\"line\">        filemenu.addAction(exitAction)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;Menubar&#x27;</span>)</span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = MyApp()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>어플리케이션을 종료하는 메뉴바를 만들었다. 이 기능은 단축키 (Ctrl+Q)로도 실행이 가능하다.</li>\n</ul>\n<h3 id=\"설명-5\"><a href=\"#설명-5\" class=\"headerlink\" title=\"설명\"></a>설명</h3><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exitAction = QAction(QIcon(<span class=\"string\">&#x27;exit.png&#x27;</span>), <span class=\"string\">&#x27;Exit&#x27;</span>, self)</span><br><span class=\"line\">exitAction.setShortcut(<span class=\"string\">&#x27;Ctrl+Q&#x27;</span>)</span><br><span class=\"line\">exitAction.setStatusTip(<span class=\"string\">&#x27;Exit application&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>아이콘 (exit.png)과 ‘Exit’ 라벨을 갖는 하나의 동작 (action)을 만들고, 이 동작에 대해 단축키(shortcut)를 정의한다.</li>\n<li>또한 메뉴에 마우스를 올렸을 때, 상태바에 나타날 상태팁을 setStatusTip()을 사용하여 설정한다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exitAction.triggered.connect(qApp.quit)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>이 동작을 선택했을 때, 생성된 (triggered) 시그널이 QApplication 위젯의 quit() 에 연결되고, 어플리케이션을 종료하게 된다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menubar = self.menuBar()</span><br><span class=\"line\">menubar.setNativeMenuBar(<span class=\"literal\">False</span>)</span><br><span class=\"line\">fileMenu = menubar.addMenu(<span class=\"string\">&#x27;&amp;File&#x27;</span>)</span><br><span class=\"line\">fileMenu.addAction(exitAction)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>menuBar() 는 메뉴바를 생성한다. 이어서 ‘File’ 메뉴를 하나 만들고, 거기에 ‘exitAction’ 동작을 추가한다.</li>\n<li>‘&amp;File’ 의 앰퍼샌드(ampersand,&amp;)는 간편하게 단축키를 설정하도록 해준다.</li>\n<li>‘F’ 앞에 앰퍼샌드(&amp;)가 있으므로’Alt+F’ 가 File 메뉴의 단축키가 된다. 만약 ‘File’의 ‘i’ 앞에 ‘&amp;’을 넣으면 ‘Alt+I’가 단축키가 된다.</li>\n<li>출처 : <a href=\"https://wikidocs.net/21866\">https://wikidocs.net/21866</a></li>\n</ul>\n<h3 id=\"결과-5\"><a href=\"#결과-5\" class=\"headerlink\" title=\"결과\"></a>결과</h3><hr>\n<p>![2_6_menubar.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;2_6_menubar.png)</p>\n<h2 id=\"툴바-만들기\"><a href=\"#툴바-만들기\" class=\"headerlink\" title=\"툴바 만들기\"></a>툴바 만들기</h2><hr>\n<ul>\n<li>메뉴(menu)가 어플리케이션에서 사용되는 모든 명령의 모음이라면, 툴바(toolbar)는 자주 사용하는 명령들을 더 편리하게 사용하도록 해준다.</li>\n<li>폴더 안에 툴바의 각 기능에 해당하는 아이콘들을 저장한다</li>\n</ul>\n<p>![save.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;save.png)</p>\n<p>save.png</p>\n<p>![edit.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;edit.png)</p>\n<p>edit.png</p>\n<p>![print.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;print.png)</p>\n<p>print.png</p>\n<p>![exit.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;exit%201.png)</p>\n<p>exit.png</p>\n<h3 id=\"코드-6\"><a href=\"#코드-6\" class=\"headerlink\" title=\"코드\"></a>코드</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> QApplication, QMainWindow, QAction, qApp</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtGui <span class=\"keyword\">import</span> QIcon</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyApp</span>(<span class=\"title class_ inherited__\">QMainWindow</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">initUI</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        exitAction = QAction(QIcon(<span class=\"string\">&#x27;exit.png&#x27;</span>), <span class=\"string\">&#x27;Exit&#x27;</span>, self)</span><br><span class=\"line\">        exitAction.setShortcut(<span class=\"string\">&#x27;Ctrl+Q&#x27;</span>)</span><br><span class=\"line\">        exitAction.setStatusTip(<span class=\"string\">&#x27;Exit application&#x27;</span>)</span><br><span class=\"line\">        exitAction.triggered.connect(qApp.quit)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.statusBar()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.toolbar = self.addToolBar(<span class=\"string\">&#x27;Exit&#x27;</span>)</span><br><span class=\"line\">        self.toolbar.addAction(exitAction)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;Toolbar&#x27;</span>)</span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = MyApp()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"설명-6\"><a href=\"#설명-6\" class=\"headerlink\" title=\"설명\"></a>설명</h3><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exitAction = QAction(QIcon(<span class=\"string\">&#x27;exit.png&#x27;</span>), <span class=\"string\">&#x27;Exit&#x27;</span>, self)</span><br><span class=\"line\">exitAction.setShortcut(<span class=\"string\">&#x27;Ctrl+Q&#x27;</span>)</span><br><span class=\"line\">exitAction.setStatusTip(<span class=\"string\">&#x27;Exit application&#x27;</span>)</span><br><span class=\"line\">exitAction.triggered.connect(qApp.quit)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>메뉴바의 경우와 마찬가지로 QAction 객체를 하나 생성한다.</li>\n<li>이 객체는 아이콘 (exit.png), 라벨 (’Exit’)을 포함하고, 단축키 (Ctrl+Q)를 통해 실행가능하다.</li>\n<li>상태바에 메세지(’Exit application’) 를 보여주고, 클릭 시 생성되는 시그널은 quit() 에 연결되어있다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self.toolbar = self.addToolBar(<span class=\"string\">&#x27;Exit&#x27;</span>)</span><br><span class=\"line\">self.toolbar.addAction(exitAction)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>addToolbar()를 이용해서 툴바를 만들고, addAction() 을 이용해서 툴바에 exitAction 동작을 추가한다</li>\n<li>출처 : <a href=\"https://wikidocs.net/21932\">https://wikidocs.net/21932</a></li>\n</ul>\n<h3 id=\"결과-6\"><a href=\"#결과-6\" class=\"headerlink\" title=\"결과\"></a>결과</h3><hr>\n<p>![2_7_toolbar.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;2_7_toolbar.png)</p>\n<h2 id=\"창을-화면의-가운데로-띄우기\"><a href=\"#창을-화면의-가운데로-띄우기\" class=\"headerlink\" title=\"창을 화면의 가운데로 띄우기\"></a>창을 화면의 가운데로 띄우기</h2><hr>\n<p>![2_8_centering.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;2_8_centering.png)</p>\n<h3 id=\"코드-7\"><a href=\"#코드-7\" class=\"headerlink\" title=\"코드\"></a>코드</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> QApplication, QWidget, QDesktopWidget</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyApp</span>(<span class=\"title class_ inherited__\">QWidget</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">initUI</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;Centering&#x27;</span>)</span><br><span class=\"line\">        self.resize(<span class=\"number\">500</span>, <span class=\"number\">350</span>)</span><br><span class=\"line\">        self.center()</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">center</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        qr = self.frameGeometry()</span><br><span class=\"line\">        cp = QDesktopWidget().availableGeometry().center()</span><br><span class=\"line\">        qr.moveCenter(cp)</span><br><span class=\"line\">        self.move(qr.topLeft())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = MyApp()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"설명-7\"><a href=\"#설명-7\" class=\"headerlink\" title=\"설명\"></a>설명</h3><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self.center()</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>center() 를 통해서 창이 화면의 가운데로 위치하게 된다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qr = self.frameGeometry()</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>frameGeometry() 를 이용해서 창의 위치와 크기 정보를 가져온다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp = QDesktopWidget().availableGeometry().center()</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>사용하는 모니터 화면의 가운데 위치를 파악한다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qr.moveCenter(cp)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>창의 직사각형 위치를 화면의 중심의 위치로 이동시킨다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self.move(qr.topLeft())</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>현재 창을, 화면의 중심으로 이동했던 직사각형(qr)의 위치로 이동시킨다.</li>\n<li>결과적으로 현재 창의 중심이 화면의 중심과 일치하게 돼서 창이 가운데에 나타난다.</li>\n<li>출처 : <a href=\"https://wikidocs.net/26684\">https://wikidocs.net/26684</a></li>\n</ul>\n<h2 id=\"날짜와-시간-표시하기\"><a href=\"#날짜와-시간-표시하기\" class=\"headerlink\" title=\"날짜와 시간 표시하기\"></a>날짜와 시간 표시하기</h2><h3 id=\"날짜-표시하기-QDate\"><a href=\"#날짜-표시하기-QDate\" class=\"headerlink\" title=\"날짜 표시하기(QDate)\"></a>날짜 표시하기(QDate)</h3><hr>\n<ul>\n<li>QDate 클래스는 날짜와 관련된 기능들을 제공한다.</li>\n</ul>\n<h3 id=\"현재-날짜-출력하기\"><a href=\"#현재-날짜-출력하기\" class=\"headerlink\" title=\"현재 날짜 출력하기\"></a>현재 날짜 출력하기</h3><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtCore <span class=\"keyword\">import</span> QDate</span><br><span class=\"line\"></span><br><span class=\"line\">now = QDate.currentDate()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(now.toString())</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>currentDate() 는 현재 날짜를 반환한다.</li>\n<li>toString() 는 현재 날짜를 문자열로 출력할 수 있다.</li>\n</ul>\n<h3 id=\"날짜-형식-지정하기\"><a href=\"#날짜-형식-지정하기\" class=\"headerlink\" title=\"날짜 형식 지정하기\"></a>날짜 형식 지정하기</h3><hr>\n<ul>\n<li>toString() 의 format 파라미터를 설정함으로써 날짜의 형식을 정할 수 있다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtCore <span class=\"keyword\">import</span> QDate, Qt</span><br><span class=\"line\"></span><br><span class=\"line\">now = QDate.currentDate()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(now.toString(<span class=\"string\">&#x27;d.M.yy&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(now.toString(<span class=\"string\">&#x27;dd.MM.yyyy&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(now.toString(<span class=\"string\">&#x27;ddd.MMMM.yyyy&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>‘d’는 일(day), ‘M’은 달(month), ‘y’는 연도(year)를 나타낸다. 각 문자의 개수에 따라 날짜의 형식이 다르게 출력된다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(now.toString(Qt.ISODate))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(now.toString(Qt.DefaultLocaleLongDate))</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Qt.ISODate, Qt.DefaultLocaleLongDate를 입력함으로써 ISO 표준 형식 또는 어플리케이션의 기본 설정에 맞게 출력할 수 있다.</li>\n</ul>\n<h3 id=\"시간-표시하기-QTime\"><a href=\"#시간-표시하기-QTime\" class=\"headerlink\" title=\"시간 표시하기(QTime)\"></a>시간 표시하기(QTime)</h3><hr>\n<ul>\n<li>QTime 클래스를 이용해서 현재의 시간을 출력할 수 있다.</li>\n</ul>\n<h3 id=\"현재-시간-출력하기\"><a href=\"#현재-시간-출력하기\" class=\"headerlink\" title=\"현재 시간 출력하기\"></a>현재 시간 출력하기</h3><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtCore <span class=\"keyword\">import</span> QTime</span><br><span class=\"line\"></span><br><span class=\"line\">time = QTime.currentTime()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.toString())</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>currentTime() 은 현재 시간을 반환한다.</li>\n<li>toString() 은 현재 시간을 문자열로 반환한다.</li>\n</ul>\n<h3 id=\"시간-형식-설정하기\"><a href=\"#시간-형식-설정하기\" class=\"headerlink\" title=\"시간 형식 설정하기\"></a>시간 형식 설정하기</h3><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtCore <span class=\"keyword\">import</span> QTime, Qt</span><br><span class=\"line\"></span><br><span class=\"line\">time = QTime.currentTime()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.toString(<span class=\"string\">&#x27;h.m.s&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.toString(<span class=\"string\">&#x27;hh.mm.ss&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.toString(<span class=\"string\">&#x27;hh.mm.ss.zzz&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.toString(Qt.DefaultLocaleLongDate))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.toString(Qt.DefaultLocaleShortDate))</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>‘h’는 시간(hour), ‘m’은 분(minute), ‘s’는 초(second), 그리고 ‘z’는 1000분의 1초를 나타낸다</li>\n<li>날짜와 마찬가지로 Qt.DefaultLocaleLongDate 또는 Qt.DefaultLocaleShortDate 등으로 시간의 형식을 설정할 수 있다.</li>\n</ul>\n<h3 id=\"날짜와-시간-표시하기-QDateTime\"><a href=\"#날짜와-시간-표시하기-QDateTime\" class=\"headerlink\" title=\"날짜와 시간 표시하기(QDateTime)\"></a>날짜와 시간 표시하기(QDateTime)</h3><hr>\n<ul>\n<li>QDateTime 클래스를 이용해서 현재 날짜와 시간을 함께 출력할 수 있다.</li>\n</ul>\n<h3 id=\"현재-날짜와-시간-출력하기\"><a href=\"#현재-날짜와-시간-출력하기\" class=\"headerlink\" title=\"현재 날짜와 시간 출력하기\"></a>현재 날짜와 시간 출력하기</h3><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtCore <span class=\"keyword\">import</span> QDateTime</span><br><span class=\"line\"></span><br><span class=\"line\">datetime = QDateTime.currentDateTime()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(datetime.toString())</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>currentDateTime() 은 현재의 날짜와 시간을 나타내준다.</li>\n<li>toString() 은 날짜와 시간을 문자열 형태로 변환해준다.</li>\n</ul>\n<h3 id=\"날짜와-시간-형식-설정하기\"><a href=\"#날짜와-시간-형식-설정하기\" class=\"headerlink\" title=\"날짜와 시간 형식 설정하기\"></a>날짜와 시간 형식 설정하기</h3><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtCore <span class=\"keyword\">import</span> QDateTime, Qt</span><br><span class=\"line\"></span><br><span class=\"line\">datetime = QDateTime.currentDateTime()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(datetime.toString(<span class=\"string\">&#x27;d.M.yy hh:mm:ss&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(datetime.toString(<span class=\"string\">&#x27;dd.MM.yyyy, hh:mm:ss&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(datetime.toString(Qt.DefaultLocaleLongDate))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(datetime.toString(Qt.DefaultLocaleShortDate))</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>위의 예제에서와 마찬가지로 날짜에 대해 ‘d’, ‘M’, ‘y’, 시간에 대해 ‘h’, ‘m’, ‘s’ 등을 사용해서 날짜와 시간이 표시되는 형식을 설정할 수 있다.</li>\n<li>또한 Qt.DefaultLocaleLongDate 또는 Qt.DefaultLocaleShortDate 를 입력할 수 있다.</li>\n</ul>\n<h3 id=\"상태표시줄에-날짜-표시하기\"><a href=\"#상태표시줄에-날짜-표시하기\" class=\"headerlink\" title=\"상태표시줄에 날짜 표시하기\"></a>상태표시줄에 날짜 표시하기</h3><hr>\n<h3 id=\"코드-8\"><a href=\"#코드-8\" class=\"headerlink\" title=\"코드\"></a>코드</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> QApplication, QMainWindow</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtCore <span class=\"keyword\">import</span> QDate, Qt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyApp</span>(<span class=\"title class_ inherited__\">QMainWindow</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\">        self.date = QDate.currentDate()</span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">initUI</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.statusBar().showMessage(self.date.toString(Qt.DefaultLocaleLongDate))</span><br><span class=\"line\"></span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;Date&#x27;</span>)</span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">400</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = MyApp()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>currentDate() 를 통해 현재 날짜를 얻고 showMessage() 로 상태표시줄에 현재 날짜를 표시한다</li>\n<li>출처 : <a href=\"https://wikidocs.net/22074\">https://wikidocs.net/22074</a></li>\n</ul>\n<h3 id=\"결과-7\"><a href=\"#결과-7\" class=\"headerlink\" title=\"결과\"></a>결과</h3><p>![2_9_showing_date.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;2_9_showing_date.png)</p>\n<h2 id=\"스타일-꾸며보기\"><a href=\"#스타일-꾸며보기\" class=\"headerlink\" title=\"스타일 꾸며보기\"></a>스타일 꾸며보기</h2><hr>\n<h3 id=\"코드-9\"><a href=\"#코드-9\" class=\"headerlink\" title=\"코드\"></a>코드</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> QApplication, QWidget, QLabel, QVBoxLayout</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyApp</span>(<span class=\"title class_ inherited__\">QWidget</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">initUI</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">        lbl_red = QLabel(<span class=\"string\">&#x27;Red&#x27;</span>)</span><br><span class=\"line\">        lbl_green = QLabel(<span class=\"string\">&#x27;Green&#x27;</span>)</span><br><span class=\"line\">        lbl_blue = QLabel(<span class=\"string\">&#x27;Blue&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        lbl_red.setStyleSheet(<span class=\"string\">&quot;color: red;&quot;</span></span><br><span class=\"line\">                             <span class=\"string\">&quot;border-style: solid;&quot;</span></span><br><span class=\"line\">                             <span class=\"string\">&quot;border-width: 2px;&quot;</span></span><br><span class=\"line\">                             <span class=\"string\">&quot;border-color: #FA8072;&quot;</span></span><br><span class=\"line\">                             <span class=\"string\">&quot;border-radius: 3px&quot;</span>)</span><br><span class=\"line\">        lbl_green.setStyleSheet(<span class=\"string\">&quot;color: green;&quot;</span></span><br><span class=\"line\">                               <span class=\"string\">&quot;background-color: #7FFFD4&quot;</span>)</span><br><span class=\"line\">        lbl_blue.setStyleSheet(<span class=\"string\">&quot;color: blue;&quot;</span></span><br><span class=\"line\">                              <span class=\"string\">&quot;background-color: #87CEFA;&quot;</span></span><br><span class=\"line\">                              <span class=\"string\">&quot;border-style: dashed;&quot;</span></span><br><span class=\"line\">                              <span class=\"string\">&quot;border-width: 3px;&quot;</span></span><br><span class=\"line\">                              <span class=\"string\">&quot;border-color: #1E90FF&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        vbox = QVBoxLayout()</span><br><span class=\"line\">        vbox.addWidget(lbl_red)</span><br><span class=\"line\">        vbox.addWidget(lbl_green)</span><br><span class=\"line\">        vbox.addWidget(lbl_blue)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.setLayout(vbox)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;Stylesheet&#x27;</span>)</span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = MyApp()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"설명-8\"><a href=\"#설명-8\" class=\"headerlink\" title=\"설명\"></a>설명</h3><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lbl_red = QLabel(<span class=\"string\">&#x27;Red&#x27;</span>)</span><br><span class=\"line\">lbl_green = QLabel(<span class=\"string\">&#x27;Green&#x27;</span>)</span><br><span class=\"line\">lbl_blue = QLabel(<span class=\"string\">&#x27;Blue&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>QLabel 클래스를 이용해서 3개의 라벨 위젯을 만든다</li>\n<li>텍스트는 각각 ‘Red’, ‘Green’, ‘Blue’ 로 설정한다</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lbl_red.setStyleSheet(<span class=\"string\">&quot;color: red;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;border-style: solid;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;border-width: 2px;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;border-color: #FA8072;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;border-radius: 3px&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>setStyleSheet() 를 이용해서 글자색을 빨간색(red)으로</li>\n<li>경계선을 실선(solid)으로</li>\n<li>경계선 두께를 2px로</li>\n<li>경계선 색을 #FA8072 색으로</li>\n<li>경계선의 모서리를 3px만큼 둥글게 설정한다</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lbl_green.setStyleSheet(<span class=\"string\">&quot;color: green;&quot;</span></span><br><span class=\"line\">                        <span class=\"string\">&quot;background-color: #7FFFD4&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>마찬가지로, lbl_green 라벨의 글자색을 녹색(green)으로</li>\n<li>배경색을 #7FFFD4 색으로 설정한다</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lbl_blue.setStyleSheet(<span class=\"string\">&quot;color: blue;&quot;</span></span><br><span class=\"line\">                       <span class=\"string\">&quot;background-color: #87CEFA;&quot;</span></span><br><span class=\"line\">                       <span class=\"string\">&quot;border-style: dashed;&quot;</span></span><br><span class=\"line\">                       <span class=\"string\">&quot;border-width: 3px;&quot;</span></span><br><span class=\"line\">                       <span class=\"string\">&quot;border-color: #1E90FF&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>lbl_blue 라벨의 글자색을 파란색(blue)으로</li>\n<li>배경색을 #87CEFA 색으로</li>\n<li>경계선을 대쉬 스타일로</li>\n<li>경계선 두께를 3px로</li>\n<li>경계선 색을 #1E90FF으로 설정합니다</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vbox = QVBoxLayout()</span><br><span class=\"line\">vbox.addWidget(lbl_red)</span><br><span class=\"line\">vbox.addWidget(lbl_green)</span><br><span class=\"line\">vbox.addWidget(lbl_blue)</span><br><span class=\"line\"></span><br><span class=\"line\">self.setLayout(vbox)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>수직 박스 레이아웃(QVBoxLayout())을 이용해서 세 개의 라벨 위젯을 수직으로 배치한다</li>\n</ul>\n<h3 id=\"결과-8\"><a href=\"#결과-8\" class=\"headerlink\" title=\"결과\"></a>결과</h3><hr>\n<p>![2_10_stylesheets_8r6WeZv.png](&#x2F;images&#x2F;PyCharm Tutorial Basics&#x2F;2_10_stylesheets_8r6WeZv.png)</p>\n"},{"title":"Python 가상환경 설정","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"thumbnailImage":"image.png","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-07-18T06:42:20.000Z","_content":"\nPython 가상환경을 Jupyter Notebook 으로 설정하는 방법\n<!-- excerpt -->\n\n# Python_venv\n\n- 폴더 들어가서\n\n```python\npip install virtualenv\n```\n\n입력 후\n\n![Untitled](/images/Python_venv/Untitled.png)\n\n```python\nvirtualenv venv\n```\n\n입력 후\n\n![Untitled](/images/Python_venv/Untitled%201.png)\n\n```python\ncode .\n```\n\n를 치면 Visual Studio 가 나온다\n\n![Untitled](/images/Python_venv/Untitled%202.png)\n\n- Visual Studio 에서 터미널을 Git Bash 로 열고\n\n![Untitled](/images/Python_venv/Untitled%203.png)\n\n```python\nsource venv/Scripts/activate\n\npip install numpy pandas scikit-learn matplotlib seaborn jupyterlab mlflow\nCollecting numpy\n```\n\n순서대로 입력\n\n![Untitled](/images/Python_venv/Untitled%204.png)\n\n```python\njupyter lab\n```\n\n입력하면 JupyterLab 열림\n\n각종 가상환경들을 세팅 할 수 있다","source":"_posts/Python 가상환경 설정방법.md","raw":"---\ntitle: \"Python 가상환경 설정\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: Python\nclearReading: true\nthumbnailImage: image.png\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-07-18 15:42:20'\n---\n\nPython 가상환경을 Jupyter Notebook 으로 설정하는 방법\n<!-- excerpt -->\n\n# Python_venv\n\n- 폴더 들어가서\n\n```python\npip install virtualenv\n```\n\n입력 후\n\n![Untitled](/images/Python_venv/Untitled.png)\n\n```python\nvirtualenv venv\n```\n\n입력 후\n\n![Untitled](/images/Python_venv/Untitled%201.png)\n\n```python\ncode .\n```\n\n를 치면 Visual Studio 가 나온다\n\n![Untitled](/images/Python_venv/Untitled%202.png)\n\n- Visual Studio 에서 터미널을 Git Bash 로 열고\n\n![Untitled](/images/Python_venv/Untitled%203.png)\n\n```python\nsource venv/Scripts/activate\n\npip install numpy pandas scikit-learn matplotlib seaborn jupyterlab mlflow\nCollecting numpy\n```\n\n순서대로 입력\n\n![Untitled](/images/Python_venv/Untitled%204.png)\n\n```python\njupyter lab\n```\n\n입력하면 JupyterLab 열림\n\n각종 가상환경들을 세팅 할 수 있다","slug":"Python 가상환경 설정방법","published":1,"updated":"2022-09-07T10:19:55.601Z","_id":"cl5qdqk860001b4uo4ser5vp8","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n<h1 id=\"Python-venv\"><a href=\"#Python-venv\" class=\"headerlink\" title=\"Python_venv\"></a>Python_venv</h1><ul>\n<li>폴더 들어가서</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install virtualenv</span><br></pre></td></tr></table></figure>\n\n<p>입력 후</p>\n<p><img src=\"/images/Python_venv/Untitled.png\" alt=\"Untitled\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">virtualenv venv</span><br></pre></td></tr></table></figure>\n\n<p>입력 후</p>\n<p><img src=\"/images/Python_venv/Untitled%201.png\" alt=\"Untitled\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">code .</span><br></pre></td></tr></table></figure>\n\n<p>를 치면 Visual Studio 가 나온다</p>\n<p><img src=\"/images/Python_venv/Untitled%202.png\" alt=\"Untitled\"></p>\n<ul>\n<li>Visual Studio 에서 터미널을 Git Bash 로 열고</li>\n</ul>\n<p><img src=\"/images/Python_venv/Untitled%203.png\" alt=\"Untitled\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source venv/Scripts/activate</span><br><span class=\"line\"></span><br><span class=\"line\">pip install numpy pandas scikit-learn matplotlib seaborn jupyterlab mlflow</span><br><span class=\"line\">Collecting numpy</span><br></pre></td></tr></table></figure>\n\n<p>순서대로 입력</p>\n<p><img src=\"/images/Python_venv/Untitled%204.png\" alt=\"Untitled\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jupyter lab</span><br></pre></td></tr></table></figure>\n\n<p>입력하면 JupyterLab 열림</p>\n<p>각종 가상환경들을 세팅 할 수 있다</p>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/07/18/Python%20%EA%B0%80%EC%83%81%ED%99%98%EA%B2%BD%20%EC%84%A4%EC%A0%95%EB%B0%A9%EB%B2%95/image.png","excerpt":"<p>Python 가상환경을 Jupyter Notebook 으로 설정하는 방법</p>","more":"<p>Python 가상환경을 Jupyter Notebook 으로 설정하는 방법</p>\n<!-- excerpt -->\n\n<h1 id=\"Python-venv\"><a href=\"#Python-venv\" class=\"headerlink\" title=\"Python_venv\"></a>Python_venv</h1><ul>\n<li>폴더 들어가서</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install virtualenv</span><br></pre></td></tr></table></figure>\n\n<p>입력 후</p>\n<p><img src=\"/images/Python_venv/Untitled.png\" alt=\"Untitled\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">virtualenv venv</span><br></pre></td></tr></table></figure>\n\n<p>입력 후</p>\n<p><img src=\"/images/Python_venv/Untitled%201.png\" alt=\"Untitled\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">code .</span><br></pre></td></tr></table></figure>\n\n<p>를 치면 Visual Studio 가 나온다</p>\n<p><img src=\"/images/Python_venv/Untitled%202.png\" alt=\"Untitled\"></p>\n<ul>\n<li>Visual Studio 에서 터미널을 Git Bash 로 열고</li>\n</ul>\n<p><img src=\"/images/Python_venv/Untitled%203.png\" alt=\"Untitled\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source venv/Scripts/activate</span><br><span class=\"line\"></span><br><span class=\"line\">pip install numpy pandas scikit-learn matplotlib seaborn jupyterlab mlflow</span><br><span class=\"line\">Collecting numpy</span><br></pre></td></tr></table></figure>\n\n<p>순서대로 입력</p>\n<p><img src=\"/images/Python_venv/Untitled%204.png\" alt=\"Untitled\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jupyter lab</span><br></pre></td></tr></table></figure>\n\n<p>입력하면 JupyterLab 열림</p>\n<p>각종 가상환경들을 세팅 할 수 있다</p>\n"},{"title":"블로그 테마 변경시 주의사항","output":{"html_document":{"keep_md":true}},"comments":0,"date":"2022-06-24T00:00:00.000Z","_content":"\n\n\n1. 관리가 되고 있는가?\n  - 해당 테마 github에 들어가서 종 업데이트 날짜를 확인\n2. 설치 방법은 hexo 테마 별로 다 다르다.\n\n- 현재 블로그 테마 github 주소 : https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak\n","source":"_posts/blog_theme.md","raw":"---\ntitle: \"블로그 테마 변경시 주의사항\"\noutput:\n  html_document:\n    keep_md: true\ncategories: 블로그\ncomments: false\ndate: '2022-06-24'\n---\n\n\n\n1. 관리가 되고 있는가?\n  - 해당 테마 github에 들어가서 종 업데이트 날짜를 확인\n2. 설치 방법은 hexo 테마 별로 다 다르다.\n\n- 현재 블로그 테마 github 주소 : https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak\n","slug":"blog_theme","published":1,"updated":"2022-07-20T10:47:09.209Z","_id":"cl5qdqk8a0003b4uo1hikflk9","layout":"post","photos":[],"link":"","content":"<ol>\n<li>관리가 되고 있는가?</li>\n</ol>\n<ul>\n<li>해당 테마 github에 들어가서 종 업데이트 날짜를 확인</li>\n</ul>\n<ol start=\"2\">\n<li>설치 방법은 hexo 테마 별로 다 다르다.</li>\n</ol>\n<ul>\n<li>현재 블로그 테마 github 주소 : <a href=\"https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak\">https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak</a></li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ol>\n<li>관리가 되고 있는가?</li>\n</ol>\n<ul>\n<li>해당 테마 github에 들어가서 종 업데이트 날짜를 확인</li>\n</ul>\n<ol start=\"2\">\n<li>설치 방법은 hexo 테마 별로 다 다르다.</li>\n</ol>\n<ul>\n<li>현재 블로그 테마 github 주소 : <a href=\"https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak\">https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak</a></li>\n</ul>\n"},{"title":"Oracle day0719","output":{"html_document":{"keep_md":true}},"thumbnailImage":"oracle.png","thumbnailImagePosition":"left","date":"2022-07-19T08:03:00.000Z","_content":"\n- 테이블 생성, 삭제, 변경, 복사\n- 데이터 추가, 조회  \n- 데이터 타입   \n- 기본키, 외래키  \n- 컬럼 타입 변경, 추가, 삭제  \n- 제약조건 추가, 삭제  \n- 뷰 생성  \n<!-- excerpt -->\n\n[](/images/0719/Employment.png)\n\n\n# day0719\n\n```sql\nSELECT table_name from user_tables;\n\n-- SQL vs PL/SQL\n-- SQL (분석가90% + 개발자30%)\n---- 프로그래밍 성격이 얕음(조건문, 반복문, 함수 등등 얕음)\n-- PL/SQL (분석가10% + 개발자70% + DBA)\n\n-- 입문: SQL 테이블, 뷰 --> PL/SQL 함수, 프로시저\n\n-- 테이블 생성\n/*\nCREATE TABLE 테이블명(\n    컬럼1 컬럼1_데이터타입 결측치 허용유무,\n    \n)\n*/\n\n-- P.50 테이블 생성하기\ncreate table ex2_1(\n    COLUMN1     CHAR(10),\n    COLUMN2     VARCHAR2(10),\n    COLUMN3     NVARCHAR2(10),\n    COLUMN4     NUMBER\n);\n    \n-- 데이터 추가\nINSERT INTO ex2_1 (column1, column2) VALUES ('abc', 'abc');\n\n-- 테이블 생성, 추가, 삭제, 수정 코드들\n-- 파이썬이나, JAVA에서 다 쓸 코드들...\n\n-- 데이터 조회\nSELECT column1, LENGTH(column1) as len1\nFROM ex2_1;\n\n-- p.53\n-- 영어에서 한 문자는 1byte\n-- 한글에서 한 문자는 2byte\nCREATE TABLE ex2_2(\n    COLUMN1 VARCHAR2(3), -- 디폴트 값이 byte 적용\n    COLUMN2 VARCHAR2(3 byte), \n    COLUMN3 VARCHAR2(3 char)\n);\n\n-- 데이터 추가\nINSERT INTO ex2_2 VALUES('abc', 'abc', 'abc');\n\nSELECT column1, LENGTH(column1) as len1,\n       column2, LENGTH(column2) as len2,\n       column3, LENGTH(column3) as len3\nFROM ex2_2;\n\n-- 한글 추가\n-- 입력 안됨\nINSERT INTO ex2_2 VALUES('홍길동', '홍길동', '홍길동');\n\n-- p.54\nINSERT INTO ex2_2 (column3) VALUES('홍길동');\n\nSELECT column3\n        , LENGTH(column3) AS len3\n        , LENGTHB(column3) AS bytelen\nFROM ex2_2;\n\n-- 숫자 데이터 타입\nCREATE TABLE ex2_3(\n    COL_INT     INTEGER,\n    COL_DEC     DECIMAL,\n    COL_NUM     NUMBER\n);\n\n/*\nSELECT 컬럼명\nFROM 테이블명\nWHERE 조건식\nORDER BY 정렬\n*/\n\nSELECT column_id\n        , column_name\n        , data_type\n        , data_length\nFROM user_tab_cols\nWHERE table_name = 'EX2_3'\nORDER BY column_id;\n\n-- 날짜 데이터 타입\nCREATE TABLE ex2_5(\n    COL_DATE        DATE,\n    COL_TIMESTAMP   TIMESTAMP\n);\n\nINSERT INTO ex2_5 VALUES(SYSDATE, SYSTIMESTAMP);\nSELECT * FROM ex2_5;\n\n-- NULL : 값이 없음\n-- 해당 컬럼은 NULL\n-- 결측치 허용 X : NOT NULL\n\n-- p.60\nCREATE TABLE ex2_6(\n    COL_NULL        VARCHAR2(10), -- 결측치 허용\n    COL_NOT_NULL    VARCHAR2(10) NOT NULL -- 결측치 허용 X\n);\n\n-- 에러 발생\nINSERT INTO ex2_6 VALUES ('AA', '');\n\n-- 정상적으로 삽입 됨\nINSERT INTO ex2_6 VALUES ('', 'BB');\nSELECT * FROM ex2_6;\n\nINSERT INTO ex2_6 VALUES ('AA', 'BB');\nSELECT * FROM ex2_6;\n\n-- p.61\nSELECT constraint_name\n        , constraint_type\n        , table_name\n        , search_condition\nFROM user_constraints\nWHERE table_name = 'EX2_6';\n\n-- UNIQUE\nCREATE TABLE ex2_7(\n        COL_UNIQUE_NULL     VARCHAR2(10) UNIQUE,\n        COL_UNIQUE_NNULL    VARCHAR2(10) UNIQUE NOT NULL,\n        COL_UNIQUE          VARCHAR2(10),\n        CONSTRAINTS unique_nm1 UNIQUE (COL_UNIQUE)  -- CONSTRAINTS 는 제약을 걸겠다는 뜻\n);\n\nSELECT constraint_name\n        , constraint_type\n        , table_name\n        , search_condition\nFROM user_constraints\nWHERE table_name = 'EX2_7';\n\nINSERT INTO ex2_7 VALUES ('AA', 'AA', 'AA');\nINSERT INTO ex2_7 VALUES ('', 'BB', 'CC');\n\n-- NULL 값은 중복이 가능하다\n\n-- 기본키(Primary Key)\n-- UNIQUE(중복 허용 안됨), NOT NULL(결측치 허용 안됨)\n-- 테이블 당 1개의 기본키만 설정 가능\n\nCREATE TABLE ex2_8 (\n    COL1 VARCHAR2(10) PRIMARY KEY\n    , COL2 VARCHAR2(10)\n);\n\n-- INSERT INTO ex2_8 VALUES('', 'AA'');\nINSERT INTO ex2_8 VALUES('AA', 'AA');\n\nSELECT * FROM user_constraints;\n\nSELECT constraint_name\n        , constraint_type\n        , table_name\n        , search_condition\nFROM user_constraints\nWHERE table_name = 'JOBS';\n\n-- 외래키 : 테이블 간의 참조 데이터 무결성 위한 제약 조건\n-- 참조 무결성을 보장한다 : 잘못된 정보가 입력되는 것을 방지한다\n-- 초반에는 잘 안쓰다가 DB가 커지면 씀\n\n-- Check\n-- 컬럼에 입력되는 데이터를 체크해 특정 조건에 맞는 데이터만 입력\n\nCREATE TABLE ex2_9(\n    num1            NUMBER\n    , CONSTRAINTS check1 CHECK (num1 BETWEEN 1 AND 9)\n    , gender        VARCHAR2(10)\n    , CONSTRAINTS check2 CHECK (gender in ('MALE', 'FEMALE'))\n);\n\nSELECT constraint_name\n        , constraint_type\n        , table_name\n        , search_condition\nFROM user_constraints\nWHERE table_name = 'EX2_9';\n\n-- 개발자들은 DB 부터 설계한다. 전문적으로 DB설계만 하는 사람이 있을정도.\n\nINSERT INTO ex2_9 VALUES(10, 'MAN');  -- check2 제약조건에 위배되었음\nINSERT INTO ex2_9 VALUES(10, 'FEMALE'); -- check1 제약조건에 위배되었음.\nINSERT INTO ex2_9 VALUES(5, 'FEMALE');\n\n-- 지금이야 알지만, 실무에서는 조건을 모르므로 테이블을 보고 조건을 맞춰서 입력해야함\n\n-- Default\nalter session set nls_date_format='YYYY/MM/DD HH24:MI:SS';\nDROP TABLE ex2_10;\nCREATE TABLE ex2_10(\n    Col1   VARCHAR2(10) NOT NULL\n    , Col2 VARCHAR2(10) NULL\n    , Create_date DATE DEFAULT SYSDATE\n);\n\nINSERT INTO ex2_10 (col1, col2) VALUES('AA', 'BB');\nSELECT * FROM ex2_10;\n\n-- 테이블 변경\n-- ALTER TABLE\n\nALTER TABLE ex2_10 RENAME COLUMN Col1 To Col11;\nSELECT * FROM ex2_10;\n\nDESC ex2_10;\n\n-- 컬럼 타입 변경\nALTER TABLE ex2_10 MODIFY Col2 VARCHAR2(30);\n\nDESC ex2_10;\n\n-- 신규 컬럼 추가\nALTER TABLE ex2_10 ADD Col3 Number;\nDESC ex2_10;\n\n-- 컬럼 삭제\nALTER TABLE ex2_10 DROP COLUMN Col3;\nDESC ex2_10;\n\n-- 제약조건 추가\nALTER TABLE ex2_10 ADD CONSTRAINTS pk_ex2_10 PRIMARY KEY(col11);\nDESC ex2_10;\nSELECT constraint_name\n        , constraint_type\n        , table_name\n        , search_condition\nFROM user_constraints\nWHERE table_name = 'EX2_10';\n\n-- 제약조건 삭제: col11에서 기본키 삭제\nALTER TABLE ex2_10 DROP CONSTRAINTS pk_ex2_10;\nSELECT constraint_name\n        , constraint_type\n        , table_name\n        , search_condition\nFROM user_constraints\nWHERE table_name = 'EX2_10';\n\n-- 테이블 복사\nCREATE TABLE ex2_9_1 AS\nSELECT * FROM ex2_9;\n\nDESC ex2_9_1;\n\n-- 뷰 생성\nCREATE OR REPLACE VIEW emp_dept_v1 AS\nSELECT a.employee_id\n        , a.emp_name\n        , a.department_id\n        , b.department_name\nFROM employees a\n    , departments b\nWHERE a.department_id = b.department_id;\n\n-- 뷰 삭제\nDROP VIEW emp_dept_v1;\n```","source":"_posts/day0719.md","raw":"---\ntitle: \"Oracle day0719\"\noutput:\n  html_document:\n    keep_md: true\ncategories: Oracle\nthumbnailImage: oracle.png\nthumbnailImagePosition: left\ndate: '2022-07-19 17:03:00'\n---\n\n- 테이블 생성, 삭제, 변경, 복사\n- 데이터 추가, 조회  \n- 데이터 타입   \n- 기본키, 외래키  \n- 컬럼 타입 변경, 추가, 삭제  \n- 제약조건 추가, 삭제  \n- 뷰 생성  \n<!-- excerpt -->\n\n[](/images/0719/Employment.png)\n\n\n# day0719\n\n```sql\nSELECT table_name from user_tables;\n\n-- SQL vs PL/SQL\n-- SQL (분석가90% + 개발자30%)\n---- 프로그래밍 성격이 얕음(조건문, 반복문, 함수 등등 얕음)\n-- PL/SQL (분석가10% + 개발자70% + DBA)\n\n-- 입문: SQL 테이블, 뷰 --> PL/SQL 함수, 프로시저\n\n-- 테이블 생성\n/*\nCREATE TABLE 테이블명(\n    컬럼1 컬럼1_데이터타입 결측치 허용유무,\n    \n)\n*/\n\n-- P.50 테이블 생성하기\ncreate table ex2_1(\n    COLUMN1     CHAR(10),\n    COLUMN2     VARCHAR2(10),\n    COLUMN3     NVARCHAR2(10),\n    COLUMN4     NUMBER\n);\n    \n-- 데이터 추가\nINSERT INTO ex2_1 (column1, column2) VALUES ('abc', 'abc');\n\n-- 테이블 생성, 추가, 삭제, 수정 코드들\n-- 파이썬이나, JAVA에서 다 쓸 코드들...\n\n-- 데이터 조회\nSELECT column1, LENGTH(column1) as len1\nFROM ex2_1;\n\n-- p.53\n-- 영어에서 한 문자는 1byte\n-- 한글에서 한 문자는 2byte\nCREATE TABLE ex2_2(\n    COLUMN1 VARCHAR2(3), -- 디폴트 값이 byte 적용\n    COLUMN2 VARCHAR2(3 byte), \n    COLUMN3 VARCHAR2(3 char)\n);\n\n-- 데이터 추가\nINSERT INTO ex2_2 VALUES('abc', 'abc', 'abc');\n\nSELECT column1, LENGTH(column1) as len1,\n       column2, LENGTH(column2) as len2,\n       column3, LENGTH(column3) as len3\nFROM ex2_2;\n\n-- 한글 추가\n-- 입력 안됨\nINSERT INTO ex2_2 VALUES('홍길동', '홍길동', '홍길동');\n\n-- p.54\nINSERT INTO ex2_2 (column3) VALUES('홍길동');\n\nSELECT column3\n        , LENGTH(column3) AS len3\n        , LENGTHB(column3) AS bytelen\nFROM ex2_2;\n\n-- 숫자 데이터 타입\nCREATE TABLE ex2_3(\n    COL_INT     INTEGER,\n    COL_DEC     DECIMAL,\n    COL_NUM     NUMBER\n);\n\n/*\nSELECT 컬럼명\nFROM 테이블명\nWHERE 조건식\nORDER BY 정렬\n*/\n\nSELECT column_id\n        , column_name\n        , data_type\n        , data_length\nFROM user_tab_cols\nWHERE table_name = 'EX2_3'\nORDER BY column_id;\n\n-- 날짜 데이터 타입\nCREATE TABLE ex2_5(\n    COL_DATE        DATE,\n    COL_TIMESTAMP   TIMESTAMP\n);\n\nINSERT INTO ex2_5 VALUES(SYSDATE, SYSTIMESTAMP);\nSELECT * FROM ex2_5;\n\n-- NULL : 값이 없음\n-- 해당 컬럼은 NULL\n-- 결측치 허용 X : NOT NULL\n\n-- p.60\nCREATE TABLE ex2_6(\n    COL_NULL        VARCHAR2(10), -- 결측치 허용\n    COL_NOT_NULL    VARCHAR2(10) NOT NULL -- 결측치 허용 X\n);\n\n-- 에러 발생\nINSERT INTO ex2_6 VALUES ('AA', '');\n\n-- 정상적으로 삽입 됨\nINSERT INTO ex2_6 VALUES ('', 'BB');\nSELECT * FROM ex2_6;\n\nINSERT INTO ex2_6 VALUES ('AA', 'BB');\nSELECT * FROM ex2_6;\n\n-- p.61\nSELECT constraint_name\n        , constraint_type\n        , table_name\n        , search_condition\nFROM user_constraints\nWHERE table_name = 'EX2_6';\n\n-- UNIQUE\nCREATE TABLE ex2_7(\n        COL_UNIQUE_NULL     VARCHAR2(10) UNIQUE,\n        COL_UNIQUE_NNULL    VARCHAR2(10) UNIQUE NOT NULL,\n        COL_UNIQUE          VARCHAR2(10),\n        CONSTRAINTS unique_nm1 UNIQUE (COL_UNIQUE)  -- CONSTRAINTS 는 제약을 걸겠다는 뜻\n);\n\nSELECT constraint_name\n        , constraint_type\n        , table_name\n        , search_condition\nFROM user_constraints\nWHERE table_name = 'EX2_7';\n\nINSERT INTO ex2_7 VALUES ('AA', 'AA', 'AA');\nINSERT INTO ex2_7 VALUES ('', 'BB', 'CC');\n\n-- NULL 값은 중복이 가능하다\n\n-- 기본키(Primary Key)\n-- UNIQUE(중복 허용 안됨), NOT NULL(결측치 허용 안됨)\n-- 테이블 당 1개의 기본키만 설정 가능\n\nCREATE TABLE ex2_8 (\n    COL1 VARCHAR2(10) PRIMARY KEY\n    , COL2 VARCHAR2(10)\n);\n\n-- INSERT INTO ex2_8 VALUES('', 'AA'');\nINSERT INTO ex2_8 VALUES('AA', 'AA');\n\nSELECT * FROM user_constraints;\n\nSELECT constraint_name\n        , constraint_type\n        , table_name\n        , search_condition\nFROM user_constraints\nWHERE table_name = 'JOBS';\n\n-- 외래키 : 테이블 간의 참조 데이터 무결성 위한 제약 조건\n-- 참조 무결성을 보장한다 : 잘못된 정보가 입력되는 것을 방지한다\n-- 초반에는 잘 안쓰다가 DB가 커지면 씀\n\n-- Check\n-- 컬럼에 입력되는 데이터를 체크해 특정 조건에 맞는 데이터만 입력\n\nCREATE TABLE ex2_9(\n    num1            NUMBER\n    , CONSTRAINTS check1 CHECK (num1 BETWEEN 1 AND 9)\n    , gender        VARCHAR2(10)\n    , CONSTRAINTS check2 CHECK (gender in ('MALE', 'FEMALE'))\n);\n\nSELECT constraint_name\n        , constraint_type\n        , table_name\n        , search_condition\nFROM user_constraints\nWHERE table_name = 'EX2_9';\n\n-- 개발자들은 DB 부터 설계한다. 전문적으로 DB설계만 하는 사람이 있을정도.\n\nINSERT INTO ex2_9 VALUES(10, 'MAN');  -- check2 제약조건에 위배되었음\nINSERT INTO ex2_9 VALUES(10, 'FEMALE'); -- check1 제약조건에 위배되었음.\nINSERT INTO ex2_9 VALUES(5, 'FEMALE');\n\n-- 지금이야 알지만, 실무에서는 조건을 모르므로 테이블을 보고 조건을 맞춰서 입력해야함\n\n-- Default\nalter session set nls_date_format='YYYY/MM/DD HH24:MI:SS';\nDROP TABLE ex2_10;\nCREATE TABLE ex2_10(\n    Col1   VARCHAR2(10) NOT NULL\n    , Col2 VARCHAR2(10) NULL\n    , Create_date DATE DEFAULT SYSDATE\n);\n\nINSERT INTO ex2_10 (col1, col2) VALUES('AA', 'BB');\nSELECT * FROM ex2_10;\n\n-- 테이블 변경\n-- ALTER TABLE\n\nALTER TABLE ex2_10 RENAME COLUMN Col1 To Col11;\nSELECT * FROM ex2_10;\n\nDESC ex2_10;\n\n-- 컬럼 타입 변경\nALTER TABLE ex2_10 MODIFY Col2 VARCHAR2(30);\n\nDESC ex2_10;\n\n-- 신규 컬럼 추가\nALTER TABLE ex2_10 ADD Col3 Number;\nDESC ex2_10;\n\n-- 컬럼 삭제\nALTER TABLE ex2_10 DROP COLUMN Col3;\nDESC ex2_10;\n\n-- 제약조건 추가\nALTER TABLE ex2_10 ADD CONSTRAINTS pk_ex2_10 PRIMARY KEY(col11);\nDESC ex2_10;\nSELECT constraint_name\n        , constraint_type\n        , table_name\n        , search_condition\nFROM user_constraints\nWHERE table_name = 'EX2_10';\n\n-- 제약조건 삭제: col11에서 기본키 삭제\nALTER TABLE ex2_10 DROP CONSTRAINTS pk_ex2_10;\nSELECT constraint_name\n        , constraint_type\n        , table_name\n        , search_condition\nFROM user_constraints\nWHERE table_name = 'EX2_10';\n\n-- 테이블 복사\nCREATE TABLE ex2_9_1 AS\nSELECT * FROM ex2_9;\n\nDESC ex2_9_1;\n\n-- 뷰 생성\nCREATE OR REPLACE VIEW emp_dept_v1 AS\nSELECT a.employee_id\n        , a.emp_name\n        , a.department_id\n        , b.department_name\nFROM employees a\n    , departments b\nWHERE a.department_id = b.department_id;\n\n-- 뷰 삭제\nDROP VIEW emp_dept_v1;\n```","slug":"day0719","published":1,"updated":"2022-07-20T10:47:09.239Z","_id":"cl5rw18dx0000usuodtmtaq3k","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt --></li>\n</ul>\n<p><a href=\"/images/0719/Employment.png\"></a></p>\n<h1 id=\"day0719\"><a href=\"#day0719\" class=\"headerlink\" title=\"day0719\"></a>day0719</h1><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> table_name <span class=\"keyword\">from</span> user_tables;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- SQL vs PL/SQL</span></span><br><span class=\"line\"><span class=\"comment\">-- SQL (분석가90% + 개발자30%)</span></span><br><span class=\"line\"><span class=\"comment\">---- 프로그래밍 성격이 얕음(조건문, 반복문, 함수 등등 얕음)</span></span><br><span class=\"line\"><span class=\"comment\">-- PL/SQL (분석가10% + 개발자70% + DBA)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 입문: SQL 테이블, 뷰 --&gt; PL/SQL 함수, 프로시저</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 테이블 생성</span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">CREATE TABLE 테이블명(</span></span><br><span class=\"line\"><span class=\"comment\">    컬럼1 컬럼1_데이터타입 결측치 허용유무,</span></span><br><span class=\"line\"><span class=\"comment\">    </span></span><br><span class=\"line\"><span class=\"comment\">)</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- P.50 테이블 생성하기</span></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> ex2_1(</span><br><span class=\"line\">    COLUMN1     <span class=\"type\">CHAR</span>(<span class=\"number\">10</span>),</span><br><span class=\"line\">    COLUMN2     VARCHAR2(<span class=\"number\">10</span>),</span><br><span class=\"line\">    COLUMN3     NVARCHAR2(<span class=\"number\">10</span>),</span><br><span class=\"line\">    COLUMN4     NUMBER</span><br><span class=\"line\">);</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">-- 데이터 추가</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex2_1 (column1, column2) <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;abc&#x27;</span>, <span class=\"string\">&#x27;abc&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 테이블 생성, 추가, 삭제, 수정 코드들</span></span><br><span class=\"line\"><span class=\"comment\">-- 파이썬이나, JAVA에서 다 쓸 코드들...</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 데이터 조회</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> column1, LENGTH(column1) <span class=\"keyword\">as</span> len1</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ex2_1;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.53</span></span><br><span class=\"line\"><span class=\"comment\">-- 영어에서 한 문자는 1byte</span></span><br><span class=\"line\"><span class=\"comment\">-- 한글에서 한 문자는 2byte</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> ex2_2(</span><br><span class=\"line\">    COLUMN1 VARCHAR2(<span class=\"number\">3</span>), <span class=\"comment\">-- 디폴트 값이 byte 적용</span></span><br><span class=\"line\">    COLUMN2 VARCHAR2(<span class=\"number\">3</span> byte), </span><br><span class=\"line\">    COLUMN3 VARCHAR2(<span class=\"number\">3</span> <span class=\"type\">char</span>)</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 데이터 추가</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex2_2 <span class=\"keyword\">VALUES</span>(<span class=\"string\">&#x27;abc&#x27;</span>, <span class=\"string\">&#x27;abc&#x27;</span>, <span class=\"string\">&#x27;abc&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> column1, LENGTH(column1) <span class=\"keyword\">as</span> len1,</span><br><span class=\"line\">       column2, LENGTH(column2) <span class=\"keyword\">as</span> len2,</span><br><span class=\"line\">       column3, LENGTH(column3) <span class=\"keyword\">as</span> len3</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ex2_2;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 한글 추가</span></span><br><span class=\"line\"><span class=\"comment\">-- 입력 안됨</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex2_2 <span class=\"keyword\">VALUES</span>(<span class=\"string\">&#x27;홍길동&#x27;</span>, <span class=\"string\">&#x27;홍길동&#x27;</span>, <span class=\"string\">&#x27;홍길동&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.54</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex2_2 (column3) <span class=\"keyword\">VALUES</span>(<span class=\"string\">&#x27;홍길동&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> column3</span><br><span class=\"line\">        , LENGTH(column3) <span class=\"keyword\">AS</span> len3</span><br><span class=\"line\">        , LENGTHB(column3) <span class=\"keyword\">AS</span> bytelen</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ex2_2;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 숫자 데이터 타입</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> ex2_3(</span><br><span class=\"line\">    COL_INT     <span class=\"type\">INTEGER</span>,</span><br><span class=\"line\">    COL_DEC     <span class=\"type\">DECIMAL</span>,</span><br><span class=\"line\">    COL_NUM     NUMBER</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">SELECT 컬럼명</span></span><br><span class=\"line\"><span class=\"comment\">FROM 테이블명</span></span><br><span class=\"line\"><span class=\"comment\">WHERE 조건식</span></span><br><span class=\"line\"><span class=\"comment\">ORDER BY 정렬</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> column_id</span><br><span class=\"line\">        , column_name</span><br><span class=\"line\">        , data_type</span><br><span class=\"line\">        , data_length</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> user_tab_cols</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> table_name <span class=\"operator\">=</span> <span class=\"string\">&#x27;EX2_3&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> column_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 날짜 데이터 타입</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> ex2_5(</span><br><span class=\"line\">    COL_DATE        <span class=\"type\">DATE</span>,</span><br><span class=\"line\">    COL_TIMESTAMP   <span class=\"type\">TIMESTAMP</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex2_5 <span class=\"keyword\">VALUES</span>(SYSDATE, SYSTIMESTAMP);</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> ex2_5;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- NULL : 값이 없음</span></span><br><span class=\"line\"><span class=\"comment\">-- 해당 컬럼은 NULL</span></span><br><span class=\"line\"><span class=\"comment\">-- 결측치 허용 X : NOT NULL</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.60</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> ex2_6(</span><br><span class=\"line\">    COL_NULL        VARCHAR2(<span class=\"number\">10</span>), <span class=\"comment\">-- 결측치 허용</span></span><br><span class=\"line\">    COL_NOT_NULL    VARCHAR2(<span class=\"number\">10</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> <span class=\"comment\">-- 결측치 허용 X</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 에러 발생</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex2_6 <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;AA&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 정상적으로 삽입 됨</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex2_6 <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;&#x27;</span>, <span class=\"string\">&#x27;BB&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> ex2_6;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex2_6 <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;AA&#x27;</span>, <span class=\"string\">&#x27;BB&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> ex2_6;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.61</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> constraint_name</span><br><span class=\"line\">        , constraint_type</span><br><span class=\"line\">        , table_name</span><br><span class=\"line\">        , search_condition</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> user_constraints</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> table_name <span class=\"operator\">=</span> <span class=\"string\">&#x27;EX2_6&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- UNIQUE</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> ex2_7(</span><br><span class=\"line\">        COL_UNIQUE_NULL     VARCHAR2(<span class=\"number\">10</span>) <span class=\"keyword\">UNIQUE</span>,</span><br><span class=\"line\">        COL_UNIQUE_NNULL    VARCHAR2(<span class=\"number\">10</span>) <span class=\"keyword\">UNIQUE</span> <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">        COL_UNIQUE          VARCHAR2(<span class=\"number\">10</span>),</span><br><span class=\"line\">        CONSTRAINTS unique_nm1 <span class=\"keyword\">UNIQUE</span> (COL_UNIQUE)  <span class=\"comment\">-- CONSTRAINTS 는 제약을 걸겠다는 뜻</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> constraint_name</span><br><span class=\"line\">        , constraint_type</span><br><span class=\"line\">        , table_name</span><br><span class=\"line\">        , search_condition</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> user_constraints</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> table_name <span class=\"operator\">=</span> <span class=\"string\">&#x27;EX2_7&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex2_7 <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;AA&#x27;</span>, <span class=\"string\">&#x27;AA&#x27;</span>, <span class=\"string\">&#x27;AA&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex2_7 <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;&#x27;</span>, <span class=\"string\">&#x27;BB&#x27;</span>, <span class=\"string\">&#x27;CC&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- NULL 값은 중복이 가능하다</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 기본키(Primary Key)</span></span><br><span class=\"line\"><span class=\"comment\">-- UNIQUE(중복 허용 안됨), NOT NULL(결측치 허용 안됨)</span></span><br><span class=\"line\"><span class=\"comment\">-- 테이블 당 1개의 기본키만 설정 가능</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> ex2_8 (</span><br><span class=\"line\">    COL1 VARCHAR2(<span class=\"number\">10</span>) <span class=\"keyword\">PRIMARY</span> KEY</span><br><span class=\"line\">    , COL2 VARCHAR2(<span class=\"number\">10</span>)</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- INSERT INTO ex2_8 VALUES(&#x27;&#x27;, &#x27;AA&#x27;&#x27;);</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex2_8 <span class=\"keyword\">VALUES</span>(<span class=\"string\">&#x27;AA&#x27;</span>, <span class=\"string\">&#x27;AA&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> user_constraints;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> constraint_name</span><br><span class=\"line\">        , constraint_type</span><br><span class=\"line\">        , table_name</span><br><span class=\"line\">        , search_condition</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> user_constraints</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> table_name <span class=\"operator\">=</span> <span class=\"string\">&#x27;JOBS&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 외래키 : 테이블 간의 참조 데이터 무결성 위한 제약 조건</span></span><br><span class=\"line\"><span class=\"comment\">-- 참조 무결성을 보장한다 : 잘못된 정보가 입력되는 것을 방지한다</span></span><br><span class=\"line\"><span class=\"comment\">-- 초반에는 잘 안쓰다가 DB가 커지면 씀</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- Check</span></span><br><span class=\"line\"><span class=\"comment\">-- 컬럼에 입력되는 데이터를 체크해 특정 조건에 맞는 데이터만 입력</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> ex2_9(</span><br><span class=\"line\">    num1            NUMBER</span><br><span class=\"line\">    , CONSTRAINTS check1 <span class=\"keyword\">CHECK</span> (num1 <span class=\"keyword\">BETWEEN</span> <span class=\"number\">1</span> <span class=\"keyword\">AND</span> <span class=\"number\">9</span>)</span><br><span class=\"line\">    , gender        VARCHAR2(<span class=\"number\">10</span>)</span><br><span class=\"line\">    , CONSTRAINTS check2 <span class=\"keyword\">CHECK</span> (gender <span class=\"keyword\">in</span> (<span class=\"string\">&#x27;MALE&#x27;</span>, <span class=\"string\">&#x27;FEMALE&#x27;</span>))</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> constraint_name</span><br><span class=\"line\">        , constraint_type</span><br><span class=\"line\">        , table_name</span><br><span class=\"line\">        , search_condition</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> user_constraints</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> table_name <span class=\"operator\">=</span> <span class=\"string\">&#x27;EX2_9&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 개발자들은 DB 부터 설계한다. 전문적으로 DB설계만 하는 사람이 있을정도.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex2_9 <span class=\"keyword\">VALUES</span>(<span class=\"number\">10</span>, <span class=\"string\">&#x27;MAN&#x27;</span>);  <span class=\"comment\">-- check2 제약조건에 위배되었음</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex2_9 <span class=\"keyword\">VALUES</span>(<span class=\"number\">10</span>, <span class=\"string\">&#x27;FEMALE&#x27;</span>); <span class=\"comment\">-- check1 제약조건에 위배되었음.</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex2_9 <span class=\"keyword\">VALUES</span>(<span class=\"number\">5</span>, <span class=\"string\">&#x27;FEMALE&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 지금이야 알지만, 실무에서는 조건을 모르므로 테이블을 보고 조건을 맞춰서 입력해야함</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- Default</span></span><br><span class=\"line\"><span class=\"keyword\">alter</span> session <span class=\"keyword\">set</span> nls_date_format<span class=\"operator\">=</span><span class=\"string\">&#x27;YYYY/MM/DD HH24:MI:SS&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> ex2_10;</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> ex2_10(</span><br><span class=\"line\">    Col1   VARCHAR2(<span class=\"number\">10</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span></span><br><span class=\"line\">    , Col2 VARCHAR2(<span class=\"number\">10</span>) <span class=\"keyword\">NULL</span></span><br><span class=\"line\">    , Create_date <span class=\"type\">DATE</span> <span class=\"keyword\">DEFAULT</span> SYSDATE</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex2_10 (col1, col2) <span class=\"keyword\">VALUES</span>(<span class=\"string\">&#x27;AA&#x27;</span>, <span class=\"string\">&#x27;BB&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> ex2_10;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 테이블 변경</span></span><br><span class=\"line\"><span class=\"comment\">-- ALTER TABLE</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> ex2_10 RENAME <span class=\"keyword\">COLUMN</span> Col1 <span class=\"keyword\">To</span> Col11;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> ex2_10;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">DESC</span> ex2_10;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 컬럼 타입 변경</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> ex2_10 MODIFY Col2 VARCHAR2(<span class=\"number\">30</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">DESC</span> ex2_10;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 신규 컬럼 추가</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> ex2_10 <span class=\"keyword\">ADD</span> Col3 Number;</span><br><span class=\"line\"><span class=\"keyword\">DESC</span> ex2_10;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 컬럼 삭제</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> ex2_10 <span class=\"keyword\">DROP</span> <span class=\"keyword\">COLUMN</span> Col3;</span><br><span class=\"line\"><span class=\"keyword\">DESC</span> ex2_10;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 제약조건 추가</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> ex2_10 <span class=\"keyword\">ADD</span> <span class=\"keyword\">CONSTRAINT</span>S pk_ex2_10 <span class=\"keyword\">PRIMARY</span> KEY(col11);</span><br><span class=\"line\"><span class=\"keyword\">DESC</span> ex2_10;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> constraint_name</span><br><span class=\"line\">        , constraint_type</span><br><span class=\"line\">        , table_name</span><br><span class=\"line\">        , search_condition</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> user_constraints</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> table_name <span class=\"operator\">=</span> <span class=\"string\">&#x27;EX2_10&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 제약조건 삭제: col11에서 기본키 삭제</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> ex2_10 <span class=\"keyword\">DROP</span> CONSTRAINTS pk_ex2_10;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> constraint_name</span><br><span class=\"line\">        , constraint_type</span><br><span class=\"line\">        , table_name</span><br><span class=\"line\">        , search_condition</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> user_constraints</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> table_name <span class=\"operator\">=</span> <span class=\"string\">&#x27;EX2_10&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 테이블 복사</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> ex2_9_1 <span class=\"keyword\">AS</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> ex2_9;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">DESC</span> ex2_9_1;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 뷰 생성</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">OR</span> REPLACE <span class=\"keyword\">VIEW</span> emp_dept_v1 <span class=\"keyword\">AS</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> a.employee_id</span><br><span class=\"line\">        , a.emp_name</span><br><span class=\"line\">        , a.department_id</span><br><span class=\"line\">        , b.department_name</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees a</span><br><span class=\"line\">    , departments b</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> a.department_id <span class=\"operator\">=</span> b.department_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 뷰 삭제</span></span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">VIEW</span> emp_dept_v1;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/07/19/day0719/oracle.png","excerpt":"<ul>\n<li>테이블 생성, 삭제, 변경, 복사</li>\n<li>데이터 추가, 조회  </li>\n<li>데이터 타입   </li>\n<li>기본키, 외래키  </li>\n<li>컬럼 타입 변경, 추가, 삭제  </li>\n<li>제약조건 추가, 삭제  </li>\n<li>뷰 생성","more":"<ul>\n<li>테이블 생성, 삭제, 변경, 복사</li>\n<li>데이터 추가, 조회  </li>\n<li>데이터 타입   </li>\n<li>기본키, 외래키  </li>\n<li>컬럼 타입 변경, 추가, 삭제  </li>\n<li>제약조건 추가, 삭제  </li>\n<li>뷰 생성  <!-- excerpt --></li>\n</ul>\n<p><a href=\"/images/0719/Employment.png\"></a></p>\n<h1 id=\"day0719\"><a href=\"#day0719\" class=\"headerlink\" title=\"day0719\"></a>day0719</h1><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> table_name <span class=\"keyword\">from</span> user_tables;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- SQL vs PL/SQL</span></span><br><span class=\"line\"><span class=\"comment\">-- SQL (분석가90% + 개발자30%)</span></span><br><span class=\"line\"><span class=\"comment\">---- 프로그래밍 성격이 얕음(조건문, 반복문, 함수 등등 얕음)</span></span><br><span class=\"line\"><span class=\"comment\">-- PL/SQL (분석가10% + 개발자70% + DBA)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 입문: SQL 테이블, 뷰 --&gt; PL/SQL 함수, 프로시저</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 테이블 생성</span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">CREATE TABLE 테이블명(</span></span><br><span class=\"line\"><span class=\"comment\">    컬럼1 컬럼1_데이터타입 결측치 허용유무,</span></span><br><span class=\"line\"><span class=\"comment\">    </span></span><br><span class=\"line\"><span class=\"comment\">)</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- P.50 테이블 생성하기</span></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> ex2_1(</span><br><span class=\"line\">    COLUMN1     <span class=\"type\">CHAR</span>(<span class=\"number\">10</span>),</span><br><span class=\"line\">    COLUMN2     VARCHAR2(<span class=\"number\">10</span>),</span><br><span class=\"line\">    COLUMN3     NVARCHAR2(<span class=\"number\">10</span>),</span><br><span class=\"line\">    COLUMN4     NUMBER</span><br><span class=\"line\">);</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">-- 데이터 추가</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex2_1 (column1, column2) <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;abc&#x27;</span>, <span class=\"string\">&#x27;abc&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 테이블 생성, 추가, 삭제, 수정 코드들</span></span><br><span class=\"line\"><span class=\"comment\">-- 파이썬이나, JAVA에서 다 쓸 코드들...</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 데이터 조회</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> column1, LENGTH(column1) <span class=\"keyword\">as</span> len1</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ex2_1;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.53</span></span><br><span class=\"line\"><span class=\"comment\">-- 영어에서 한 문자는 1byte</span></span><br><span class=\"line\"><span class=\"comment\">-- 한글에서 한 문자는 2byte</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> ex2_2(</span><br><span class=\"line\">    COLUMN1 VARCHAR2(<span class=\"number\">3</span>), <span class=\"comment\">-- 디폴트 값이 byte 적용</span></span><br><span class=\"line\">    COLUMN2 VARCHAR2(<span class=\"number\">3</span> byte), </span><br><span class=\"line\">    COLUMN3 VARCHAR2(<span class=\"number\">3</span> <span class=\"type\">char</span>)</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 데이터 추가</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex2_2 <span class=\"keyword\">VALUES</span>(<span class=\"string\">&#x27;abc&#x27;</span>, <span class=\"string\">&#x27;abc&#x27;</span>, <span class=\"string\">&#x27;abc&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> column1, LENGTH(column1) <span class=\"keyword\">as</span> len1,</span><br><span class=\"line\">       column2, LENGTH(column2) <span class=\"keyword\">as</span> len2,</span><br><span class=\"line\">       column3, LENGTH(column3) <span class=\"keyword\">as</span> len3</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ex2_2;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 한글 추가</span></span><br><span class=\"line\"><span class=\"comment\">-- 입력 안됨</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex2_2 <span class=\"keyword\">VALUES</span>(<span class=\"string\">&#x27;홍길동&#x27;</span>, <span class=\"string\">&#x27;홍길동&#x27;</span>, <span class=\"string\">&#x27;홍길동&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.54</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex2_2 (column3) <span class=\"keyword\">VALUES</span>(<span class=\"string\">&#x27;홍길동&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> column3</span><br><span class=\"line\">        , LENGTH(column3) <span class=\"keyword\">AS</span> len3</span><br><span class=\"line\">        , LENGTHB(column3) <span class=\"keyword\">AS</span> bytelen</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ex2_2;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 숫자 데이터 타입</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> ex2_3(</span><br><span class=\"line\">    COL_INT     <span class=\"type\">INTEGER</span>,</span><br><span class=\"line\">    COL_DEC     <span class=\"type\">DECIMAL</span>,</span><br><span class=\"line\">    COL_NUM     NUMBER</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">SELECT 컬럼명</span></span><br><span class=\"line\"><span class=\"comment\">FROM 테이블명</span></span><br><span class=\"line\"><span class=\"comment\">WHERE 조건식</span></span><br><span class=\"line\"><span class=\"comment\">ORDER BY 정렬</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> column_id</span><br><span class=\"line\">        , column_name</span><br><span class=\"line\">        , data_type</span><br><span class=\"line\">        , data_length</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> user_tab_cols</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> table_name <span class=\"operator\">=</span> <span class=\"string\">&#x27;EX2_3&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> column_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 날짜 데이터 타입</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> ex2_5(</span><br><span class=\"line\">    COL_DATE        <span class=\"type\">DATE</span>,</span><br><span class=\"line\">    COL_TIMESTAMP   <span class=\"type\">TIMESTAMP</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex2_5 <span class=\"keyword\">VALUES</span>(SYSDATE, SYSTIMESTAMP);</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> ex2_5;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- NULL : 값이 없음</span></span><br><span class=\"line\"><span class=\"comment\">-- 해당 컬럼은 NULL</span></span><br><span class=\"line\"><span class=\"comment\">-- 결측치 허용 X : NOT NULL</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.60</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> ex2_6(</span><br><span class=\"line\">    COL_NULL        VARCHAR2(<span class=\"number\">10</span>), <span class=\"comment\">-- 결측치 허용</span></span><br><span class=\"line\">    COL_NOT_NULL    VARCHAR2(<span class=\"number\">10</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> <span class=\"comment\">-- 결측치 허용 X</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 에러 발생</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex2_6 <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;AA&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 정상적으로 삽입 됨</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex2_6 <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;&#x27;</span>, <span class=\"string\">&#x27;BB&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> ex2_6;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex2_6 <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;AA&#x27;</span>, <span class=\"string\">&#x27;BB&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> ex2_6;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.61</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> constraint_name</span><br><span class=\"line\">        , constraint_type</span><br><span class=\"line\">        , table_name</span><br><span class=\"line\">        , search_condition</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> user_constraints</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> table_name <span class=\"operator\">=</span> <span class=\"string\">&#x27;EX2_6&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- UNIQUE</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> ex2_7(</span><br><span class=\"line\">        COL_UNIQUE_NULL     VARCHAR2(<span class=\"number\">10</span>) <span class=\"keyword\">UNIQUE</span>,</span><br><span class=\"line\">        COL_UNIQUE_NNULL    VARCHAR2(<span class=\"number\">10</span>) <span class=\"keyword\">UNIQUE</span> <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">        COL_UNIQUE          VARCHAR2(<span class=\"number\">10</span>),</span><br><span class=\"line\">        CONSTRAINTS unique_nm1 <span class=\"keyword\">UNIQUE</span> (COL_UNIQUE)  <span class=\"comment\">-- CONSTRAINTS 는 제약을 걸겠다는 뜻</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> constraint_name</span><br><span class=\"line\">        , constraint_type</span><br><span class=\"line\">        , table_name</span><br><span class=\"line\">        , search_condition</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> user_constraints</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> table_name <span class=\"operator\">=</span> <span class=\"string\">&#x27;EX2_7&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex2_7 <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;AA&#x27;</span>, <span class=\"string\">&#x27;AA&#x27;</span>, <span class=\"string\">&#x27;AA&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex2_7 <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;&#x27;</span>, <span class=\"string\">&#x27;BB&#x27;</span>, <span class=\"string\">&#x27;CC&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- NULL 값은 중복이 가능하다</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 기본키(Primary Key)</span></span><br><span class=\"line\"><span class=\"comment\">-- UNIQUE(중복 허용 안됨), NOT NULL(결측치 허용 안됨)</span></span><br><span class=\"line\"><span class=\"comment\">-- 테이블 당 1개의 기본키만 설정 가능</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> ex2_8 (</span><br><span class=\"line\">    COL1 VARCHAR2(<span class=\"number\">10</span>) <span class=\"keyword\">PRIMARY</span> KEY</span><br><span class=\"line\">    , COL2 VARCHAR2(<span class=\"number\">10</span>)</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- INSERT INTO ex2_8 VALUES(&#x27;&#x27;, &#x27;AA&#x27;&#x27;);</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex2_8 <span class=\"keyword\">VALUES</span>(<span class=\"string\">&#x27;AA&#x27;</span>, <span class=\"string\">&#x27;AA&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> user_constraints;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> constraint_name</span><br><span class=\"line\">        , constraint_type</span><br><span class=\"line\">        , table_name</span><br><span class=\"line\">        , search_condition</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> user_constraints</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> table_name <span class=\"operator\">=</span> <span class=\"string\">&#x27;JOBS&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 외래키 : 테이블 간의 참조 데이터 무결성 위한 제약 조건</span></span><br><span class=\"line\"><span class=\"comment\">-- 참조 무결성을 보장한다 : 잘못된 정보가 입력되는 것을 방지한다</span></span><br><span class=\"line\"><span class=\"comment\">-- 초반에는 잘 안쓰다가 DB가 커지면 씀</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- Check</span></span><br><span class=\"line\"><span class=\"comment\">-- 컬럼에 입력되는 데이터를 체크해 특정 조건에 맞는 데이터만 입력</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> ex2_9(</span><br><span class=\"line\">    num1            NUMBER</span><br><span class=\"line\">    , CONSTRAINTS check1 <span class=\"keyword\">CHECK</span> (num1 <span class=\"keyword\">BETWEEN</span> <span class=\"number\">1</span> <span class=\"keyword\">AND</span> <span class=\"number\">9</span>)</span><br><span class=\"line\">    , gender        VARCHAR2(<span class=\"number\">10</span>)</span><br><span class=\"line\">    , CONSTRAINTS check2 <span class=\"keyword\">CHECK</span> (gender <span class=\"keyword\">in</span> (<span class=\"string\">&#x27;MALE&#x27;</span>, <span class=\"string\">&#x27;FEMALE&#x27;</span>))</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> constraint_name</span><br><span class=\"line\">        , constraint_type</span><br><span class=\"line\">        , table_name</span><br><span class=\"line\">        , search_condition</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> user_constraints</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> table_name <span class=\"operator\">=</span> <span class=\"string\">&#x27;EX2_9&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 개발자들은 DB 부터 설계한다. 전문적으로 DB설계만 하는 사람이 있을정도.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex2_9 <span class=\"keyword\">VALUES</span>(<span class=\"number\">10</span>, <span class=\"string\">&#x27;MAN&#x27;</span>);  <span class=\"comment\">-- check2 제약조건에 위배되었음</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex2_9 <span class=\"keyword\">VALUES</span>(<span class=\"number\">10</span>, <span class=\"string\">&#x27;FEMALE&#x27;</span>); <span class=\"comment\">-- check1 제약조건에 위배되었음.</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex2_9 <span class=\"keyword\">VALUES</span>(<span class=\"number\">5</span>, <span class=\"string\">&#x27;FEMALE&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 지금이야 알지만, 실무에서는 조건을 모르므로 테이블을 보고 조건을 맞춰서 입력해야함</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- Default</span></span><br><span class=\"line\"><span class=\"keyword\">alter</span> session <span class=\"keyword\">set</span> nls_date_format<span class=\"operator\">=</span><span class=\"string\">&#x27;YYYY/MM/DD HH24:MI:SS&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> ex2_10;</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> ex2_10(</span><br><span class=\"line\">    Col1   VARCHAR2(<span class=\"number\">10</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span></span><br><span class=\"line\">    , Col2 VARCHAR2(<span class=\"number\">10</span>) <span class=\"keyword\">NULL</span></span><br><span class=\"line\">    , Create_date <span class=\"type\">DATE</span> <span class=\"keyword\">DEFAULT</span> SYSDATE</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex2_10 (col1, col2) <span class=\"keyword\">VALUES</span>(<span class=\"string\">&#x27;AA&#x27;</span>, <span class=\"string\">&#x27;BB&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> ex2_10;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 테이블 변경</span></span><br><span class=\"line\"><span class=\"comment\">-- ALTER TABLE</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> ex2_10 RENAME <span class=\"keyword\">COLUMN</span> Col1 <span class=\"keyword\">To</span> Col11;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> ex2_10;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">DESC</span> ex2_10;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 컬럼 타입 변경</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> ex2_10 MODIFY Col2 VARCHAR2(<span class=\"number\">30</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">DESC</span> ex2_10;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 신규 컬럼 추가</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> ex2_10 <span class=\"keyword\">ADD</span> Col3 Number;</span><br><span class=\"line\"><span class=\"keyword\">DESC</span> ex2_10;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 컬럼 삭제</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> ex2_10 <span class=\"keyword\">DROP</span> <span class=\"keyword\">COLUMN</span> Col3;</span><br><span class=\"line\"><span class=\"keyword\">DESC</span> ex2_10;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 제약조건 추가</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> ex2_10 <span class=\"keyword\">ADD</span> <span class=\"keyword\">CONSTRAINT</span>S pk_ex2_10 <span class=\"keyword\">PRIMARY</span> KEY(col11);</span><br><span class=\"line\"><span class=\"keyword\">DESC</span> ex2_10;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> constraint_name</span><br><span class=\"line\">        , constraint_type</span><br><span class=\"line\">        , table_name</span><br><span class=\"line\">        , search_condition</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> user_constraints</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> table_name <span class=\"operator\">=</span> <span class=\"string\">&#x27;EX2_10&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 제약조건 삭제: col11에서 기본키 삭제</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> ex2_10 <span class=\"keyword\">DROP</span> CONSTRAINTS pk_ex2_10;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> constraint_name</span><br><span class=\"line\">        , constraint_type</span><br><span class=\"line\">        , table_name</span><br><span class=\"line\">        , search_condition</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> user_constraints</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> table_name <span class=\"operator\">=</span> <span class=\"string\">&#x27;EX2_10&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 테이블 복사</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> ex2_9_1 <span class=\"keyword\">AS</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> ex2_9;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">DESC</span> ex2_9_1;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 뷰 생성</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">OR</span> REPLACE <span class=\"keyword\">VIEW</span> emp_dept_v1 <span class=\"keyword\">AS</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> a.employee_id</span><br><span class=\"line\">        , a.emp_name</span><br><span class=\"line\">        , a.department_id</span><br><span class=\"line\">        , b.department_name</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees a</span><br><span class=\"line\">    , departments b</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> a.department_id <span class=\"operator\">=</span> b.department_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 뷰 삭제</span></span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">VIEW</span> emp_dept_v1;</span><br></pre></td></tr></table></figure>"},{"title":"쓸만한 사이트 모음","output":{"html_document":{"keep_md":true}},"date":"2022-07-21T12:16:12.000Z","_content":"\n\n- 부동산 청약 블로그\nhttps://blog.naver.com/kmjlmy5964/222191515331\nhttps://2020yaer.com/%EC%A3%BC%ED%83%9D%EC%B2%AD%EC%95%BD-1%EC%88%9C%EC%9C%84/\n\n  \n- airflow 문서\nhttps://airflow.apache.org/docs/apache-airflow/stable/tutorial.html\n\n  \n- 아파치 Airflow 참고교재\nhttp://www.yes24.com/Product/Goods/107878326\n\n\n- 교수님 사이트\nhttps://dschloe.github.io/\n\n\n- 홈페이지 꾸미기 CSS 샘플파일\nhttps://freefrontend.com/css-triangle-backgrounds/","source":"_posts/site.md","raw":"---\ntitle: \"쓸만한 사이트 모음\"\noutput:\n  html_document:\n    keep_md: true\ncategories: \ndate: '2022-07-21 21:16:12'\n---\n\n\n- 부동산 청약 블로그\nhttps://blog.naver.com/kmjlmy5964/222191515331\nhttps://2020yaer.com/%EC%A3%BC%ED%83%9D%EC%B2%AD%EC%95%BD-1%EC%88%9C%EC%9C%84/\n\n  \n- airflow 문서\nhttps://airflow.apache.org/docs/apache-airflow/stable/tutorial.html\n\n  \n- 아파치 Airflow 참고교재\nhttp://www.yes24.com/Product/Goods/107878326\n\n\n- 교수님 사이트\nhttps://dschloe.github.io/\n\n\n- 홈페이지 꾸미기 CSS 샘플파일\nhttps://freefrontend.com/css-triangle-backgrounds/","slug":"site","published":1,"updated":"2022-08-05T13:36:47.237Z","_id":"cl5us2wvc0000oguogdaneag6","comments":1,"layout":"post","photos":[],"link":"","content":"<ul>\n<li><p>부동산 청약 블로그<br><a href=\"https://blog.naver.com/kmjlmy5964/222191515331\">https://blog.naver.com/kmjlmy5964/222191515331</a><br><a href=\"https://2020yaer.com/%EC%A3%BC%ED%83%9D%EC%B2%AD%EC%95%BD-1%EC%88%9C%EC%9C%84/\">https://2020yaer.com/%EC%A3%BC%ED%83%9D%EC%B2%AD%EC%95%BD-1%EC%88%9C%EC%9C%84/</a></p>\n</li>\n<li><p>airflow 문서<br><a href=\"https://airflow.apache.org/docs/apache-airflow/stable/tutorial.html\">https://airflow.apache.org/docs/apache-airflow/stable/tutorial.html</a></p>\n</li>\n<li><p>아파치 Airflow 참고교재<br><a href=\"http://www.yes24.com/Product/Goods/107878326\">http://www.yes24.com/Product/Goods/107878326</a></p>\n</li>\n<li><p>교수님 사이트<br><a href=\"https://dschloe.github.io/\">https://dschloe.github.io/</a></p>\n</li>\n<li><p>홈페이지 꾸미기 CSS 샘플파일<br><a href=\"https://freefrontend.com/css-triangle-backgrounds/\">https://freefrontend.com/css-triangle-backgrounds/</a></p>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<ul>\n<li><p>부동산 청약 블로그<br><a href=\"https://blog.naver.com/kmjlmy5964/222191515331\">https://blog.naver.com/kmjlmy5964/222191515331</a><br><a href=\"https://2020yaer.com/%EC%A3%BC%ED%83%9D%EC%B2%AD%EC%95%BD-1%EC%88%9C%EC%9C%84/\">https://2020yaer.com/%EC%A3%BC%ED%83%9D%EC%B2%AD%EC%95%BD-1%EC%88%9C%EC%9C%84/</a></p>\n</li>\n<li><p>airflow 문서<br><a href=\"https://airflow.apache.org/docs/apache-airflow/stable/tutorial.html\">https://airflow.apache.org/docs/apache-airflow/stable/tutorial.html</a></p>\n</li>\n<li><p>아파치 Airflow 참고교재<br><a href=\"http://www.yes24.com/Product/Goods/107878326\">http://www.yes24.com/Product/Goods/107878326</a></p>\n</li>\n<li><p>교수님 사이트<br><a href=\"https://dschloe.github.io/\">https://dschloe.github.io/</a></p>\n</li>\n<li><p>홈페이지 꾸미기 CSS 샘플파일<br><a href=\"https://freefrontend.com/css-triangle-backgrounds/\">https://freefrontend.com/css-triangle-backgrounds/</a></p>\n</li>\n</ul>\n"},{"title":"Oracle day0720","output":{"html_document":{"keep_md":true}},"thumbnailImage":"oracle.png","thumbnailImagePosition":"left","date":"2022-07-20T12:56:21.000Z","_content":"\n- 테이블 별칭\n- 컬럼에 들어갈 값 넣기\n- UPDATE, MERGE, INSERT\n- commit & rollback\n- 연산자\n- 표현식, 조건식\n---\n- 숫자 함수 \n- 날짜 함수\n- 문자열 데이터 전처리\n- NVL, NVL2, COALESCE, DECODE\n<!-- excerpt -->\n\n# day 0720\n\n```sql\n-- 과거 : SQL은 DB에서 자료를 조회하는 용도\n-- 현재 : SQL이 수학 & 통계 도구처럼 진화\n\nSELECT * FROM EX2_10;\n\n-- p.92\n-- 급여가 5000이 넘는 사원번호와 사원명 조회\nSELECT * FROM employees;\n-- Select rows from a Table\n\nSELECT \n    EMPLOYEE_ID\n    , EMP_NAME\n    , SALARY\nFROM EMPLOYEES\nWHERE salary > 5000\nORDER BY EMPLOYEE_ID;\n\n-- 급여가 5000 이상, job_id, IT_PROG 사원 조회\nSELECT EMPLOYEE_ID\n    , EMP_NAME\n    , JOB_ID\n    , salary\nFROM EMPLOYEES\nWHERE salary > 5000\n    or job_id = 'IT_PROG'\nORDER BY employee_id;\n\n-- 테이블에 별칭 줄 수 있음\nSELECT \n    -- a 테이블에서 옴(=employees)\n    a.employee_id, a.emp_name, a.department_id,\n    -- b 테이블에서 옴(=departments)\n    b.department_name\nFROM -- (a, b 테이블을 각각 employees, departments로 정의)\n    employees a,\n    departments b\nWHERE a.department_id = b.department_id;  -- (즉, 치환하고 비슷하다고 보면 됨)\n\n-- INSERT 문\nCREATE TABLE ex3_1(\n        col1    VARCHAR2(10),\n        col2    NUMBER,\n        COL3    DATE\n);\n\n-- 컬럼에 들어갈 값 넣는 기본형태\nINSERT INTO ex3_1(\n        col1,\n        col2, \n        col3)\nVALUES ('ABC', \n        10, \n        SYSDATE\n);\n\n-- 컬럼 순서는 바꿔도 상관없지만 각 VALUES절에 있는 순서와 맞춰야 한다.\n-- col3 -> 'DATE' 값 / col1 -> 'VARCHAR2(10)' 값 이런 형식으로\nINSERT INTO ex3_1(\n        col3,\n        col1,\n        col2)\nVALUES (SYSDATE, \n        'DEF', \n        20\n);\n\n-- 컬럼명 기술 생략한 형태(갯수는 맞춰야함)\nINSERT INTO ex3_1\nVALUES ('GHI',\n        10,\n        SYSDATE\n);\n\n-- 마찬가지로 갯수는 맞춰야 함\nINSERT INTO ex3_1(\n        col1,\n        col2)\nVALUES ('GHI',\n        20\n);\n\n-- 컬럼 갯수랑 입력값 갯수가 달라서 에러 뜸\nINSERT INTO ex3_1\nVALUES ('GHI', 30);\n\n-- p.98\n-- 실습용 테이블 만들기\nCREATE TABLE ex3_2(\n        emp_id      NUMBER,\n        emp_name    VARCHAR2(100)\n);\n\n-- employees 테이블에서 salary > 5000 인 사원의 emp_id와 emp_name 을 조회한 결과를 ex3_2 테이블에 삽입\nINSERT INTO ex3_2(\n        emp_id,\n        emp_name)\nSELECT employee_id,\n       emp_name\nFROM employees\nWHERE salary > 5000;\n\n-- p.99\n-- UPDATE 활용\nSELECT * FROM ex3_1;\n\n-- ex3_1 테이블의 col2 값을 모두 50으로 변경하기\nUPDATE ex3_1 SET col2 = 50;\n-- 확인\nSELECT * FROM ex3_1;\n\n-- 4번째 col3 값이 비어 있는데, 이 값을 현재 날짜로 갱신해보기\nUPDATE ex3_1\n    SET col3 = SYSDATE\nWHERE col3 = '';\n\nUPDATE ex3_1\n    SET col3 = SYSDATE\nWHERE col3 IS NULL;\n\n-- p.101\n-- Merge, 데이터를 합치다 또는 추가하다\n-- 조건을 비교해서 테이블에 해당 조건에 맞는 데이터 없으면 추가\n-- 있으면 UPDATE문을 수행한다\n\nCREATE TABLE ex3_3(\n    employee_id NUMBER\n    , bonus_amt NUMBER DEFAULT 0\n);\n\n-- sales 테이블에서 2000년 10월 ~ 2000년 12월까지 매출을 달성한 employee_id를 입력하기\nINSERT INTO ex3_3(employee_id)\nSELECT\n    e.employee_id\nFROM employees e, sales s\nWHERE e.employee_id = s.employee_id\n    AND s.SALES_MONTH BETWEEN'200010'AND'200012'\nGROUP BY e.employee_id;\n\n-- 103.p\nSELECT\n    EMPLOYEE_ID\n    ,MANAGER_ID\n    ,SALARY\n    ,salary * 0.001\nFROM EMPLOYEES\nWHERE employee_id NOT IN(SELECT employee_id FROM ex3_3)\n    AND manager_id = 146;\n\n-- MERGE를 통해서 작성\n-- 관리자 사번 146인 것 중, ex3_3 테이블에 없는\n-- 사원의 사번, 관리자 사번, 급여, 급여 * 0.001 조회\n-- ex3_3 테이블의 160번 사원의 보너스 금액은 7.5로 신규 입력\n\nSELECT * FROM ex3_3;\n\nSELECT employee_id, salary, manager_id\n                  FROM employees \n                  WHERE manager_id = 146;\n\n-- 서브쿼리 개념 : 메인 쿼리 안에 추가된 쿼리\n-- UPDATE & INSERT 구문\n-- 두개의 테이블 조인\n\nMERGE INTO ex3_3 d \n    USING (SELECT employee_id, salary, manager_id\n                  FROM employees \n                  WHERE manager_id = 146) b\n    ON (d.employee_id = b.employee_id)\nWHEN MATCHED THEN \n    UPDATE SET d.bonus_amt = d.bonus_amt + b.salary * 0.01 \nWHEN NOT MATCHED THEN\n    INSERT (d.employee_id, d.bonus_amt) VALUES (b.employee_id, b.salary * .001)\n    WHERE (b.salary < 8000);\n    \nSELECT * FROM ex3_3 ORDER BY employee_id;\n\n-- p.106\n-- 테이블 삭제\nDELETE ex3_3;\nSELECT * FROM ex3_3 ORDER BY employee_id;\n\n-- p.107\n-- commit & rollback(실무적으로 제일 중요)\n-- Commit은 변경한 데이터를 데이터베이스에 마지막으로 반영\n-- Rollback은 그 반대로 변경한 데이터를 변경하기 이전 상태로 되돌리는 역할\n\nCREATE TABLE ex3_4(\n    employee_id NUMBER\n);\n\nINSERT INTO ex3_4 VALUES(100);\nSELECT * FROM ex3_4;\n\ncommit; \n\n-- p.110\n\nSELECT\n    ROWNUM, employee_id\nFROM employees\nWHERE ROWNUM < 5;\n\n-- ROWID, 주소 값\n-- DBA, DB 모델링(쿼리속도 측정 --> 특징)\nSELECT\n    ROWNUM,\n    employee_id,\n    ROWID\nFROM employees\nWHERE ROWNUM < 5;\n\n-- p.112\n-- 연산자\n-- Operator 연산 수행\n-- 수식 연산자 & 문자 연산자\n-- \"||\" 두 문자를 붙이는 연결 연산자\nSELECT\n    employee_id ||'-'|| emp_name AS employee_info\nFROM employees\nWHERE ROWNUM < 5;\n\n-- p.113\n-- 표현식\n-- 조건문, if조건문 (PL/SQL에서 쓸수있음)\n-- CASE 표현식\n\n-- 급여 5000이하는 C등급, 5000 ~ 15000 은 B, 15000이상은 A등급을 반환하는 조건식\nSELECT\n    employee_id\n    , salary\n    ,CASE WHEN salary <= 5000 THEN 'C등급'\n        WHEN salary > 5000 AND salary <= 15000 THEN 'B등급'\n        ELSE 'A등급'\n    END AS salary_grade\nFROM employees;\n\n-- 조건식\n---- TRUE, FALSE, UNKNOWN 세가지 타입으로 반환됨\n\n-- 비교 조건식\n-- 분석가, DB 데이터를 추출할 시, 서브쿼리\n\nSELECT\n    employee_id\n    , salary\nFROM employees\nWHERE salary = ANY(2000, 3000, 4000)\nORDER BY employee_id;\n\n-- ANY를 OR로 바꿀 경우(길어짐)\n\nSELECT\n    employee_id\n    , salary\nFROM employees\nWHERE salary = 2000 or salary = 3000 or salary = 4000\nORDER BY employee_id;\n\n-- ALL 조건은 AND 조건과 비슷함\nSELECT\n    employee_id\n    , salary\nFROM employees\nWHERE salary = ALL(2000, 3000, 4000)\nORDER BY employee_id;\n\n-- ANY = OR / ALL = AND\n\n-- SOME\nSELECT\n    employee_id,\n    salary\nFROM employees\nWHERE salary = SOME(2000, 3000, 4000)\nORDER BY employee_id;\n\n-- NOT 조건식\nSELECT\n    employee_id,\n    salary\nFROM employees\nWHERE NOT(salary >= 2500)\nORDER BY employee_id;\n\n-- NULL 조건식\nSELECT\n    employee_id,\n    salary\nFROM employees\nWHERE salary BETWEEN 2000 AND 2500\nORDER BY employee_id;\n\n-- IN 조건식\n-- 조건절에 명시한 값이 포함된 건을 반환하는데 앞에서 배웠던 ANY와 비슷하다\nSELECT\n    employee_id\n    , salary\nFROM employees\nWHERE salary IN(2000, 3000, 4000)\nORDER BY employee_id;\n\n-- NOT IN\nSELECT\n    employee_id\n    , salary\nFROM employees\nWHERE salary NOT IN(2000, 3000, 4000)\nORDER BY employee_id;\n\n-- EXISTS 조건식(IN과 비슷함)\n-- \"서브쿼리\"만 올 수 있음.\nSELECT department_id, department_name\n    FROM departments a\nWHERE EXISTS (SELECT *\n                FROM employees b\n                WHERE a.department_id = b.department_id\n                AND b.salary > 3000)\nORDER BY a.department_name;\n\n\n-- **이번주는 서브쿼리에 초점 맞춰서 공부할 것**\n\n-- Like 조건식\n-- 문자열의 패턴을 검색해서 사용하는 조건식\nSELECT\n    emp_name\nFROM employees\nWHERE emp_name LIKE 'A%'  -- '%A%' 로도 바꿔보고 '%A' 로도 바꿔보고~ '__A'로도 해보고\nORDER BY emp_name;\n\n-- 4장은 굳이 리뷰 안해도 된다\n-- 4장 숫자함수\n-- p.126\nSELECT ABS(10), ABS(-10), ABS(-10.123)\nFROM DUAL;   -- 간단한 함수 테스트하고싶을때 DUAL 씀\n\n-- 정수 반환\n-- CEIL : 올림\nSELECT CEIL(10.123), CEIL(10.541), CEIL(11.001)\nFROM DUAL;\n\n-- FLOOR : 내림\nSELECT FLOOR(10.123), FLOOR(10.541), FLOOR(11.001)\nFROM DUAL;\n\n-- ROUND : 반올림(뒤에 ,숫자 하면 그 자리수만큼 반올림)\nSELECT ROUND(10.123, 2), ROUND(10.541, 3), ROUND(11.001, 4)\nFROM DUAL;\n\n-- TRUNC\n-- 반올림 안함.소수점 절삭, 자리수 지정 가능\nSELECT TRUNC(115.155), TRUNC(115.155, 1), TRUNC(115.155, 2), TRUNC(115.155, -1)\nFROM DUAL;\n\n-- POWER(제곱 함수)\nSELECT POWER(3,2),POWER(3,3),POWER(3,3.001)\nFROM DUAL;\n\n-- SQRT(제곱근 반환)\nSELECT SQRT(2), SQRT(5), SQRT(9)\nFROM DUAL;\n\n-- 문자열 데이터 전처리\n-- 데이터를 용량을 줄이는데 가장 효과적인 것은 문자열 데이터 전처리이다.\n-- 책으로 보기엔 애매하므로 잘 정리해서 블로그 올려보기\n\n-- INITCAP : 첫문자를 대문자로 나머지는 소문자로 변환\n-- 인식 기준은 공백과 알파벳(숫자포함)을 제외한 문자이다.\nSELECT INITCAP('never say goodbye'), INITCAP('never6say*good가bye')\nFROM DUAL;\n\n-- LOWER : 매개변수로 들어오는 문자를 모두 소문자로, UPPDER 함수는 대문자로 반환\nSELECT LOWER('NEVER SAY GOODBYE'), UPPER('never say goodbye')\nFROM DUAL;\n\n-- CONCAT(char1, char2) : '||' 연산자와 비슷\nSELECT CONCAT('I Have', ' A Dream'), 'I Have' || ' A Dream'\nFROM DUAL;\n\n-- SUBSTR : 문자열 자르기(자주사용하는 함수)\nSELECT SUBSTR('ABCDEFG', 1, 4), SUBSTR('ABCDEFG', -1, 4)\nFROM DUAL;\n\n-- 글자 1개당 3Byte씩 인식(교재는 2Byte씩 인식)\nSELECT SUBSTRB('ABCDEFG', 1, 6), SUBSTRB('가나다라마바사', 1, 6)\nFROM DUAL;\n\n-- LTRIM, RTRIM 함수\nSELECT \n    LTRIM('ABCDEFGABC', 'ABC'),\n    RTRIM('ABCDEFGABC', 'ABC')\nFROM DUAL;\n\n-- 날짜 함수(p.138)\nSELECT SYSDATE, SYSTIMESTAMP FROM DUAL;\n\n-- ADD_MONTHS\n-- ADD_MONTHS 함수, 매개변수로 들어온 날짜, integer 만큼 월을 더함\nSELECT ADD_MONTHS(SYSDATE, 1)FROM DUAL; -- 1월 증가\n\nSELECT ADD_MONTHS(SYSDATE, -1)FROM DUAL; -- 1월 감소\n\nSELECT MONTHS_BETWEEN(SYSDATE, ADD_MONTHS(SYSDATE,1))mon1\nFROM DUAL;\n\n-- LAST_DATE : date 날짜를 기준으로 해당 월의 마지막 일자를 반환\nSELECT LAST_DAY(SYSDATE) FROM DUAL;\n\n-- NEXT_DAY : 다음 주 주중 일자를 반환\nSELECT NEXT_DAY(SYSDATE, '금요일')\nFROM DUAL;\n\n-- p.141 형변환\n-- TO_CHAR(숫자 혹은 날짜, format)\nSELECT TO_CHAR(123456789, '999,999,999')\nFROM DUAL;\n\nSELECT TO_CHAR(SYSDATE, 'YYYY-MM-DD')\nFROM DUAL;\n\n-- 날짜 변환 형식\n/*\n--날짜 포맷\nTO_CHAR(SYSDATE,'YYYYMMDD'),--20191130\nTO_CHAR(SYSDATE,'YYYY-MM-DD'),--2019-11-30\nTO_CHAR(SYSDATE,'YYYY/MM/DD'),--2019/11/30\nTO_CHAR(SYSDATE,'YYYY'),--2019\nTO_CHAR(SYSDATE,'YY'),--19\nTO_CHAR(SYSDATE,'MM'),--11\nTO_CHAR(SYSDATE,'MON'),--11월\nTO_CHAR(SYSDATE,'D'),--7 (주중의 일을 1~7로 표시(일요일 = 1)\nTO_CHAR(SYSDATE,'DD'),--30\nTO_CHAR(SYSDATE,'DDD'),--334 (1년기준 일 수)\nTO_CHAR(SYSDATE,'DAY'),--토요일 (요일 표시)\nTO_CHAR(SYSDATE,'DY') --토 (요일을 한자리로 표시)\nTO_CHAR(SYSDATE,'WW'), -- 48 (일년 기준 주를 00 ~ 53 형태로 표시)\nTO_CHAR(SYSDATE,'W') -- 5 (한달 기준 몇번째 주)\nTO_CHAR(SYSDATE,'DL'),--2019년 11월 30일 토요일\n\n--사간 포맷\nTO_CHAR(SYSDATE,'AM'),--오전\nTO_CHAR(SYSDATE,'PM'),--오후\nTO_CHAR(SYSDATE,'HH'), --10 (시간을 0 ~ 12 형태로 표시)\nTO_CHAR(SYSDATE,'HH24'), --20 (시간을 0 ~ 24 형태로 표시)\nTO_CHAR(SYSDATE,'MI'), --03 (분을 00 ~ 59 형태로 표시)\nTO_CHAR(SYSDATE,'SS') --10 (초을 01 ~ 59 형태로 표시)\n\n--세기 포맷\nTO_CHAR(SYSDATE,'CC'), --21 (세기)\nTO_CHAR(SYSDATE,'BC'), --서기\n*/\n\n-- 문자를 숫자로 변환\nSELECT TO_NUMBER('123456')\nFROM DUAL;\n\n-- NULL 관련함수(중요)\nSELECT manager_id, employee_id FROM employees;\n\n-- NVL : 표현식1이 NULL 일 때, 표현식2를 반환함\nSELECT NVL(manager_id, employee_id)\nFROM employees\nWHERE manager_id IS NULL;\n\n-- NVL2 : 표현식1이 NULL이 아니면, 표현식2 출력,\n--        표현식2가 NULL이면, 표현식3을 출력\nSELECT employee_id FROM employees\n\n-- salary2에 NULL 이면 salary 값을 가져오고,\n--           NULL 이 아니면 salary x commission_pct 값을 salary2에 넣어라\nSELECT employee_id\n        , salary\n        , commission_pct\n        , NVL2(commission_pct, salary + (salary * commission_pct), salary)AS salary2\nFROM employees\nWHERE employee_id IN (118, 179);\n\n-- COALESCE(expr1, expr2)\n-- 매개변수로 들어오는 표현식에서 NULL이 아닌 첫 번째 표현식 반환\nSELECT\n    employee_id\n    , salary\n    , commission_pct\n    , COALESCE(salary * commission_pct, salary)as salary2\nFROM employees;\n\n-- DECODE\n-- 파이썬의 IF-ELIF-ELIF-ELIF-ELSE 느낌\nSELECT * FROM sales\n\nSELECT prod_id,\n        DECODE(channel_id, 3, 'Direct',\n                           9, 'Direct',\n                           5, 'Indirect',\n                           4, 'Indirect',\n                              'Others') decodes\nFROM sales\nWHERE rownum < 10;\n```","source":"_posts/day0720.md","raw":"---\ntitle: \"Oracle day0720\"\noutput:\n  html_document:\n    keep_md: true\ncategories: Oracle\nthumbnailImage: oracle.png\nthumbnailImagePosition: left\ndate: '2022-07-20 21:56:21'\n---\n\n- 테이블 별칭\n- 컬럼에 들어갈 값 넣기\n- UPDATE, MERGE, INSERT\n- commit & rollback\n- 연산자\n- 표현식, 조건식\n---\n- 숫자 함수 \n- 날짜 함수\n- 문자열 데이터 전처리\n- NVL, NVL2, COALESCE, DECODE\n<!-- excerpt -->\n\n# day 0720\n\n```sql\n-- 과거 : SQL은 DB에서 자료를 조회하는 용도\n-- 현재 : SQL이 수학 & 통계 도구처럼 진화\n\nSELECT * FROM EX2_10;\n\n-- p.92\n-- 급여가 5000이 넘는 사원번호와 사원명 조회\nSELECT * FROM employees;\n-- Select rows from a Table\n\nSELECT \n    EMPLOYEE_ID\n    , EMP_NAME\n    , SALARY\nFROM EMPLOYEES\nWHERE salary > 5000\nORDER BY EMPLOYEE_ID;\n\n-- 급여가 5000 이상, job_id, IT_PROG 사원 조회\nSELECT EMPLOYEE_ID\n    , EMP_NAME\n    , JOB_ID\n    , salary\nFROM EMPLOYEES\nWHERE salary > 5000\n    or job_id = 'IT_PROG'\nORDER BY employee_id;\n\n-- 테이블에 별칭 줄 수 있음\nSELECT \n    -- a 테이블에서 옴(=employees)\n    a.employee_id, a.emp_name, a.department_id,\n    -- b 테이블에서 옴(=departments)\n    b.department_name\nFROM -- (a, b 테이블을 각각 employees, departments로 정의)\n    employees a,\n    departments b\nWHERE a.department_id = b.department_id;  -- (즉, 치환하고 비슷하다고 보면 됨)\n\n-- INSERT 문\nCREATE TABLE ex3_1(\n        col1    VARCHAR2(10),\n        col2    NUMBER,\n        COL3    DATE\n);\n\n-- 컬럼에 들어갈 값 넣는 기본형태\nINSERT INTO ex3_1(\n        col1,\n        col2, \n        col3)\nVALUES ('ABC', \n        10, \n        SYSDATE\n);\n\n-- 컬럼 순서는 바꿔도 상관없지만 각 VALUES절에 있는 순서와 맞춰야 한다.\n-- col3 -> 'DATE' 값 / col1 -> 'VARCHAR2(10)' 값 이런 형식으로\nINSERT INTO ex3_1(\n        col3,\n        col1,\n        col2)\nVALUES (SYSDATE, \n        'DEF', \n        20\n);\n\n-- 컬럼명 기술 생략한 형태(갯수는 맞춰야함)\nINSERT INTO ex3_1\nVALUES ('GHI',\n        10,\n        SYSDATE\n);\n\n-- 마찬가지로 갯수는 맞춰야 함\nINSERT INTO ex3_1(\n        col1,\n        col2)\nVALUES ('GHI',\n        20\n);\n\n-- 컬럼 갯수랑 입력값 갯수가 달라서 에러 뜸\nINSERT INTO ex3_1\nVALUES ('GHI', 30);\n\n-- p.98\n-- 실습용 테이블 만들기\nCREATE TABLE ex3_2(\n        emp_id      NUMBER,\n        emp_name    VARCHAR2(100)\n);\n\n-- employees 테이블에서 salary > 5000 인 사원의 emp_id와 emp_name 을 조회한 결과를 ex3_2 테이블에 삽입\nINSERT INTO ex3_2(\n        emp_id,\n        emp_name)\nSELECT employee_id,\n       emp_name\nFROM employees\nWHERE salary > 5000;\n\n-- p.99\n-- UPDATE 활용\nSELECT * FROM ex3_1;\n\n-- ex3_1 테이블의 col2 값을 모두 50으로 변경하기\nUPDATE ex3_1 SET col2 = 50;\n-- 확인\nSELECT * FROM ex3_1;\n\n-- 4번째 col3 값이 비어 있는데, 이 값을 현재 날짜로 갱신해보기\nUPDATE ex3_1\n    SET col3 = SYSDATE\nWHERE col3 = '';\n\nUPDATE ex3_1\n    SET col3 = SYSDATE\nWHERE col3 IS NULL;\n\n-- p.101\n-- Merge, 데이터를 합치다 또는 추가하다\n-- 조건을 비교해서 테이블에 해당 조건에 맞는 데이터 없으면 추가\n-- 있으면 UPDATE문을 수행한다\n\nCREATE TABLE ex3_3(\n    employee_id NUMBER\n    , bonus_amt NUMBER DEFAULT 0\n);\n\n-- sales 테이블에서 2000년 10월 ~ 2000년 12월까지 매출을 달성한 employee_id를 입력하기\nINSERT INTO ex3_3(employee_id)\nSELECT\n    e.employee_id\nFROM employees e, sales s\nWHERE e.employee_id = s.employee_id\n    AND s.SALES_MONTH BETWEEN'200010'AND'200012'\nGROUP BY e.employee_id;\n\n-- 103.p\nSELECT\n    EMPLOYEE_ID\n    ,MANAGER_ID\n    ,SALARY\n    ,salary * 0.001\nFROM EMPLOYEES\nWHERE employee_id NOT IN(SELECT employee_id FROM ex3_3)\n    AND manager_id = 146;\n\n-- MERGE를 통해서 작성\n-- 관리자 사번 146인 것 중, ex3_3 테이블에 없는\n-- 사원의 사번, 관리자 사번, 급여, 급여 * 0.001 조회\n-- ex3_3 테이블의 160번 사원의 보너스 금액은 7.5로 신규 입력\n\nSELECT * FROM ex3_3;\n\nSELECT employee_id, salary, manager_id\n                  FROM employees \n                  WHERE manager_id = 146;\n\n-- 서브쿼리 개념 : 메인 쿼리 안에 추가된 쿼리\n-- UPDATE & INSERT 구문\n-- 두개의 테이블 조인\n\nMERGE INTO ex3_3 d \n    USING (SELECT employee_id, salary, manager_id\n                  FROM employees \n                  WHERE manager_id = 146) b\n    ON (d.employee_id = b.employee_id)\nWHEN MATCHED THEN \n    UPDATE SET d.bonus_amt = d.bonus_amt + b.salary * 0.01 \nWHEN NOT MATCHED THEN\n    INSERT (d.employee_id, d.bonus_amt) VALUES (b.employee_id, b.salary * .001)\n    WHERE (b.salary < 8000);\n    \nSELECT * FROM ex3_3 ORDER BY employee_id;\n\n-- p.106\n-- 테이블 삭제\nDELETE ex3_3;\nSELECT * FROM ex3_3 ORDER BY employee_id;\n\n-- p.107\n-- commit & rollback(실무적으로 제일 중요)\n-- Commit은 변경한 데이터를 데이터베이스에 마지막으로 반영\n-- Rollback은 그 반대로 변경한 데이터를 변경하기 이전 상태로 되돌리는 역할\n\nCREATE TABLE ex3_4(\n    employee_id NUMBER\n);\n\nINSERT INTO ex3_4 VALUES(100);\nSELECT * FROM ex3_4;\n\ncommit; \n\n-- p.110\n\nSELECT\n    ROWNUM, employee_id\nFROM employees\nWHERE ROWNUM < 5;\n\n-- ROWID, 주소 값\n-- DBA, DB 모델링(쿼리속도 측정 --> 특징)\nSELECT\n    ROWNUM,\n    employee_id,\n    ROWID\nFROM employees\nWHERE ROWNUM < 5;\n\n-- p.112\n-- 연산자\n-- Operator 연산 수행\n-- 수식 연산자 & 문자 연산자\n-- \"||\" 두 문자를 붙이는 연결 연산자\nSELECT\n    employee_id ||'-'|| emp_name AS employee_info\nFROM employees\nWHERE ROWNUM < 5;\n\n-- p.113\n-- 표현식\n-- 조건문, if조건문 (PL/SQL에서 쓸수있음)\n-- CASE 표현식\n\n-- 급여 5000이하는 C등급, 5000 ~ 15000 은 B, 15000이상은 A등급을 반환하는 조건식\nSELECT\n    employee_id\n    , salary\n    ,CASE WHEN salary <= 5000 THEN 'C등급'\n        WHEN salary > 5000 AND salary <= 15000 THEN 'B등급'\n        ELSE 'A등급'\n    END AS salary_grade\nFROM employees;\n\n-- 조건식\n---- TRUE, FALSE, UNKNOWN 세가지 타입으로 반환됨\n\n-- 비교 조건식\n-- 분석가, DB 데이터를 추출할 시, 서브쿼리\n\nSELECT\n    employee_id\n    , salary\nFROM employees\nWHERE salary = ANY(2000, 3000, 4000)\nORDER BY employee_id;\n\n-- ANY를 OR로 바꿀 경우(길어짐)\n\nSELECT\n    employee_id\n    , salary\nFROM employees\nWHERE salary = 2000 or salary = 3000 or salary = 4000\nORDER BY employee_id;\n\n-- ALL 조건은 AND 조건과 비슷함\nSELECT\n    employee_id\n    , salary\nFROM employees\nWHERE salary = ALL(2000, 3000, 4000)\nORDER BY employee_id;\n\n-- ANY = OR / ALL = AND\n\n-- SOME\nSELECT\n    employee_id,\n    salary\nFROM employees\nWHERE salary = SOME(2000, 3000, 4000)\nORDER BY employee_id;\n\n-- NOT 조건식\nSELECT\n    employee_id,\n    salary\nFROM employees\nWHERE NOT(salary >= 2500)\nORDER BY employee_id;\n\n-- NULL 조건식\nSELECT\n    employee_id,\n    salary\nFROM employees\nWHERE salary BETWEEN 2000 AND 2500\nORDER BY employee_id;\n\n-- IN 조건식\n-- 조건절에 명시한 값이 포함된 건을 반환하는데 앞에서 배웠던 ANY와 비슷하다\nSELECT\n    employee_id\n    , salary\nFROM employees\nWHERE salary IN(2000, 3000, 4000)\nORDER BY employee_id;\n\n-- NOT IN\nSELECT\n    employee_id\n    , salary\nFROM employees\nWHERE salary NOT IN(2000, 3000, 4000)\nORDER BY employee_id;\n\n-- EXISTS 조건식(IN과 비슷함)\n-- \"서브쿼리\"만 올 수 있음.\nSELECT department_id, department_name\n    FROM departments a\nWHERE EXISTS (SELECT *\n                FROM employees b\n                WHERE a.department_id = b.department_id\n                AND b.salary > 3000)\nORDER BY a.department_name;\n\n\n-- **이번주는 서브쿼리에 초점 맞춰서 공부할 것**\n\n-- Like 조건식\n-- 문자열의 패턴을 검색해서 사용하는 조건식\nSELECT\n    emp_name\nFROM employees\nWHERE emp_name LIKE 'A%'  -- '%A%' 로도 바꿔보고 '%A' 로도 바꿔보고~ '__A'로도 해보고\nORDER BY emp_name;\n\n-- 4장은 굳이 리뷰 안해도 된다\n-- 4장 숫자함수\n-- p.126\nSELECT ABS(10), ABS(-10), ABS(-10.123)\nFROM DUAL;   -- 간단한 함수 테스트하고싶을때 DUAL 씀\n\n-- 정수 반환\n-- CEIL : 올림\nSELECT CEIL(10.123), CEIL(10.541), CEIL(11.001)\nFROM DUAL;\n\n-- FLOOR : 내림\nSELECT FLOOR(10.123), FLOOR(10.541), FLOOR(11.001)\nFROM DUAL;\n\n-- ROUND : 반올림(뒤에 ,숫자 하면 그 자리수만큼 반올림)\nSELECT ROUND(10.123, 2), ROUND(10.541, 3), ROUND(11.001, 4)\nFROM DUAL;\n\n-- TRUNC\n-- 반올림 안함.소수점 절삭, 자리수 지정 가능\nSELECT TRUNC(115.155), TRUNC(115.155, 1), TRUNC(115.155, 2), TRUNC(115.155, -1)\nFROM DUAL;\n\n-- POWER(제곱 함수)\nSELECT POWER(3,2),POWER(3,3),POWER(3,3.001)\nFROM DUAL;\n\n-- SQRT(제곱근 반환)\nSELECT SQRT(2), SQRT(5), SQRT(9)\nFROM DUAL;\n\n-- 문자열 데이터 전처리\n-- 데이터를 용량을 줄이는데 가장 효과적인 것은 문자열 데이터 전처리이다.\n-- 책으로 보기엔 애매하므로 잘 정리해서 블로그 올려보기\n\n-- INITCAP : 첫문자를 대문자로 나머지는 소문자로 변환\n-- 인식 기준은 공백과 알파벳(숫자포함)을 제외한 문자이다.\nSELECT INITCAP('never say goodbye'), INITCAP('never6say*good가bye')\nFROM DUAL;\n\n-- LOWER : 매개변수로 들어오는 문자를 모두 소문자로, UPPDER 함수는 대문자로 반환\nSELECT LOWER('NEVER SAY GOODBYE'), UPPER('never say goodbye')\nFROM DUAL;\n\n-- CONCAT(char1, char2) : '||' 연산자와 비슷\nSELECT CONCAT('I Have', ' A Dream'), 'I Have' || ' A Dream'\nFROM DUAL;\n\n-- SUBSTR : 문자열 자르기(자주사용하는 함수)\nSELECT SUBSTR('ABCDEFG', 1, 4), SUBSTR('ABCDEFG', -1, 4)\nFROM DUAL;\n\n-- 글자 1개당 3Byte씩 인식(교재는 2Byte씩 인식)\nSELECT SUBSTRB('ABCDEFG', 1, 6), SUBSTRB('가나다라마바사', 1, 6)\nFROM DUAL;\n\n-- LTRIM, RTRIM 함수\nSELECT \n    LTRIM('ABCDEFGABC', 'ABC'),\n    RTRIM('ABCDEFGABC', 'ABC')\nFROM DUAL;\n\n-- 날짜 함수(p.138)\nSELECT SYSDATE, SYSTIMESTAMP FROM DUAL;\n\n-- ADD_MONTHS\n-- ADD_MONTHS 함수, 매개변수로 들어온 날짜, integer 만큼 월을 더함\nSELECT ADD_MONTHS(SYSDATE, 1)FROM DUAL; -- 1월 증가\n\nSELECT ADD_MONTHS(SYSDATE, -1)FROM DUAL; -- 1월 감소\n\nSELECT MONTHS_BETWEEN(SYSDATE, ADD_MONTHS(SYSDATE,1))mon1\nFROM DUAL;\n\n-- LAST_DATE : date 날짜를 기준으로 해당 월의 마지막 일자를 반환\nSELECT LAST_DAY(SYSDATE) FROM DUAL;\n\n-- NEXT_DAY : 다음 주 주중 일자를 반환\nSELECT NEXT_DAY(SYSDATE, '금요일')\nFROM DUAL;\n\n-- p.141 형변환\n-- TO_CHAR(숫자 혹은 날짜, format)\nSELECT TO_CHAR(123456789, '999,999,999')\nFROM DUAL;\n\nSELECT TO_CHAR(SYSDATE, 'YYYY-MM-DD')\nFROM DUAL;\n\n-- 날짜 변환 형식\n/*\n--날짜 포맷\nTO_CHAR(SYSDATE,'YYYYMMDD'),--20191130\nTO_CHAR(SYSDATE,'YYYY-MM-DD'),--2019-11-30\nTO_CHAR(SYSDATE,'YYYY/MM/DD'),--2019/11/30\nTO_CHAR(SYSDATE,'YYYY'),--2019\nTO_CHAR(SYSDATE,'YY'),--19\nTO_CHAR(SYSDATE,'MM'),--11\nTO_CHAR(SYSDATE,'MON'),--11월\nTO_CHAR(SYSDATE,'D'),--7 (주중의 일을 1~7로 표시(일요일 = 1)\nTO_CHAR(SYSDATE,'DD'),--30\nTO_CHAR(SYSDATE,'DDD'),--334 (1년기준 일 수)\nTO_CHAR(SYSDATE,'DAY'),--토요일 (요일 표시)\nTO_CHAR(SYSDATE,'DY') --토 (요일을 한자리로 표시)\nTO_CHAR(SYSDATE,'WW'), -- 48 (일년 기준 주를 00 ~ 53 형태로 표시)\nTO_CHAR(SYSDATE,'W') -- 5 (한달 기준 몇번째 주)\nTO_CHAR(SYSDATE,'DL'),--2019년 11월 30일 토요일\n\n--사간 포맷\nTO_CHAR(SYSDATE,'AM'),--오전\nTO_CHAR(SYSDATE,'PM'),--오후\nTO_CHAR(SYSDATE,'HH'), --10 (시간을 0 ~ 12 형태로 표시)\nTO_CHAR(SYSDATE,'HH24'), --20 (시간을 0 ~ 24 형태로 표시)\nTO_CHAR(SYSDATE,'MI'), --03 (분을 00 ~ 59 형태로 표시)\nTO_CHAR(SYSDATE,'SS') --10 (초을 01 ~ 59 형태로 표시)\n\n--세기 포맷\nTO_CHAR(SYSDATE,'CC'), --21 (세기)\nTO_CHAR(SYSDATE,'BC'), --서기\n*/\n\n-- 문자를 숫자로 변환\nSELECT TO_NUMBER('123456')\nFROM DUAL;\n\n-- NULL 관련함수(중요)\nSELECT manager_id, employee_id FROM employees;\n\n-- NVL : 표현식1이 NULL 일 때, 표현식2를 반환함\nSELECT NVL(manager_id, employee_id)\nFROM employees\nWHERE manager_id IS NULL;\n\n-- NVL2 : 표현식1이 NULL이 아니면, 표현식2 출력,\n--        표현식2가 NULL이면, 표현식3을 출력\nSELECT employee_id FROM employees\n\n-- salary2에 NULL 이면 salary 값을 가져오고,\n--           NULL 이 아니면 salary x commission_pct 값을 salary2에 넣어라\nSELECT employee_id\n        , salary\n        , commission_pct\n        , NVL2(commission_pct, salary + (salary * commission_pct), salary)AS salary2\nFROM employees\nWHERE employee_id IN (118, 179);\n\n-- COALESCE(expr1, expr2)\n-- 매개변수로 들어오는 표현식에서 NULL이 아닌 첫 번째 표현식 반환\nSELECT\n    employee_id\n    , salary\n    , commission_pct\n    , COALESCE(salary * commission_pct, salary)as salary2\nFROM employees;\n\n-- DECODE\n-- 파이썬의 IF-ELIF-ELIF-ELIF-ELSE 느낌\nSELECT * FROM sales\n\nSELECT prod_id,\n        DECODE(channel_id, 3, 'Direct',\n                           9, 'Direct',\n                           5, 'Indirect',\n                           4, 'Indirect',\n                              'Others') decodes\nFROM sales\nWHERE rownum < 10;\n```","slug":"day0720","published":1,"updated":"2022-07-21T12:21:40.650Z","_id":"cl5v09ms20000xwu0axf07flc","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt --></li>\n</ul>\n<h1 id=\"day-0720\"><a href=\"#day-0720\" class=\"headerlink\" title=\"day 0720\"></a>day 0720</h1><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 과거 : SQL은 DB에서 자료를 조회하는 용도</span></span><br><span class=\"line\"><span class=\"comment\">-- 현재 : SQL이 수학 &amp; 통계 도구처럼 진화</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> EX2_10;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.92</span></span><br><span class=\"line\"><span class=\"comment\">-- 급여가 5000이 넘는 사원번호와 사원명 조회</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> employees;</span><br><span class=\"line\"><span class=\"comment\">-- Select rows from a Table</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> </span><br><span class=\"line\">    EMPLOYEE_ID</span><br><span class=\"line\">    , EMP_NAME</span><br><span class=\"line\">    , SALARY</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> EMPLOYEES</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> salary <span class=\"operator\">&gt;</span> <span class=\"number\">5000</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> EMPLOYEE_ID;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 급여가 5000 이상, job_id, IT_PROG 사원 조회</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> EMPLOYEE_ID</span><br><span class=\"line\">    , EMP_NAME</span><br><span class=\"line\">    , JOB_ID</span><br><span class=\"line\">    , salary</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> EMPLOYEES</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> salary <span class=\"operator\">&gt;</span> <span class=\"number\">5000</span></span><br><span class=\"line\">    <span class=\"keyword\">or</span> job_id <span class=\"operator\">=</span> <span class=\"string\">&#x27;IT_PROG&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> employee_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 테이블에 별칭 줄 수 있음</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> </span><br><span class=\"line\">    <span class=\"comment\">-- a 테이블에서 옴(=employees)</span></span><br><span class=\"line\">    a.employee_id, a.emp_name, a.department_id,</span><br><span class=\"line\">    <span class=\"comment\">-- b 테이블에서 옴(=departments)</span></span><br><span class=\"line\">    b.department_name</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> <span class=\"comment\">-- (a, b 테이블을 각각 employees, departments로 정의)</span></span><br><span class=\"line\">    employees a,</span><br><span class=\"line\">    departments b</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> a.department_id <span class=\"operator\">=</span> b.department_id;  <span class=\"comment\">-- (즉, 치환하고 비슷하다고 보면 됨)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- INSERT 문</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> ex3_1(</span><br><span class=\"line\">        col1    VARCHAR2(<span class=\"number\">10</span>),</span><br><span class=\"line\">        col2    NUMBER,</span><br><span class=\"line\">        COL3    <span class=\"type\">DATE</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 컬럼에 들어갈 값 넣는 기본형태</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex3_1(</span><br><span class=\"line\">        col1,</span><br><span class=\"line\">        col2, </span><br><span class=\"line\">        col3)</span><br><span class=\"line\"><span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;ABC&#x27;</span>, </span><br><span class=\"line\">        <span class=\"number\">10</span>, </span><br><span class=\"line\">        SYSDATE</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 컬럼 순서는 바꿔도 상관없지만 각 VALUES절에 있는 순서와 맞춰야 한다.</span></span><br><span class=\"line\"><span class=\"comment\">-- col3 -&gt; &#x27;DATE&#x27; 값 / col1 -&gt; &#x27;VARCHAR2(10)&#x27; 값 이런 형식으로</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex3_1(</span><br><span class=\"line\">        col3,</span><br><span class=\"line\">        col1,</span><br><span class=\"line\">        col2)</span><br><span class=\"line\"><span class=\"keyword\">VALUES</span> (SYSDATE, </span><br><span class=\"line\">        <span class=\"string\">&#x27;DEF&#x27;</span>, </span><br><span class=\"line\">        <span class=\"number\">20</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 컬럼명 기술 생략한 형태(갯수는 맞춰야함)</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex3_1</span><br><span class=\"line\"><span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;GHI&#x27;</span>,</span><br><span class=\"line\">        <span class=\"number\">10</span>,</span><br><span class=\"line\">        SYSDATE</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 마찬가지로 갯수는 맞춰야 함</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex3_1(</span><br><span class=\"line\">        col1,</span><br><span class=\"line\">        col2)</span><br><span class=\"line\"><span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;GHI&#x27;</span>,</span><br><span class=\"line\">        <span class=\"number\">20</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 컬럼 갯수랑 입력값 갯수가 달라서 에러 뜸</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex3_1</span><br><span class=\"line\"><span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;GHI&#x27;</span>, <span class=\"number\">30</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.98</span></span><br><span class=\"line\"><span class=\"comment\">-- 실습용 테이블 만들기</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> ex3_2(</span><br><span class=\"line\">        emp_id      NUMBER,</span><br><span class=\"line\">        emp_name    VARCHAR2(<span class=\"number\">100</span>)</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- employees 테이블에서 salary &gt; 5000 인 사원의 emp_id와 emp_name 을 조회한 결과를 ex3_2 테이블에 삽입</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex3_2(</span><br><span class=\"line\">        emp_id,</span><br><span class=\"line\">        emp_name)</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> employee_id,</span><br><span class=\"line\">       emp_name</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> salary <span class=\"operator\">&gt;</span> <span class=\"number\">5000</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.99</span></span><br><span class=\"line\"><span class=\"comment\">-- UPDATE 활용</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> ex3_1;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- ex3_1 테이블의 col2 값을 모두 50으로 변경하기</span></span><br><span class=\"line\"><span class=\"keyword\">UPDATE</span> ex3_1 <span class=\"keyword\">SET</span> col2 <span class=\"operator\">=</span> <span class=\"number\">50</span>;</span><br><span class=\"line\"><span class=\"comment\">-- 확인</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> ex3_1;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 4번째 col3 값이 비어 있는데, 이 값을 현재 날짜로 갱신해보기</span></span><br><span class=\"line\"><span class=\"keyword\">UPDATE</span> ex3_1</span><br><span class=\"line\">    <span class=\"keyword\">SET</span> col3 <span class=\"operator\">=</span> SYSDATE</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> col3 <span class=\"operator\">=</span> <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">UPDATE</span> ex3_1</span><br><span class=\"line\">    <span class=\"keyword\">SET</span> col3 <span class=\"operator\">=</span> SYSDATE</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> col3 <span class=\"keyword\">IS</span> <span class=\"keyword\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.101</span></span><br><span class=\"line\"><span class=\"comment\">-- Merge, 데이터를 합치다 또는 추가하다</span></span><br><span class=\"line\"><span class=\"comment\">-- 조건을 비교해서 테이블에 해당 조건에 맞는 데이터 없으면 추가</span></span><br><span class=\"line\"><span class=\"comment\">-- 있으면 UPDATE문을 수행한다</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> ex3_3(</span><br><span class=\"line\">    employee_id NUMBER</span><br><span class=\"line\">    , bonus_amt NUMBER <span class=\"keyword\">DEFAULT</span> <span class=\"number\">0</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- sales 테이블에서 2000년 10월 ~ 2000년 12월까지 매출을 달성한 employee_id를 입력하기</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex3_3(employee_id)</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    e.employee_id</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees e, sales s</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> e.employee_id <span class=\"operator\">=</span> s.employee_id</span><br><span class=\"line\">    <span class=\"keyword\">AND</span> s.SALES_MONTH <span class=\"keyword\">BETWEEN</span><span class=\"string\">&#x27;200010&#x27;</span><span class=\"keyword\">AND</span><span class=\"string\">&#x27;200012&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> e.employee_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 103.p</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    EMPLOYEE_ID</span><br><span class=\"line\">    ,MANAGER_ID</span><br><span class=\"line\">    ,SALARY</span><br><span class=\"line\">    ,salary <span class=\"operator\">*</span> <span class=\"number\">0.001</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> EMPLOYEES</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> employee_id <span class=\"keyword\">NOT</span> <span class=\"keyword\">IN</span>(<span class=\"keyword\">SELECT</span> employee_id <span class=\"keyword\">FROM</span> ex3_3)</span><br><span class=\"line\">    <span class=\"keyword\">AND</span> manager_id <span class=\"operator\">=</span> <span class=\"number\">146</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- MERGE를 통해서 작성</span></span><br><span class=\"line\"><span class=\"comment\">-- 관리자 사번 146인 것 중, ex3_3 테이블에 없는</span></span><br><span class=\"line\"><span class=\"comment\">-- 사원의 사번, 관리자 사번, 급여, 급여 * 0.001 조회</span></span><br><span class=\"line\"><span class=\"comment\">-- ex3_3 테이블의 160번 사원의 보너스 금액은 7.5로 신규 입력</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> ex3_3;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> employee_id, salary, manager_id</span><br><span class=\"line\">                  <span class=\"keyword\">FROM</span> employees </span><br><span class=\"line\">                  <span class=\"keyword\">WHERE</span> manager_id <span class=\"operator\">=</span> <span class=\"number\">146</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 서브쿼리 개념 : 메인 쿼리 안에 추가된 쿼리</span></span><br><span class=\"line\"><span class=\"comment\">-- UPDATE &amp; INSERT 구문</span></span><br><span class=\"line\"><span class=\"comment\">-- 두개의 테이블 조인</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">MERGE</span> <span class=\"keyword\">INTO</span> ex3_3 d </span><br><span class=\"line\">    <span class=\"keyword\">USING</span> (<span class=\"keyword\">SELECT</span> employee_id, salary, manager_id</span><br><span class=\"line\">                  <span class=\"keyword\">FROM</span> employees </span><br><span class=\"line\">                  <span class=\"keyword\">WHERE</span> manager_id <span class=\"operator\">=</span> <span class=\"number\">146</span>) b</span><br><span class=\"line\">    <span class=\"keyword\">ON</span> (d.employee_id <span class=\"operator\">=</span> b.employee_id)</span><br><span class=\"line\"><span class=\"keyword\">WHEN</span> MATCHED <span class=\"keyword\">THEN</span> </span><br><span class=\"line\">    <span class=\"keyword\">UPDATE</span> <span class=\"keyword\">SET</span> d.bonus_amt <span class=\"operator\">=</span> d.bonus_amt <span class=\"operator\">+</span> b.salary <span class=\"operator\">*</span> <span class=\"number\">0.01</span> </span><br><span class=\"line\"><span class=\"keyword\">WHEN</span> <span class=\"keyword\">NOT</span> MATCHED <span class=\"keyword\">THEN</span></span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> (d.employee_id, d.bonus_amt) <span class=\"keyword\">VALUES</span> (b.employee_id, b.salary <span class=\"operator\">*</span> <span class=\"number\">.001</span>)</span><br><span class=\"line\">    <span class=\"keyword\">WHERE</span> (b.salary <span class=\"operator\">&lt;</span> <span class=\"number\">8000</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> ex3_3 <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> employee_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.106</span></span><br><span class=\"line\"><span class=\"comment\">-- 테이블 삭제</span></span><br><span class=\"line\"><span class=\"keyword\">DELETE</span> ex3_3;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> ex3_3 <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> employee_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.107</span></span><br><span class=\"line\"><span class=\"comment\">-- commit &amp; rollback(실무적으로 제일 중요)</span></span><br><span class=\"line\"><span class=\"comment\">-- Commit은 변경한 데이터를 데이터베이스에 마지막으로 반영</span></span><br><span class=\"line\"><span class=\"comment\">-- Rollback은 그 반대로 변경한 데이터를 변경하기 이전 상태로 되돌리는 역할</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> ex3_4(</span><br><span class=\"line\">    employee_id NUMBER</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex3_4 <span class=\"keyword\">VALUES</span>(<span class=\"number\">100</span>);</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> ex3_4;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">commit</span>; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.110</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    ROWNUM, employee_id</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> ROWNUM <span class=\"operator\">&lt;</span> <span class=\"number\">5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- ROWID, 주소 값</span></span><br><span class=\"line\"><span class=\"comment\">-- DBA, DB 모델링(쿼리속도 측정 --&gt; 특징)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    ROWNUM,</span><br><span class=\"line\">    employee_id,</span><br><span class=\"line\">    ROWID</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> ROWNUM <span class=\"operator\">&lt;</span> <span class=\"number\">5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.112</span></span><br><span class=\"line\"><span class=\"comment\">-- 연산자</span></span><br><span class=\"line\"><span class=\"comment\">-- Operator 연산 수행</span></span><br><span class=\"line\"><span class=\"comment\">-- 수식 연산자 &amp; 문자 연산자</span></span><br><span class=\"line\"><span class=\"comment\">-- &quot;||&quot; 두 문자를 붙이는 연결 연산자</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    employee_id <span class=\"operator\">||</span><span class=\"string\">&#x27;-&#x27;</span><span class=\"operator\">||</span> emp_name <span class=\"keyword\">AS</span> employee_info</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> ROWNUM <span class=\"operator\">&lt;</span> <span class=\"number\">5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.113</span></span><br><span class=\"line\"><span class=\"comment\">-- 표현식</span></span><br><span class=\"line\"><span class=\"comment\">-- 조건문, if조건문 (PL/SQL에서 쓸수있음)</span></span><br><span class=\"line\"><span class=\"comment\">-- CASE 표현식</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 급여 5000이하는 C등급, 5000 ~ 15000 은 B, 15000이상은 A등급을 반환하는 조건식</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    employee_id</span><br><span class=\"line\">    , salary</span><br><span class=\"line\">    ,<span class=\"keyword\">CASE</span> <span class=\"keyword\">WHEN</span> salary <span class=\"operator\">&lt;=</span> <span class=\"number\">5000</span> <span class=\"keyword\">THEN</span> <span class=\"string\">&#x27;C등급&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">WHEN</span> salary <span class=\"operator\">&gt;</span> <span class=\"number\">5000</span> <span class=\"keyword\">AND</span> salary <span class=\"operator\">&lt;=</span> <span class=\"number\">15000</span> <span class=\"keyword\">THEN</span> <span class=\"string\">&#x27;B등급&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">ELSE</span> <span class=\"string\">&#x27;A등급&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">END</span> <span class=\"keyword\">AS</span> salary_grade</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 조건식</span></span><br><span class=\"line\"><span class=\"comment\">---- TRUE, FALSE, UNKNOWN 세가지 타입으로 반환됨</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 비교 조건식</span></span><br><span class=\"line\"><span class=\"comment\">-- 분석가, DB 데이터를 추출할 시, 서브쿼리</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    employee_id</span><br><span class=\"line\">    , salary</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> salary <span class=\"operator\">=</span> <span class=\"keyword\">ANY</span>(<span class=\"number\">2000</span>, <span class=\"number\">3000</span>, <span class=\"number\">4000</span>)</span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> employee_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- ANY를 OR로 바꿀 경우(길어짐)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    employee_id</span><br><span class=\"line\">    , salary</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> salary <span class=\"operator\">=</span> <span class=\"number\">2000</span> <span class=\"keyword\">or</span> salary <span class=\"operator\">=</span> <span class=\"number\">3000</span> <span class=\"keyword\">or</span> salary <span class=\"operator\">=</span> <span class=\"number\">4000</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> employee_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- ALL 조건은 AND 조건과 비슷함</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    employee_id</span><br><span class=\"line\">    , salary</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> salary <span class=\"operator\">=</span> <span class=\"keyword\">ALL</span>(<span class=\"number\">2000</span>, <span class=\"number\">3000</span>, <span class=\"number\">4000</span>)</span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> employee_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- ANY = OR / ALL = AND</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- SOME</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    employee_id,</span><br><span class=\"line\">    salary</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> salary <span class=\"operator\">=</span> <span class=\"keyword\">SOME</span>(<span class=\"number\">2000</span>, <span class=\"number\">3000</span>, <span class=\"number\">4000</span>)</span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> employee_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- NOT 조건식</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    employee_id,</span><br><span class=\"line\">    salary</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">NOT</span>(salary <span class=\"operator\">&gt;=</span> <span class=\"number\">2500</span>)</span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> employee_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- NULL 조건식</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    employee_id,</span><br><span class=\"line\">    salary</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> salary <span class=\"keyword\">BETWEEN</span> <span class=\"number\">2000</span> <span class=\"keyword\">AND</span> <span class=\"number\">2500</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> employee_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- IN 조건식</span></span><br><span class=\"line\"><span class=\"comment\">-- 조건절에 명시한 값이 포함된 건을 반환하는데 앞에서 배웠던 ANY와 비슷하다</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    employee_id</span><br><span class=\"line\">    , salary</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> salary <span class=\"keyword\">IN</span>(<span class=\"number\">2000</span>, <span class=\"number\">3000</span>, <span class=\"number\">4000</span>)</span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> employee_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- NOT IN</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    employee_id</span><br><span class=\"line\">    , salary</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> salary <span class=\"keyword\">NOT</span> <span class=\"keyword\">IN</span>(<span class=\"number\">2000</span>, <span class=\"number\">3000</span>, <span class=\"number\">4000</span>)</span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> employee_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- EXISTS 조건식(IN과 비슷함)</span></span><br><span class=\"line\"><span class=\"comment\">-- &quot;서브쿼리&quot;만 올 수 있음.</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> department_id, department_name</span><br><span class=\"line\">    <span class=\"keyword\">FROM</span> departments a</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">EXISTS</span> (<span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span></span><br><span class=\"line\">                <span class=\"keyword\">FROM</span> employees b</span><br><span class=\"line\">                <span class=\"keyword\">WHERE</span> a.department_id <span class=\"operator\">=</span> b.department_id</span><br><span class=\"line\">                <span class=\"keyword\">AND</span> b.salary <span class=\"operator\">&gt;</span> <span class=\"number\">3000</span>)</span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> a.department_name;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- **이번주는 서브쿼리에 초점 맞춰서 공부할 것**</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- Like 조건식</span></span><br><span class=\"line\"><span class=\"comment\">-- 문자열의 패턴을 검색해서 사용하는 조건식</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    emp_name</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> emp_name <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;A%&#x27;</span>  <span class=\"comment\">-- &#x27;%A%&#x27; 로도 바꿔보고 &#x27;%A&#x27; 로도 바꿔보고~ &#x27;__A&#x27;로도 해보고</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> emp_name;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 4장은 굳이 리뷰 안해도 된다</span></span><br><span class=\"line\"><span class=\"comment\">-- 4장 숫자함수</span></span><br><span class=\"line\"><span class=\"comment\">-- p.126</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">ABS</span>(<span class=\"number\">10</span>), <span class=\"built_in\">ABS</span>(<span class=\"number\">-10</span>), <span class=\"built_in\">ABS</span>(<span class=\"number\">-10.123</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;   <span class=\"comment\">-- 간단한 함수 테스트하고싶을때 DUAL 씀</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 정수 반환</span></span><br><span class=\"line\"><span class=\"comment\">-- CEIL : 올림</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">CEIL</span>(<span class=\"number\">10.123</span>), <span class=\"built_in\">CEIL</span>(<span class=\"number\">10.541</span>), <span class=\"built_in\">CEIL</span>(<span class=\"number\">11.001</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- FLOOR : 내림</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">FLOOR</span>(<span class=\"number\">10.123</span>), <span class=\"built_in\">FLOOR</span>(<span class=\"number\">10.541</span>), <span class=\"built_in\">FLOOR</span>(<span class=\"number\">11.001</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- ROUND : 반올림(뒤에 ,숫자 하면 그 자리수만큼 반올림)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ROUND(<span class=\"number\">10.123</span>, <span class=\"number\">2</span>), ROUND(<span class=\"number\">10.541</span>, <span class=\"number\">3</span>), ROUND(<span class=\"number\">11.001</span>, <span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- TRUNC</span></span><br><span class=\"line\"><span class=\"comment\">-- 반올림 안함.소수점 절삭, 자리수 지정 가능</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> TRUNC(<span class=\"number\">115.155</span>), TRUNC(<span class=\"number\">115.155</span>, <span class=\"number\">1</span>), TRUNC(<span class=\"number\">115.155</span>, <span class=\"number\">2</span>), TRUNC(<span class=\"number\">115.155</span>, <span class=\"number\">-1</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- POWER(제곱 함수)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">POWER</span>(<span class=\"number\">3</span>,<span class=\"number\">2</span>),<span class=\"built_in\">POWER</span>(<span class=\"number\">3</span>,<span class=\"number\">3</span>),<span class=\"built_in\">POWER</span>(<span class=\"number\">3</span>,<span class=\"number\">3.001</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- SQRT(제곱근 반환)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">SQRT</span>(<span class=\"number\">2</span>), <span class=\"built_in\">SQRT</span>(<span class=\"number\">5</span>), <span class=\"built_in\">SQRT</span>(<span class=\"number\">9</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 문자열 데이터 전처리</span></span><br><span class=\"line\"><span class=\"comment\">-- 데이터를 용량을 줄이는데 가장 효과적인 것은 문자열 데이터 전처리이다.</span></span><br><span class=\"line\"><span class=\"comment\">-- 책으로 보기엔 애매하므로 잘 정리해서 블로그 올려보기</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- INITCAP : 첫문자를 대문자로 나머지는 소문자로 변환</span></span><br><span class=\"line\"><span class=\"comment\">-- 인식 기준은 공백과 알파벳(숫자포함)을 제외한 문자이다.</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> INITCAP(<span class=\"string\">&#x27;never say goodbye&#x27;</span>), INITCAP(<span class=\"string\">&#x27;never6say*good가bye&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- LOWER : 매개변수로 들어오는 문자를 모두 소문자로, UPPDER 함수는 대문자로 반환</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">LOWER</span>(<span class=\"string\">&#x27;NEVER SAY GOODBYE&#x27;</span>), <span class=\"built_in\">UPPER</span>(<span class=\"string\">&#x27;never say goodbye&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- CONCAT(char1, char2) : &#x27;||&#x27; 연산자와 비슷</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> CONCAT(<span class=\"string\">&#x27;I Have&#x27;</span>, <span class=\"string\">&#x27; A Dream&#x27;</span>), <span class=\"string\">&#x27;I Have&#x27;</span> <span class=\"operator\">||</span> <span class=\"string\">&#x27; A Dream&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- SUBSTR : 문자열 자르기(자주사용하는 함수)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> SUBSTR(<span class=\"string\">&#x27;ABCDEFG&#x27;</span>, <span class=\"number\">1</span>, <span class=\"number\">4</span>), SUBSTR(<span class=\"string\">&#x27;ABCDEFG&#x27;</span>, <span class=\"number\">-1</span>, <span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 글자 1개당 3Byte씩 인식(교재는 2Byte씩 인식)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> SUBSTRB(<span class=\"string\">&#x27;ABCDEFG&#x27;</span>, <span class=\"number\">1</span>, <span class=\"number\">6</span>), SUBSTRB(<span class=\"string\">&#x27;가나다라마바사&#x27;</span>, <span class=\"number\">1</span>, <span class=\"number\">6</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- LTRIM, RTRIM 함수</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> </span><br><span class=\"line\">    LTRIM(<span class=\"string\">&#x27;ABCDEFGABC&#x27;</span>, <span class=\"string\">&#x27;ABC&#x27;</span>),</span><br><span class=\"line\">    RTRIM(<span class=\"string\">&#x27;ABCDEFGABC&#x27;</span>, <span class=\"string\">&#x27;ABC&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 날짜 함수(p.138)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> SYSDATE, SYSTIMESTAMP <span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- ADD_MONTHS</span></span><br><span class=\"line\"><span class=\"comment\">-- ADD_MONTHS 함수, 매개변수로 들어온 날짜, integer 만큼 월을 더함</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ADD_MONTHS(SYSDATE, <span class=\"number\">1</span>)<span class=\"keyword\">FROM</span> DUAL; <span class=\"comment\">-- 1월 증가</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ADD_MONTHS(SYSDATE, <span class=\"number\">-1</span>)<span class=\"keyword\">FROM</span> DUAL; <span class=\"comment\">-- 1월 감소</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> MONTHS_BETWEEN(SYSDATE, ADD_MONTHS(SYSDATE,<span class=\"number\">1</span>))mon1</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- LAST_DATE : date 날짜를 기준으로 해당 월의 마지막 일자를 반환</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> LAST_DAY(SYSDATE) <span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- NEXT_DAY : 다음 주 주중 일자를 반환</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> NEXT_DAY(SYSDATE, <span class=\"string\">&#x27;금요일&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.141 형변환</span></span><br><span class=\"line\"><span class=\"comment\">-- TO_CHAR(숫자 혹은 날짜, format)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> TO_CHAR(<span class=\"number\">123456789</span>, <span class=\"string\">&#x27;999,999,999&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> TO_CHAR(SYSDATE, <span class=\"string\">&#x27;YYYY-MM-DD&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 날짜 변환 형식</span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">--날짜 포맷</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;YYYYMMDD&#x27;),--20191130</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;YYYY-MM-DD&#x27;),--2019-11-30</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;YYYY/MM/DD&#x27;),--2019/11/30</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;YYYY&#x27;),--2019</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;YY&#x27;),--19</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;MM&#x27;),--11</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;MON&#x27;),--11월</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;D&#x27;),--7 (주중의 일을 1~7로 표시(일요일 = 1)</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;DD&#x27;),--30</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;DDD&#x27;),--334 (1년기준 일 수)</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;DAY&#x27;),--토요일 (요일 표시)</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;DY&#x27;) --토 (요일을 한자리로 표시)</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;WW&#x27;), -- 48 (일년 기준 주를 00 ~ 53 형태로 표시)</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;W&#x27;) -- 5 (한달 기준 몇번째 주)</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;DL&#x27;),--2019년 11월 30일 토요일</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">--사간 포맷</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;AM&#x27;),--오전</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;PM&#x27;),--오후</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;HH&#x27;), --10 (시간을 0 ~ 12 형태로 표시)</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;HH24&#x27;), --20 (시간을 0 ~ 24 형태로 표시)</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;MI&#x27;), --03 (분을 00 ~ 59 형태로 표시)</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;SS&#x27;) --10 (초을 01 ~ 59 형태로 표시)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">--세기 포맷</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;CC&#x27;), --21 (세기)</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;BC&#x27;), --서기</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 문자를 숫자로 변환</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> TO_NUMBER(<span class=\"string\">&#x27;123456&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- NULL 관련함수(중요)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> manager_id, employee_id <span class=\"keyword\">FROM</span> employees;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- NVL : 표현식1이 NULL 일 때, 표현식2를 반환함</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> NVL(manager_id, employee_id)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> manager_id <span class=\"keyword\">IS</span> <span class=\"keyword\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- NVL2 : 표현식1이 NULL이 아니면, 표현식2 출력,</span></span><br><span class=\"line\"><span class=\"comment\">--        표현식2가 NULL이면, 표현식3을 출력</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> employee_id <span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- salary2에 NULL 이면 salary 값을 가져오고,</span></span><br><span class=\"line\"><span class=\"comment\">--           NULL 이 아니면 salary x commission_pct 값을 salary2에 넣어라</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> employee_id</span><br><span class=\"line\">        , salary</span><br><span class=\"line\">        , commission_pct</span><br><span class=\"line\">        , NVL2(commission_pct, salary <span class=\"operator\">+</span> (salary <span class=\"operator\">*</span> commission_pct), salary)<span class=\"keyword\">AS</span> salary2</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> employee_id <span class=\"keyword\">IN</span> (<span class=\"number\">118</span>, <span class=\"number\">179</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- COALESCE(expr1, expr2)</span></span><br><span class=\"line\"><span class=\"comment\">-- 매개변수로 들어오는 표현식에서 NULL이 아닌 첫 번째 표현식 반환</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    employee_id</span><br><span class=\"line\">    , salary</span><br><span class=\"line\">    , commission_pct</span><br><span class=\"line\">    , <span class=\"built_in\">COALESCE</span>(salary <span class=\"operator\">*</span> commission_pct, salary)<span class=\"keyword\">as</span> salary2</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- DECODE</span></span><br><span class=\"line\"><span class=\"comment\">-- 파이썬의 IF-ELIF-ELIF-ELIF-ELSE 느낌</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> sales</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> prod_id,</span><br><span class=\"line\">        DECODE(channel_id, <span class=\"number\">3</span>, <span class=\"string\">&#x27;Direct&#x27;</span>,</span><br><span class=\"line\">                           <span class=\"number\">9</span>, <span class=\"string\">&#x27;Direct&#x27;</span>,</span><br><span class=\"line\">                           <span class=\"number\">5</span>, <span class=\"string\">&#x27;Indirect&#x27;</span>,</span><br><span class=\"line\">                           <span class=\"number\">4</span>, <span class=\"string\">&#x27;Indirect&#x27;</span>,</span><br><span class=\"line\">                              <span class=\"string\">&#x27;Others&#x27;</span>) decodes</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> sales</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> rownum <span class=\"operator\">&lt;</span> <span class=\"number\">10</span>;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/07/20/day0720/oracle.png","excerpt":"<ul>\n<li>테이블 별칭</li>\n<li>컬럼에 들어갈 값 넣기</li>\n<li>UPDATE, MERGE, INSERT</li>\n<li>commit &amp; rollback</li>\n<li>연산자</li>\n<li>표현식, 조건식</li>\n</ul>\n<hr>\n<ul>\n<li>숫자 함수 </li>\n<li>날짜 함수</li>\n<li>문자열 데이터 전처리</li>\n<li>NVL, NVL2, COALESCE, DECODE","more":"<ul>\n<li>테이블 별칭</li>\n<li>컬럼에 들어갈 값 넣기</li>\n<li>UPDATE, MERGE, INSERT</li>\n<li>commit &amp; rollback</li>\n<li>연산자</li>\n<li>표현식, 조건식</li>\n</ul>\n<hr>\n<ul>\n<li>숫자 함수 </li>\n<li>날짜 함수</li>\n<li>문자열 데이터 전처리</li>\n<li>NVL, NVL2, COALESCE, DECODE<!-- excerpt --></li>\n</ul>\n<h1 id=\"day-0720\"><a href=\"#day-0720\" class=\"headerlink\" title=\"day 0720\"></a>day 0720</h1><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 과거 : SQL은 DB에서 자료를 조회하는 용도</span></span><br><span class=\"line\"><span class=\"comment\">-- 현재 : SQL이 수학 &amp; 통계 도구처럼 진화</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> EX2_10;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.92</span></span><br><span class=\"line\"><span class=\"comment\">-- 급여가 5000이 넘는 사원번호와 사원명 조회</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> employees;</span><br><span class=\"line\"><span class=\"comment\">-- Select rows from a Table</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> </span><br><span class=\"line\">    EMPLOYEE_ID</span><br><span class=\"line\">    , EMP_NAME</span><br><span class=\"line\">    , SALARY</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> EMPLOYEES</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> salary <span class=\"operator\">&gt;</span> <span class=\"number\">5000</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> EMPLOYEE_ID;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 급여가 5000 이상, job_id, IT_PROG 사원 조회</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> EMPLOYEE_ID</span><br><span class=\"line\">    , EMP_NAME</span><br><span class=\"line\">    , JOB_ID</span><br><span class=\"line\">    , salary</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> EMPLOYEES</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> salary <span class=\"operator\">&gt;</span> <span class=\"number\">5000</span></span><br><span class=\"line\">    <span class=\"keyword\">or</span> job_id <span class=\"operator\">=</span> <span class=\"string\">&#x27;IT_PROG&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> employee_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 테이블에 별칭 줄 수 있음</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> </span><br><span class=\"line\">    <span class=\"comment\">-- a 테이블에서 옴(=employees)</span></span><br><span class=\"line\">    a.employee_id, a.emp_name, a.department_id,</span><br><span class=\"line\">    <span class=\"comment\">-- b 테이블에서 옴(=departments)</span></span><br><span class=\"line\">    b.department_name</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> <span class=\"comment\">-- (a, b 테이블을 각각 employees, departments로 정의)</span></span><br><span class=\"line\">    employees a,</span><br><span class=\"line\">    departments b</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> a.department_id <span class=\"operator\">=</span> b.department_id;  <span class=\"comment\">-- (즉, 치환하고 비슷하다고 보면 됨)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- INSERT 문</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> ex3_1(</span><br><span class=\"line\">        col1    VARCHAR2(<span class=\"number\">10</span>),</span><br><span class=\"line\">        col2    NUMBER,</span><br><span class=\"line\">        COL3    <span class=\"type\">DATE</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 컬럼에 들어갈 값 넣는 기본형태</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex3_1(</span><br><span class=\"line\">        col1,</span><br><span class=\"line\">        col2, </span><br><span class=\"line\">        col3)</span><br><span class=\"line\"><span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;ABC&#x27;</span>, </span><br><span class=\"line\">        <span class=\"number\">10</span>, </span><br><span class=\"line\">        SYSDATE</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 컬럼 순서는 바꿔도 상관없지만 각 VALUES절에 있는 순서와 맞춰야 한다.</span></span><br><span class=\"line\"><span class=\"comment\">-- col3 -&gt; &#x27;DATE&#x27; 값 / col1 -&gt; &#x27;VARCHAR2(10)&#x27; 값 이런 형식으로</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex3_1(</span><br><span class=\"line\">        col3,</span><br><span class=\"line\">        col1,</span><br><span class=\"line\">        col2)</span><br><span class=\"line\"><span class=\"keyword\">VALUES</span> (SYSDATE, </span><br><span class=\"line\">        <span class=\"string\">&#x27;DEF&#x27;</span>, </span><br><span class=\"line\">        <span class=\"number\">20</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 컬럼명 기술 생략한 형태(갯수는 맞춰야함)</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex3_1</span><br><span class=\"line\"><span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;GHI&#x27;</span>,</span><br><span class=\"line\">        <span class=\"number\">10</span>,</span><br><span class=\"line\">        SYSDATE</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 마찬가지로 갯수는 맞춰야 함</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex3_1(</span><br><span class=\"line\">        col1,</span><br><span class=\"line\">        col2)</span><br><span class=\"line\"><span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;GHI&#x27;</span>,</span><br><span class=\"line\">        <span class=\"number\">20</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 컬럼 갯수랑 입력값 갯수가 달라서 에러 뜸</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex3_1</span><br><span class=\"line\"><span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;GHI&#x27;</span>, <span class=\"number\">30</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.98</span></span><br><span class=\"line\"><span class=\"comment\">-- 실습용 테이블 만들기</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> ex3_2(</span><br><span class=\"line\">        emp_id      NUMBER,</span><br><span class=\"line\">        emp_name    VARCHAR2(<span class=\"number\">100</span>)</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- employees 테이블에서 salary &gt; 5000 인 사원의 emp_id와 emp_name 을 조회한 결과를 ex3_2 테이블에 삽입</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex3_2(</span><br><span class=\"line\">        emp_id,</span><br><span class=\"line\">        emp_name)</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> employee_id,</span><br><span class=\"line\">       emp_name</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> salary <span class=\"operator\">&gt;</span> <span class=\"number\">5000</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.99</span></span><br><span class=\"line\"><span class=\"comment\">-- UPDATE 활용</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> ex3_1;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- ex3_1 테이블의 col2 값을 모두 50으로 변경하기</span></span><br><span class=\"line\"><span class=\"keyword\">UPDATE</span> ex3_1 <span class=\"keyword\">SET</span> col2 <span class=\"operator\">=</span> <span class=\"number\">50</span>;</span><br><span class=\"line\"><span class=\"comment\">-- 확인</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> ex3_1;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 4번째 col3 값이 비어 있는데, 이 값을 현재 날짜로 갱신해보기</span></span><br><span class=\"line\"><span class=\"keyword\">UPDATE</span> ex3_1</span><br><span class=\"line\">    <span class=\"keyword\">SET</span> col3 <span class=\"operator\">=</span> SYSDATE</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> col3 <span class=\"operator\">=</span> <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">UPDATE</span> ex3_1</span><br><span class=\"line\">    <span class=\"keyword\">SET</span> col3 <span class=\"operator\">=</span> SYSDATE</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> col3 <span class=\"keyword\">IS</span> <span class=\"keyword\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.101</span></span><br><span class=\"line\"><span class=\"comment\">-- Merge, 데이터를 합치다 또는 추가하다</span></span><br><span class=\"line\"><span class=\"comment\">-- 조건을 비교해서 테이블에 해당 조건에 맞는 데이터 없으면 추가</span></span><br><span class=\"line\"><span class=\"comment\">-- 있으면 UPDATE문을 수행한다</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> ex3_3(</span><br><span class=\"line\">    employee_id NUMBER</span><br><span class=\"line\">    , bonus_amt NUMBER <span class=\"keyword\">DEFAULT</span> <span class=\"number\">0</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- sales 테이블에서 2000년 10월 ~ 2000년 12월까지 매출을 달성한 employee_id를 입력하기</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex3_3(employee_id)</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    e.employee_id</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees e, sales s</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> e.employee_id <span class=\"operator\">=</span> s.employee_id</span><br><span class=\"line\">    <span class=\"keyword\">AND</span> s.SALES_MONTH <span class=\"keyword\">BETWEEN</span><span class=\"string\">&#x27;200010&#x27;</span><span class=\"keyword\">AND</span><span class=\"string\">&#x27;200012&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> e.employee_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 103.p</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    EMPLOYEE_ID</span><br><span class=\"line\">    ,MANAGER_ID</span><br><span class=\"line\">    ,SALARY</span><br><span class=\"line\">    ,salary <span class=\"operator\">*</span> <span class=\"number\">0.001</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> EMPLOYEES</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> employee_id <span class=\"keyword\">NOT</span> <span class=\"keyword\">IN</span>(<span class=\"keyword\">SELECT</span> employee_id <span class=\"keyword\">FROM</span> ex3_3)</span><br><span class=\"line\">    <span class=\"keyword\">AND</span> manager_id <span class=\"operator\">=</span> <span class=\"number\">146</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- MERGE를 통해서 작성</span></span><br><span class=\"line\"><span class=\"comment\">-- 관리자 사번 146인 것 중, ex3_3 테이블에 없는</span></span><br><span class=\"line\"><span class=\"comment\">-- 사원의 사번, 관리자 사번, 급여, 급여 * 0.001 조회</span></span><br><span class=\"line\"><span class=\"comment\">-- ex3_3 테이블의 160번 사원의 보너스 금액은 7.5로 신규 입력</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> ex3_3;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> employee_id, salary, manager_id</span><br><span class=\"line\">                  <span class=\"keyword\">FROM</span> employees </span><br><span class=\"line\">                  <span class=\"keyword\">WHERE</span> manager_id <span class=\"operator\">=</span> <span class=\"number\">146</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 서브쿼리 개념 : 메인 쿼리 안에 추가된 쿼리</span></span><br><span class=\"line\"><span class=\"comment\">-- UPDATE &amp; INSERT 구문</span></span><br><span class=\"line\"><span class=\"comment\">-- 두개의 테이블 조인</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">MERGE</span> <span class=\"keyword\">INTO</span> ex3_3 d </span><br><span class=\"line\">    <span class=\"keyword\">USING</span> (<span class=\"keyword\">SELECT</span> employee_id, salary, manager_id</span><br><span class=\"line\">                  <span class=\"keyword\">FROM</span> employees </span><br><span class=\"line\">                  <span class=\"keyword\">WHERE</span> manager_id <span class=\"operator\">=</span> <span class=\"number\">146</span>) b</span><br><span class=\"line\">    <span class=\"keyword\">ON</span> (d.employee_id <span class=\"operator\">=</span> b.employee_id)</span><br><span class=\"line\"><span class=\"keyword\">WHEN</span> MATCHED <span class=\"keyword\">THEN</span> </span><br><span class=\"line\">    <span class=\"keyword\">UPDATE</span> <span class=\"keyword\">SET</span> d.bonus_amt <span class=\"operator\">=</span> d.bonus_amt <span class=\"operator\">+</span> b.salary <span class=\"operator\">*</span> <span class=\"number\">0.01</span> </span><br><span class=\"line\"><span class=\"keyword\">WHEN</span> <span class=\"keyword\">NOT</span> MATCHED <span class=\"keyword\">THEN</span></span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> (d.employee_id, d.bonus_amt) <span class=\"keyword\">VALUES</span> (b.employee_id, b.salary <span class=\"operator\">*</span> <span class=\"number\">.001</span>)</span><br><span class=\"line\">    <span class=\"keyword\">WHERE</span> (b.salary <span class=\"operator\">&lt;</span> <span class=\"number\">8000</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> ex3_3 <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> employee_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.106</span></span><br><span class=\"line\"><span class=\"comment\">-- 테이블 삭제</span></span><br><span class=\"line\"><span class=\"keyword\">DELETE</span> ex3_3;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> ex3_3 <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> employee_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.107</span></span><br><span class=\"line\"><span class=\"comment\">-- commit &amp; rollback(실무적으로 제일 중요)</span></span><br><span class=\"line\"><span class=\"comment\">-- Commit은 변경한 데이터를 데이터베이스에 마지막으로 반영</span></span><br><span class=\"line\"><span class=\"comment\">-- Rollback은 그 반대로 변경한 데이터를 변경하기 이전 상태로 되돌리는 역할</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> ex3_4(</span><br><span class=\"line\">    employee_id NUMBER</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> ex3_4 <span class=\"keyword\">VALUES</span>(<span class=\"number\">100</span>);</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> ex3_4;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">commit</span>; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.110</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    ROWNUM, employee_id</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> ROWNUM <span class=\"operator\">&lt;</span> <span class=\"number\">5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- ROWID, 주소 값</span></span><br><span class=\"line\"><span class=\"comment\">-- DBA, DB 모델링(쿼리속도 측정 --&gt; 특징)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    ROWNUM,</span><br><span class=\"line\">    employee_id,</span><br><span class=\"line\">    ROWID</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> ROWNUM <span class=\"operator\">&lt;</span> <span class=\"number\">5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.112</span></span><br><span class=\"line\"><span class=\"comment\">-- 연산자</span></span><br><span class=\"line\"><span class=\"comment\">-- Operator 연산 수행</span></span><br><span class=\"line\"><span class=\"comment\">-- 수식 연산자 &amp; 문자 연산자</span></span><br><span class=\"line\"><span class=\"comment\">-- &quot;||&quot; 두 문자를 붙이는 연결 연산자</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    employee_id <span class=\"operator\">||</span><span class=\"string\">&#x27;-&#x27;</span><span class=\"operator\">||</span> emp_name <span class=\"keyword\">AS</span> employee_info</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> ROWNUM <span class=\"operator\">&lt;</span> <span class=\"number\">5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.113</span></span><br><span class=\"line\"><span class=\"comment\">-- 표현식</span></span><br><span class=\"line\"><span class=\"comment\">-- 조건문, if조건문 (PL/SQL에서 쓸수있음)</span></span><br><span class=\"line\"><span class=\"comment\">-- CASE 표현식</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 급여 5000이하는 C등급, 5000 ~ 15000 은 B, 15000이상은 A등급을 반환하는 조건식</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    employee_id</span><br><span class=\"line\">    , salary</span><br><span class=\"line\">    ,<span class=\"keyword\">CASE</span> <span class=\"keyword\">WHEN</span> salary <span class=\"operator\">&lt;=</span> <span class=\"number\">5000</span> <span class=\"keyword\">THEN</span> <span class=\"string\">&#x27;C등급&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">WHEN</span> salary <span class=\"operator\">&gt;</span> <span class=\"number\">5000</span> <span class=\"keyword\">AND</span> salary <span class=\"operator\">&lt;=</span> <span class=\"number\">15000</span> <span class=\"keyword\">THEN</span> <span class=\"string\">&#x27;B등급&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">ELSE</span> <span class=\"string\">&#x27;A등급&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">END</span> <span class=\"keyword\">AS</span> salary_grade</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 조건식</span></span><br><span class=\"line\"><span class=\"comment\">---- TRUE, FALSE, UNKNOWN 세가지 타입으로 반환됨</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 비교 조건식</span></span><br><span class=\"line\"><span class=\"comment\">-- 분석가, DB 데이터를 추출할 시, 서브쿼리</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    employee_id</span><br><span class=\"line\">    , salary</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> salary <span class=\"operator\">=</span> <span class=\"keyword\">ANY</span>(<span class=\"number\">2000</span>, <span class=\"number\">3000</span>, <span class=\"number\">4000</span>)</span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> employee_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- ANY를 OR로 바꿀 경우(길어짐)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    employee_id</span><br><span class=\"line\">    , salary</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> salary <span class=\"operator\">=</span> <span class=\"number\">2000</span> <span class=\"keyword\">or</span> salary <span class=\"operator\">=</span> <span class=\"number\">3000</span> <span class=\"keyword\">or</span> salary <span class=\"operator\">=</span> <span class=\"number\">4000</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> employee_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- ALL 조건은 AND 조건과 비슷함</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    employee_id</span><br><span class=\"line\">    , salary</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> salary <span class=\"operator\">=</span> <span class=\"keyword\">ALL</span>(<span class=\"number\">2000</span>, <span class=\"number\">3000</span>, <span class=\"number\">4000</span>)</span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> employee_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- ANY = OR / ALL = AND</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- SOME</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    employee_id,</span><br><span class=\"line\">    salary</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> salary <span class=\"operator\">=</span> <span class=\"keyword\">SOME</span>(<span class=\"number\">2000</span>, <span class=\"number\">3000</span>, <span class=\"number\">4000</span>)</span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> employee_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- NOT 조건식</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    employee_id,</span><br><span class=\"line\">    salary</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">NOT</span>(salary <span class=\"operator\">&gt;=</span> <span class=\"number\">2500</span>)</span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> employee_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- NULL 조건식</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    employee_id,</span><br><span class=\"line\">    salary</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> salary <span class=\"keyword\">BETWEEN</span> <span class=\"number\">2000</span> <span class=\"keyword\">AND</span> <span class=\"number\">2500</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> employee_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- IN 조건식</span></span><br><span class=\"line\"><span class=\"comment\">-- 조건절에 명시한 값이 포함된 건을 반환하는데 앞에서 배웠던 ANY와 비슷하다</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    employee_id</span><br><span class=\"line\">    , salary</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> salary <span class=\"keyword\">IN</span>(<span class=\"number\">2000</span>, <span class=\"number\">3000</span>, <span class=\"number\">4000</span>)</span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> employee_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- NOT IN</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    employee_id</span><br><span class=\"line\">    , salary</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> salary <span class=\"keyword\">NOT</span> <span class=\"keyword\">IN</span>(<span class=\"number\">2000</span>, <span class=\"number\">3000</span>, <span class=\"number\">4000</span>)</span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> employee_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- EXISTS 조건식(IN과 비슷함)</span></span><br><span class=\"line\"><span class=\"comment\">-- &quot;서브쿼리&quot;만 올 수 있음.</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> department_id, department_name</span><br><span class=\"line\">    <span class=\"keyword\">FROM</span> departments a</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">EXISTS</span> (<span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span></span><br><span class=\"line\">                <span class=\"keyword\">FROM</span> employees b</span><br><span class=\"line\">                <span class=\"keyword\">WHERE</span> a.department_id <span class=\"operator\">=</span> b.department_id</span><br><span class=\"line\">                <span class=\"keyword\">AND</span> b.salary <span class=\"operator\">&gt;</span> <span class=\"number\">3000</span>)</span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> a.department_name;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- **이번주는 서브쿼리에 초점 맞춰서 공부할 것**</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- Like 조건식</span></span><br><span class=\"line\"><span class=\"comment\">-- 문자열의 패턴을 검색해서 사용하는 조건식</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    emp_name</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> emp_name <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;A%&#x27;</span>  <span class=\"comment\">-- &#x27;%A%&#x27; 로도 바꿔보고 &#x27;%A&#x27; 로도 바꿔보고~ &#x27;__A&#x27;로도 해보고</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> emp_name;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 4장은 굳이 리뷰 안해도 된다</span></span><br><span class=\"line\"><span class=\"comment\">-- 4장 숫자함수</span></span><br><span class=\"line\"><span class=\"comment\">-- p.126</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">ABS</span>(<span class=\"number\">10</span>), <span class=\"built_in\">ABS</span>(<span class=\"number\">-10</span>), <span class=\"built_in\">ABS</span>(<span class=\"number\">-10.123</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;   <span class=\"comment\">-- 간단한 함수 테스트하고싶을때 DUAL 씀</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 정수 반환</span></span><br><span class=\"line\"><span class=\"comment\">-- CEIL : 올림</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">CEIL</span>(<span class=\"number\">10.123</span>), <span class=\"built_in\">CEIL</span>(<span class=\"number\">10.541</span>), <span class=\"built_in\">CEIL</span>(<span class=\"number\">11.001</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- FLOOR : 내림</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">FLOOR</span>(<span class=\"number\">10.123</span>), <span class=\"built_in\">FLOOR</span>(<span class=\"number\">10.541</span>), <span class=\"built_in\">FLOOR</span>(<span class=\"number\">11.001</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- ROUND : 반올림(뒤에 ,숫자 하면 그 자리수만큼 반올림)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ROUND(<span class=\"number\">10.123</span>, <span class=\"number\">2</span>), ROUND(<span class=\"number\">10.541</span>, <span class=\"number\">3</span>), ROUND(<span class=\"number\">11.001</span>, <span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- TRUNC</span></span><br><span class=\"line\"><span class=\"comment\">-- 반올림 안함.소수점 절삭, 자리수 지정 가능</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> TRUNC(<span class=\"number\">115.155</span>), TRUNC(<span class=\"number\">115.155</span>, <span class=\"number\">1</span>), TRUNC(<span class=\"number\">115.155</span>, <span class=\"number\">2</span>), TRUNC(<span class=\"number\">115.155</span>, <span class=\"number\">-1</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- POWER(제곱 함수)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">POWER</span>(<span class=\"number\">3</span>,<span class=\"number\">2</span>),<span class=\"built_in\">POWER</span>(<span class=\"number\">3</span>,<span class=\"number\">3</span>),<span class=\"built_in\">POWER</span>(<span class=\"number\">3</span>,<span class=\"number\">3.001</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- SQRT(제곱근 반환)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">SQRT</span>(<span class=\"number\">2</span>), <span class=\"built_in\">SQRT</span>(<span class=\"number\">5</span>), <span class=\"built_in\">SQRT</span>(<span class=\"number\">9</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 문자열 데이터 전처리</span></span><br><span class=\"line\"><span class=\"comment\">-- 데이터를 용량을 줄이는데 가장 효과적인 것은 문자열 데이터 전처리이다.</span></span><br><span class=\"line\"><span class=\"comment\">-- 책으로 보기엔 애매하므로 잘 정리해서 블로그 올려보기</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- INITCAP : 첫문자를 대문자로 나머지는 소문자로 변환</span></span><br><span class=\"line\"><span class=\"comment\">-- 인식 기준은 공백과 알파벳(숫자포함)을 제외한 문자이다.</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> INITCAP(<span class=\"string\">&#x27;never say goodbye&#x27;</span>), INITCAP(<span class=\"string\">&#x27;never6say*good가bye&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- LOWER : 매개변수로 들어오는 문자를 모두 소문자로, UPPDER 함수는 대문자로 반환</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">LOWER</span>(<span class=\"string\">&#x27;NEVER SAY GOODBYE&#x27;</span>), <span class=\"built_in\">UPPER</span>(<span class=\"string\">&#x27;never say goodbye&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- CONCAT(char1, char2) : &#x27;||&#x27; 연산자와 비슷</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> CONCAT(<span class=\"string\">&#x27;I Have&#x27;</span>, <span class=\"string\">&#x27; A Dream&#x27;</span>), <span class=\"string\">&#x27;I Have&#x27;</span> <span class=\"operator\">||</span> <span class=\"string\">&#x27; A Dream&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- SUBSTR : 문자열 자르기(자주사용하는 함수)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> SUBSTR(<span class=\"string\">&#x27;ABCDEFG&#x27;</span>, <span class=\"number\">1</span>, <span class=\"number\">4</span>), SUBSTR(<span class=\"string\">&#x27;ABCDEFG&#x27;</span>, <span class=\"number\">-1</span>, <span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 글자 1개당 3Byte씩 인식(교재는 2Byte씩 인식)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> SUBSTRB(<span class=\"string\">&#x27;ABCDEFG&#x27;</span>, <span class=\"number\">1</span>, <span class=\"number\">6</span>), SUBSTRB(<span class=\"string\">&#x27;가나다라마바사&#x27;</span>, <span class=\"number\">1</span>, <span class=\"number\">6</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- LTRIM, RTRIM 함수</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> </span><br><span class=\"line\">    LTRIM(<span class=\"string\">&#x27;ABCDEFGABC&#x27;</span>, <span class=\"string\">&#x27;ABC&#x27;</span>),</span><br><span class=\"line\">    RTRIM(<span class=\"string\">&#x27;ABCDEFGABC&#x27;</span>, <span class=\"string\">&#x27;ABC&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 날짜 함수(p.138)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> SYSDATE, SYSTIMESTAMP <span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- ADD_MONTHS</span></span><br><span class=\"line\"><span class=\"comment\">-- ADD_MONTHS 함수, 매개변수로 들어온 날짜, integer 만큼 월을 더함</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ADD_MONTHS(SYSDATE, <span class=\"number\">1</span>)<span class=\"keyword\">FROM</span> DUAL; <span class=\"comment\">-- 1월 증가</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ADD_MONTHS(SYSDATE, <span class=\"number\">-1</span>)<span class=\"keyword\">FROM</span> DUAL; <span class=\"comment\">-- 1월 감소</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> MONTHS_BETWEEN(SYSDATE, ADD_MONTHS(SYSDATE,<span class=\"number\">1</span>))mon1</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- LAST_DATE : date 날짜를 기준으로 해당 월의 마지막 일자를 반환</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> LAST_DAY(SYSDATE) <span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- NEXT_DAY : 다음 주 주중 일자를 반환</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> NEXT_DAY(SYSDATE, <span class=\"string\">&#x27;금요일&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.141 형변환</span></span><br><span class=\"line\"><span class=\"comment\">-- TO_CHAR(숫자 혹은 날짜, format)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> TO_CHAR(<span class=\"number\">123456789</span>, <span class=\"string\">&#x27;999,999,999&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> TO_CHAR(SYSDATE, <span class=\"string\">&#x27;YYYY-MM-DD&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 날짜 변환 형식</span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">--날짜 포맷</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;YYYYMMDD&#x27;),--20191130</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;YYYY-MM-DD&#x27;),--2019-11-30</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;YYYY/MM/DD&#x27;),--2019/11/30</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;YYYY&#x27;),--2019</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;YY&#x27;),--19</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;MM&#x27;),--11</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;MON&#x27;),--11월</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;D&#x27;),--7 (주중의 일을 1~7로 표시(일요일 = 1)</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;DD&#x27;),--30</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;DDD&#x27;),--334 (1년기준 일 수)</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;DAY&#x27;),--토요일 (요일 표시)</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;DY&#x27;) --토 (요일을 한자리로 표시)</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;WW&#x27;), -- 48 (일년 기준 주를 00 ~ 53 형태로 표시)</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;W&#x27;) -- 5 (한달 기준 몇번째 주)</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;DL&#x27;),--2019년 11월 30일 토요일</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">--사간 포맷</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;AM&#x27;),--오전</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;PM&#x27;),--오후</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;HH&#x27;), --10 (시간을 0 ~ 12 형태로 표시)</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;HH24&#x27;), --20 (시간을 0 ~ 24 형태로 표시)</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;MI&#x27;), --03 (분을 00 ~ 59 형태로 표시)</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;SS&#x27;) --10 (초을 01 ~ 59 형태로 표시)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">--세기 포맷</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;CC&#x27;), --21 (세기)</span></span><br><span class=\"line\"><span class=\"comment\">TO_CHAR(SYSDATE,&#x27;BC&#x27;), --서기</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 문자를 숫자로 변환</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> TO_NUMBER(<span class=\"string\">&#x27;123456&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- NULL 관련함수(중요)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> manager_id, employee_id <span class=\"keyword\">FROM</span> employees;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- NVL : 표현식1이 NULL 일 때, 표현식2를 반환함</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> NVL(manager_id, employee_id)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> manager_id <span class=\"keyword\">IS</span> <span class=\"keyword\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- NVL2 : 표현식1이 NULL이 아니면, 표현식2 출력,</span></span><br><span class=\"line\"><span class=\"comment\">--        표현식2가 NULL이면, 표현식3을 출력</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> employee_id <span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- salary2에 NULL 이면 salary 값을 가져오고,</span></span><br><span class=\"line\"><span class=\"comment\">--           NULL 이 아니면 salary x commission_pct 값을 salary2에 넣어라</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> employee_id</span><br><span class=\"line\">        , salary</span><br><span class=\"line\">        , commission_pct</span><br><span class=\"line\">        , NVL2(commission_pct, salary <span class=\"operator\">+</span> (salary <span class=\"operator\">*</span> commission_pct), salary)<span class=\"keyword\">AS</span> salary2</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> employee_id <span class=\"keyword\">IN</span> (<span class=\"number\">118</span>, <span class=\"number\">179</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- COALESCE(expr1, expr2)</span></span><br><span class=\"line\"><span class=\"comment\">-- 매개변수로 들어오는 표현식에서 NULL이 아닌 첫 번째 표현식 반환</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    employee_id</span><br><span class=\"line\">    , salary</span><br><span class=\"line\">    , commission_pct</span><br><span class=\"line\">    , <span class=\"built_in\">COALESCE</span>(salary <span class=\"operator\">*</span> commission_pct, salary)<span class=\"keyword\">as</span> salary2</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- DECODE</span></span><br><span class=\"line\"><span class=\"comment\">-- 파이썬의 IF-ELIF-ELIF-ELIF-ELSE 느낌</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> sales</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> prod_id,</span><br><span class=\"line\">        DECODE(channel_id, <span class=\"number\">3</span>, <span class=\"string\">&#x27;Direct&#x27;</span>,</span><br><span class=\"line\">                           <span class=\"number\">9</span>, <span class=\"string\">&#x27;Direct&#x27;</span>,</span><br><span class=\"line\">                           <span class=\"number\">5</span>, <span class=\"string\">&#x27;Indirect&#x27;</span>,</span><br><span class=\"line\">                           <span class=\"number\">4</span>, <span class=\"string\">&#x27;Indirect&#x27;</span>,</span><br><span class=\"line\">                              <span class=\"string\">&#x27;Others&#x27;</span>) decodes</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> sales</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> rownum <span class=\"operator\">&lt;</span> <span class=\"number\">10</span>;</span><br></pre></td></tr></table></figure>"},{"title":"Oracle day0721","output":{"html_document":{"keep_md":true}},"thumbnailImage":"oracle.png","thumbnailImagePosition":"left","date":"2022-07-21T12:16:21.000Z","_content":"- GROUP BY 절, HAVING 절\n- 평균, 최소/댓값, 분산, 표준편차\n- ROLLUP, CUBE\n- 교/합/차집합\n- 세미/셀프/일반/외부 조인\n- ANSI 문법 조인\n- 서브 쿼리\n<!-- excerpt -->\n- 챗봇 프로젝트 주제\n    + 법률, 금융, 부동산\n<!-- more -->\n\n\n# day0721\n\n```sql\n\n\n-- p.152\n-- 기본집계함수\nSELECT count(*) FROM employees; \n\nSELECT count(employee_id) FROM employees;\n\n-- NULL은 카운트를 하지 않는다.\nSELECT count(department_id) FROM employees;  -- 106개\n\n-- DISTINCT : 중복값 제외한 값\nSELECT count(DISTINCT department_id)\nFROM employees;\n\nSELECT DISTINCT department_id\nFROM employees\nORDER BY 1;\n\n-- p.154\n-- 기초통계량\n-- 합계, 평균, 최소, 최대, 분산, 표준편차\nSELECT SUM(salary)\nFROM employees;\n\nSELECT SUM(salary), SUM(DISTINCT salary)\nFROM employees;\n\n-- 평균 값 반환\nSELECT AVG(salary), AVG(DISTINCT salary)\nFROM employees;\n\n-- 최소, 최댓값 반환\nSELECT MIN(DISTINCT salary), MAX(DISTINCT salary)\nFROM employees;\n\n-- 분산, 표준편차\nSELECT VARIANCE(salary), STDDEV(salary)\nFROM employees;\n\n-- GROUP BY 절과 HAVING 절\n-- 그 전까지는 전체 데이터를 기준으로 집계\n-- 특정그룹으로 묶어서 데이터를 집계할 때 GROUP BY 절 사용\nSELECT department_id, \n       SUM(salary)\nFROM employees\nGROUP BY department_id\nORDER BY department_id;\n\nSELECT *\nFROM kor_loan_status; -- 가계대출 단위는 10억\n\n-- 2013년 11월 총 잔액 구하기\nSELECT period, \n       region, \n       SUM(loan_jan_amt) totl_jan\nFROM kor_loan_status\nWHERE period LIKE '2013%'\nGROUP BY period, region\nORDER BY period, region;\n\nSELECT period, \n       region, \n       SUM(loan_jan_amt) totl_jan\nFROM kor_loan_status\nWHERE period = '201311'\nGROUP BY period, region\nHAVING SUM(loan_jan_amt)>100000\nORDER BY region;\n\n-- ROLLUP\n-- 2013년도 대출 종류별 총 잔액\nSELECT period, \n       gubun, \n       SUM(loan_jan_amt) totl_jan\nFROM kor_loan_status\nWHERE period LIKE '2013%'\nGROUP BY period, gubun\nORDER BY period;\n\n--\nSELECT period, \n       gubun, \n       SUM(loan_jan_amt) totl_jan\nFROM kor_loan_status\nWHERE period LIKE '2013%'\nGROUP BY ROLLUP(period, gubun);\n\nSELECT period, \n       gubun, \n       SUM(loan_jan_amt) totl_jan\nFROM kor_loan_status\nWHERE period LIKE '2013%'\nGROUP BY period, ROLLUP(gubun );\n\nSELECT period, \n       gubun, \n       SUM(loan_jan_amt) totl_jan\nFROM kor_loan_status\nWHERE period LIKE '2013%'\nGROUP BY ROLLUP(period), gubun;\n\n-- CUBE\n\nSELECT period, \n       gubun, \n       SUM(loan_jan_amt) totl_jan\nFROM kor_loan_status\nWHERE period LIKE '2013%'\nGROUP BY CUBE(period, gubun);\n\nSELECT period, \n       gubun, \n       SUM(loan_jan_amt) totl_jan\nFROM kor_loan_status\nWHERE period LIKE '2013%'\nGROUP BY period, CUBE(gubun);\n\nCREATE TABLE exp_goods_asia (\n           country VARCHAR2(10),\n           seq     NUMBER,\n           goods   VARCHAR2(80));\n\n    INSERT INTO exp_goods_asia VALUES ('한국', 1, '원유제외 석유류');\n    INSERT INTO exp_goods_asia VALUES ('한국', 2, '자동차');\n    INSERT INTO exp_goods_asia VALUES ('한국', 3, '전자집적회로');\n    INSERT INTO exp_goods_asia VALUES ('한국', 4, '선박');\n    INSERT INTO exp_goods_asia VALUES ('한국', 5,  'LCD');\n    INSERT INTO exp_goods_asia VALUES ('한국', 6,  '자동차부품');\n    INSERT INTO exp_goods_asia VALUES ('한국', 7,  '휴대전화');\n    INSERT INTO exp_goods_asia VALUES ('한국', 8,  '환식탄화수소');\n    INSERT INTO exp_goods_asia VALUES ('한국', 9,  '무선송신기 디스플레이 부속품');\n    INSERT INTO exp_goods_asia VALUES ('한국', 10,  '철 또는 비합금강');\n\n    INSERT INTO exp_goods_asia VALUES ('일본', 1, '자동차');\n    INSERT INTO exp_goods_asia VALUES ('일본', 2, '자동차부품');\n    INSERT INTO exp_goods_asia VALUES ('일본', 3, '전자집적회로');\n    INSERT INTO exp_goods_asia VALUES ('일본', 4, '선박');\n    INSERT INTO exp_goods_asia VALUES ('일본', 5, '반도체웨이퍼');\n    INSERT INTO exp_goods_asia VALUES ('일본', 6, '화물차');\n    INSERT INTO exp_goods_asia VALUES ('일본', 7, '원유제외 석유류');\n    INSERT INTO exp_goods_asia VALUES ('일본', 8, '건설기계');\n    INSERT INTO exp_goods_asia VALUES ('일본', 9, '다이오드, 트랜지스터');\n    INSERT INTO exp_goods_asia VALUES ('일본', 10, '기계류');\ncommit;\n\nSELECT goods\nFROM exp_goods_asia\nWHERE country = '한국'\nORDER BY seq;\n\nSELECT goods\nFROM exp_goods_asia\nWHERE country = '일본'\nORDER BY seq;\n\n-- 두 국가가 겹치는 수출품목은 한번만 조회가 되도록 함\n-- UNION : 합집합\n\nSELECT goods\nFROM exp_goods_asia\nWHERE country = '한국'\nUNION\nSELECT goods\nFROM exp_goods_asia\nWHERE country = '일본';\n-- 선박, 자동차 등등 겹치는 품목들을 1번만 조회되도록 함\n\n-- UNION ALL : 중복되는 항목도 모두 조회\nSELECT goods\nFROM exp_goods_asia\nWHERE country = '한국'\nUNION ALL\nSELECT goods\nFROM exp_goods_asia\nWHERE country = '일본';\n\n-- INTERSECT : 교집합\nSELECT goods\nFROM exp_goods_asia\nWHERE country = '한국'\nINTERSECT\nSELECT goods\nFROM exp_goods_asia\nWHERE country = '일본';\n\n-- MINUS : 차집합\nSELECT goods\nFROM exp_goods_asia\nWHERE country = '한국'\nMINUS\nSELECT goods\nFROM exp_goods_asia\nWHERE country = '일본';\n\n-- GROUPING SETS 절\nSELECT\n    PERIOD, gubun, SUM(loan_jan_amt) totl_jan\nFROM kor_loan_status\nWHERE period LIKE '2013%'\nGROUP BY GROUPING SETS(period, gubun);\n-- 기타대출 총액 / 주택담보대출 총액 / 2013년10월 총액 / 2013년11월 총액\n\nSELECT\n    PERIOD, gubun, region, SUM(loan_jan_amt) totl_jan\nFROM kor_loan_status\nWHERE period LIKE '2013%'\n    AND region IN('서울', '경기')\nGROUP BY GROUPING SETS(period, (gubun,region));\n\n-- 프로그래머스(SQL 연습) https://programmers.co.kr/\n\n-- p.177\n-- 조인의 종류\n\n-- 동등 조인\nSELECT a.employee_id,\n       a.emp_name,\n       a.department_id,\n       b.department_name\nFROM employees a,\n     departments b\nWHERE a.department_id = b.department_id;\n\n-- 세미 조인 : 서브쿼리를 이용해 서브쿼리에 존재하는 데이터만 메인쿼리에서 추출\n-- EXISTS 사용(조건을 만족하는 데이터가 있으면 결과를 즉시 반환)\nSELECT\n    department_id, \n    department_name\nFROM departments a\nWHERE EXISTS(SELECT *\n             FROM employees b\n             WHERE a.department_id = b.department_id\n             AND b.salary > 3000);\n\n-- IN 사용(OR 조건으로 변환할 수 있다.)\n-- 주의!! 서브 쿼리 내에 두 테이블의 조인 조건이 없다는 점\nSELECT\n    department_id, \n    department_name\nFROM departments a\nWHERE a. department_id IN(SELECT b.department_id\n                          FROM employees b\n                          WHERE a.department_id = b.department_id\n                          AND b.salary > 3000);\n\n-- 일반 조인문으로 변환했을 시.. 결과가 많아진다.\n--            |\n--            V\nSELECT \n    a.department_id,\n    a.department_name\nFROM departments a, employees b\nWHERE a.department_id = b.department_id\n    AND b.salary > 3000\nORDER BY a.department_name;\n\n-- 안티 조인 : 세미 조인의 반대개념(NOT IN, NOT EXISTS 사용)\n-- manager_id 가 NULL 값이 아닌 애들 표현\nSELECT a.employee_id, \n       a.emp_name, \n       a.department_id,\n       b.department_name\nFROM employees a,\n     departments b\nWHERE a.department_id = b.department_id\n    AND a.department_id NOT IN(SELECT department_id\n                                FROM departments\n                                WHERE manager_id IS NULL);\n\n-- p.180\nSELECT count(*)\nFROM employees a\nWHERE NOT EXISTS(SELECT 1\n                 FROM departments c\n                 WHERE a.department_id = c.department_id\n                 AND manager_id IS NULL);\n\n-- 셀프 조인\n-- 조인을 하려면 두개의 테이블이 필요했는데, 셀프 조인은 하나의 테이블을 두개로 분리한다\nSELECT\n    a.employee_id,\n    a.emp_name,\n    b.employee_id,\n    b.emp_name,\n    a.department_id\nFROM\n    employees a,\n    employees b\nWHERE a.employee_id < b. employee_id\n    AND a.department_id = b.department_id\n    AND a.department_id = 20;\n-- 같은 부서번호를 가진 사원 중 A사원번호가 B사원보다 작은 건 조회\n\n-- p.181\n-- 일반 조인\nSELECT \n    a.department_id,\n    a.department_name,\n    b.job_id,\n    b.department_id\nFROM departments a,\n     job_history b\nWHERE a.department_id = b.department_id;\n\n-- 외부 조인\nSELECT \n    a.department_id,\n    a.department_name,\n    b.job_id,\n    b.department_id\nFROM departments a,\n     job_history b\nWHERE a.department_id = b.department_id(+);\n\nSELECT \n    a.employee_id,\n    a.emp_name,\n    b.job_id,\n    b.department_id\nFROM employees a,\n     job_history b\nWHERE a.employee_id = b.employee_id(+)\n    AND a.department_id = b.department_id;\n\n-- ANSI 조인\nSELECT \n    a.employee_id\n    , a.emp_name\n    , b.department_id\n    , b.department_name\nFROM employees a\nINNER JOIN departments b\n    ON (a.department_id = b.department_id)\nWHERE a.hire_Date >= TO_DATE('2003-01-01', 'YYYY-MM-DD');\n\n-- p.187\n-- 외부조인\nSELECT \n    a.employee_id\n    , a.emp_name\n    , b.job_id\n    , b.department_id\nFROM employees a\nRIGHT OUTER JOIN job_history b\n    ON (a.employee_id = b.employee_id \n            and a.department_id = b.department_id);\n            \n-- RIGHT JOIN : 결측치까지 싹 다 조인\nSELECT \n    a.employee_id\n    , a.emp_name\n    , b.job_id\n    , b.department_id\nFROM job_history b\nRIGHT OUTER JOIN employees a\n    ON (a.employee_id       = b.employee_id\n        and a.department_id = b.department_id);\n\n-- 서브 쿼리\n-- SQL수업의 하이라이트!!\n-- 서브쿼리 사용가능 -> SELECT, FROM, WHERE 에서 사용가능\n\n-- 배치 자동화\nSELECT count(*)\nFROM employees\nWHERE salary >= (SELECT AVG(salary)FROM employees); -- () 안이 변수같은 느낌\n\nSELECT count(*)\nFROM employees\nWHERE salary >= -- 서브쿼리에서 출력되는 값이 단일 행;\n\n-- IN(복수 결괏값을 넣을 수 있음)\nSELECT count(*)\nFROM employees\nWHERE department_id IN (SELECT department_id\n                        FROM departments\n                        WHERE parent_id IS NULL);\n\nSELECT employee_id,\n       emp_name,\n       job_id\nFROM employees\nWHERE (employee_id, job_id) IN (SELECT employee_id,\n                                       job_id\n                                FROM job_history);\n\n-- 서브 쿼리는 SELECT 뿐만 아니라 UPDATE, DELETE 문에서도 사용할 수 있다.\n\n-- p.194\nSELECT a.employee_id,\n       (SELECT b.emp_name\n       FROM employees b\n       WHERE a.employee_id = b.employee_id) AS emp_name,\n       a.department_id,\n       (SELECT b.department_name\n       FROM departments b\n       WHERE a.department_id = b.department_id) AS dep_name\nFROM job_history a;\n\n-- 서브쿼리(서브쿼리2(서브쿼리3(...))) 이런식으로 무한정 증식할 수 있음\nSELECT a.department_id,\n       a.department_name\nFROM departments a\nWHERE EXISTS (SELECT 1\n              FROM employees b\n              WHERE a.department_id = b.department_id\n              AND b.salary > (SELECT AVG(salary)\n                              FROM employees)\n             );\n\n-- p.196\n-- 메인 쿼리 : 사원 테이블의 사원들의 부서별 평균 급여를 조회\n-- 서브 쿼리 : 상위 부서가 기획부(부서번호가 90)에 속함\nSELECT department_id, AVG(salary)\nFROM employees\nWHERE department_id IN (SELECT department_id\n                        FROM departments\n                        WHERE parent_id = 90)\nGROUP BY department_id;\n```","source":"_posts/day0721.md","raw":"---\ntitle: \"Oracle day0721\"\noutput:\n  html_document:\n    keep_md: true\ncategories: Oracle\nthumbnailImage: oracle.png\nthumbnailImagePosition: left\ndate: '2022-07-21 21:16:21'\n---\n- GROUP BY 절, HAVING 절\n- 평균, 최소/댓값, 분산, 표준편차\n- ROLLUP, CUBE\n- 교/합/차집합\n- 세미/셀프/일반/외부 조인\n- ANSI 문법 조인\n- 서브 쿼리\n<!-- excerpt -->\n- 챗봇 프로젝트 주제\n    + 법률, 금융, 부동산\n<!-- more -->\n\n\n# day0721\n\n```sql\n\n\n-- p.152\n-- 기본집계함수\nSELECT count(*) FROM employees; \n\nSELECT count(employee_id) FROM employees;\n\n-- NULL은 카운트를 하지 않는다.\nSELECT count(department_id) FROM employees;  -- 106개\n\n-- DISTINCT : 중복값 제외한 값\nSELECT count(DISTINCT department_id)\nFROM employees;\n\nSELECT DISTINCT department_id\nFROM employees\nORDER BY 1;\n\n-- p.154\n-- 기초통계량\n-- 합계, 평균, 최소, 최대, 분산, 표준편차\nSELECT SUM(salary)\nFROM employees;\n\nSELECT SUM(salary), SUM(DISTINCT salary)\nFROM employees;\n\n-- 평균 값 반환\nSELECT AVG(salary), AVG(DISTINCT salary)\nFROM employees;\n\n-- 최소, 최댓값 반환\nSELECT MIN(DISTINCT salary), MAX(DISTINCT salary)\nFROM employees;\n\n-- 분산, 표준편차\nSELECT VARIANCE(salary), STDDEV(salary)\nFROM employees;\n\n-- GROUP BY 절과 HAVING 절\n-- 그 전까지는 전체 데이터를 기준으로 집계\n-- 특정그룹으로 묶어서 데이터를 집계할 때 GROUP BY 절 사용\nSELECT department_id, \n       SUM(salary)\nFROM employees\nGROUP BY department_id\nORDER BY department_id;\n\nSELECT *\nFROM kor_loan_status; -- 가계대출 단위는 10억\n\n-- 2013년 11월 총 잔액 구하기\nSELECT period, \n       region, \n       SUM(loan_jan_amt) totl_jan\nFROM kor_loan_status\nWHERE period LIKE '2013%'\nGROUP BY period, region\nORDER BY period, region;\n\nSELECT period, \n       region, \n       SUM(loan_jan_amt) totl_jan\nFROM kor_loan_status\nWHERE period = '201311'\nGROUP BY period, region\nHAVING SUM(loan_jan_amt)>100000\nORDER BY region;\n\n-- ROLLUP\n-- 2013년도 대출 종류별 총 잔액\nSELECT period, \n       gubun, \n       SUM(loan_jan_amt) totl_jan\nFROM kor_loan_status\nWHERE period LIKE '2013%'\nGROUP BY period, gubun\nORDER BY period;\n\n--\nSELECT period, \n       gubun, \n       SUM(loan_jan_amt) totl_jan\nFROM kor_loan_status\nWHERE period LIKE '2013%'\nGROUP BY ROLLUP(period, gubun);\n\nSELECT period, \n       gubun, \n       SUM(loan_jan_amt) totl_jan\nFROM kor_loan_status\nWHERE period LIKE '2013%'\nGROUP BY period, ROLLUP(gubun );\n\nSELECT period, \n       gubun, \n       SUM(loan_jan_amt) totl_jan\nFROM kor_loan_status\nWHERE period LIKE '2013%'\nGROUP BY ROLLUP(period), gubun;\n\n-- CUBE\n\nSELECT period, \n       gubun, \n       SUM(loan_jan_amt) totl_jan\nFROM kor_loan_status\nWHERE period LIKE '2013%'\nGROUP BY CUBE(period, gubun);\n\nSELECT period, \n       gubun, \n       SUM(loan_jan_amt) totl_jan\nFROM kor_loan_status\nWHERE period LIKE '2013%'\nGROUP BY period, CUBE(gubun);\n\nCREATE TABLE exp_goods_asia (\n           country VARCHAR2(10),\n           seq     NUMBER,\n           goods   VARCHAR2(80));\n\n    INSERT INTO exp_goods_asia VALUES ('한국', 1, '원유제외 석유류');\n    INSERT INTO exp_goods_asia VALUES ('한국', 2, '자동차');\n    INSERT INTO exp_goods_asia VALUES ('한국', 3, '전자집적회로');\n    INSERT INTO exp_goods_asia VALUES ('한국', 4, '선박');\n    INSERT INTO exp_goods_asia VALUES ('한국', 5,  'LCD');\n    INSERT INTO exp_goods_asia VALUES ('한국', 6,  '자동차부품');\n    INSERT INTO exp_goods_asia VALUES ('한국', 7,  '휴대전화');\n    INSERT INTO exp_goods_asia VALUES ('한국', 8,  '환식탄화수소');\n    INSERT INTO exp_goods_asia VALUES ('한국', 9,  '무선송신기 디스플레이 부속품');\n    INSERT INTO exp_goods_asia VALUES ('한국', 10,  '철 또는 비합금강');\n\n    INSERT INTO exp_goods_asia VALUES ('일본', 1, '자동차');\n    INSERT INTO exp_goods_asia VALUES ('일본', 2, '자동차부품');\n    INSERT INTO exp_goods_asia VALUES ('일본', 3, '전자집적회로');\n    INSERT INTO exp_goods_asia VALUES ('일본', 4, '선박');\n    INSERT INTO exp_goods_asia VALUES ('일본', 5, '반도체웨이퍼');\n    INSERT INTO exp_goods_asia VALUES ('일본', 6, '화물차');\n    INSERT INTO exp_goods_asia VALUES ('일본', 7, '원유제외 석유류');\n    INSERT INTO exp_goods_asia VALUES ('일본', 8, '건설기계');\n    INSERT INTO exp_goods_asia VALUES ('일본', 9, '다이오드, 트랜지스터');\n    INSERT INTO exp_goods_asia VALUES ('일본', 10, '기계류');\ncommit;\n\nSELECT goods\nFROM exp_goods_asia\nWHERE country = '한국'\nORDER BY seq;\n\nSELECT goods\nFROM exp_goods_asia\nWHERE country = '일본'\nORDER BY seq;\n\n-- 두 국가가 겹치는 수출품목은 한번만 조회가 되도록 함\n-- UNION : 합집합\n\nSELECT goods\nFROM exp_goods_asia\nWHERE country = '한국'\nUNION\nSELECT goods\nFROM exp_goods_asia\nWHERE country = '일본';\n-- 선박, 자동차 등등 겹치는 품목들을 1번만 조회되도록 함\n\n-- UNION ALL : 중복되는 항목도 모두 조회\nSELECT goods\nFROM exp_goods_asia\nWHERE country = '한국'\nUNION ALL\nSELECT goods\nFROM exp_goods_asia\nWHERE country = '일본';\n\n-- INTERSECT : 교집합\nSELECT goods\nFROM exp_goods_asia\nWHERE country = '한국'\nINTERSECT\nSELECT goods\nFROM exp_goods_asia\nWHERE country = '일본';\n\n-- MINUS : 차집합\nSELECT goods\nFROM exp_goods_asia\nWHERE country = '한국'\nMINUS\nSELECT goods\nFROM exp_goods_asia\nWHERE country = '일본';\n\n-- GROUPING SETS 절\nSELECT\n    PERIOD, gubun, SUM(loan_jan_amt) totl_jan\nFROM kor_loan_status\nWHERE period LIKE '2013%'\nGROUP BY GROUPING SETS(period, gubun);\n-- 기타대출 총액 / 주택담보대출 총액 / 2013년10월 총액 / 2013년11월 총액\n\nSELECT\n    PERIOD, gubun, region, SUM(loan_jan_amt) totl_jan\nFROM kor_loan_status\nWHERE period LIKE '2013%'\n    AND region IN('서울', '경기')\nGROUP BY GROUPING SETS(period, (gubun,region));\n\n-- 프로그래머스(SQL 연습) https://programmers.co.kr/\n\n-- p.177\n-- 조인의 종류\n\n-- 동등 조인\nSELECT a.employee_id,\n       a.emp_name,\n       a.department_id,\n       b.department_name\nFROM employees a,\n     departments b\nWHERE a.department_id = b.department_id;\n\n-- 세미 조인 : 서브쿼리를 이용해 서브쿼리에 존재하는 데이터만 메인쿼리에서 추출\n-- EXISTS 사용(조건을 만족하는 데이터가 있으면 결과를 즉시 반환)\nSELECT\n    department_id, \n    department_name\nFROM departments a\nWHERE EXISTS(SELECT *\n             FROM employees b\n             WHERE a.department_id = b.department_id\n             AND b.salary > 3000);\n\n-- IN 사용(OR 조건으로 변환할 수 있다.)\n-- 주의!! 서브 쿼리 내에 두 테이블의 조인 조건이 없다는 점\nSELECT\n    department_id, \n    department_name\nFROM departments a\nWHERE a. department_id IN(SELECT b.department_id\n                          FROM employees b\n                          WHERE a.department_id = b.department_id\n                          AND b.salary > 3000);\n\n-- 일반 조인문으로 변환했을 시.. 결과가 많아진다.\n--            |\n--            V\nSELECT \n    a.department_id,\n    a.department_name\nFROM departments a, employees b\nWHERE a.department_id = b.department_id\n    AND b.salary > 3000\nORDER BY a.department_name;\n\n-- 안티 조인 : 세미 조인의 반대개념(NOT IN, NOT EXISTS 사용)\n-- manager_id 가 NULL 값이 아닌 애들 표현\nSELECT a.employee_id, \n       a.emp_name, \n       a.department_id,\n       b.department_name\nFROM employees a,\n     departments b\nWHERE a.department_id = b.department_id\n    AND a.department_id NOT IN(SELECT department_id\n                                FROM departments\n                                WHERE manager_id IS NULL);\n\n-- p.180\nSELECT count(*)\nFROM employees a\nWHERE NOT EXISTS(SELECT 1\n                 FROM departments c\n                 WHERE a.department_id = c.department_id\n                 AND manager_id IS NULL);\n\n-- 셀프 조인\n-- 조인을 하려면 두개의 테이블이 필요했는데, 셀프 조인은 하나의 테이블을 두개로 분리한다\nSELECT\n    a.employee_id,\n    a.emp_name,\n    b.employee_id,\n    b.emp_name,\n    a.department_id\nFROM\n    employees a,\n    employees b\nWHERE a.employee_id < b. employee_id\n    AND a.department_id = b.department_id\n    AND a.department_id = 20;\n-- 같은 부서번호를 가진 사원 중 A사원번호가 B사원보다 작은 건 조회\n\n-- p.181\n-- 일반 조인\nSELECT \n    a.department_id,\n    a.department_name,\n    b.job_id,\n    b.department_id\nFROM departments a,\n     job_history b\nWHERE a.department_id = b.department_id;\n\n-- 외부 조인\nSELECT \n    a.department_id,\n    a.department_name,\n    b.job_id,\n    b.department_id\nFROM departments a,\n     job_history b\nWHERE a.department_id = b.department_id(+);\n\nSELECT \n    a.employee_id,\n    a.emp_name,\n    b.job_id,\n    b.department_id\nFROM employees a,\n     job_history b\nWHERE a.employee_id = b.employee_id(+)\n    AND a.department_id = b.department_id;\n\n-- ANSI 조인\nSELECT \n    a.employee_id\n    , a.emp_name\n    , b.department_id\n    , b.department_name\nFROM employees a\nINNER JOIN departments b\n    ON (a.department_id = b.department_id)\nWHERE a.hire_Date >= TO_DATE('2003-01-01', 'YYYY-MM-DD');\n\n-- p.187\n-- 외부조인\nSELECT \n    a.employee_id\n    , a.emp_name\n    , b.job_id\n    , b.department_id\nFROM employees a\nRIGHT OUTER JOIN job_history b\n    ON (a.employee_id = b.employee_id \n            and a.department_id = b.department_id);\n            \n-- RIGHT JOIN : 결측치까지 싹 다 조인\nSELECT \n    a.employee_id\n    , a.emp_name\n    , b.job_id\n    , b.department_id\nFROM job_history b\nRIGHT OUTER JOIN employees a\n    ON (a.employee_id       = b.employee_id\n        and a.department_id = b.department_id);\n\n-- 서브 쿼리\n-- SQL수업의 하이라이트!!\n-- 서브쿼리 사용가능 -> SELECT, FROM, WHERE 에서 사용가능\n\n-- 배치 자동화\nSELECT count(*)\nFROM employees\nWHERE salary >= (SELECT AVG(salary)FROM employees); -- () 안이 변수같은 느낌\n\nSELECT count(*)\nFROM employees\nWHERE salary >= -- 서브쿼리에서 출력되는 값이 단일 행;\n\n-- IN(복수 결괏값을 넣을 수 있음)\nSELECT count(*)\nFROM employees\nWHERE department_id IN (SELECT department_id\n                        FROM departments\n                        WHERE parent_id IS NULL);\n\nSELECT employee_id,\n       emp_name,\n       job_id\nFROM employees\nWHERE (employee_id, job_id) IN (SELECT employee_id,\n                                       job_id\n                                FROM job_history);\n\n-- 서브 쿼리는 SELECT 뿐만 아니라 UPDATE, DELETE 문에서도 사용할 수 있다.\n\n-- p.194\nSELECT a.employee_id,\n       (SELECT b.emp_name\n       FROM employees b\n       WHERE a.employee_id = b.employee_id) AS emp_name,\n       a.department_id,\n       (SELECT b.department_name\n       FROM departments b\n       WHERE a.department_id = b.department_id) AS dep_name\nFROM job_history a;\n\n-- 서브쿼리(서브쿼리2(서브쿼리3(...))) 이런식으로 무한정 증식할 수 있음\nSELECT a.department_id,\n       a.department_name\nFROM departments a\nWHERE EXISTS (SELECT 1\n              FROM employees b\n              WHERE a.department_id = b.department_id\n              AND b.salary > (SELECT AVG(salary)\n                              FROM employees)\n             );\n\n-- p.196\n-- 메인 쿼리 : 사원 테이블의 사원들의 부서별 평균 급여를 조회\n-- 서브 쿼리 : 상위 부서가 기획부(부서번호가 90)에 속함\nSELECT department_id, AVG(salary)\nFROM employees\nWHERE department_id IN (SELECT department_id\n                        FROM departments\n                        WHERE parent_id = 90)\nGROUP BY department_id;\n```","slug":"day0721","published":1,"updated":"2022-07-21T12:24:05.899Z","_id":"cl5v09ms40002xwu06hpq2nti","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt --></li>\n<li>챗봇 프로젝트 주제<ul>\n<li>법률, 금융, 부동산<span id=\"more\"></span></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"day0721\"><a href=\"#day0721\" class=\"headerlink\" title=\"day0721\"></a>day0721</h1><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.152</span></span><br><span class=\"line\"><span class=\"comment\">-- 기본집계함수</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">count</span>(<span class=\"operator\">*</span>) <span class=\"keyword\">FROM</span> employees; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">count</span>(employee_id) <span class=\"keyword\">FROM</span> employees;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- NULL은 카운트를 하지 않는다.</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">count</span>(department_id) <span class=\"keyword\">FROM</span> employees;  <span class=\"comment\">-- 106개</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- DISTINCT : 중복값 제외한 값</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">count</span>(<span class=\"keyword\">DISTINCT</span> department_id)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">DISTINCT</span> department_id</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.154</span></span><br><span class=\"line\"><span class=\"comment\">-- 기초통계량</span></span><br><span class=\"line\"><span class=\"comment\">-- 합계, 평균, 최소, 최대, 분산, 표준편차</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">SUM</span>(salary)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">SUM</span>(salary), <span class=\"built_in\">SUM</span>(<span class=\"keyword\">DISTINCT</span> salary)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 평균 값 반환</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">AVG</span>(salary), <span class=\"built_in\">AVG</span>(<span class=\"keyword\">DISTINCT</span> salary)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 최소, 최댓값 반환</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">MIN</span>(<span class=\"keyword\">DISTINCT</span> salary), <span class=\"built_in\">MAX</span>(<span class=\"keyword\">DISTINCT</span> salary)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 분산, 표준편차</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> VARIANCE(salary), STDDEV(salary)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- GROUP BY 절과 HAVING 절</span></span><br><span class=\"line\"><span class=\"comment\">-- 그 전까지는 전체 데이터를 기준으로 집계</span></span><br><span class=\"line\"><span class=\"comment\">-- 특정그룹으로 묶어서 데이터를 집계할 때 GROUP BY 절 사용</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> department_id, </span><br><span class=\"line\">       <span class=\"built_in\">SUM</span>(salary)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> department_id</span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> department_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> kor_loan_status; <span class=\"comment\">-- 가계대출 단위는 10억</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 2013년 11월 총 잔액 구하기</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">period</span>, </span><br><span class=\"line\">       region, </span><br><span class=\"line\">       <span class=\"built_in\">SUM</span>(loan_jan_amt) totl_jan</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> kor_loan_status</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">period</span> <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;2013%&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">period</span>, region</span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">period</span>, region;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">period</span>, </span><br><span class=\"line\">       region, </span><br><span class=\"line\">       <span class=\"built_in\">SUM</span>(loan_jan_amt) totl_jan</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> kor_loan_status</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">period</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;201311&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">period</span>, region</span><br><span class=\"line\"><span class=\"keyword\">HAVING</span> <span class=\"built_in\">SUM</span>(loan_jan_amt)<span class=\"operator\">&gt;</span><span class=\"number\">100000</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> region;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- ROLLUP</span></span><br><span class=\"line\"><span class=\"comment\">-- 2013년도 대출 종류별 총 잔액</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">period</span>, </span><br><span class=\"line\">       gubun, </span><br><span class=\"line\">       <span class=\"built_in\">SUM</span>(loan_jan_amt) totl_jan</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> kor_loan_status</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">period</span> <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;2013%&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">period</span>, gubun</span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">period</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">period</span>, </span><br><span class=\"line\">       gubun, </span><br><span class=\"line\">       <span class=\"built_in\">SUM</span>(loan_jan_amt) totl_jan</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> kor_loan_status</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">period</span> <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;2013%&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">ROLLUP</span>(<span class=\"keyword\">period</span>, gubun);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">period</span>, </span><br><span class=\"line\">       gubun, </span><br><span class=\"line\">       <span class=\"built_in\">SUM</span>(loan_jan_amt) totl_jan</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> kor_loan_status</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">period</span> <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;2013%&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">period</span>, <span class=\"keyword\">ROLLUP</span>(gubun );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">period</span>, </span><br><span class=\"line\">       gubun, </span><br><span class=\"line\">       <span class=\"built_in\">SUM</span>(loan_jan_amt) totl_jan</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> kor_loan_status</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">period</span> <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;2013%&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">ROLLUP</span>(<span class=\"keyword\">period</span>), gubun;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- CUBE</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">period</span>, </span><br><span class=\"line\">       gubun, </span><br><span class=\"line\">       <span class=\"built_in\">SUM</span>(loan_jan_amt) totl_jan</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> kor_loan_status</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">period</span> <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;2013%&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">CUBE</span>(<span class=\"keyword\">period</span>, gubun);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">period</span>, </span><br><span class=\"line\">       gubun, </span><br><span class=\"line\">       <span class=\"built_in\">SUM</span>(loan_jan_amt) totl_jan</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> kor_loan_status</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">period</span> <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;2013%&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">period</span>, <span class=\"keyword\">CUBE</span>(gubun);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> exp_goods_asia (</span><br><span class=\"line\">           country VARCHAR2(<span class=\"number\">10</span>),</span><br><span class=\"line\">           seq     NUMBER,</span><br><span class=\"line\">           goods   VARCHAR2(<span class=\"number\">80</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;한국&#x27;</span>, <span class=\"number\">1</span>, <span class=\"string\">&#x27;원유제외 석유류&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;한국&#x27;</span>, <span class=\"number\">2</span>, <span class=\"string\">&#x27;자동차&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;한국&#x27;</span>, <span class=\"number\">3</span>, <span class=\"string\">&#x27;전자집적회로&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;한국&#x27;</span>, <span class=\"number\">4</span>, <span class=\"string\">&#x27;선박&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;한국&#x27;</span>, <span class=\"number\">5</span>,  <span class=\"string\">&#x27;LCD&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;한국&#x27;</span>, <span class=\"number\">6</span>,  <span class=\"string\">&#x27;자동차부품&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;한국&#x27;</span>, <span class=\"number\">7</span>,  <span class=\"string\">&#x27;휴대전화&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;한국&#x27;</span>, <span class=\"number\">8</span>,  <span class=\"string\">&#x27;환식탄화수소&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;한국&#x27;</span>, <span class=\"number\">9</span>,  <span class=\"string\">&#x27;무선송신기 디스플레이 부속품&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;한국&#x27;</span>, <span class=\"number\">10</span>,  <span class=\"string\">&#x27;철 또는 비합금강&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;일본&#x27;</span>, <span class=\"number\">1</span>, <span class=\"string\">&#x27;자동차&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;일본&#x27;</span>, <span class=\"number\">2</span>, <span class=\"string\">&#x27;자동차부품&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;일본&#x27;</span>, <span class=\"number\">3</span>, <span class=\"string\">&#x27;전자집적회로&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;일본&#x27;</span>, <span class=\"number\">4</span>, <span class=\"string\">&#x27;선박&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;일본&#x27;</span>, <span class=\"number\">5</span>, <span class=\"string\">&#x27;반도체웨이퍼&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;일본&#x27;</span>, <span class=\"number\">6</span>, <span class=\"string\">&#x27;화물차&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;일본&#x27;</span>, <span class=\"number\">7</span>, <span class=\"string\">&#x27;원유제외 석유류&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;일본&#x27;</span>, <span class=\"number\">8</span>, <span class=\"string\">&#x27;건설기계&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;일본&#x27;</span>, <span class=\"number\">9</span>, <span class=\"string\">&#x27;다이오드, 트랜지스터&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;일본&#x27;</span>, <span class=\"number\">10</span>, <span class=\"string\">&#x27;기계류&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> goods</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> exp_goods_asia</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> country <span class=\"operator\">=</span> <span class=\"string\">&#x27;한국&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> seq;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> goods</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> exp_goods_asia</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> country <span class=\"operator\">=</span> <span class=\"string\">&#x27;일본&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> seq;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 두 국가가 겹치는 수출품목은 한번만 조회가 되도록 함</span></span><br><span class=\"line\"><span class=\"comment\">-- UNION : 합집합</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> goods</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> exp_goods_asia</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> country <span class=\"operator\">=</span> <span class=\"string\">&#x27;한국&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">UNION</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> goods</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> exp_goods_asia</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> country <span class=\"operator\">=</span> <span class=\"string\">&#x27;일본&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">-- 선박, 자동차 등등 겹치는 품목들을 1번만 조회되도록 함</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- UNION ALL : 중복되는 항목도 모두 조회</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> goods</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> exp_goods_asia</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> country <span class=\"operator\">=</span> <span class=\"string\">&#x27;한국&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">UNION</span> <span class=\"keyword\">ALL</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> goods</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> exp_goods_asia</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> country <span class=\"operator\">=</span> <span class=\"string\">&#x27;일본&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- INTERSECT : 교집합</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> goods</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> exp_goods_asia</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> country <span class=\"operator\">=</span> <span class=\"string\">&#x27;한국&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">INTERSECT</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> goods</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> exp_goods_asia</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> country <span class=\"operator\">=</span> <span class=\"string\">&#x27;일본&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- MINUS : 차집합</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> goods</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> exp_goods_asia</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> country <span class=\"operator\">=</span> <span class=\"string\">&#x27;한국&#x27;</span></span><br><span class=\"line\">MINUS</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> goods</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> exp_goods_asia</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> country <span class=\"operator\">=</span> <span class=\"string\">&#x27;일본&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- GROUPING SETS 절</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    <span class=\"keyword\">PERIOD</span>, gubun, <span class=\"built_in\">SUM</span>(loan_jan_amt) totl_jan</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> kor_loan_status</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">period</span> <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;2013%&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">GROUPING</span> SETS(<span class=\"keyword\">period</span>, gubun);</span><br><span class=\"line\"><span class=\"comment\">-- 기타대출 총액 / 주택담보대출 총액 / 2013년10월 총액 / 2013년11월 총액</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    <span class=\"keyword\">PERIOD</span>, gubun, region, <span class=\"built_in\">SUM</span>(loan_jan_amt) totl_jan</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> kor_loan_status</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">period</span> <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;2013%&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">AND</span> region <span class=\"keyword\">IN</span>(<span class=\"string\">&#x27;서울&#x27;</span>, <span class=\"string\">&#x27;경기&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">GROUPING</span> SETS(<span class=\"keyword\">period</span>, (gubun,region));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 프로그래머스(SQL 연습) https://programmers.co.kr/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.177</span></span><br><span class=\"line\"><span class=\"comment\">-- 조인의 종류</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 동등 조인</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> a.employee_id,</span><br><span class=\"line\">       a.emp_name,</span><br><span class=\"line\">       a.department_id,</span><br><span class=\"line\">       b.department_name</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees a,</span><br><span class=\"line\">     departments b</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> a.department_id <span class=\"operator\">=</span> b.department_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 세미 조인 : 서브쿼리를 이용해 서브쿼리에 존재하는 데이터만 메인쿼리에서 추출</span></span><br><span class=\"line\"><span class=\"comment\">-- EXISTS 사용(조건을 만족하는 데이터가 있으면 결과를 즉시 반환)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    department_id, </span><br><span class=\"line\">    department_name</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> departments a</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">EXISTS</span>(<span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span></span><br><span class=\"line\">             <span class=\"keyword\">FROM</span> employees b</span><br><span class=\"line\">             <span class=\"keyword\">WHERE</span> a.department_id <span class=\"operator\">=</span> b.department_id</span><br><span class=\"line\">             <span class=\"keyword\">AND</span> b.salary <span class=\"operator\">&gt;</span> <span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- IN 사용(OR 조건으로 변환할 수 있다.)</span></span><br><span class=\"line\"><span class=\"comment\">-- 주의!! 서브 쿼리 내에 두 테이블의 조인 조건이 없다는 점</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    department_id, </span><br><span class=\"line\">    department_name</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> departments a</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> a. department_id <span class=\"keyword\">IN</span>(<span class=\"keyword\">SELECT</span> b.department_id</span><br><span class=\"line\">                          <span class=\"keyword\">FROM</span> employees b</span><br><span class=\"line\">                          <span class=\"keyword\">WHERE</span> a.department_id <span class=\"operator\">=</span> b.department_id</span><br><span class=\"line\">                          <span class=\"keyword\">AND</span> b.salary <span class=\"operator\">&gt;</span> <span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 일반 조인문으로 변환했을 시.. 결과가 많아진다.</span></span><br><span class=\"line\"><span class=\"comment\">--            |</span></span><br><span class=\"line\"><span class=\"comment\">--            V</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> </span><br><span class=\"line\">    a.department_id,</span><br><span class=\"line\">    a.department_name</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> departments a, employees b</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> a.department_id <span class=\"operator\">=</span> b.department_id</span><br><span class=\"line\">    <span class=\"keyword\">AND</span> b.salary <span class=\"operator\">&gt;</span> <span class=\"number\">3000</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> a.department_name;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 안티 조인 : 세미 조인의 반대개념(NOT IN, NOT EXISTS 사용)</span></span><br><span class=\"line\"><span class=\"comment\">-- manager_id 가 NULL 값이 아닌 애들 표현</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> a.employee_id, </span><br><span class=\"line\">       a.emp_name, </span><br><span class=\"line\">       a.department_id,</span><br><span class=\"line\">       b.department_name</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees a,</span><br><span class=\"line\">     departments b</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> a.department_id <span class=\"operator\">=</span> b.department_id</span><br><span class=\"line\">    <span class=\"keyword\">AND</span> a.department_id <span class=\"keyword\">NOT</span> <span class=\"keyword\">IN</span>(<span class=\"keyword\">SELECT</span> department_id</span><br><span class=\"line\">                                <span class=\"keyword\">FROM</span> departments</span><br><span class=\"line\">                                <span class=\"keyword\">WHERE</span> manager_id <span class=\"keyword\">IS</span> <span class=\"keyword\">NULL</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.180</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">count</span>(<span class=\"operator\">*</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees a</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">NOT</span> <span class=\"keyword\">EXISTS</span>(<span class=\"keyword\">SELECT</span> <span class=\"number\">1</span></span><br><span class=\"line\">                 <span class=\"keyword\">FROM</span> departments c</span><br><span class=\"line\">                 <span class=\"keyword\">WHERE</span> a.department_id <span class=\"operator\">=</span> c.department_id</span><br><span class=\"line\">                 <span class=\"keyword\">AND</span> manager_id <span class=\"keyword\">IS</span> <span class=\"keyword\">NULL</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 셀프 조인</span></span><br><span class=\"line\"><span class=\"comment\">-- 조인을 하려면 두개의 테이블이 필요했는데, 셀프 조인은 하나의 테이블을 두개로 분리한다</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    a.employee_id,</span><br><span class=\"line\">    a.emp_name,</span><br><span class=\"line\">    b.employee_id,</span><br><span class=\"line\">    b.emp_name,</span><br><span class=\"line\">    a.department_id</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">    employees a,</span><br><span class=\"line\">    employees b</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> a.employee_id <span class=\"operator\">&lt;</span> b. employee_id</span><br><span class=\"line\">    <span class=\"keyword\">AND</span> a.department_id <span class=\"operator\">=</span> b.department_id</span><br><span class=\"line\">    <span class=\"keyword\">AND</span> a.department_id <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"comment\">-- 같은 부서번호를 가진 사원 중 A사원번호가 B사원보다 작은 건 조회</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.181</span></span><br><span class=\"line\"><span class=\"comment\">-- 일반 조인</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> </span><br><span class=\"line\">    a.department_id,</span><br><span class=\"line\">    a.department_name,</span><br><span class=\"line\">    b.job_id,</span><br><span class=\"line\">    b.department_id</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> departments a,</span><br><span class=\"line\">     job_history b</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> a.department_id <span class=\"operator\">=</span> b.department_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 외부 조인</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> </span><br><span class=\"line\">    a.department_id,</span><br><span class=\"line\">    a.department_name,</span><br><span class=\"line\">    b.job_id,</span><br><span class=\"line\">    b.department_id</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> departments a,</span><br><span class=\"line\">     job_history b</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> a.department_id <span class=\"operator\">=</span> b.department_id(<span class=\"operator\">+</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> </span><br><span class=\"line\">    a.employee_id,</span><br><span class=\"line\">    a.emp_name,</span><br><span class=\"line\">    b.job_id,</span><br><span class=\"line\">    b.department_id</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees a,</span><br><span class=\"line\">     job_history b</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> a.employee_id <span class=\"operator\">=</span> b.employee_id(<span class=\"operator\">+</span>)</span><br><span class=\"line\">    <span class=\"keyword\">AND</span> a.department_id <span class=\"operator\">=</span> b.department_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- ANSI 조인</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> </span><br><span class=\"line\">    a.employee_id</span><br><span class=\"line\">    , a.emp_name</span><br><span class=\"line\">    , b.department_id</span><br><span class=\"line\">    , b.department_name</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees a</span><br><span class=\"line\"><span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> departments b</span><br><span class=\"line\">    <span class=\"keyword\">ON</span> (a.department_id <span class=\"operator\">=</span> b.department_id)</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> a.hire_Date <span class=\"operator\">&gt;=</span> TO_DATE(<span class=\"string\">&#x27;2003-01-01&#x27;</span>, <span class=\"string\">&#x27;YYYY-MM-DD&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.187</span></span><br><span class=\"line\"><span class=\"comment\">-- 외부조인</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> </span><br><span class=\"line\">    a.employee_id</span><br><span class=\"line\">    , a.emp_name</span><br><span class=\"line\">    , b.job_id</span><br><span class=\"line\">    , b.department_id</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees a</span><br><span class=\"line\"><span class=\"keyword\">RIGHT</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> job_history b</span><br><span class=\"line\">    <span class=\"keyword\">ON</span> (a.employee_id <span class=\"operator\">=</span> b.employee_id </span><br><span class=\"line\">            <span class=\"keyword\">and</span> a.department_id <span class=\"operator\">=</span> b.department_id);</span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"comment\">-- RIGHT JOIN : 결측치까지 싹 다 조인</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> </span><br><span class=\"line\">    a.employee_id</span><br><span class=\"line\">    , a.emp_name</span><br><span class=\"line\">    , b.job_id</span><br><span class=\"line\">    , b.department_id</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> job_history b</span><br><span class=\"line\"><span class=\"keyword\">RIGHT</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> employees a</span><br><span class=\"line\">    <span class=\"keyword\">ON</span> (a.employee_id       <span class=\"operator\">=</span> b.employee_id</span><br><span class=\"line\">        <span class=\"keyword\">and</span> a.department_id <span class=\"operator\">=</span> b.department_id);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 서브 쿼리</span></span><br><span class=\"line\"><span class=\"comment\">-- SQL수업의 하이라이트!!</span></span><br><span class=\"line\"><span class=\"comment\">-- 서브쿼리 사용가능 -&gt; SELECT, FROM, WHERE 에서 사용가능</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 배치 자동화</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">count</span>(<span class=\"operator\">*</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> salary <span class=\"operator\">&gt;=</span> (<span class=\"keyword\">SELECT</span> <span class=\"built_in\">AVG</span>(salary)<span class=\"keyword\">FROM</span> employees); <span class=\"comment\">-- () 안이 변수같은 느낌</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">count</span>(<span class=\"operator\">*</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> salary <span class=\"operator\">&gt;=</span> <span class=\"comment\">-- 서브쿼리에서 출력되는 값이 단일 행;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- IN(복수 결괏값을 넣을 수 있음)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">count</span>(<span class=\"operator\">*</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> department_id <span class=\"keyword\">IN</span> (<span class=\"keyword\">SELECT</span> department_id</span><br><span class=\"line\">                        <span class=\"keyword\">FROM</span> departments</span><br><span class=\"line\">                        <span class=\"keyword\">WHERE</span> parent_id <span class=\"keyword\">IS</span> <span class=\"keyword\">NULL</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> employee_id,</span><br><span class=\"line\">       emp_name,</span><br><span class=\"line\">       job_id</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> (employee_id, job_id) <span class=\"keyword\">IN</span> (<span class=\"keyword\">SELECT</span> employee_id,</span><br><span class=\"line\">                                       job_id</span><br><span class=\"line\">                                <span class=\"keyword\">FROM</span> job_history);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 서브 쿼리는 SELECT 뿐만 아니라 UPDATE, DELETE 문에서도 사용할 수 있다.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.194</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> a.employee_id,</span><br><span class=\"line\">       (<span class=\"keyword\">SELECT</span> b.emp_name</span><br><span class=\"line\">       <span class=\"keyword\">FROM</span> employees b</span><br><span class=\"line\">       <span class=\"keyword\">WHERE</span> a.employee_id <span class=\"operator\">=</span> b.employee_id) <span class=\"keyword\">AS</span> emp_name,</span><br><span class=\"line\">       a.department_id,</span><br><span class=\"line\">       (<span class=\"keyword\">SELECT</span> b.department_name</span><br><span class=\"line\">       <span class=\"keyword\">FROM</span> departments b</span><br><span class=\"line\">       <span class=\"keyword\">WHERE</span> a.department_id <span class=\"operator\">=</span> b.department_id) <span class=\"keyword\">AS</span> dep_name</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> job_history a;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 서브쿼리(서브쿼리2(서브쿼리3(...))) 이런식으로 무한정 증식할 수 있음</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> a.department_id,</span><br><span class=\"line\">       a.department_name</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> departments a</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">EXISTS</span> (<span class=\"keyword\">SELECT</span> <span class=\"number\">1</span></span><br><span class=\"line\">              <span class=\"keyword\">FROM</span> employees b</span><br><span class=\"line\">              <span class=\"keyword\">WHERE</span> a.department_id <span class=\"operator\">=</span> b.department_id</span><br><span class=\"line\">              <span class=\"keyword\">AND</span> b.salary <span class=\"operator\">&gt;</span> (<span class=\"keyword\">SELECT</span> <span class=\"built_in\">AVG</span>(salary)</span><br><span class=\"line\">                              <span class=\"keyword\">FROM</span> employees)</span><br><span class=\"line\">             );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.196</span></span><br><span class=\"line\"><span class=\"comment\">-- 메인 쿼리 : 사원 테이블의 사원들의 부서별 평균 급여를 조회</span></span><br><span class=\"line\"><span class=\"comment\">-- 서브 쿼리 : 상위 부서가 기획부(부서번호가 90)에 속함</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> department_id, <span class=\"built_in\">AVG</span>(salary)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> department_id <span class=\"keyword\">IN</span> (<span class=\"keyword\">SELECT</span> department_id</span><br><span class=\"line\">                        <span class=\"keyword\">FROM</span> departments</span><br><span class=\"line\">                        <span class=\"keyword\">WHERE</span> parent_id <span class=\"operator\">=</span> <span class=\"number\">90</span>)</span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> department_id;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/07/21/day0721/oracle.png","excerpt":"<ul>\n<li>GROUP BY 절, HAVING 절</li>\n<li>평균, 최소&#x2F;댓값, 분산, 표준편차</li>\n<li>ROLLUP, CUBE</li>\n<li>교&#x2F;합&#x2F;차집합</li>\n<li>세미&#x2F;셀프&#x2F;일반&#x2F;외부 조인</li>\n<li>ANSI 문법 조인</li>\n<li>서브 쿼리","more":"</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"day0721\"><a href=\"#day0721\" class=\"headerlink\" title=\"day0721\"></a>day0721</h1><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.152</span></span><br><span class=\"line\"><span class=\"comment\">-- 기본집계함수</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">count</span>(<span class=\"operator\">*</span>) <span class=\"keyword\">FROM</span> employees; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">count</span>(employee_id) <span class=\"keyword\">FROM</span> employees;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- NULL은 카운트를 하지 않는다.</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">count</span>(department_id) <span class=\"keyword\">FROM</span> employees;  <span class=\"comment\">-- 106개</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- DISTINCT : 중복값 제외한 값</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">count</span>(<span class=\"keyword\">DISTINCT</span> department_id)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">DISTINCT</span> department_id</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.154</span></span><br><span class=\"line\"><span class=\"comment\">-- 기초통계량</span></span><br><span class=\"line\"><span class=\"comment\">-- 합계, 평균, 최소, 최대, 분산, 표준편차</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">SUM</span>(salary)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">SUM</span>(salary), <span class=\"built_in\">SUM</span>(<span class=\"keyword\">DISTINCT</span> salary)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 평균 값 반환</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">AVG</span>(salary), <span class=\"built_in\">AVG</span>(<span class=\"keyword\">DISTINCT</span> salary)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 최소, 최댓값 반환</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">MIN</span>(<span class=\"keyword\">DISTINCT</span> salary), <span class=\"built_in\">MAX</span>(<span class=\"keyword\">DISTINCT</span> salary)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 분산, 표준편차</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> VARIANCE(salary), STDDEV(salary)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- GROUP BY 절과 HAVING 절</span></span><br><span class=\"line\"><span class=\"comment\">-- 그 전까지는 전체 데이터를 기준으로 집계</span></span><br><span class=\"line\"><span class=\"comment\">-- 특정그룹으로 묶어서 데이터를 집계할 때 GROUP BY 절 사용</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> department_id, </span><br><span class=\"line\">       <span class=\"built_in\">SUM</span>(salary)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> department_id</span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> department_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> kor_loan_status; <span class=\"comment\">-- 가계대출 단위는 10억</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 2013년 11월 총 잔액 구하기</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">period</span>, </span><br><span class=\"line\">       region, </span><br><span class=\"line\">       <span class=\"built_in\">SUM</span>(loan_jan_amt) totl_jan</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> kor_loan_status</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">period</span> <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;2013%&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">period</span>, region</span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">period</span>, region;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">period</span>, </span><br><span class=\"line\">       region, </span><br><span class=\"line\">       <span class=\"built_in\">SUM</span>(loan_jan_amt) totl_jan</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> kor_loan_status</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">period</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;201311&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">period</span>, region</span><br><span class=\"line\"><span class=\"keyword\">HAVING</span> <span class=\"built_in\">SUM</span>(loan_jan_amt)<span class=\"operator\">&gt;</span><span class=\"number\">100000</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> region;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- ROLLUP</span></span><br><span class=\"line\"><span class=\"comment\">-- 2013년도 대출 종류별 총 잔액</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">period</span>, </span><br><span class=\"line\">       gubun, </span><br><span class=\"line\">       <span class=\"built_in\">SUM</span>(loan_jan_amt) totl_jan</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> kor_loan_status</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">period</span> <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;2013%&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">period</span>, gubun</span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">period</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">period</span>, </span><br><span class=\"line\">       gubun, </span><br><span class=\"line\">       <span class=\"built_in\">SUM</span>(loan_jan_amt) totl_jan</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> kor_loan_status</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">period</span> <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;2013%&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">ROLLUP</span>(<span class=\"keyword\">period</span>, gubun);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">period</span>, </span><br><span class=\"line\">       gubun, </span><br><span class=\"line\">       <span class=\"built_in\">SUM</span>(loan_jan_amt) totl_jan</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> kor_loan_status</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">period</span> <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;2013%&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">period</span>, <span class=\"keyword\">ROLLUP</span>(gubun );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">period</span>, </span><br><span class=\"line\">       gubun, </span><br><span class=\"line\">       <span class=\"built_in\">SUM</span>(loan_jan_amt) totl_jan</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> kor_loan_status</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">period</span> <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;2013%&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">ROLLUP</span>(<span class=\"keyword\">period</span>), gubun;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- CUBE</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">period</span>, </span><br><span class=\"line\">       gubun, </span><br><span class=\"line\">       <span class=\"built_in\">SUM</span>(loan_jan_amt) totl_jan</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> kor_loan_status</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">period</span> <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;2013%&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">CUBE</span>(<span class=\"keyword\">period</span>, gubun);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">period</span>, </span><br><span class=\"line\">       gubun, </span><br><span class=\"line\">       <span class=\"built_in\">SUM</span>(loan_jan_amt) totl_jan</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> kor_loan_status</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">period</span> <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;2013%&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">period</span>, <span class=\"keyword\">CUBE</span>(gubun);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> exp_goods_asia (</span><br><span class=\"line\">           country VARCHAR2(<span class=\"number\">10</span>),</span><br><span class=\"line\">           seq     NUMBER,</span><br><span class=\"line\">           goods   VARCHAR2(<span class=\"number\">80</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;한국&#x27;</span>, <span class=\"number\">1</span>, <span class=\"string\">&#x27;원유제외 석유류&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;한국&#x27;</span>, <span class=\"number\">2</span>, <span class=\"string\">&#x27;자동차&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;한국&#x27;</span>, <span class=\"number\">3</span>, <span class=\"string\">&#x27;전자집적회로&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;한국&#x27;</span>, <span class=\"number\">4</span>, <span class=\"string\">&#x27;선박&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;한국&#x27;</span>, <span class=\"number\">5</span>,  <span class=\"string\">&#x27;LCD&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;한국&#x27;</span>, <span class=\"number\">6</span>,  <span class=\"string\">&#x27;자동차부품&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;한국&#x27;</span>, <span class=\"number\">7</span>,  <span class=\"string\">&#x27;휴대전화&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;한국&#x27;</span>, <span class=\"number\">8</span>,  <span class=\"string\">&#x27;환식탄화수소&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;한국&#x27;</span>, <span class=\"number\">9</span>,  <span class=\"string\">&#x27;무선송신기 디스플레이 부속품&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;한국&#x27;</span>, <span class=\"number\">10</span>,  <span class=\"string\">&#x27;철 또는 비합금강&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;일본&#x27;</span>, <span class=\"number\">1</span>, <span class=\"string\">&#x27;자동차&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;일본&#x27;</span>, <span class=\"number\">2</span>, <span class=\"string\">&#x27;자동차부품&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;일본&#x27;</span>, <span class=\"number\">3</span>, <span class=\"string\">&#x27;전자집적회로&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;일본&#x27;</span>, <span class=\"number\">4</span>, <span class=\"string\">&#x27;선박&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;일본&#x27;</span>, <span class=\"number\">5</span>, <span class=\"string\">&#x27;반도체웨이퍼&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;일본&#x27;</span>, <span class=\"number\">6</span>, <span class=\"string\">&#x27;화물차&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;일본&#x27;</span>, <span class=\"number\">7</span>, <span class=\"string\">&#x27;원유제외 석유류&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;일본&#x27;</span>, <span class=\"number\">8</span>, <span class=\"string\">&#x27;건설기계&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;일본&#x27;</span>, <span class=\"number\">9</span>, <span class=\"string\">&#x27;다이오드, 트랜지스터&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> exp_goods_asia <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;일본&#x27;</span>, <span class=\"number\">10</span>, <span class=\"string\">&#x27;기계류&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> goods</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> exp_goods_asia</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> country <span class=\"operator\">=</span> <span class=\"string\">&#x27;한국&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> seq;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> goods</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> exp_goods_asia</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> country <span class=\"operator\">=</span> <span class=\"string\">&#x27;일본&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> seq;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 두 국가가 겹치는 수출품목은 한번만 조회가 되도록 함</span></span><br><span class=\"line\"><span class=\"comment\">-- UNION : 합집합</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> goods</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> exp_goods_asia</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> country <span class=\"operator\">=</span> <span class=\"string\">&#x27;한국&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">UNION</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> goods</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> exp_goods_asia</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> country <span class=\"operator\">=</span> <span class=\"string\">&#x27;일본&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">-- 선박, 자동차 등등 겹치는 품목들을 1번만 조회되도록 함</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- UNION ALL : 중복되는 항목도 모두 조회</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> goods</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> exp_goods_asia</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> country <span class=\"operator\">=</span> <span class=\"string\">&#x27;한국&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">UNION</span> <span class=\"keyword\">ALL</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> goods</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> exp_goods_asia</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> country <span class=\"operator\">=</span> <span class=\"string\">&#x27;일본&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- INTERSECT : 교집합</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> goods</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> exp_goods_asia</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> country <span class=\"operator\">=</span> <span class=\"string\">&#x27;한국&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">INTERSECT</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> goods</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> exp_goods_asia</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> country <span class=\"operator\">=</span> <span class=\"string\">&#x27;일본&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- MINUS : 차집합</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> goods</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> exp_goods_asia</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> country <span class=\"operator\">=</span> <span class=\"string\">&#x27;한국&#x27;</span></span><br><span class=\"line\">MINUS</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> goods</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> exp_goods_asia</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> country <span class=\"operator\">=</span> <span class=\"string\">&#x27;일본&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- GROUPING SETS 절</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    <span class=\"keyword\">PERIOD</span>, gubun, <span class=\"built_in\">SUM</span>(loan_jan_amt) totl_jan</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> kor_loan_status</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">period</span> <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;2013%&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">GROUPING</span> SETS(<span class=\"keyword\">period</span>, gubun);</span><br><span class=\"line\"><span class=\"comment\">-- 기타대출 총액 / 주택담보대출 총액 / 2013년10월 총액 / 2013년11월 총액</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    <span class=\"keyword\">PERIOD</span>, gubun, region, <span class=\"built_in\">SUM</span>(loan_jan_amt) totl_jan</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> kor_loan_status</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">period</span> <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;2013%&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">AND</span> region <span class=\"keyword\">IN</span>(<span class=\"string\">&#x27;서울&#x27;</span>, <span class=\"string\">&#x27;경기&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">GROUPING</span> SETS(<span class=\"keyword\">period</span>, (gubun,region));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 프로그래머스(SQL 연습) https://programmers.co.kr/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.177</span></span><br><span class=\"line\"><span class=\"comment\">-- 조인의 종류</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 동등 조인</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> a.employee_id,</span><br><span class=\"line\">       a.emp_name,</span><br><span class=\"line\">       a.department_id,</span><br><span class=\"line\">       b.department_name</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees a,</span><br><span class=\"line\">     departments b</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> a.department_id <span class=\"operator\">=</span> b.department_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 세미 조인 : 서브쿼리를 이용해 서브쿼리에 존재하는 데이터만 메인쿼리에서 추출</span></span><br><span class=\"line\"><span class=\"comment\">-- EXISTS 사용(조건을 만족하는 데이터가 있으면 결과를 즉시 반환)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    department_id, </span><br><span class=\"line\">    department_name</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> departments a</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">EXISTS</span>(<span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span></span><br><span class=\"line\">             <span class=\"keyword\">FROM</span> employees b</span><br><span class=\"line\">             <span class=\"keyword\">WHERE</span> a.department_id <span class=\"operator\">=</span> b.department_id</span><br><span class=\"line\">             <span class=\"keyword\">AND</span> b.salary <span class=\"operator\">&gt;</span> <span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- IN 사용(OR 조건으로 변환할 수 있다.)</span></span><br><span class=\"line\"><span class=\"comment\">-- 주의!! 서브 쿼리 내에 두 테이블의 조인 조건이 없다는 점</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    department_id, </span><br><span class=\"line\">    department_name</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> departments a</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> a. department_id <span class=\"keyword\">IN</span>(<span class=\"keyword\">SELECT</span> b.department_id</span><br><span class=\"line\">                          <span class=\"keyword\">FROM</span> employees b</span><br><span class=\"line\">                          <span class=\"keyword\">WHERE</span> a.department_id <span class=\"operator\">=</span> b.department_id</span><br><span class=\"line\">                          <span class=\"keyword\">AND</span> b.salary <span class=\"operator\">&gt;</span> <span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 일반 조인문으로 변환했을 시.. 결과가 많아진다.</span></span><br><span class=\"line\"><span class=\"comment\">--            |</span></span><br><span class=\"line\"><span class=\"comment\">--            V</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> </span><br><span class=\"line\">    a.department_id,</span><br><span class=\"line\">    a.department_name</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> departments a, employees b</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> a.department_id <span class=\"operator\">=</span> b.department_id</span><br><span class=\"line\">    <span class=\"keyword\">AND</span> b.salary <span class=\"operator\">&gt;</span> <span class=\"number\">3000</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> a.department_name;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 안티 조인 : 세미 조인의 반대개념(NOT IN, NOT EXISTS 사용)</span></span><br><span class=\"line\"><span class=\"comment\">-- manager_id 가 NULL 값이 아닌 애들 표현</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> a.employee_id, </span><br><span class=\"line\">       a.emp_name, </span><br><span class=\"line\">       a.department_id,</span><br><span class=\"line\">       b.department_name</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees a,</span><br><span class=\"line\">     departments b</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> a.department_id <span class=\"operator\">=</span> b.department_id</span><br><span class=\"line\">    <span class=\"keyword\">AND</span> a.department_id <span class=\"keyword\">NOT</span> <span class=\"keyword\">IN</span>(<span class=\"keyword\">SELECT</span> department_id</span><br><span class=\"line\">                                <span class=\"keyword\">FROM</span> departments</span><br><span class=\"line\">                                <span class=\"keyword\">WHERE</span> manager_id <span class=\"keyword\">IS</span> <span class=\"keyword\">NULL</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.180</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">count</span>(<span class=\"operator\">*</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees a</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">NOT</span> <span class=\"keyword\">EXISTS</span>(<span class=\"keyword\">SELECT</span> <span class=\"number\">1</span></span><br><span class=\"line\">                 <span class=\"keyword\">FROM</span> departments c</span><br><span class=\"line\">                 <span class=\"keyword\">WHERE</span> a.department_id <span class=\"operator\">=</span> c.department_id</span><br><span class=\"line\">                 <span class=\"keyword\">AND</span> manager_id <span class=\"keyword\">IS</span> <span class=\"keyword\">NULL</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 셀프 조인</span></span><br><span class=\"line\"><span class=\"comment\">-- 조인을 하려면 두개의 테이블이 필요했는데, 셀프 조인은 하나의 테이블을 두개로 분리한다</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    a.employee_id,</span><br><span class=\"line\">    a.emp_name,</span><br><span class=\"line\">    b.employee_id,</span><br><span class=\"line\">    b.emp_name,</span><br><span class=\"line\">    a.department_id</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">    employees a,</span><br><span class=\"line\">    employees b</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> a.employee_id <span class=\"operator\">&lt;</span> b. employee_id</span><br><span class=\"line\">    <span class=\"keyword\">AND</span> a.department_id <span class=\"operator\">=</span> b.department_id</span><br><span class=\"line\">    <span class=\"keyword\">AND</span> a.department_id <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"comment\">-- 같은 부서번호를 가진 사원 중 A사원번호가 B사원보다 작은 건 조회</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.181</span></span><br><span class=\"line\"><span class=\"comment\">-- 일반 조인</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> </span><br><span class=\"line\">    a.department_id,</span><br><span class=\"line\">    a.department_name,</span><br><span class=\"line\">    b.job_id,</span><br><span class=\"line\">    b.department_id</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> departments a,</span><br><span class=\"line\">     job_history b</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> a.department_id <span class=\"operator\">=</span> b.department_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 외부 조인</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> </span><br><span class=\"line\">    a.department_id,</span><br><span class=\"line\">    a.department_name,</span><br><span class=\"line\">    b.job_id,</span><br><span class=\"line\">    b.department_id</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> departments a,</span><br><span class=\"line\">     job_history b</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> a.department_id <span class=\"operator\">=</span> b.department_id(<span class=\"operator\">+</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> </span><br><span class=\"line\">    a.employee_id,</span><br><span class=\"line\">    a.emp_name,</span><br><span class=\"line\">    b.job_id,</span><br><span class=\"line\">    b.department_id</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees a,</span><br><span class=\"line\">     job_history b</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> a.employee_id <span class=\"operator\">=</span> b.employee_id(<span class=\"operator\">+</span>)</span><br><span class=\"line\">    <span class=\"keyword\">AND</span> a.department_id <span class=\"operator\">=</span> b.department_id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- ANSI 조인</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> </span><br><span class=\"line\">    a.employee_id</span><br><span class=\"line\">    , a.emp_name</span><br><span class=\"line\">    , b.department_id</span><br><span class=\"line\">    , b.department_name</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees a</span><br><span class=\"line\"><span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> departments b</span><br><span class=\"line\">    <span class=\"keyword\">ON</span> (a.department_id <span class=\"operator\">=</span> b.department_id)</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> a.hire_Date <span class=\"operator\">&gt;=</span> TO_DATE(<span class=\"string\">&#x27;2003-01-01&#x27;</span>, <span class=\"string\">&#x27;YYYY-MM-DD&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.187</span></span><br><span class=\"line\"><span class=\"comment\">-- 외부조인</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> </span><br><span class=\"line\">    a.employee_id</span><br><span class=\"line\">    , a.emp_name</span><br><span class=\"line\">    , b.job_id</span><br><span class=\"line\">    , b.department_id</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees a</span><br><span class=\"line\"><span class=\"keyword\">RIGHT</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> job_history b</span><br><span class=\"line\">    <span class=\"keyword\">ON</span> (a.employee_id <span class=\"operator\">=</span> b.employee_id </span><br><span class=\"line\">            <span class=\"keyword\">and</span> a.department_id <span class=\"operator\">=</span> b.department_id);</span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"comment\">-- RIGHT JOIN : 결측치까지 싹 다 조인</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> </span><br><span class=\"line\">    a.employee_id</span><br><span class=\"line\">    , a.emp_name</span><br><span class=\"line\">    , b.job_id</span><br><span class=\"line\">    , b.department_id</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> job_history b</span><br><span class=\"line\"><span class=\"keyword\">RIGHT</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> employees a</span><br><span class=\"line\">    <span class=\"keyword\">ON</span> (a.employee_id       <span class=\"operator\">=</span> b.employee_id</span><br><span class=\"line\">        <span class=\"keyword\">and</span> a.department_id <span class=\"operator\">=</span> b.department_id);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 서브 쿼리</span></span><br><span class=\"line\"><span class=\"comment\">-- SQL수업의 하이라이트!!</span></span><br><span class=\"line\"><span class=\"comment\">-- 서브쿼리 사용가능 -&gt; SELECT, FROM, WHERE 에서 사용가능</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 배치 자동화</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">count</span>(<span class=\"operator\">*</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> salary <span class=\"operator\">&gt;=</span> (<span class=\"keyword\">SELECT</span> <span class=\"built_in\">AVG</span>(salary)<span class=\"keyword\">FROM</span> employees); <span class=\"comment\">-- () 안이 변수같은 느낌</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">count</span>(<span class=\"operator\">*</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> salary <span class=\"operator\">&gt;=</span> <span class=\"comment\">-- 서브쿼리에서 출력되는 값이 단일 행;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- IN(복수 결괏값을 넣을 수 있음)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">count</span>(<span class=\"operator\">*</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> department_id <span class=\"keyword\">IN</span> (<span class=\"keyword\">SELECT</span> department_id</span><br><span class=\"line\">                        <span class=\"keyword\">FROM</span> departments</span><br><span class=\"line\">                        <span class=\"keyword\">WHERE</span> parent_id <span class=\"keyword\">IS</span> <span class=\"keyword\">NULL</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> employee_id,</span><br><span class=\"line\">       emp_name,</span><br><span class=\"line\">       job_id</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> (employee_id, job_id) <span class=\"keyword\">IN</span> (<span class=\"keyword\">SELECT</span> employee_id,</span><br><span class=\"line\">                                       job_id</span><br><span class=\"line\">                                <span class=\"keyword\">FROM</span> job_history);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 서브 쿼리는 SELECT 뿐만 아니라 UPDATE, DELETE 문에서도 사용할 수 있다.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.194</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> a.employee_id,</span><br><span class=\"line\">       (<span class=\"keyword\">SELECT</span> b.emp_name</span><br><span class=\"line\">       <span class=\"keyword\">FROM</span> employees b</span><br><span class=\"line\">       <span class=\"keyword\">WHERE</span> a.employee_id <span class=\"operator\">=</span> b.employee_id) <span class=\"keyword\">AS</span> emp_name,</span><br><span class=\"line\">       a.department_id,</span><br><span class=\"line\">       (<span class=\"keyword\">SELECT</span> b.department_name</span><br><span class=\"line\">       <span class=\"keyword\">FROM</span> departments b</span><br><span class=\"line\">       <span class=\"keyword\">WHERE</span> a.department_id <span class=\"operator\">=</span> b.department_id) <span class=\"keyword\">AS</span> dep_name</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> job_history a;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 서브쿼리(서브쿼리2(서브쿼리3(...))) 이런식으로 무한정 증식할 수 있음</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> a.department_id,</span><br><span class=\"line\">       a.department_name</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> departments a</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">EXISTS</span> (<span class=\"keyword\">SELECT</span> <span class=\"number\">1</span></span><br><span class=\"line\">              <span class=\"keyword\">FROM</span> employees b</span><br><span class=\"line\">              <span class=\"keyword\">WHERE</span> a.department_id <span class=\"operator\">=</span> b.department_id</span><br><span class=\"line\">              <span class=\"keyword\">AND</span> b.salary <span class=\"operator\">&gt;</span> (<span class=\"keyword\">SELECT</span> <span class=\"built_in\">AVG</span>(salary)</span><br><span class=\"line\">                              <span class=\"keyword\">FROM</span> employees)</span><br><span class=\"line\">             );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- p.196</span></span><br><span class=\"line\"><span class=\"comment\">-- 메인 쿼리 : 사원 테이블의 사원들의 부서별 평균 급여를 조회</span></span><br><span class=\"line\"><span class=\"comment\">-- 서브 쿼리 : 상위 부서가 기획부(부서번호가 90)에 속함</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> department_id, <span class=\"built_in\">AVG</span>(salary)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> department_id <span class=\"keyword\">IN</span> (<span class=\"keyword\">SELECT</span> department_id</span><br><span class=\"line\">                        <span class=\"keyword\">FROM</span> departments</span><br><span class=\"line\">                        <span class=\"keyword\">WHERE</span> parent_id <span class=\"operator\">=</span> <span class=\"number\">90</span>)</span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> department_id;</span><br></pre></td></tr></table></figure>"},{"title":"Linux 환경 만들기","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"thumbnailImage":"Linux.png","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-07-27T07:54:02.000Z","_content":"\n## Linux 설치\n<!-- excerpt -->\n## vi 편집기 사용 꼭 공부 하기\n\n\n- 윈도우 버전이 20H1, 20H2, 21H1, 21H2 보다 높아야 됨\n\n![Untitled](/images/Linux/Untitled.png)\n\n- powershell 관리자로 실행\n- 다음 코드 입력\n\n```powershell\ndism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart\n\ndism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart\n\n```\n\n- 인터넷 주소창에 다음 코드 입력\n\n```powershell\nhttps://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi\n```\n\n- 다운 받은 후 설치\n- Microsoft Store 에서 ubuntu 설치\n\n![Untitled](/images/Linux/Untitled%201.png)\n\n- Ubuntu 20.04.4 버전으로 다운로드\n    - 나중에 설정이 꼬였을 때 윈도우 포맷하는 것 처럼 Ubuntu를 삭제하고 다시 설치하면 된다.\n\n![Untitled](/images/Linux/Untitled%202.png)\n\n- Ubuntu 실행\n\n![Untitled](/images/Linux/Untitled%203.png)\n\n- 만약 다음과 같은 메세지가 뜬다면 가상환경을 확인해야 한다\n\n![Untitled](/images/Linux/Untitled%204.png)\n\n- Windows 기능 켜기/끄기 열기\n\n![Untitled](/images/Linux/Untitled%205.png)\n\n- Windows 하이퍼바이저 플랫폼 체크 후 재부팅\n\n![Untitled](/images/Linux/Untitled%206.png)\n\n- 재부팅 후 Ubuntu 실행\n- Ubuntu 아이디 비밀번호 만들기 (***비밀번호는 입력해도 안 보인다!!***)\n\n![Untitled](/images/Linux/Untitled%207.png)\n\n- 다시 powershell 실행 후 다음 코드 입력\n\n```powershell\nwsl --set-default-version 2\n```\n\n- 다음과 같이 뜨면 성공!\n\n![Untitled](/images/Linux/Untitled%208.png)\n\n- 코드 wsl -l -v 입력 후 버전이 1이 나오면 Ubuntu 제거 후 다시 설치하고 Ubuntu 로그인 후\n- 맨 위에 PowerShell 코드 다시 입력\n\n![Untitled](/images/Linux/Untitled%209.png)\n\n- 그 다음 wsl -l -v 치면 버전 2가 나옴(나오면 꺼도 됨)\n\n- 시스템 환경 변수 들어가서 환경 변수 탭 —> Path 편집\n\n![Untitled](/images/Linux/Untitled%2010.png)\n\n![Untitled](/images/Linux/Untitled%2011.png)\n\n![Untitled](/images/Linux/Untitled%2012.png)\n\n- VS Code 저 경로가 있는지 확인한다.\n\n---\n\n### 환경변수를 사용하는 이유\n\n빅데이터 플랫폼 / 웹사이트 구축할 때\n\n- 레고블록 쌓을때 맞물려 쌓듯이 연결해주는 것이 Configuration(환경 변수) 인데\n    \n    이 환경 변수가 유기적으로 연결 되지 않으면 에러가 뜨거나 실행이 안된다.\n    \n\n---\n\n- 다음 사이트 참고하여서 VS Code 에 연결\n- [https://dschloe.github.io/settings/vscode_wsl2/](https://dschloe.github.io/settings/vscode_wsl2/)\n\n- C드라이브에 폴더를 만든다(여기에선 dataEngineering)\n- Ubuntu를 열고 다음 코드를 입력해 C\\dataEngineering 폴더에 접속한다.\n- mkdir abc = 새로운 abc 폴더 생성\n- rm -rm abc : abc폴더 만 지운다\n- rm -rm * : 전체 삭제\n\n```\ncd mnt\ncd c\ncd dataEngineering\n\ncode .\n```\n\n- code . 까지 입력하면 VS Code 가 열릴텐데 터미널 열고서 파이썬 버전 확인\n\n![Untitled](/images/Linux/Untitled%2013.png)\n\n- sudo apt-get update 입력\n\n![Untitled](/images/Linux/Untitled%2014.png)\n\n- sudo apt install python3-pip 입력\n\n![Untitled](/images/Linux/Untitled%2015.png)\n\n- sudo pip3 install virtualenv 입력\n\n![Untitled](/images/Linux/Untitled%2016.png)\n\n- 가상환경 생성 코드 virtualenv venv 입력\n- 가상환경 접속 코드 source venv/bin/activate 입력\n- 윈도우와 리눅스의 가상환경 차이점 =  source venv 다음 /bin 으로 시작한다\n\n![Untitled](/images/Linux/Untitled%2017.png)\n\n### 환경 변수 설정하기\n\n- pwd 입력 후 경로 확인후 복사\n\n![Untitled](/images/Linux/Untitled%2018.png)\n\n- vi ~/.bashrc 입력 하면 환경 변수에 접속한다\n\n![Untitled](/images/Linux/Untitled%2019.png)\n\n- 다음과 같은 화면이 뜨면 vi 편집기로 활성화 됨\n- 여기서 “i” 를 누르면 INSERT 모드로 진입된다. 맨 밑으로 스크롤해서 내림\n- export AIRFLOW_HOME=(아까 그 pwd 경로입력)\n\n![Untitled](/images/Linux/Untitled%2020.png)\n\n- 중간에 ‘=’ 을 띄어쓰기 하면 안됨!!\n- 입력모드 종료는 ESC 키 누르면 됨\n- :wq! 를 입력(저장한다는 뜻)   :q!  는 저장하지 않고 나간다는 뜻, 잘못 만졌을 때 유용하다.\n\n![Untitled](/images/Linux/Untitled%2021.png)\n\n- source ~/.bashrc 까지 입력해야 배포가 완료됨\n\n![Untitled](/images/Linux/Untitled%2022.png)\n\n- 배포하면 venv 가 사라지기 때문에 항상 다시 가상환경 설정해야함\n- echo $AIRFLOW_HOME 입력 해서 배포됐는지 확인\n\n![Untitled](/images/Linux/Untitled%2023.png)\n\n- pip3 install ‘apache-airflow[postgres,slack,celery]’  입력\n\n![Untitled](/images/Linux/Untitled%2024.png)\n\n- 설치 완료되면 airflow db init 입력\n\n![Untitled](/images/Linux/Untitled%2025.png)\n\n- 다음 코드를 입력해서 airflow 입력\n\n```\nairflow users create --username airflow --password airflow --firstname evan --lastname airflow --role Admin --email your_email@some.com\n```\n\n- airflow webserver -p 8081 입력\n- 주소창에 [localhost:1234](http://localhost:1234) 로 접속하면 airflow 로컬 홈페이지가 나온다","source":"_posts/Linux 설치.md","raw":"---\ntitle: \"Linux 환경 만들기\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: Linux\nclearReading: true\nthumbnailImage: Linux.png\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-07-27 16:54:02'\n---\n\n## Linux 설치\n<!-- excerpt -->\n## vi 편집기 사용 꼭 공부 하기\n\n\n- 윈도우 버전이 20H1, 20H2, 21H1, 21H2 보다 높아야 됨\n\n![Untitled](/images/Linux/Untitled.png)\n\n- powershell 관리자로 실행\n- 다음 코드 입력\n\n```powershell\ndism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart\n\ndism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart\n\n```\n\n- 인터넷 주소창에 다음 코드 입력\n\n```powershell\nhttps://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi\n```\n\n- 다운 받은 후 설치\n- Microsoft Store 에서 ubuntu 설치\n\n![Untitled](/images/Linux/Untitled%201.png)\n\n- Ubuntu 20.04.4 버전으로 다운로드\n    - 나중에 설정이 꼬였을 때 윈도우 포맷하는 것 처럼 Ubuntu를 삭제하고 다시 설치하면 된다.\n\n![Untitled](/images/Linux/Untitled%202.png)\n\n- Ubuntu 실행\n\n![Untitled](/images/Linux/Untitled%203.png)\n\n- 만약 다음과 같은 메세지가 뜬다면 가상환경을 확인해야 한다\n\n![Untitled](/images/Linux/Untitled%204.png)\n\n- Windows 기능 켜기/끄기 열기\n\n![Untitled](/images/Linux/Untitled%205.png)\n\n- Windows 하이퍼바이저 플랫폼 체크 후 재부팅\n\n![Untitled](/images/Linux/Untitled%206.png)\n\n- 재부팅 후 Ubuntu 실행\n- Ubuntu 아이디 비밀번호 만들기 (***비밀번호는 입력해도 안 보인다!!***)\n\n![Untitled](/images/Linux/Untitled%207.png)\n\n- 다시 powershell 실행 후 다음 코드 입력\n\n```powershell\nwsl --set-default-version 2\n```\n\n- 다음과 같이 뜨면 성공!\n\n![Untitled](/images/Linux/Untitled%208.png)\n\n- 코드 wsl -l -v 입력 후 버전이 1이 나오면 Ubuntu 제거 후 다시 설치하고 Ubuntu 로그인 후\n- 맨 위에 PowerShell 코드 다시 입력\n\n![Untitled](/images/Linux/Untitled%209.png)\n\n- 그 다음 wsl -l -v 치면 버전 2가 나옴(나오면 꺼도 됨)\n\n- 시스템 환경 변수 들어가서 환경 변수 탭 —> Path 편집\n\n![Untitled](/images/Linux/Untitled%2010.png)\n\n![Untitled](/images/Linux/Untitled%2011.png)\n\n![Untitled](/images/Linux/Untitled%2012.png)\n\n- VS Code 저 경로가 있는지 확인한다.\n\n---\n\n### 환경변수를 사용하는 이유\n\n빅데이터 플랫폼 / 웹사이트 구축할 때\n\n- 레고블록 쌓을때 맞물려 쌓듯이 연결해주는 것이 Configuration(환경 변수) 인데\n    \n    이 환경 변수가 유기적으로 연결 되지 않으면 에러가 뜨거나 실행이 안된다.\n    \n\n---\n\n- 다음 사이트 참고하여서 VS Code 에 연결\n- [https://dschloe.github.io/settings/vscode_wsl2/](https://dschloe.github.io/settings/vscode_wsl2/)\n\n- C드라이브에 폴더를 만든다(여기에선 dataEngineering)\n- Ubuntu를 열고 다음 코드를 입력해 C\\dataEngineering 폴더에 접속한다.\n- mkdir abc = 새로운 abc 폴더 생성\n- rm -rm abc : abc폴더 만 지운다\n- rm -rm * : 전체 삭제\n\n```\ncd mnt\ncd c\ncd dataEngineering\n\ncode .\n```\n\n- code . 까지 입력하면 VS Code 가 열릴텐데 터미널 열고서 파이썬 버전 확인\n\n![Untitled](/images/Linux/Untitled%2013.png)\n\n- sudo apt-get update 입력\n\n![Untitled](/images/Linux/Untitled%2014.png)\n\n- sudo apt install python3-pip 입력\n\n![Untitled](/images/Linux/Untitled%2015.png)\n\n- sudo pip3 install virtualenv 입력\n\n![Untitled](/images/Linux/Untitled%2016.png)\n\n- 가상환경 생성 코드 virtualenv venv 입력\n- 가상환경 접속 코드 source venv/bin/activate 입력\n- 윈도우와 리눅스의 가상환경 차이점 =  source venv 다음 /bin 으로 시작한다\n\n![Untitled](/images/Linux/Untitled%2017.png)\n\n### 환경 변수 설정하기\n\n- pwd 입력 후 경로 확인후 복사\n\n![Untitled](/images/Linux/Untitled%2018.png)\n\n- vi ~/.bashrc 입력 하면 환경 변수에 접속한다\n\n![Untitled](/images/Linux/Untitled%2019.png)\n\n- 다음과 같은 화면이 뜨면 vi 편집기로 활성화 됨\n- 여기서 “i” 를 누르면 INSERT 모드로 진입된다. 맨 밑으로 스크롤해서 내림\n- export AIRFLOW_HOME=(아까 그 pwd 경로입력)\n\n![Untitled](/images/Linux/Untitled%2020.png)\n\n- 중간에 ‘=’ 을 띄어쓰기 하면 안됨!!\n- 입력모드 종료는 ESC 키 누르면 됨\n- :wq! 를 입력(저장한다는 뜻)   :q!  는 저장하지 않고 나간다는 뜻, 잘못 만졌을 때 유용하다.\n\n![Untitled](/images/Linux/Untitled%2021.png)\n\n- source ~/.bashrc 까지 입력해야 배포가 완료됨\n\n![Untitled](/images/Linux/Untitled%2022.png)\n\n- 배포하면 venv 가 사라지기 때문에 항상 다시 가상환경 설정해야함\n- echo $AIRFLOW_HOME 입력 해서 배포됐는지 확인\n\n![Untitled](/images/Linux/Untitled%2023.png)\n\n- pip3 install ‘apache-airflow[postgres,slack,celery]’  입력\n\n![Untitled](/images/Linux/Untitled%2024.png)\n\n- 설치 완료되면 airflow db init 입력\n\n![Untitled](/images/Linux/Untitled%2025.png)\n\n- 다음 코드를 입력해서 airflow 입력\n\n```\nairflow users create --username airflow --password airflow --firstname evan --lastname airflow --role Admin --email your_email@some.com\n```\n\n- airflow webserver -p 8081 입력\n- 주소창에 [localhost:1234](http://localhost:1234) 로 접속하면 airflow 로컬 홈페이지가 나온다","slug":"Linux 설치","published":1,"updated":"2022-07-29T03:41:03.784Z","_id":"cl63b8xi80000m8uo3ps23ji7","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n<h2 id=\"vi-편집기-사용-꼭-공부-하기\"><a href=\"#vi-편집기-사용-꼭-공부-하기\" class=\"headerlink\" title=\"vi 편집기 사용 꼭 공부 하기\"></a>vi 편집기 사용 꼭 공부 하기</h2><ul>\n<li>윈도우 버전이 20H1, 20H2, 21H1, 21H2 보다 높아야 됨</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled.png\" alt=\"Untitled\"></p>\n<ul>\n<li>powershell 관리자로 실행</li>\n<li>다음 코드 입력</li>\n</ul>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dism.exe /online /<span class=\"built_in\">enable-feature</span> /featurename:Microsoft<span class=\"literal\">-Windows-Subsystem-Linux</span> /all /norestart</span><br><span class=\"line\"></span><br><span class=\"line\">dism.exe /online /<span class=\"built_in\">enable-feature</span> /featurename:VirtualMachinePlatform /all /norestart</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>인터넷 주소창에 다음 코드 입력</li>\n</ul>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>다운 받은 후 설치</li>\n<li>Microsoft Store 에서 ubuntu 설치</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%201.png\" alt=\"Untitled\"></p>\n<ul>\n<li>Ubuntu 20.04.4 버전으로 다운로드<ul>\n<li>나중에 설정이 꼬였을 때 윈도우 포맷하는 것 처럼 Ubuntu를 삭제하고 다시 설치하면 된다.</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%202.png\" alt=\"Untitled\"></p>\n<ul>\n<li>Ubuntu 실행</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%203.png\" alt=\"Untitled\"></p>\n<ul>\n<li>만약 다음과 같은 메세지가 뜬다면 가상환경을 확인해야 한다</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%204.png\" alt=\"Untitled\"></p>\n<ul>\n<li>Windows 기능 켜기&#x2F;끄기 열기</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%205.png\" alt=\"Untitled\"></p>\n<ul>\n<li>Windows 하이퍼바이저 플랫폼 체크 후 재부팅</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%206.png\" alt=\"Untitled\"></p>\n<ul>\n<li>재부팅 후 Ubuntu 실행</li>\n<li>Ubuntu 아이디 비밀번호 만들기 (<em><strong>비밀번호는 입력해도 안 보인다!!</strong></em>)</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%207.png\" alt=\"Untitled\"></p>\n<ul>\n<li>다시 powershell 실행 후 다음 코드 입력</li>\n</ul>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl <span class=\"literal\">--set-default-version</span> <span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>다음과 같이 뜨면 성공!</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%208.png\" alt=\"Untitled\"></p>\n<ul>\n<li>코드 wsl -l -v 입력 후 버전이 1이 나오면 Ubuntu 제거 후 다시 설치하고 Ubuntu 로그인 후</li>\n<li>맨 위에 PowerShell 코드 다시 입력</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%209.png\" alt=\"Untitled\"></p>\n<ul>\n<li><p>그 다음 wsl -l -v 치면 버전 2가 나옴(나오면 꺼도 됨)</p>\n</li>\n<li><p>시스템 환경 변수 들어가서 환경 변수 탭 —&gt; Path 편집</p>\n</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%2010.png\" alt=\"Untitled\"></p>\n<p><img src=\"/images/Linux/Untitled%2011.png\" alt=\"Untitled\"></p>\n<p><img src=\"/images/Linux/Untitled%2012.png\" alt=\"Untitled\"></p>\n<ul>\n<li>VS Code 저 경로가 있는지 확인한다.</li>\n</ul>\n<hr>\n<h3 id=\"환경변수를-사용하는-이유\"><a href=\"#환경변수를-사용하는-이유\" class=\"headerlink\" title=\"환경변수를 사용하는 이유\"></a>환경변수를 사용하는 이유</h3><p>빅데이터 플랫폼 &#x2F; 웹사이트 구축할 때</p>\n<ul>\n<li><p>레고블록 쌓을때 맞물려 쌓듯이 연결해주는 것이 Configuration(환경 변수) 인데</p>\n<p>  이 환경 변수가 유기적으로 연결 되지 않으면 에러가 뜨거나 실행이 안된다.</p>\n</li>\n</ul>\n<hr>\n<ul>\n<li><p>다음 사이트 참고하여서 VS Code 에 연결</p>\n</li>\n<li><p><a href=\"https://dschloe.github.io/settings/vscode_wsl2/\">https://dschloe.github.io/settings/vscode_wsl2&#x2F;</a></p>\n</li>\n<li><p>C드라이브에 폴더를 만든다(여기에선 dataEngineering)</p>\n</li>\n<li><p>Ubuntu를 열고 다음 코드를 입력해 C\\dataEngineering 폴더에 접속한다.</p>\n</li>\n<li><p>mkdir abc &#x3D; 새로운 abc 폴더 생성</p>\n</li>\n<li><p>rm -rm abc : abc폴더 만 지운다</p>\n</li>\n<li><p>rm -rm * : 전체 삭제</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd mnt</span><br><span class=\"line\">cd c</span><br><span class=\"line\">cd dataEngineering</span><br><span class=\"line\"></span><br><span class=\"line\">code .</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>code . 까지 입력하면 VS Code 가 열릴텐데 터미널 열고서 파이썬 버전 확인</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%2013.png\" alt=\"Untitled\"></p>\n<ul>\n<li>sudo apt-get update 입력</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%2014.png\" alt=\"Untitled\"></p>\n<ul>\n<li>sudo apt install python3-pip 입력</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%2015.png\" alt=\"Untitled\"></p>\n<ul>\n<li>sudo pip3 install virtualenv 입력</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%2016.png\" alt=\"Untitled\"></p>\n<ul>\n<li>가상환경 생성 코드 virtualenv venv 입력</li>\n<li>가상환경 접속 코드 source venv&#x2F;bin&#x2F;activate 입력</li>\n<li>윈도우와 리눅스의 가상환경 차이점 &#x3D;  source venv 다음 &#x2F;bin 으로 시작한다</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%2017.png\" alt=\"Untitled\"></p>\n<h3 id=\"환경-변수-설정하기\"><a href=\"#환경-변수-설정하기\" class=\"headerlink\" title=\"환경 변수 설정하기\"></a>환경 변수 설정하기</h3><ul>\n<li>pwd 입력 후 경로 확인후 복사</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%2018.png\" alt=\"Untitled\"></p>\n<ul>\n<li>vi ~&#x2F;.bashrc 입력 하면 환경 변수에 접속한다</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%2019.png\" alt=\"Untitled\"></p>\n<ul>\n<li>다음과 같은 화면이 뜨면 vi 편집기로 활성화 됨</li>\n<li>여기서 “i” 를 누르면 INSERT 모드로 진입된다. 맨 밑으로 스크롤해서 내림</li>\n<li>export AIRFLOW_HOME&#x3D;(아까 그 pwd 경로입력)</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%2020.png\" alt=\"Untitled\"></p>\n<ul>\n<li>중간에 ‘&#x3D;’ 을 띄어쓰기 하면 안됨!!</li>\n<li>입력모드 종료는 ESC 키 누르면 됨</li>\n<li>:wq! 를 입력(저장한다는 뜻)   :q!  는 저장하지 않고 나간다는 뜻, 잘못 만졌을 때 유용하다.</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%2021.png\" alt=\"Untitled\"></p>\n<ul>\n<li>source ~&#x2F;.bashrc 까지 입력해야 배포가 완료됨</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%2022.png\" alt=\"Untitled\"></p>\n<ul>\n<li>배포하면 venv 가 사라지기 때문에 항상 다시 가상환경 설정해야함</li>\n<li>echo $AIRFLOW_HOME 입력 해서 배포됐는지 확인</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%2023.png\" alt=\"Untitled\"></p>\n<ul>\n<li>pip3 install ‘apache-airflow[postgres,slack,celery]’  입력</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%2024.png\" alt=\"Untitled\"></p>\n<ul>\n<li>설치 완료되면 airflow db init 입력</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%2025.png\" alt=\"Untitled\"></p>\n<ul>\n<li>다음 코드를 입력해서 airflow 입력</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">airflow users create --username airflow --password airflow --firstname evan --lastname airflow --role Admin --email your_email@some.com</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>airflow webserver -p 8081 입력</li>\n<li>주소창에 <a href=\"http://localhost:1234/\">localhost:1234</a> 로 접속하면 airflow 로컬 홈페이지가 나온다</li>\n</ul>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/07/27/Linux%20%EC%84%A4%EC%B9%98/Linux.png","excerpt":"<h2 id=\"Linux-설치\"><a href=\"#Linux-설치\" class=\"headerlink\" title=\"Linux 설치\"></a>Linux 설치</h2>","more":"<h2 id=\"Linux-설치\"><a href=\"#Linux-설치\" class=\"headerlink\" title=\"Linux 설치\"></a>Linux 설치</h2><!-- excerpt -->\n<h2 id=\"vi-편집기-사용-꼭-공부-하기\"><a href=\"#vi-편집기-사용-꼭-공부-하기\" class=\"headerlink\" title=\"vi 편집기 사용 꼭 공부 하기\"></a>vi 편집기 사용 꼭 공부 하기</h2><ul>\n<li>윈도우 버전이 20H1, 20H2, 21H1, 21H2 보다 높아야 됨</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled.png\" alt=\"Untitled\"></p>\n<ul>\n<li>powershell 관리자로 실행</li>\n<li>다음 코드 입력</li>\n</ul>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dism.exe /online /<span class=\"built_in\">enable-feature</span> /featurename:Microsoft<span class=\"literal\">-Windows-Subsystem-Linux</span> /all /norestart</span><br><span class=\"line\"></span><br><span class=\"line\">dism.exe /online /<span class=\"built_in\">enable-feature</span> /featurename:VirtualMachinePlatform /all /norestart</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>인터넷 주소창에 다음 코드 입력</li>\n</ul>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>다운 받은 후 설치</li>\n<li>Microsoft Store 에서 ubuntu 설치</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%201.png\" alt=\"Untitled\"></p>\n<ul>\n<li>Ubuntu 20.04.4 버전으로 다운로드<ul>\n<li>나중에 설정이 꼬였을 때 윈도우 포맷하는 것 처럼 Ubuntu를 삭제하고 다시 설치하면 된다.</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%202.png\" alt=\"Untitled\"></p>\n<ul>\n<li>Ubuntu 실행</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%203.png\" alt=\"Untitled\"></p>\n<ul>\n<li>만약 다음과 같은 메세지가 뜬다면 가상환경을 확인해야 한다</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%204.png\" alt=\"Untitled\"></p>\n<ul>\n<li>Windows 기능 켜기&#x2F;끄기 열기</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%205.png\" alt=\"Untitled\"></p>\n<ul>\n<li>Windows 하이퍼바이저 플랫폼 체크 후 재부팅</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%206.png\" alt=\"Untitled\"></p>\n<ul>\n<li>재부팅 후 Ubuntu 실행</li>\n<li>Ubuntu 아이디 비밀번호 만들기 (<em><strong>비밀번호는 입력해도 안 보인다!!</strong></em>)</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%207.png\" alt=\"Untitled\"></p>\n<ul>\n<li>다시 powershell 실행 후 다음 코드 입력</li>\n</ul>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl <span class=\"literal\">--set-default-version</span> <span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>다음과 같이 뜨면 성공!</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%208.png\" alt=\"Untitled\"></p>\n<ul>\n<li>코드 wsl -l -v 입력 후 버전이 1이 나오면 Ubuntu 제거 후 다시 설치하고 Ubuntu 로그인 후</li>\n<li>맨 위에 PowerShell 코드 다시 입력</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%209.png\" alt=\"Untitled\"></p>\n<ul>\n<li><p>그 다음 wsl -l -v 치면 버전 2가 나옴(나오면 꺼도 됨)</p>\n</li>\n<li><p>시스템 환경 변수 들어가서 환경 변수 탭 —&gt; Path 편집</p>\n</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%2010.png\" alt=\"Untitled\"></p>\n<p><img src=\"/images/Linux/Untitled%2011.png\" alt=\"Untitled\"></p>\n<p><img src=\"/images/Linux/Untitled%2012.png\" alt=\"Untitled\"></p>\n<ul>\n<li>VS Code 저 경로가 있는지 확인한다.</li>\n</ul>\n<hr>\n<h3 id=\"환경변수를-사용하는-이유\"><a href=\"#환경변수를-사용하는-이유\" class=\"headerlink\" title=\"환경변수를 사용하는 이유\"></a>환경변수를 사용하는 이유</h3><p>빅데이터 플랫폼 &#x2F; 웹사이트 구축할 때</p>\n<ul>\n<li><p>레고블록 쌓을때 맞물려 쌓듯이 연결해주는 것이 Configuration(환경 변수) 인데</p>\n<p>  이 환경 변수가 유기적으로 연결 되지 않으면 에러가 뜨거나 실행이 안된다.</p>\n</li>\n</ul>\n<hr>\n<ul>\n<li><p>다음 사이트 참고하여서 VS Code 에 연결</p>\n</li>\n<li><p><a href=\"https://dschloe.github.io/settings/vscode_wsl2/\">https://dschloe.github.io/settings/vscode_wsl2&#x2F;</a></p>\n</li>\n<li><p>C드라이브에 폴더를 만든다(여기에선 dataEngineering)</p>\n</li>\n<li><p>Ubuntu를 열고 다음 코드를 입력해 C\\dataEngineering 폴더에 접속한다.</p>\n</li>\n<li><p>mkdir abc &#x3D; 새로운 abc 폴더 생성</p>\n</li>\n<li><p>rm -rm abc : abc폴더 만 지운다</p>\n</li>\n<li><p>rm -rm * : 전체 삭제</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd mnt</span><br><span class=\"line\">cd c</span><br><span class=\"line\">cd dataEngineering</span><br><span class=\"line\"></span><br><span class=\"line\">code .</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>code . 까지 입력하면 VS Code 가 열릴텐데 터미널 열고서 파이썬 버전 확인</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%2013.png\" alt=\"Untitled\"></p>\n<ul>\n<li>sudo apt-get update 입력</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%2014.png\" alt=\"Untitled\"></p>\n<ul>\n<li>sudo apt install python3-pip 입력</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%2015.png\" alt=\"Untitled\"></p>\n<ul>\n<li>sudo pip3 install virtualenv 입력</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%2016.png\" alt=\"Untitled\"></p>\n<ul>\n<li>가상환경 생성 코드 virtualenv venv 입력</li>\n<li>가상환경 접속 코드 source venv&#x2F;bin&#x2F;activate 입력</li>\n<li>윈도우와 리눅스의 가상환경 차이점 &#x3D;  source venv 다음 &#x2F;bin 으로 시작한다</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%2017.png\" alt=\"Untitled\"></p>\n<h3 id=\"환경-변수-설정하기\"><a href=\"#환경-변수-설정하기\" class=\"headerlink\" title=\"환경 변수 설정하기\"></a>환경 변수 설정하기</h3><ul>\n<li>pwd 입력 후 경로 확인후 복사</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%2018.png\" alt=\"Untitled\"></p>\n<ul>\n<li>vi ~&#x2F;.bashrc 입력 하면 환경 변수에 접속한다</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%2019.png\" alt=\"Untitled\"></p>\n<ul>\n<li>다음과 같은 화면이 뜨면 vi 편집기로 활성화 됨</li>\n<li>여기서 “i” 를 누르면 INSERT 모드로 진입된다. 맨 밑으로 스크롤해서 내림</li>\n<li>export AIRFLOW_HOME&#x3D;(아까 그 pwd 경로입력)</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%2020.png\" alt=\"Untitled\"></p>\n<ul>\n<li>중간에 ‘&#x3D;’ 을 띄어쓰기 하면 안됨!!</li>\n<li>입력모드 종료는 ESC 키 누르면 됨</li>\n<li>:wq! 를 입력(저장한다는 뜻)   :q!  는 저장하지 않고 나간다는 뜻, 잘못 만졌을 때 유용하다.</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%2021.png\" alt=\"Untitled\"></p>\n<ul>\n<li>source ~&#x2F;.bashrc 까지 입력해야 배포가 완료됨</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%2022.png\" alt=\"Untitled\"></p>\n<ul>\n<li>배포하면 venv 가 사라지기 때문에 항상 다시 가상환경 설정해야함</li>\n<li>echo $AIRFLOW_HOME 입력 해서 배포됐는지 확인</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%2023.png\" alt=\"Untitled\"></p>\n<ul>\n<li>pip3 install ‘apache-airflow[postgres,slack,celery]’  입력</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%2024.png\" alt=\"Untitled\"></p>\n<ul>\n<li>설치 완료되면 airflow db init 입력</li>\n</ul>\n<p><img src=\"/images/Linux/Untitled%2025.png\" alt=\"Untitled\"></p>\n<ul>\n<li>다음 코드를 입력해서 airflow 입력</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">airflow users create --username airflow --password airflow --firstname evan --lastname airflow --role Admin --email your_email@some.com</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>airflow webserver -p 8081 입력</li>\n<li>주소창에 <a href=\"http://localhost:1234/\">localhost:1234</a> 로 접속하면 airflow 로컬 홈페이지가 나온다</li>\n</ul>\n"},{"title":"크롤링 설치 및 연습","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"thumbnailImage":"Linux.png","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-07-29T08:35:21.000Z","_content":"\n### 크롤링 설치\n<!-- excerpt -->\n\n- 바탕화면에 폴더 만들고\n- ‘requirements.txt’ 파일을 생성한 후 아래 코드\n\n```python\nbeautifulsoup4==4.11.1\nipywidgets==7.7.1\njupyterlab==3.4.4\nlxml==4.9.1\nmatplotlib==3.5.2\nnumpy==1.23.1\nopenpyxl==3.0.10\npandas==1.4.3\nrequests==2.28.1\nselenium==4.3.0\ntqdm==4.64.0\n```\n\n- 라이브러리\n    \n    ![Untitled](/images/Crawling_Practice/Untitled.png)\n\n\n- git bash 터미널로 열고 virtualenv venv 입력\n    \n    ![Untitled](/images/Crawling_Practice/Untitled%201.png)\n    \n- 다음과 같이 가상환경에 접속한다.\n- which python 은 접속됐는지 확인하는 코드\n    \n    ![Untitled](/images/Crawling_Practice/Untitled%202.png)\n    \n- pip install -r requirements.txt 입력(파일은 tab키로 입력한다.)\n    \n    ![Untitled](/images/Crawling_Practice/Untitled%203.png)\n    \n- [https://dschloe.github.io/python/crawling/python_selenium_crawling/](https://dschloe.github.io/python/crawling/python_selenium_crawling/) 참고해서\n    \n    크롬 버전에 맞는 chromedriver.exe 파일 다운(윈도우는 32버전 다운)\n    \n- Jupyter lab 실행\n    \n    ![Untitled](/images/Crawling_Practice/Untitled%204.png)\n    \n- 코드는 이런식으로 작성\n    \n    ![Untitled](/images/Crawling_Practice/Untitled%205.png)\n    \n\n### 크롤링 연습 및 홈페이지 예제 만들기\n\n- 크롤링 연습 및 html\n    \n    ![Untitled](/images/Crawling_Practice/Untitled%206.png)\n    \n- Live Server 확장 설치\n    \n    ![Untitled](/images/Crawling_Practice/Untitled%207.png)\n    \n- 오른쪽 아래 Go Live 클릭하면 위에 코드 친 대로 홈페이지 생성\n    \n    ![Untitled](/images/Crawling_Practice/Untitled%208.png)","source":"_posts/Crawling_Practice.md","raw":"---\ntitle: \"크롤링 설치 및 연습\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: Linux\nclearReading: true\nthumbnailImage: Linux.png\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-07-29 17:35:21'\n---\n\n### 크롤링 설치\n<!-- excerpt -->\n\n- 바탕화면에 폴더 만들고\n- ‘requirements.txt’ 파일을 생성한 후 아래 코드\n\n```python\nbeautifulsoup4==4.11.1\nipywidgets==7.7.1\njupyterlab==3.4.4\nlxml==4.9.1\nmatplotlib==3.5.2\nnumpy==1.23.1\nopenpyxl==3.0.10\npandas==1.4.3\nrequests==2.28.1\nselenium==4.3.0\ntqdm==4.64.0\n```\n\n- 라이브러리\n    \n    ![Untitled](/images/Crawling_Practice/Untitled.png)\n\n\n- git bash 터미널로 열고 virtualenv venv 입력\n    \n    ![Untitled](/images/Crawling_Practice/Untitled%201.png)\n    \n- 다음과 같이 가상환경에 접속한다.\n- which python 은 접속됐는지 확인하는 코드\n    \n    ![Untitled](/images/Crawling_Practice/Untitled%202.png)\n    \n- pip install -r requirements.txt 입력(파일은 tab키로 입력한다.)\n    \n    ![Untitled](/images/Crawling_Practice/Untitled%203.png)\n    \n- [https://dschloe.github.io/python/crawling/python_selenium_crawling/](https://dschloe.github.io/python/crawling/python_selenium_crawling/) 참고해서\n    \n    크롬 버전에 맞는 chromedriver.exe 파일 다운(윈도우는 32버전 다운)\n    \n- Jupyter lab 실행\n    \n    ![Untitled](/images/Crawling_Practice/Untitled%204.png)\n    \n- 코드는 이런식으로 작성\n    \n    ![Untitled](/images/Crawling_Practice/Untitled%205.png)\n    \n\n### 크롤링 연습 및 홈페이지 예제 만들기\n\n- 크롤링 연습 및 html\n    \n    ![Untitled](/images/Crawling_Practice/Untitled%206.png)\n    \n- Live Server 확장 설치\n    \n    ![Untitled](/images/Crawling_Practice/Untitled%207.png)\n    \n- 오른쪽 아래 Go Live 클릭하면 위에 코드 친 대로 홈페이지 생성\n    \n    ![Untitled](/images/Crawling_Practice/Untitled%208.png)","slug":"Crawling_Practice","published":1,"updated":"2022-08-05T13:36:47.232Z","_id":"cl661jpab0000ukuo8la8go4g","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n<ul>\n<li>바탕화면에 폴더 만들고</li>\n<li>‘requirements.txt’ 파일을 생성한 후 아래 코드</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">beautifulsoup4==<span class=\"number\">4.11</span><span class=\"number\">.1</span></span><br><span class=\"line\">ipywidgets==<span class=\"number\">7.7</span><span class=\"number\">.1</span></span><br><span class=\"line\">jupyterlab==<span class=\"number\">3.4</span><span class=\"number\">.4</span></span><br><span class=\"line\">lxml==<span class=\"number\">4.9</span><span class=\"number\">.1</span></span><br><span class=\"line\">matplotlib==<span class=\"number\">3.5</span><span class=\"number\">.2</span></span><br><span class=\"line\">numpy==<span class=\"number\">1.23</span><span class=\"number\">.1</span></span><br><span class=\"line\">openpyxl==<span class=\"number\">3.0</span><span class=\"number\">.10</span></span><br><span class=\"line\">pandas==<span class=\"number\">1.4</span><span class=\"number\">.3</span></span><br><span class=\"line\">requests==<span class=\"number\">2.28</span><span class=\"number\">.1</span></span><br><span class=\"line\">selenium==<span class=\"number\">4.3</span><span class=\"number\">.0</span></span><br><span class=\"line\">tqdm==<span class=\"number\">4.64</span><span class=\"number\">.0</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>라이브러리</p>\n<p>  <img src=\"/images/Crawling_Practice/Untitled.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>git bash 터미널로 열고 virtualenv venv 입력</p>\n<p>  <img src=\"/images/Crawling_Practice/Untitled%201.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>다음과 같이 가상환경에 접속한다.</p>\n</li>\n<li><p>which python 은 접속됐는지 확인하는 코드</p>\n<p>  <img src=\"/images/Crawling_Practice/Untitled%202.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>pip install -r requirements.txt 입력(파일은 tab키로 입력한다.)</p>\n<p>  <img src=\"/images/Crawling_Practice/Untitled%203.png\" alt=\"Untitled\"></p>\n</li>\n<li><p><a href=\"https://dschloe.github.io/python/crawling/python_selenium_crawling/\">https://dschloe.github.io/python/crawling/python_selenium_crawling&#x2F;</a> 참고해서</p>\n<p>  크롬 버전에 맞는 chromedriver.exe 파일 다운(윈도우는 32버전 다운)</p>\n</li>\n<li><p>Jupyter lab 실행</p>\n<p>  <img src=\"/images/Crawling_Practice/Untitled%204.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>코드는 이런식으로 작성</p>\n<p>  <img src=\"/images/Crawling_Practice/Untitled%205.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<h3 id=\"크롤링-연습-및-홈페이지-예제-만들기\"><a href=\"#크롤링-연습-및-홈페이지-예제-만들기\" class=\"headerlink\" title=\"크롤링 연습 및 홈페이지 예제 만들기\"></a>크롤링 연습 및 홈페이지 예제 만들기</h3><ul>\n<li><p>크롤링 연습 및 html</p>\n<p>  <img src=\"/images/Crawling_Practice/Untitled%206.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>Live Server 확장 설치</p>\n<p>  <img src=\"/images/Crawling_Practice/Untitled%207.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>오른쪽 아래 Go Live 클릭하면 위에 코드 친 대로 홈페이지 생성</p>\n<p>  <img src=\"/images/Crawling_Practice/Untitled%208.png\" alt=\"Untitled\"></p>\n</li>\n</ul>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/07/29/Crawling_Practice/Linux.png","excerpt":"<h3 id=\"크롤링-설치\"><a href=\"#크롤링-설치\" class=\"headerlink\" title=\"크롤링 설치\"></a>크롤링 설치</h3>","more":"<h3 id=\"크롤링-설치\"><a href=\"#크롤링-설치\" class=\"headerlink\" title=\"크롤링 설치\"></a>크롤링 설치</h3><!-- excerpt -->\n\n<ul>\n<li>바탕화면에 폴더 만들고</li>\n<li>‘requirements.txt’ 파일을 생성한 후 아래 코드</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">beautifulsoup4==<span class=\"number\">4.11</span><span class=\"number\">.1</span></span><br><span class=\"line\">ipywidgets==<span class=\"number\">7.7</span><span class=\"number\">.1</span></span><br><span class=\"line\">jupyterlab==<span class=\"number\">3.4</span><span class=\"number\">.4</span></span><br><span class=\"line\">lxml==<span class=\"number\">4.9</span><span class=\"number\">.1</span></span><br><span class=\"line\">matplotlib==<span class=\"number\">3.5</span><span class=\"number\">.2</span></span><br><span class=\"line\">numpy==<span class=\"number\">1.23</span><span class=\"number\">.1</span></span><br><span class=\"line\">openpyxl==<span class=\"number\">3.0</span><span class=\"number\">.10</span></span><br><span class=\"line\">pandas==<span class=\"number\">1.4</span><span class=\"number\">.3</span></span><br><span class=\"line\">requests==<span class=\"number\">2.28</span><span class=\"number\">.1</span></span><br><span class=\"line\">selenium==<span class=\"number\">4.3</span><span class=\"number\">.0</span></span><br><span class=\"line\">tqdm==<span class=\"number\">4.64</span><span class=\"number\">.0</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>라이브러리</p>\n<p>  <img src=\"/images/Crawling_Practice/Untitled.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>git bash 터미널로 열고 virtualenv venv 입력</p>\n<p>  <img src=\"/images/Crawling_Practice/Untitled%201.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>다음과 같이 가상환경에 접속한다.</p>\n</li>\n<li><p>which python 은 접속됐는지 확인하는 코드</p>\n<p>  <img src=\"/images/Crawling_Practice/Untitled%202.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>pip install -r requirements.txt 입력(파일은 tab키로 입력한다.)</p>\n<p>  <img src=\"/images/Crawling_Practice/Untitled%203.png\" alt=\"Untitled\"></p>\n</li>\n<li><p><a href=\"https://dschloe.github.io/python/crawling/python_selenium_crawling/\">https://dschloe.github.io/python/crawling/python_selenium_crawling&#x2F;</a> 참고해서</p>\n<p>  크롬 버전에 맞는 chromedriver.exe 파일 다운(윈도우는 32버전 다운)</p>\n</li>\n<li><p>Jupyter lab 실행</p>\n<p>  <img src=\"/images/Crawling_Practice/Untitled%204.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>코드는 이런식으로 작성</p>\n<p>  <img src=\"/images/Crawling_Practice/Untitled%205.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<h3 id=\"크롤링-연습-및-홈페이지-예제-만들기\"><a href=\"#크롤링-연습-및-홈페이지-예제-만들기\" class=\"headerlink\" title=\"크롤링 연습 및 홈페이지 예제 만들기\"></a>크롤링 연습 및 홈페이지 예제 만들기</h3><ul>\n<li><p>크롤링 연습 및 html</p>\n<p>  <img src=\"/images/Crawling_Practice/Untitled%206.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>Live Server 확장 설치</p>\n<p>  <img src=\"/images/Crawling_Practice/Untitled%207.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>오른쪽 아래 Go Live 클릭하면 위에 코드 친 대로 홈페이지 생성</p>\n<p>  <img src=\"/images/Crawling_Practice/Untitled%208.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n"},{"title":"day0728","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"thumbnailImage":"Linux.png","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-07-28T09:50:21.000Z","_content":"\n\n- csv 파일 불러서 DataFrame으로 불러오기\n- json 파일 불러서 DataFrame으로 불러오기\n<!-- excerpt -->\n\n## 뭐든지 책을 사면 책갈피에 적혀있는 소스코드부터 따라.\n\n- 1000개의 fake(가짜) 데이터를 생성\n\n```python\nfrom faker import Faker\nimport csv\n\ndef main():\n    output=open('data.csv', 'w')\n    fake=Faker()\n    header=['name', 'age', 'street', 'city', 'state', 'zip', 'lng', 'lat']\n    mywriter=csv.writer(output)\n    mywriter.writerow(header)\n    for r in range(1000):\n        mywriter.writerow([fake.name(),fake.random_int(min=18, max=80, step=1),\n        fake.street_address(),fake.city(),fake.state(),fake.zipcode(),fake.longitude(),\n        fake.latitude()])\n    output.close()\n\nif __name__ == \"__main__\":\n    main()\n```\n\n- 데이터를 제공하는 사이트가 csv 파일로 제공해주면 좋은데 json 파일로 제공해주더라도 DataFrame 형태로 만들 수 있어야 한다.\n- csv 파일 불러서 DataFrame 으로 불러오는 코드 샘플\n\n```python\n# -*- coding: utf-8 -*-\n\nimport csv\nimport pandas as pd\n\ndef main():\n    df = pd.read_csv('data.csv')\n    print(df.head())\n\nif __name__ == \"__main__\":\n    main()\n```\n\n- json 파일 불러서 DataFrame 으로 불러오는 코드 샘플\n\n```python\n# -*- coding: utf-8 -*-\n\nimport json\nimport pandas as pd\nimport pandas.io.json as pd_JSON\n\ndef read_json():\n    with open('data.json', 'r') as f:\n        data = json.load(f)\n\n    print(type(data))\n    print(data['records'][0]['name'])\n\ndef read_pandas():\n    df = pd.read_json('data.json')\n    print(\"기본 방법은 조금 복잡해요! :\\n\", df.head())\n\n    f = open('data.json', 'r')\n    data = pd_JSON.loads(f.read())\n    # print(data)\n    df = pd.json_normalize(data, record_path = 'records')\n    print(\"다른 방법도 복잡해요! :\\n\", df.head())\n\nif __name__ == \"__main__\":\n    read_pandas()\n```","source":"_posts/day0728.md","raw":"---\ntitle: \"day0728\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: Linux\nclearReading: true\nthumbnailImage: Linux.png\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-07-28 18:50:21'\n---\n\n\n- csv 파일 불러서 DataFrame으로 불러오기\n- json 파일 불러서 DataFrame으로 불러오기\n<!-- excerpt -->\n\n## 뭐든지 책을 사면 책갈피에 적혀있는 소스코드부터 따라.\n\n- 1000개의 fake(가짜) 데이터를 생성\n\n```python\nfrom faker import Faker\nimport csv\n\ndef main():\n    output=open('data.csv', 'w')\n    fake=Faker()\n    header=['name', 'age', 'street', 'city', 'state', 'zip', 'lng', 'lat']\n    mywriter=csv.writer(output)\n    mywriter.writerow(header)\n    for r in range(1000):\n        mywriter.writerow([fake.name(),fake.random_int(min=18, max=80, step=1),\n        fake.street_address(),fake.city(),fake.state(),fake.zipcode(),fake.longitude(),\n        fake.latitude()])\n    output.close()\n\nif __name__ == \"__main__\":\n    main()\n```\n\n- 데이터를 제공하는 사이트가 csv 파일로 제공해주면 좋은데 json 파일로 제공해주더라도 DataFrame 형태로 만들 수 있어야 한다.\n- csv 파일 불러서 DataFrame 으로 불러오는 코드 샘플\n\n```python\n# -*- coding: utf-8 -*-\n\nimport csv\nimport pandas as pd\n\ndef main():\n    df = pd.read_csv('data.csv')\n    print(df.head())\n\nif __name__ == \"__main__\":\n    main()\n```\n\n- json 파일 불러서 DataFrame 으로 불러오는 코드 샘플\n\n```python\n# -*- coding: utf-8 -*-\n\nimport json\nimport pandas as pd\nimport pandas.io.json as pd_JSON\n\ndef read_json():\n    with open('data.json', 'r') as f:\n        data = json.load(f)\n\n    print(type(data))\n    print(data['records'][0]['name'])\n\ndef read_pandas():\n    df = pd.read_json('data.json')\n    print(\"기본 방법은 조금 복잡해요! :\\n\", df.head())\n\n    f = open('data.json', 'r')\n    data = pd_JSON.loads(f.read())\n    # print(data)\n    df = pd.json_normalize(data, record_path = 'records')\n    print(\"다른 방법도 복잡해요! :\\n\", df.head())\n\nif __name__ == \"__main__\":\n    read_pandas()\n```","slug":"day0728","published":1,"updated":"2022-07-29T05:23:01.162Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl661jpag0003ukuo0i40guby","content":"<!-- excerpt --></li>\n</ul>\n<h2 id=\"뭐든지-책을-사면-책갈피에-적혀있는-소스코드부터-따라\"><a href=\"#뭐든지-책을-사면-책갈피에-적혀있는-소스코드부터-따라\" class=\"headerlink\" title=\"뭐든지 책을 사면 책갈피에 적혀있는 소스코드부터 따라.\"></a>뭐든지 책을 사면 책갈피에 적혀있는 소스코드부터 따라.</h2><ul>\n<li>1000개의 fake(가짜) 데이터를 생성</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> faker <span class=\"keyword\">import</span> Faker</span><br><span class=\"line\"><span class=\"keyword\">import</span> csv</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    output=<span class=\"built_in\">open</span>(<span class=\"string\">&#x27;data.csv&#x27;</span>, <span class=\"string\">&#x27;w&#x27;</span>)</span><br><span class=\"line\">    fake=Faker()</span><br><span class=\"line\">    header=[<span class=\"string\">&#x27;name&#x27;</span>, <span class=\"string\">&#x27;age&#x27;</span>, <span class=\"string\">&#x27;street&#x27;</span>, <span class=\"string\">&#x27;city&#x27;</span>, <span class=\"string\">&#x27;state&#x27;</span>, <span class=\"string\">&#x27;zip&#x27;</span>, <span class=\"string\">&#x27;lng&#x27;</span>, <span class=\"string\">&#x27;lat&#x27;</span>]</span><br><span class=\"line\">    mywriter=csv.writer(output)</span><br><span class=\"line\">    mywriter.writerow(header)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> r <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1000</span>):</span><br><span class=\"line\">        mywriter.writerow([fake.name(),fake.random_int(<span class=\"built_in\">min</span>=<span class=\"number\">18</span>, <span class=\"built_in\">max</span>=<span class=\"number\">80</span>, step=<span class=\"number\">1</span>),</span><br><span class=\"line\">        fake.street_address(),fake.city(),fake.state(),fake.zipcode(),fake.longitude(),</span><br><span class=\"line\">        fake.latitude()])</span><br><span class=\"line\">    output.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>데이터를 제공하는 사이트가 csv 파일로 제공해주면 좋은데 json 파일로 제공해주더라도 DataFrame 형태로 만들 수 있어야 한다.</li>\n<li>csv 파일 불러서 DataFrame 으로 불러오는 코드 샘플</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> csv</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    df = pd.read_csv(<span class=\"string\">&#x27;data.csv&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(df.head())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>json 파일 불러서 DataFrame 으로 불러오는 코드 샘플</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas.io.json <span class=\"keyword\">as</span> pd_JSON</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">read_json</span>():</span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;data.json&#x27;</span>, <span class=\"string\">&#x27;r&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        data = json.load(f)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(data))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(data[<span class=\"string\">&#x27;records&#x27;</span>][<span class=\"number\">0</span>][<span class=\"string\">&#x27;name&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">read_pandas</span>():</span><br><span class=\"line\">    df = pd.read_json(<span class=\"string\">&#x27;data.json&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;기본 방법은 조금 복잡해요! :\\n&quot;</span>, df.head())</span><br><span class=\"line\"></span><br><span class=\"line\">    f = <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;data.json&#x27;</span>, <span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\">    data = pd_JSON.loads(f.read())</span><br><span class=\"line\">    <span class=\"comment\"># print(data)</span></span><br><span class=\"line\">    df = pd.json_normalize(data, record_path = <span class=\"string\">&#x27;records&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;다른 방법도 복잡해요! :\\n&quot;</span>, df.head())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    read_pandas()</span><br></pre></td></tr></table></figure>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/07/28/day0728/Linux.png","excerpt":"<ul>\n<li>csv 파일 불러서 DataFrame으로 불러오기</li>\n<li>json 파일 불러서 DataFrame으로 불러오기","more":"<ul>\n<li>csv 파일 불러서 DataFrame으로 불러오기</li>\n<li>json 파일 불러서 DataFrame으로 불러오기<!-- excerpt --></li>\n</ul>\n<h2 id=\"뭐든지-책을-사면-책갈피에-적혀있는-소스코드부터-따라\"><a href=\"#뭐든지-책을-사면-책갈피에-적혀있는-소스코드부터-따라\" class=\"headerlink\" title=\"뭐든지 책을 사면 책갈피에 적혀있는 소스코드부터 따라.\"></a>뭐든지 책을 사면 책갈피에 적혀있는 소스코드부터 따라.</h2><ul>\n<li>1000개의 fake(가짜) 데이터를 생성</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> faker <span class=\"keyword\">import</span> Faker</span><br><span class=\"line\"><span class=\"keyword\">import</span> csv</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    output=<span class=\"built_in\">open</span>(<span class=\"string\">&#x27;data.csv&#x27;</span>, <span class=\"string\">&#x27;w&#x27;</span>)</span><br><span class=\"line\">    fake=Faker()</span><br><span class=\"line\">    header=[<span class=\"string\">&#x27;name&#x27;</span>, <span class=\"string\">&#x27;age&#x27;</span>, <span class=\"string\">&#x27;street&#x27;</span>, <span class=\"string\">&#x27;city&#x27;</span>, <span class=\"string\">&#x27;state&#x27;</span>, <span class=\"string\">&#x27;zip&#x27;</span>, <span class=\"string\">&#x27;lng&#x27;</span>, <span class=\"string\">&#x27;lat&#x27;</span>]</span><br><span class=\"line\">    mywriter=csv.writer(output)</span><br><span class=\"line\">    mywriter.writerow(header)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> r <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1000</span>):</span><br><span class=\"line\">        mywriter.writerow([fake.name(),fake.random_int(<span class=\"built_in\">min</span>=<span class=\"number\">18</span>, <span class=\"built_in\">max</span>=<span class=\"number\">80</span>, step=<span class=\"number\">1</span>),</span><br><span class=\"line\">        fake.street_address(),fake.city(),fake.state(),fake.zipcode(),fake.longitude(),</span><br><span class=\"line\">        fake.latitude()])</span><br><span class=\"line\">    output.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>데이터를 제공하는 사이트가 csv 파일로 제공해주면 좋은데 json 파일로 제공해주더라도 DataFrame 형태로 만들 수 있어야 한다.</li>\n<li>csv 파일 불러서 DataFrame 으로 불러오는 코드 샘플</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> csv</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    df = pd.read_csv(<span class=\"string\">&#x27;data.csv&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(df.head())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>json 파일 불러서 DataFrame 으로 불러오는 코드 샘플</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas.io.json <span class=\"keyword\">as</span> pd_JSON</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">read_json</span>():</span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;data.json&#x27;</span>, <span class=\"string\">&#x27;r&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        data = json.load(f)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(data))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(data[<span class=\"string\">&#x27;records&#x27;</span>][<span class=\"number\">0</span>][<span class=\"string\">&#x27;name&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">read_pandas</span>():</span><br><span class=\"line\">    df = pd.read_json(<span class=\"string\">&#x27;data.json&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;기본 방법은 조금 복잡해요! :\\n&quot;</span>, df.head())</span><br><span class=\"line\"></span><br><span class=\"line\">    f = <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;data.json&#x27;</span>, <span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\">    data = pd_JSON.loads(f.read())</span><br><span class=\"line\">    <span class=\"comment\"># print(data)</span></span><br><span class=\"line\">    df = pd.json_normalize(data, record_path = <span class=\"string\">&#x27;records&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;다른 방법도 복잡해요! :\\n&quot;</span>, df.head())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    read_pandas()</span><br></pre></td></tr></table></figure>"},{"title":"day0729","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"thumbnailImage":"Linux.png","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-07-29T08:35:21.000Z","_content":"\n### PostgreSQL 설치와 설정\n### 일래스틱서치 설치 및 설정\n<!-- excerpt -->\n\n- Pyspark 들어가서\n\n# PostgreSQL 설치와 설정\n\n- 다음 코드를 입력 후 주석처리 제거하기\n\n```python\nsudo vi /etc/postgresql/12/main/postgresql.conf\n```\n\n![Untitled](/images/0729/Untitled.png)\n\n![Untitled](/images/0729/Untitled%201.png)\n\n- cd .. 로 상단 경로 잡은 후 코드 입력\n    \n    ![Untitled](/images/0729/Untitled%202.png)\n    \n\n```python\nsudo apt-get install postgresql postgresql-contrib\nsudo apt-get update\nsudo apt-get -y upgrade\n```\n\n- 설치가 완료된다면 코드 입력해서 버전 확인\n    \n    ![Untitled](/images/0729/Untitled%203.png)\n    \n\n- 여기까지 코드 정리(여기서 ‘postgres’ 가 DB서버 사용자 명 이므로 주의하기\n    \n    ![Untitled](/images/0729/Untitled%204.png)\n    \n    ![Untitled](/images/0729/Untitled%205.png)\n    \n\n- 코드 입력\n\n![Untitled](/images/0729/Untitled%206.png)\n\n- [https://www.pgadmin.org/download/pgadmin-4-apt/](https://www.pgadmin.org/download/pgadmin-4-apt/) 링크 들어가서\n    \n    다음 칸을 sudo 부터 복붙한다.\n    \n    ![Untitled](/images/0729/Untitled%207.png)\n    \n    ![Untitled](/images/0729/Untitled%208.png)\n    \n- 다음 칸도 복붙(for both 로 설치했으면 밑에 두 개는 할 필요 없다.)\n    \n    ![Untitled](/images/0729/Untitled%209.png)\n    \n- 마지막 복붙\n    \n    ![Untitled](/images/0729/Untitled%2010.png)\n    \n    - 만약 /usr 경로에 /pgadmin4 폴더가 없다면 위에서 뭔가 잘못된 것이므로\n        \n        천천히 다시 설치해보자\n        \n        ![Untitled](/images/0729/Untitled%2011.png)\n        \n\n- 아이디 비번 만들라는데 만들어준다\n\n![Untitled](/images/0729/Untitled%2012.png)\n\n- 코드 입력\n    \n    ![Untitled](/images/0729/Untitled%2013.png)\n    \n\n```python\nsudo /usr/pgadmin4/bin/setup-web.sh\n```\n\n- 정상적으로 실행 됐다면 [http://localhost/pgadmin4/](http://localhost/pgadmin4/) 링크 클릭\n    \n    ![Untitled](/images/0729/Untitled%2014.png)\n    \n    - 아까 만든 아이디 비번 입력\n\n- New Server 누른 후 General-Name 칸 입력 / Connection 에서 Host name(ip주소로 써도 되고),\n    \n    Username 아까 DB사용자 명으로 입력한다(여기서는 아까 ‘postgres’ 로 했으므로 입력)\n    \n    ![Untitled](/images/0729/Untitled%2015.png)\n    \n- 이렇게 DB 생성 완료!\n    \n    ![Untitled](/images/0729/Untitled%2016.png)\n    \n\n# 일래스틱서치 설치 및 설정\n\n1. 자바 버전(8, 11)이 호환되는지 확인하기\n2. Elasticsearch 에서 Ubuntu 쓰는 버전이랑 지원이 되는지 체크해야 함\n\n- JSON 타입의 데이터 = 딕셔너리 일때 Oracle에 바로 입력이 안된다.\n    \n    간단하게 pandas로 DataFrame 형태로 입력해도 되지만 효율적이지 않다.\n    \n    그래서 NoSQL 데이터 형태로 입력한다\n    \n- NoSQL : MongoDB, ElasticSearch\n- 왜 많이 쓰는가? —> 이미지, 음성, 비정형 데이터 저장하는 저장소로 적절하기 때문에\n\n## 나중에 시간 들여서 배워야 할 건 Oracle 같은거 말고 비정형데이터 다루는 인프라 툴을 배워야 함!!\n\n- 코드 입력\n    \n    ![Untitled](/images/0729/Untitled%2017.png)\n    \n    ![Untitled](/images/0729/Untitled%2018.png)\n    \n    ```python\n    sudo apt-get update && sudo apt-get -y upgrade\n    sudo apt-get install apt-transport-https\n    ```\n    \n- 코드 입력 후 경로 복사\n    \n    ![Untitled](/images/0729/Untitled%2019.png)\n    \n- 경로 cd .. 로 이동 후 아래 코드 복사 후 입력\n    \n    ![Untitled](/images/0729/Untitled%2020.png)\n    \n\n```python\nwget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -\nsudo sh -c 'echo \"deb https://artifacts.elastic.co/packages/7.x/apt stable main\" > /etc/apt/sources.list.d/elastic-7.x.list'\n```\n\n- 코드 입력\n    \n    ![Untitled](/images/0729/Untitled%2021.png)\n    \n\n```python\nsudo apt-get update\n```\n\n- 코드 입력\n    \n    ![Untitled](/images/0729/Untitled%2022.png)\n    \n\n```python\nsudo apt-get install elasticsearch\n```","source":"_posts/day0729.md","raw":"---\ntitle: \"day0729\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: Linux\nclearReading: true\nthumbnailImage: Linux.png\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-07-29 17:35:21'\n---\n\n### PostgreSQL 설치와 설정\n### 일래스틱서치 설치 및 설정\n<!-- excerpt -->\n\n- Pyspark 들어가서\n\n# PostgreSQL 설치와 설정\n\n- 다음 코드를 입력 후 주석처리 제거하기\n\n```python\nsudo vi /etc/postgresql/12/main/postgresql.conf\n```\n\n![Untitled](/images/0729/Untitled.png)\n\n![Untitled](/images/0729/Untitled%201.png)\n\n- cd .. 로 상단 경로 잡은 후 코드 입력\n    \n    ![Untitled](/images/0729/Untitled%202.png)\n    \n\n```python\nsudo apt-get install postgresql postgresql-contrib\nsudo apt-get update\nsudo apt-get -y upgrade\n```\n\n- 설치가 완료된다면 코드 입력해서 버전 확인\n    \n    ![Untitled](/images/0729/Untitled%203.png)\n    \n\n- 여기까지 코드 정리(여기서 ‘postgres’ 가 DB서버 사용자 명 이므로 주의하기\n    \n    ![Untitled](/images/0729/Untitled%204.png)\n    \n    ![Untitled](/images/0729/Untitled%205.png)\n    \n\n- 코드 입력\n\n![Untitled](/images/0729/Untitled%206.png)\n\n- [https://www.pgadmin.org/download/pgadmin-4-apt/](https://www.pgadmin.org/download/pgadmin-4-apt/) 링크 들어가서\n    \n    다음 칸을 sudo 부터 복붙한다.\n    \n    ![Untitled](/images/0729/Untitled%207.png)\n    \n    ![Untitled](/images/0729/Untitled%208.png)\n    \n- 다음 칸도 복붙(for both 로 설치했으면 밑에 두 개는 할 필요 없다.)\n    \n    ![Untitled](/images/0729/Untitled%209.png)\n    \n- 마지막 복붙\n    \n    ![Untitled](/images/0729/Untitled%2010.png)\n    \n    - 만약 /usr 경로에 /pgadmin4 폴더가 없다면 위에서 뭔가 잘못된 것이므로\n        \n        천천히 다시 설치해보자\n        \n        ![Untitled](/images/0729/Untitled%2011.png)\n        \n\n- 아이디 비번 만들라는데 만들어준다\n\n![Untitled](/images/0729/Untitled%2012.png)\n\n- 코드 입력\n    \n    ![Untitled](/images/0729/Untitled%2013.png)\n    \n\n```python\nsudo /usr/pgadmin4/bin/setup-web.sh\n```\n\n- 정상적으로 실행 됐다면 [http://localhost/pgadmin4/](http://localhost/pgadmin4/) 링크 클릭\n    \n    ![Untitled](/images/0729/Untitled%2014.png)\n    \n    - 아까 만든 아이디 비번 입력\n\n- New Server 누른 후 General-Name 칸 입력 / Connection 에서 Host name(ip주소로 써도 되고),\n    \n    Username 아까 DB사용자 명으로 입력한다(여기서는 아까 ‘postgres’ 로 했으므로 입력)\n    \n    ![Untitled](/images/0729/Untitled%2015.png)\n    \n- 이렇게 DB 생성 완료!\n    \n    ![Untitled](/images/0729/Untitled%2016.png)\n    \n\n# 일래스틱서치 설치 및 설정\n\n1. 자바 버전(8, 11)이 호환되는지 확인하기\n2. Elasticsearch 에서 Ubuntu 쓰는 버전이랑 지원이 되는지 체크해야 함\n\n- JSON 타입의 데이터 = 딕셔너리 일때 Oracle에 바로 입력이 안된다.\n    \n    간단하게 pandas로 DataFrame 형태로 입력해도 되지만 효율적이지 않다.\n    \n    그래서 NoSQL 데이터 형태로 입력한다\n    \n- NoSQL : MongoDB, ElasticSearch\n- 왜 많이 쓰는가? —> 이미지, 음성, 비정형 데이터 저장하는 저장소로 적절하기 때문에\n\n## 나중에 시간 들여서 배워야 할 건 Oracle 같은거 말고 비정형데이터 다루는 인프라 툴을 배워야 함!!\n\n- 코드 입력\n    \n    ![Untitled](/images/0729/Untitled%2017.png)\n    \n    ![Untitled](/images/0729/Untitled%2018.png)\n    \n    ```python\n    sudo apt-get update && sudo apt-get -y upgrade\n    sudo apt-get install apt-transport-https\n    ```\n    \n- 코드 입력 후 경로 복사\n    \n    ![Untitled](/images/0729/Untitled%2019.png)\n    \n- 경로 cd .. 로 이동 후 아래 코드 복사 후 입력\n    \n    ![Untitled](/images/0729/Untitled%2020.png)\n    \n\n```python\nwget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -\nsudo sh -c 'echo \"deb https://artifacts.elastic.co/packages/7.x/apt stable main\" > /etc/apt/sources.list.d/elastic-7.x.list'\n```\n\n- 코드 입력\n    \n    ![Untitled](/images/0729/Untitled%2021.png)\n    \n\n```python\nsudo apt-get update\n```\n\n- 코드 입력\n    \n    ![Untitled](/images/0729/Untitled%2022.png)\n    \n\n```python\nsudo apt-get install elasticsearch\n```","slug":"day0729","published":1,"updated":"2022-07-31T04:42:40.743Z","_id":"cl6a7l31j0000rguo524pd6dp","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n<ul>\n<li>Pyspark 들어가서</li>\n</ul>\n<h1 id=\"PostgreSQL-설치와-설정-1\"><a href=\"#PostgreSQL-설치와-설정-1\" class=\"headerlink\" title=\"PostgreSQL 설치와 설정\"></a>PostgreSQL 설치와 설정</h1><ul>\n<li>다음 코드를 입력 후 주석처리 제거하기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/postgresql/<span class=\"number\">12</span>/main/postgresql.conf</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0729/Untitled.png\" alt=\"Untitled\"></p>\n<p><img src=\"/images/0729/Untitled%201.png\" alt=\"Untitled\"></p>\n<ul>\n<li><p>cd .. 로 상단 경로 잡은 후 코드 입력</p>\n<p>  <img src=\"/images/0729/Untitled%202.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install postgresql postgresql-contrib</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get -y upgrade</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>설치가 완료된다면 코드 입력해서 버전 확인</p>\n<p>  <img src=\"/images/0729/Untitled%203.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>여기까지 코드 정리(여기서 ‘postgres’ 가 DB서버 사용자 명 이므로 주의하기</p>\n<p>  <img src=\"/images/0729/Untitled%204.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/0729/Untitled%205.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>코드 입력</p>\n</li>\n</ul>\n<p><img src=\"/images/0729/Untitled%206.png\" alt=\"Untitled\"></p>\n<ul>\n<li><p><a href=\"https://www.pgadmin.org/download/pgadmin-4-apt/\">https://www.pgadmin.org/download/pgadmin-4-apt/</a> 링크 들어가서</p>\n<p>  다음 칸을 sudo 부터 복붙한다.</p>\n<p>  <img src=\"/images/0729/Untitled%207.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/0729/Untitled%208.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>다음 칸도 복붙(for both 로 설치했으면 밑에 두 개는 할 필요 없다.)</p>\n<p>  <img src=\"/images/0729/Untitled%209.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>마지막 복붙</p>\n<p>  <img src=\"/images/0729/Untitled%2010.png\" alt=\"Untitled\"></p>\n<ul>\n<li><p>만약 &#x2F;usr 경로에 &#x2F;pgadmin4 폴더가 없다면 위에서 뭔가 잘못된 것이므로</p>\n<p>  천천히 다시 설치해보자</p>\n<p>  <img src=\"/images/0729/Untitled%2011.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n</li>\n<li><p>아이디 비번 만들라는데 만들어준다</p>\n</li>\n</ul>\n<p><img src=\"/images/0729/Untitled%2012.png\" alt=\"Untitled\"></p>\n<ul>\n<li><p>코드 입력</p>\n<p>  <img src=\"/images/0729/Untitled%2013.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo /usr/pgadmin4/<span class=\"built_in\">bin</span>/setup-web.sh</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>정상적으로 실행 됐다면 <a href=\"http://localhost/pgadmin4/\">http://localhost/pgadmin4/</a> 링크 클릭</p>\n<p>  <img src=\"/images/0729/Untitled%2014.png\" alt=\"Untitled\"></p>\n<ul>\n<li>아까 만든 아이디 비번 입력</li>\n</ul>\n</li>\n<li><p>New Server 누른 후 General-Name 칸 입력 &#x2F; Connection 에서 Host name(ip주소로 써도 되고),</p>\n<p>  Username 아까 DB사용자 명으로 입력한다(여기서는 아까 ‘postgres’ 로 했으므로 입력)</p>\n<p>  <img src=\"/images/0729/Untitled%2015.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>이렇게 DB 생성 완료!</p>\n<p>  <img src=\"/images/0729/Untitled%2016.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<h1 id=\"일래스틱서치-설치-및-설정-1\"><a href=\"#일래스틱서치-설치-및-설정-1\" class=\"headerlink\" title=\"일래스틱서치 설치 및 설정\"></a>일래스틱서치 설치 및 설정</h1><ol>\n<li>자바 버전(8, 11)이 호환되는지 확인하기</li>\n<li>Elasticsearch 에서 Ubuntu 쓰는 버전이랑 지원이 되는지 체크해야 함</li>\n</ol>\n<ul>\n<li><p>JSON 타입의 데이터 &#x3D; 딕셔너리 일때 Oracle에 바로 입력이 안된다.</p>\n<p>  간단하게 pandas로 DataFrame 형태로 입력해도 되지만 효율적이지 않다.</p>\n<p>  그래서 NoSQL 데이터 형태로 입력한다</p>\n</li>\n<li><p>NoSQL : MongoDB, ElasticSearch</p>\n</li>\n<li><p>왜 많이 쓰는가? —&gt; 이미지, 음성, 비정형 데이터 저장하는 저장소로 적절하기 때문에</p>\n</li>\n</ul>\n<h2 id=\"나중에-시간-들여서-배워야-할-건-Oracle-같은거-말고-비정형데이터-다루는-인프라-툴을-배워야-함\"><a href=\"#나중에-시간-들여서-배워야-할-건-Oracle-같은거-말고-비정형데이터-다루는-인프라-툴을-배워야-함\" class=\"headerlink\" title=\"나중에 시간 들여서 배워야 할 건 Oracle 같은거 말고 비정형데이터 다루는 인프라 툴을 배워야 함!!\"></a>나중에 시간 들여서 배워야 할 건 Oracle 같은거 말고 비정형데이터 다루는 인프라 툴을 배워야 함!!</h2><ul>\n<li><p>코드 입력</p>\n<p>  <img src=\"/images/0729/Untitled%2017.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/0729/Untitled%2018.png\" alt=\"Untitled\"></p>\n  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update &amp;&amp; sudo apt-get -y upgrade</span><br><span class=\"line\">sudo apt-get install apt-transport-https</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>코드 입력 후 경로 복사</p>\n<p>  <img src=\"/images/0729/Untitled%2019.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>경로 cd .. 로 이동 후 아래 코드 복사 후 입력</p>\n<p>  <img src=\"/images/0729/Untitled%2020.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -</span><br><span class=\"line\">sudo sh -c <span class=\"string\">&#x27;echo &quot;deb https://artifacts.elastic.co/packages/7.x/apt stable main&quot; &gt; /etc/apt/sources.list.d/elastic-7.x.list&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>코드 입력</p>\n<p>  <img src=\"/images/0729/Untitled%2021.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>코드 입력</p>\n<p>  <img src=\"/images/0729/Untitled%2022.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install elasticsearch</span><br></pre></td></tr></table></figure>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/07/29/day0729/Linux.png","excerpt":"<h3 id=\"PostgreSQL-설치와-설정\"><a href=\"#PostgreSQL-설치와-설정\" class=\"headerlink\" title=\"PostgreSQL 설치와 설정\"></a>PostgreSQL 설치와 설정</h3><h3 id=\"일래스틱서치-설치-및-설정\"><a href=\"#일래스틱서치-설치-및-설정\" class=\"headerlink\" title=\"일래스틱서치 설치 및 설정\"></a>일래스틱서치 설치 및 설정</h3>","more":"<h3 id=\"PostgreSQL-설치와-설정\"><a href=\"#PostgreSQL-설치와-설정\" class=\"headerlink\" title=\"PostgreSQL 설치와 설정\"></a>PostgreSQL 설치와 설정</h3><h3 id=\"일래스틱서치-설치-및-설정\"><a href=\"#일래스틱서치-설치-및-설정\" class=\"headerlink\" title=\"일래스틱서치 설치 및 설정\"></a>일래스틱서치 설치 및 설정</h3><!-- excerpt -->\n\n<ul>\n<li>Pyspark 들어가서</li>\n</ul>\n<h1 id=\"PostgreSQL-설치와-설정-1\"><a href=\"#PostgreSQL-설치와-설정-1\" class=\"headerlink\" title=\"PostgreSQL 설치와 설정\"></a>PostgreSQL 설치와 설정</h1><ul>\n<li>다음 코드를 입력 후 주석처리 제거하기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/postgresql/<span class=\"number\">12</span>/main/postgresql.conf</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/0729/Untitled.png\" alt=\"Untitled\"></p>\n<p><img src=\"/images/0729/Untitled%201.png\" alt=\"Untitled\"></p>\n<ul>\n<li><p>cd .. 로 상단 경로 잡은 후 코드 입력</p>\n<p>  <img src=\"/images/0729/Untitled%202.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install postgresql postgresql-contrib</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get -y upgrade</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>설치가 완료된다면 코드 입력해서 버전 확인</p>\n<p>  <img src=\"/images/0729/Untitled%203.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>여기까지 코드 정리(여기서 ‘postgres’ 가 DB서버 사용자 명 이므로 주의하기</p>\n<p>  <img src=\"/images/0729/Untitled%204.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/0729/Untitled%205.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>코드 입력</p>\n</li>\n</ul>\n<p><img src=\"/images/0729/Untitled%206.png\" alt=\"Untitled\"></p>\n<ul>\n<li><p><a href=\"https://www.pgadmin.org/download/pgadmin-4-apt/\">https://www.pgadmin.org/download/pgadmin-4-apt/</a> 링크 들어가서</p>\n<p>  다음 칸을 sudo 부터 복붙한다.</p>\n<p>  <img src=\"/images/0729/Untitled%207.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/0729/Untitled%208.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>다음 칸도 복붙(for both 로 설치했으면 밑에 두 개는 할 필요 없다.)</p>\n<p>  <img src=\"/images/0729/Untitled%209.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>마지막 복붙</p>\n<p>  <img src=\"/images/0729/Untitled%2010.png\" alt=\"Untitled\"></p>\n<ul>\n<li><p>만약 &#x2F;usr 경로에 &#x2F;pgadmin4 폴더가 없다면 위에서 뭔가 잘못된 것이므로</p>\n<p>  천천히 다시 설치해보자</p>\n<p>  <img src=\"/images/0729/Untitled%2011.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n</li>\n<li><p>아이디 비번 만들라는데 만들어준다</p>\n</li>\n</ul>\n<p><img src=\"/images/0729/Untitled%2012.png\" alt=\"Untitled\"></p>\n<ul>\n<li><p>코드 입력</p>\n<p>  <img src=\"/images/0729/Untitled%2013.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo /usr/pgadmin4/<span class=\"built_in\">bin</span>/setup-web.sh</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>정상적으로 실행 됐다면 <a href=\"http://localhost/pgadmin4/\">http://localhost/pgadmin4/</a> 링크 클릭</p>\n<p>  <img src=\"/images/0729/Untitled%2014.png\" alt=\"Untitled\"></p>\n<ul>\n<li>아까 만든 아이디 비번 입력</li>\n</ul>\n</li>\n<li><p>New Server 누른 후 General-Name 칸 입력 &#x2F; Connection 에서 Host name(ip주소로 써도 되고),</p>\n<p>  Username 아까 DB사용자 명으로 입력한다(여기서는 아까 ‘postgres’ 로 했으므로 입력)</p>\n<p>  <img src=\"/images/0729/Untitled%2015.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>이렇게 DB 생성 완료!</p>\n<p>  <img src=\"/images/0729/Untitled%2016.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<h1 id=\"일래스틱서치-설치-및-설정-1\"><a href=\"#일래스틱서치-설치-및-설정-1\" class=\"headerlink\" title=\"일래스틱서치 설치 및 설정\"></a>일래스틱서치 설치 및 설정</h1><ol>\n<li>자바 버전(8, 11)이 호환되는지 확인하기</li>\n<li>Elasticsearch 에서 Ubuntu 쓰는 버전이랑 지원이 되는지 체크해야 함</li>\n</ol>\n<ul>\n<li><p>JSON 타입의 데이터 &#x3D; 딕셔너리 일때 Oracle에 바로 입력이 안된다.</p>\n<p>  간단하게 pandas로 DataFrame 형태로 입력해도 되지만 효율적이지 않다.</p>\n<p>  그래서 NoSQL 데이터 형태로 입력한다</p>\n</li>\n<li><p>NoSQL : MongoDB, ElasticSearch</p>\n</li>\n<li><p>왜 많이 쓰는가? —&gt; 이미지, 음성, 비정형 데이터 저장하는 저장소로 적절하기 때문에</p>\n</li>\n</ul>\n<h2 id=\"나중에-시간-들여서-배워야-할-건-Oracle-같은거-말고-비정형데이터-다루는-인프라-툴을-배워야-함\"><a href=\"#나중에-시간-들여서-배워야-할-건-Oracle-같은거-말고-비정형데이터-다루는-인프라-툴을-배워야-함\" class=\"headerlink\" title=\"나중에 시간 들여서 배워야 할 건 Oracle 같은거 말고 비정형데이터 다루는 인프라 툴을 배워야 함!!\"></a>나중에 시간 들여서 배워야 할 건 Oracle 같은거 말고 비정형데이터 다루는 인프라 툴을 배워야 함!!</h2><ul>\n<li><p>코드 입력</p>\n<p>  <img src=\"/images/0729/Untitled%2017.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/0729/Untitled%2018.png\" alt=\"Untitled\"></p>\n  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update &amp;&amp; sudo apt-get -y upgrade</span><br><span class=\"line\">sudo apt-get install apt-transport-https</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>코드 입력 후 경로 복사</p>\n<p>  <img src=\"/images/0729/Untitled%2019.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>경로 cd .. 로 이동 후 아래 코드 복사 후 입력</p>\n<p>  <img src=\"/images/0729/Untitled%2020.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -</span><br><span class=\"line\">sudo sh -c <span class=\"string\">&#x27;echo &quot;deb https://artifacts.elastic.co/packages/7.x/apt stable main&quot; &gt; /etc/apt/sources.list.d/elastic-7.x.list&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>코드 입력</p>\n<p>  <img src=\"/images/0729/Untitled%2021.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>코드 입력</p>\n<p>  <img src=\"/images/0729/Untitled%2022.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install elasticsearch</span><br></pre></td></tr></table></figure>"},{"title":"Spark 툴 설치 및 설정","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"thumbnailImage":"Linux.png","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-07-31T04:34:21.000Z","_content":"\n### Apache Spark 설치 및 설정\n### PySpark 설치 및 설정\n<!-- excerpt -->\n\n\n# Apache Spark 설치 및 설정\n\n- hadoop 폴더를 하나 만들고\n    \n    ![Untitled](/images/0731_Spark/Untitled.png)\n    \n- cd hadoop 으로 이동 후 다음 코드 입력\n\n```python\nsudo apt-get install openjdk-8-jdk\n\nsudo wget https://archive.apache.org/dist/spark/spark-3.2.0/spark-3.2.0-bin-hadoop3.2.tgz\n```\n\n- ls로 압축파일만 있는지 확인하고, 다른게 있으면 삭제하기.\n\n### TAB 키 활용하기!!\n\n- sudo tar -xvzf s 까지 치고 tab키 누르고 압축파일 풀기\n    \n    ![Untitled](/images/0731_Spark/Untitled%201.png)\n    \n\n- mv s (tab키) ~/spark3 입력\n    \n    ![Untitled](/images/0731_Spark/Untitled%202.png)\n    \n\n- cd .. 입력 후, spark3 폴더로 이동\n- cp -r spark3/ spark-node입력\n    \n    ![Untitled](/images/0731_Spark/Untitled%203.png)\n    \n- spark3 폴더 안에 sbin 폴더로 이동\n    \n    ![Untitled](/images/0731_Spark/Untitled%204.png)\n    \n- 다음 명령어 입력\n    \n    ![Untitled](/images/0731_Spark/Untitled%205.png)\n    \n    ```python\n    cp start-master.sh start-head.sh\n    cd ~/spark-node/sbin\n    cp start-slave.sh start-node.sh\n    ```\n    \n- 이렇게 하면 spark3 폴더에는 master → head 로 이름이 변경되었고\n    \n    spark-node 폴더에는 slave → node 로 이름이 변경되었다.\n    \n- 이제 spark3/sbin 폴더에서 head 를 실행시키고 spark-node/sbin 폴더에서 node를\n    \n    실행 시키자.\n    \n    ![Untitled](/images/0731_Spark/Untitled%206.png)\n    \n    ![Untitled](/images/0731_Spark/Untitled%207.png)\n    \n\n- 그 뒤에 인터넷 주소창에 [localhost:8080](http://localhost:8080) 을 치면 사이트가 나온다.\n    \n    ![Untitled](/images/0731_Spark/Untitled%208.png)\n    \n\n---\n\n# PySpark 설치 및 설정\n\n- 환경 변수 설정으로 (vi ~/.bashrc)  들어가서 다음과 같이 입력한다\n    \n    ![Untitled](/images/0731_Spark/Untitled%209.png)\n    \n\n```python\nexport AIRFLOW_HOME=/home/dhtpdud2009/airflow\nexport JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\nexport SPARK_HOME=/home/dhtpdud2009/spark3\nexport PATH=$JAVA_HOME/bin:$PATH\nexport PATH=$SPARK_HOME/bin:$PATH\nexport PYSPARK_PYTHON=/usr/bin/python3\n# export PYSPARK_DRIVER_PYTHON_OPTS='notebook'\n```\n\n- dhtpdud2009 부분은 알아서 바꾸기\n- chapter14 폴더 만들고 가상환경 세팅하기\n    \n    ![Untitled](/images/0731_Spark/Untitled%2010.png)\n    \n- pip3 install findspark 입력 / pip install pyspark 입력\n    \n    ![Untitled](/images/0731_Spark/Untitled%2011.png)\n    \n    ![Untitled](/images/0731_Spark/Untitled%2012.png)\n    \n- pip3 install jupyter 입력\n    \n    ![Untitled](/images/0731_Spark/Untitled%2013.png)\n    \n- 그리고 다시 환경 변수 세팅 들어가서 주석처리 제거\n    \n    ![Untitled](/images/0731_Spark/Untitled%2014.png)\n    \n    source ~/.bashrc 까지 하기!\n    \n\n- Ubuntu 껐다가 다시 켜서 CHAPTER14 에서 code . 로 열기\n- 새 파일 만들고 가상환경 접속 후 다음과 같이 입력\n    \n    ![Untitled](/images/0731_Spark/Untitled%2015.png)\n    \n    ![Untitled](/images/0731_Spark/Untitled%2016.png)\n    \n\n- jupyter notebook 입력\n    \n    ![Untitled](/images/0731_Spark/Untitled%2017.png)\n    \n- [localhost:8888](http://localhost:8888) 여기 ctrl+클릭하면 Jupyter Notebook 를 열 수 있음\n    \n    ![Untitled](/images/0731_Spark/Untitled%2018.png)","source":"_posts/day0731_Spark.md","raw":"---\ntitle: \"Spark 툴 설치 및 설정\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: Linux\nclearReading: true\nthumbnailImage: Linux.png\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-07-31 13:34:21'\n---\n\n### Apache Spark 설치 및 설정\n### PySpark 설치 및 설정\n<!-- excerpt -->\n\n\n# Apache Spark 설치 및 설정\n\n- hadoop 폴더를 하나 만들고\n    \n    ![Untitled](/images/0731_Spark/Untitled.png)\n    \n- cd hadoop 으로 이동 후 다음 코드 입력\n\n```python\nsudo apt-get install openjdk-8-jdk\n\nsudo wget https://archive.apache.org/dist/spark/spark-3.2.0/spark-3.2.0-bin-hadoop3.2.tgz\n```\n\n- ls로 압축파일만 있는지 확인하고, 다른게 있으면 삭제하기.\n\n### TAB 키 활용하기!!\n\n- sudo tar -xvzf s 까지 치고 tab키 누르고 압축파일 풀기\n    \n    ![Untitled](/images/0731_Spark/Untitled%201.png)\n    \n\n- mv s (tab키) ~/spark3 입력\n    \n    ![Untitled](/images/0731_Spark/Untitled%202.png)\n    \n\n- cd .. 입력 후, spark3 폴더로 이동\n- cp -r spark3/ spark-node입력\n    \n    ![Untitled](/images/0731_Spark/Untitled%203.png)\n    \n- spark3 폴더 안에 sbin 폴더로 이동\n    \n    ![Untitled](/images/0731_Spark/Untitled%204.png)\n    \n- 다음 명령어 입력\n    \n    ![Untitled](/images/0731_Spark/Untitled%205.png)\n    \n    ```python\n    cp start-master.sh start-head.sh\n    cd ~/spark-node/sbin\n    cp start-slave.sh start-node.sh\n    ```\n    \n- 이렇게 하면 spark3 폴더에는 master → head 로 이름이 변경되었고\n    \n    spark-node 폴더에는 slave → node 로 이름이 변경되었다.\n    \n- 이제 spark3/sbin 폴더에서 head 를 실행시키고 spark-node/sbin 폴더에서 node를\n    \n    실행 시키자.\n    \n    ![Untitled](/images/0731_Spark/Untitled%206.png)\n    \n    ![Untitled](/images/0731_Spark/Untitled%207.png)\n    \n\n- 그 뒤에 인터넷 주소창에 [localhost:8080](http://localhost:8080) 을 치면 사이트가 나온다.\n    \n    ![Untitled](/images/0731_Spark/Untitled%208.png)\n    \n\n---\n\n# PySpark 설치 및 설정\n\n- 환경 변수 설정으로 (vi ~/.bashrc)  들어가서 다음과 같이 입력한다\n    \n    ![Untitled](/images/0731_Spark/Untitled%209.png)\n    \n\n```python\nexport AIRFLOW_HOME=/home/dhtpdud2009/airflow\nexport JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\nexport SPARK_HOME=/home/dhtpdud2009/spark3\nexport PATH=$JAVA_HOME/bin:$PATH\nexport PATH=$SPARK_HOME/bin:$PATH\nexport PYSPARK_PYTHON=/usr/bin/python3\n# export PYSPARK_DRIVER_PYTHON_OPTS='notebook'\n```\n\n- dhtpdud2009 부분은 알아서 바꾸기\n- chapter14 폴더 만들고 가상환경 세팅하기\n    \n    ![Untitled](/images/0731_Spark/Untitled%2010.png)\n    \n- pip3 install findspark 입력 / pip install pyspark 입력\n    \n    ![Untitled](/images/0731_Spark/Untitled%2011.png)\n    \n    ![Untitled](/images/0731_Spark/Untitled%2012.png)\n    \n- pip3 install jupyter 입력\n    \n    ![Untitled](/images/0731_Spark/Untitled%2013.png)\n    \n- 그리고 다시 환경 변수 세팅 들어가서 주석처리 제거\n    \n    ![Untitled](/images/0731_Spark/Untitled%2014.png)\n    \n    source ~/.bashrc 까지 하기!\n    \n\n- Ubuntu 껐다가 다시 켜서 CHAPTER14 에서 code . 로 열기\n- 새 파일 만들고 가상환경 접속 후 다음과 같이 입력\n    \n    ![Untitled](/images/0731_Spark/Untitled%2015.png)\n    \n    ![Untitled](/images/0731_Spark/Untitled%2016.png)\n    \n\n- jupyter notebook 입력\n    \n    ![Untitled](/images/0731_Spark/Untitled%2017.png)\n    \n- [localhost:8888](http://localhost:8888) 여기 ctrl+클릭하면 Jupyter Notebook 를 열 수 있음\n    \n    ![Untitled](/images/0731_Spark/Untitled%2018.png)","slug":"day0731_Spark","published":1,"updated":"2022-07-31T04:42:40.739Z","_id":"cl6a7l31n0001rguoa6vtgc01","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n\n<h1 id=\"Apache-Spark-설치-및-설정-1\"><a href=\"#Apache-Spark-설치-및-설정-1\" class=\"headerlink\" title=\"Apache Spark 설치 및 설정\"></a>Apache Spark 설치 및 설정</h1><ul>\n<li><p>hadoop 폴더를 하나 만들고</p>\n<p>  <img src=\"/images/0731_Spark/Untitled.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>cd hadoop 으로 이동 후 다음 코드 입력</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install openjdk-<span class=\"number\">8</span>-jdk</span><br><span class=\"line\"></span><br><span class=\"line\">sudo wget https://archive.apache.org/dist/spark/spark-<span class=\"number\">3.2</span><span class=\"number\">.0</span>/spark-<span class=\"number\">3.2</span><span class=\"number\">.0</span>-<span class=\"built_in\">bin</span>-hadoop3<span class=\"number\">.2</span>.tgz</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>ls로 압축파일만 있는지 확인하고, 다른게 있으면 삭제하기.</li>\n</ul>\n<h3 id=\"TAB-키-활용하기\"><a href=\"#TAB-키-활용하기\" class=\"headerlink\" title=\"TAB 키 활용하기!!\"></a>TAB 키 활용하기!!</h3><ul>\n<li><p>sudo tar -xvzf s 까지 치고 tab키 누르고 압축파일 풀기</p>\n<p>  <img src=\"/images/0731_Spark/Untitled%201.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>mv s (tab키) ~&#x2F;spark3 입력</p>\n<p>  <img src=\"/images/0731_Spark/Untitled%202.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>cd .. 입력 후, spark3 폴더로 이동</p>\n</li>\n<li><p>cp -r spark3&#x2F; spark-node입력</p>\n<p>  <img src=\"/images/0731_Spark/Untitled%203.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>spark3 폴더 안에 sbin 폴더로 이동</p>\n<p>  <img src=\"/images/0731_Spark/Untitled%204.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>다음 명령어 입력</p>\n<p>  <img src=\"/images/0731_Spark/Untitled%205.png\" alt=\"Untitled\"></p>\n  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp start-master.sh start-head.sh</span><br><span class=\"line\">cd ~/spark-node/sbin</span><br><span class=\"line\">cp start-slave.sh start-node.sh</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>이렇게 하면 spark3 폴더에는 master → head 로 이름이 변경되었고</p>\n<p>  spark-node 폴더에는 slave → node 로 이름이 변경되었다.</p>\n</li>\n<li><p>이제 spark3&#x2F;sbin 폴더에서 head 를 실행시키고 spark-node&#x2F;sbin 폴더에서 node를</p>\n<p>  실행 시키자.</p>\n<p>  <img src=\"/images/0731_Spark/Untitled%206.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/0731_Spark/Untitled%207.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>그 뒤에 인터넷 주소창에 <a href=\"http://localhost:8080/\">localhost:8080</a> 을 치면 사이트가 나온다.</p>\n<p>  <img src=\"/images/0731_Spark/Untitled%208.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<hr>\n<h1 id=\"PySpark-설치-및-설정-1\"><a href=\"#PySpark-설치-및-설정-1\" class=\"headerlink\" title=\"PySpark 설치 및 설정\"></a>PySpark 설치 및 설정</h1><ul>\n<li><p>환경 변수 설정으로 (vi ~&#x2F;.bashrc)  들어가서 다음과 같이 입력한다</p>\n<p>  <img src=\"/images/0731_Spark/Untitled%209.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export AIRFLOW_HOME=/home/dhtpdud2009/airflow</span><br><span class=\"line\">export JAVA_HOME=/usr/lib/jvm/java-<span class=\"number\">8</span>-openjdk-amd64</span><br><span class=\"line\">export SPARK_HOME=/home/dhtpdud2009/spark3</span><br><span class=\"line\">export PATH=$JAVA_HOME/<span class=\"built_in\">bin</span>:$PATH</span><br><span class=\"line\">export PATH=$SPARK_HOME/<span class=\"built_in\">bin</span>:$PATH</span><br><span class=\"line\">export PYSPARK_PYTHON=/usr/<span class=\"built_in\">bin</span>/python3</span><br><span class=\"line\"><span class=\"comment\"># export PYSPARK_DRIVER_PYTHON_OPTS=&#x27;notebook&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>dhtpdud2009 부분은 알아서 바꾸기</p>\n</li>\n<li><p>chapter14 폴더 만들고 가상환경 세팅하기</p>\n<p>  <img src=\"/images/0731_Spark/Untitled%2010.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>pip3 install findspark 입력 &#x2F; pip install pyspark 입력</p>\n<p>  <img src=\"/images/0731_Spark/Untitled%2011.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/0731_Spark/Untitled%2012.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>pip3 install jupyter 입력</p>\n<p>  <img src=\"/images/0731_Spark/Untitled%2013.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>그리고 다시 환경 변수 세팅 들어가서 주석처리 제거</p>\n<p>  <img src=\"/images/0731_Spark/Untitled%2014.png\" alt=\"Untitled\"></p>\n<p>  source ~&#x2F;.bashrc 까지 하기!</p>\n</li>\n<li><p>Ubuntu 껐다가 다시 켜서 CHAPTER14 에서 code . 로 열기</p>\n</li>\n<li><p>새 파일 만들고 가상환경 접속 후 다음과 같이 입력</p>\n<p>  <img src=\"/images/0731_Spark/Untitled%2015.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/0731_Spark/Untitled%2016.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>jupyter notebook 입력</p>\n<p>  <img src=\"/images/0731_Spark/Untitled%2017.png\" alt=\"Untitled\"></p>\n</li>\n<li><p><a href=\"http://localhost:8888/\">localhost:8888</a> 여기 ctrl+클릭하면 Jupyter Notebook 를 열 수 있음</p>\n<p>  <img src=\"/images/0731_Spark/Untitled%2018.png\" alt=\"Untitled\"></p>\n</li>\n</ul>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/07/31/day0731_Spark/Linux.png","excerpt":"<h3 id=\"Apache-Spark-설치-및-설정\"><a href=\"#Apache-Spark-설치-및-설정\" class=\"headerlink\" title=\"Apache Spark 설치 및 설정\"></a>Apache Spark 설치 및 설정</h3><h3 id=\"PySpark-설치-및-설정\"><a href=\"#PySpark-설치-및-설정\" class=\"headerlink\" title=\"PySpark 설치 및 설정\"></a>PySpark 설치 및 설정</h3>","more":"<h3 id=\"Apache-Spark-설치-및-설정\"><a href=\"#Apache-Spark-설치-및-설정\" class=\"headerlink\" title=\"Apache Spark 설치 및 설정\"></a>Apache Spark 설치 및 설정</h3><h3 id=\"PySpark-설치-및-설정\"><a href=\"#PySpark-설치-및-설정\" class=\"headerlink\" title=\"PySpark 설치 및 설정\"></a>PySpark 설치 및 설정</h3><!-- excerpt -->\n\n\n<h1 id=\"Apache-Spark-설치-및-설정-1\"><a href=\"#Apache-Spark-설치-및-설정-1\" class=\"headerlink\" title=\"Apache Spark 설치 및 설정\"></a>Apache Spark 설치 및 설정</h1><ul>\n<li><p>hadoop 폴더를 하나 만들고</p>\n<p>  <img src=\"/images/0731_Spark/Untitled.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>cd hadoop 으로 이동 후 다음 코드 입력</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install openjdk-<span class=\"number\">8</span>-jdk</span><br><span class=\"line\"></span><br><span class=\"line\">sudo wget https://archive.apache.org/dist/spark/spark-<span class=\"number\">3.2</span><span class=\"number\">.0</span>/spark-<span class=\"number\">3.2</span><span class=\"number\">.0</span>-<span class=\"built_in\">bin</span>-hadoop3<span class=\"number\">.2</span>.tgz</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>ls로 압축파일만 있는지 확인하고, 다른게 있으면 삭제하기.</li>\n</ul>\n<h3 id=\"TAB-키-활용하기\"><a href=\"#TAB-키-활용하기\" class=\"headerlink\" title=\"TAB 키 활용하기!!\"></a>TAB 키 활용하기!!</h3><ul>\n<li><p>sudo tar -xvzf s 까지 치고 tab키 누르고 압축파일 풀기</p>\n<p>  <img src=\"/images/0731_Spark/Untitled%201.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>mv s (tab키) ~&#x2F;spark3 입력</p>\n<p>  <img src=\"/images/0731_Spark/Untitled%202.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>cd .. 입력 후, spark3 폴더로 이동</p>\n</li>\n<li><p>cp -r spark3&#x2F; spark-node입력</p>\n<p>  <img src=\"/images/0731_Spark/Untitled%203.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>spark3 폴더 안에 sbin 폴더로 이동</p>\n<p>  <img src=\"/images/0731_Spark/Untitled%204.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>다음 명령어 입력</p>\n<p>  <img src=\"/images/0731_Spark/Untitled%205.png\" alt=\"Untitled\"></p>\n  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp start-master.sh start-head.sh</span><br><span class=\"line\">cd ~/spark-node/sbin</span><br><span class=\"line\">cp start-slave.sh start-node.sh</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>이렇게 하면 spark3 폴더에는 master → head 로 이름이 변경되었고</p>\n<p>  spark-node 폴더에는 slave → node 로 이름이 변경되었다.</p>\n</li>\n<li><p>이제 spark3&#x2F;sbin 폴더에서 head 를 실행시키고 spark-node&#x2F;sbin 폴더에서 node를</p>\n<p>  실행 시키자.</p>\n<p>  <img src=\"/images/0731_Spark/Untitled%206.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/0731_Spark/Untitled%207.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>그 뒤에 인터넷 주소창에 <a href=\"http://localhost:8080/\">localhost:8080</a> 을 치면 사이트가 나온다.</p>\n<p>  <img src=\"/images/0731_Spark/Untitled%208.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<hr>\n<h1 id=\"PySpark-설치-및-설정-1\"><a href=\"#PySpark-설치-및-설정-1\" class=\"headerlink\" title=\"PySpark 설치 및 설정\"></a>PySpark 설치 및 설정</h1><ul>\n<li><p>환경 변수 설정으로 (vi ~&#x2F;.bashrc)  들어가서 다음과 같이 입력한다</p>\n<p>  <img src=\"/images/0731_Spark/Untitled%209.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export AIRFLOW_HOME=/home/dhtpdud2009/airflow</span><br><span class=\"line\">export JAVA_HOME=/usr/lib/jvm/java-<span class=\"number\">8</span>-openjdk-amd64</span><br><span class=\"line\">export SPARK_HOME=/home/dhtpdud2009/spark3</span><br><span class=\"line\">export PATH=$JAVA_HOME/<span class=\"built_in\">bin</span>:$PATH</span><br><span class=\"line\">export PATH=$SPARK_HOME/<span class=\"built_in\">bin</span>:$PATH</span><br><span class=\"line\">export PYSPARK_PYTHON=/usr/<span class=\"built_in\">bin</span>/python3</span><br><span class=\"line\"><span class=\"comment\"># export PYSPARK_DRIVER_PYTHON_OPTS=&#x27;notebook&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>dhtpdud2009 부분은 알아서 바꾸기</p>\n</li>\n<li><p>chapter14 폴더 만들고 가상환경 세팅하기</p>\n<p>  <img src=\"/images/0731_Spark/Untitled%2010.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>pip3 install findspark 입력 &#x2F; pip install pyspark 입력</p>\n<p>  <img src=\"/images/0731_Spark/Untitled%2011.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/0731_Spark/Untitled%2012.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>pip3 install jupyter 입력</p>\n<p>  <img src=\"/images/0731_Spark/Untitled%2013.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>그리고 다시 환경 변수 세팅 들어가서 주석처리 제거</p>\n<p>  <img src=\"/images/0731_Spark/Untitled%2014.png\" alt=\"Untitled\"></p>\n<p>  source ~&#x2F;.bashrc 까지 하기!</p>\n</li>\n<li><p>Ubuntu 껐다가 다시 켜서 CHAPTER14 에서 code . 로 열기</p>\n</li>\n<li><p>새 파일 만들고 가상환경 접속 후 다음과 같이 입력</p>\n<p>  <img src=\"/images/0731_Spark/Untitled%2015.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/0731_Spark/Untitled%2016.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>jupyter notebook 입력</p>\n<p>  <img src=\"/images/0731_Spark/Untitled%2017.png\" alt=\"Untitled\"></p>\n</li>\n<li><p><a href=\"http://localhost:8888/\">localhost:8888</a> 여기 ctrl+클릭하면 Jupyter Notebook 를 열 수 있음</p>\n<p>  <img src=\"/images/0731_Spark/Untitled%2018.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n"},{"title":"Heroku 세팅","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"thumbnailImage":"python.png","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-08-01T07:32:01.000Z","_content":"\n### Heroku 세팅하기\n<!-- excerpt -->\n\n---\n\n![Untitled](/images/Heroku/Untitled.png)\n\n![Untitled](/images/Heroku/Untitled%201.png)\n\n- [Heroku 홈페이지](https://id.heroku.com/login)에 들어가서 회원가입\n    - 비밀번호양식 → 영문+숫자+특수문자\n\n- [Heroku 다운로드](https://devcenter.heroku.com/articles/heroku-cli)\n\n- GitHub 에서 새로운 Repository 생성하기\n    \n    ![Untitled](/images/Heroku/Untitled%202.png)\n    \n\n- Add a README File 체크 후 생성한다.\n- 바탕화면에 git clone 으로 불러온 후 VSCode로 연다.\n    \n    ![Untitled](/images/Heroku/Untitled%203.png)\n    \n\n- 가상환경 생성 및 접속, Flask 설치\n    \n    ![Untitled](/images/Heroku/Untitled%204.png)\n    \n\n```python\nvirtualenv venv\n\nsource venv/Scripts/activate\n\npip install Flask gunicorn\n```\n\n- 파일 만들기\n    \n    ![Untitled](/images/Heroku/Untitled%205.png)\n    \n    ![Untitled](/images/Heroku/Untitled%206.png)\n    \n\n```python\npip freeze > requirements.txt\n```\n\n- 코드 입력\n\n```python\npython.exe -m pip install --upgrade pip\n```\n\n![Untitled](/images/Heroku/Untitled%207.png)\n\n- [app.py](http://app.py) 파일 만들기\n    \n    ![Untitled](/images/Heroku/Untitled%208.png)\n    \n\n- [app.py](http://app.py) 파일 안에 코드 입력 후 저장\n\n```python\n# -*- coding: utf-8 -*-\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.route(\"/\")\ndef index():\n    return \"Hello World!\"\n```\n\n- 코드 입력\n    \n    ![Untitled](/images/Heroku/Untitled%209.png)\n    \n\n```python\nexport FLASK_ENV=development\n\nexport FLASK_APP=app\n\nflask run\n```\n\n- flask run 까지 입력했다면 다음과 같이 나오는데 주소창을 클릭하면 로컬에서 테스트 하는 형태로 된다.(Git 블로그 hexo server 와 같은 로직)\n    \n    ![Untitled](/images/Heroku/Untitled%2010.png)\n    \n\n- [app.py](http://app.py) 에 코드 추가\n    \n    ![Untitled](/images/Heroku/Untitled%2011.png)\n    \n\n```python\nif __name__ == \"__main__\":\n\tapp.run(port=5000)\n```\n\n- ‘Procfile’ 파일을 하나 만들고 코드 입력\n    \n    ![Untitled](/images/Heroku/Untitled%2012.png)\n    \n    ![Untitled](/images/Heroku/Untitled%2013.png)\n    \n\n```python\nweb: gunicorn wsgi:app\n```\n\n- ‘[wsgi.py](http://wsgi.py)’ 파일을 하나 만들고 코드 입력\n    \n    ![Untitled](/images/Heroku/Untitled%2014.png)\n    \n\n```python\nfrom app import app\n\nif __name__ == \"__main__\":\n    app.run()\n```\n\n- 파이썬 버전체크, 파이썬 실행(나가는 명령어는 exit())\n    \n    ![Untitled](/images/Heroku/Untitled%2015.png)\n    \n    ![Untitled](/images/Heroku/Untitled%2016.png)\n    \n\n```python\npython -V\n\npython\n```\n\n- ‘runtime.txt’ 를 만들어서 파이썬 버전을 입력해준다\n    \n    ![Untitled](/images/Heroku/Untitled%2017.png)\n    \n\n- flask run 으로 로컬 테스트 해본 뒤 git 에 업로드 한다\n\n```python\nflask fun\n\ngit add .\n\ngit commit -m \"your msg\"\n\ngit push\n```\n\n---\n\n## Heroku 로그인\n\n- heroku login 입력\n    \n    ![Untitled](/images/Heroku/Untitled%2018.png)\n    \n\n```python\nheroku login\n```\n\n- 사이트 업그레이드(app.py 만 업그레이드)\n    - 만약 “app” 를 “main “ 으로 이름을 바꾼다면 Procfile, [wsgi.py](http://wsgi.py) 등등 수정을 해야한다.\n    \n    ![Untitled](/images/Heroku/Untitled%2019.png)\n    \n- templates 폴더 하나 만들기(그 안에 index.html 파일 만들기)\n    \n    ![Untitled](/images/Heroku/Untitled%2020.png)\n    \n    ![Untitled](/images/Heroku/Untitled%2021.png)\n    \n- index.html 파일 만들고 세팅한 후 flask run 으로 홈페이지 들어가기\n    \n    ![Untitled](/images/Heroku/Untitled%2022.png)\n    \n\n- 샘플 html\n\n```python\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>FlaskBlog</title>\n</head>\n<body>\n   <h1>aaaaa</h1>\n</body>\n</html>\n```\n\n- [app.py](http://app.py) 에 다음 코드 입력 수정\n    \n    ![Untitled](/images/Heroku/Untitled%2023.png)\n    \n\n```python\nrender_template\n\nreturn render_template('index.html')\n```\n\n- git 블로그와 로직은 똑같다. 로컬 환경에서 테스트 —> 서버로 배포\n- flask run 으로 로컬 환경에서 테스트\n    \n    ![Untitled](/images/Heroku/Untitled%2024.png)\n    \n\n- 잘 나왔다면 Heroku로 배포\n- Heroku 로 배포 할 때\n    1. git add.\n    2. git commit -m “”\n    3. git push origin main\n    4. git push heroku main\n    \n     4 까지 진행했으면 Heroku에서 Open App 누르면 수정된 홈페이지가 나온다\n    \n    ![Untitled](/images/Heroku/Untitled%2025.png)\n    \n    ![Untitled](/images/Heroku/Untitled%2026.png)\n    \n    주소 창 비교 확인!\n    \n\n## 폰트 바꿔보기\n\n- static폴더를 만들고 안에 또 css 폴더를 만들고 그 안에 style.css 파일을 하나 만든다.\n    \n    ![Untitled](/images/Heroku/Untitled%2027.png)\n    \n- style.css 파일에 다음 샘플코드 복붙\n\n```python\nh1 {\n    border: 2px #eee solid;\n    color: brown;\n    text-align: center;\n    padding: 10px;\n}\n```\n\n- index.html 파일에 head 부분에 다음 문장 복붙\n\n```python\n<link rel=\"stylesheet\" href=\"{{ url_for('static', filename= 'css/style.css') }}\">\n```\n\n![Untitled](/images/Heroku/Untitled%2028.png)\n\n- 저장 후 flask run 으로 테스트 하고 heroku 에 배포","source":"_posts/day0801Heroku.md","raw":"---\ntitle: \"Heroku 세팅\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: Python\nclearReading: true\nthumbnailImage: python.png\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-08-01 16:32:01'\n---\n\n### Heroku 세팅하기\n<!-- excerpt -->\n\n---\n\n![Untitled](/images/Heroku/Untitled.png)\n\n![Untitled](/images/Heroku/Untitled%201.png)\n\n- [Heroku 홈페이지](https://id.heroku.com/login)에 들어가서 회원가입\n    - 비밀번호양식 → 영문+숫자+특수문자\n\n- [Heroku 다운로드](https://devcenter.heroku.com/articles/heroku-cli)\n\n- GitHub 에서 새로운 Repository 생성하기\n    \n    ![Untitled](/images/Heroku/Untitled%202.png)\n    \n\n- Add a README File 체크 후 생성한다.\n- 바탕화면에 git clone 으로 불러온 후 VSCode로 연다.\n    \n    ![Untitled](/images/Heroku/Untitled%203.png)\n    \n\n- 가상환경 생성 및 접속, Flask 설치\n    \n    ![Untitled](/images/Heroku/Untitled%204.png)\n    \n\n```python\nvirtualenv venv\n\nsource venv/Scripts/activate\n\npip install Flask gunicorn\n```\n\n- 파일 만들기\n    \n    ![Untitled](/images/Heroku/Untitled%205.png)\n    \n    ![Untitled](/images/Heroku/Untitled%206.png)\n    \n\n```python\npip freeze > requirements.txt\n```\n\n- 코드 입력\n\n```python\npython.exe -m pip install --upgrade pip\n```\n\n![Untitled](/images/Heroku/Untitled%207.png)\n\n- [app.py](http://app.py) 파일 만들기\n    \n    ![Untitled](/images/Heroku/Untitled%208.png)\n    \n\n- [app.py](http://app.py) 파일 안에 코드 입력 후 저장\n\n```python\n# -*- coding: utf-8 -*-\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.route(\"/\")\ndef index():\n    return \"Hello World!\"\n```\n\n- 코드 입력\n    \n    ![Untitled](/images/Heroku/Untitled%209.png)\n    \n\n```python\nexport FLASK_ENV=development\n\nexport FLASK_APP=app\n\nflask run\n```\n\n- flask run 까지 입력했다면 다음과 같이 나오는데 주소창을 클릭하면 로컬에서 테스트 하는 형태로 된다.(Git 블로그 hexo server 와 같은 로직)\n    \n    ![Untitled](/images/Heroku/Untitled%2010.png)\n    \n\n- [app.py](http://app.py) 에 코드 추가\n    \n    ![Untitled](/images/Heroku/Untitled%2011.png)\n    \n\n```python\nif __name__ == \"__main__\":\n\tapp.run(port=5000)\n```\n\n- ‘Procfile’ 파일을 하나 만들고 코드 입력\n    \n    ![Untitled](/images/Heroku/Untitled%2012.png)\n    \n    ![Untitled](/images/Heroku/Untitled%2013.png)\n    \n\n```python\nweb: gunicorn wsgi:app\n```\n\n- ‘[wsgi.py](http://wsgi.py)’ 파일을 하나 만들고 코드 입력\n    \n    ![Untitled](/images/Heroku/Untitled%2014.png)\n    \n\n```python\nfrom app import app\n\nif __name__ == \"__main__\":\n    app.run()\n```\n\n- 파이썬 버전체크, 파이썬 실행(나가는 명령어는 exit())\n    \n    ![Untitled](/images/Heroku/Untitled%2015.png)\n    \n    ![Untitled](/images/Heroku/Untitled%2016.png)\n    \n\n```python\npython -V\n\npython\n```\n\n- ‘runtime.txt’ 를 만들어서 파이썬 버전을 입력해준다\n    \n    ![Untitled](/images/Heroku/Untitled%2017.png)\n    \n\n- flask run 으로 로컬 테스트 해본 뒤 git 에 업로드 한다\n\n```python\nflask fun\n\ngit add .\n\ngit commit -m \"your msg\"\n\ngit push\n```\n\n---\n\n## Heroku 로그인\n\n- heroku login 입력\n    \n    ![Untitled](/images/Heroku/Untitled%2018.png)\n    \n\n```python\nheroku login\n```\n\n- 사이트 업그레이드(app.py 만 업그레이드)\n    - 만약 “app” 를 “main “ 으로 이름을 바꾼다면 Procfile, [wsgi.py](http://wsgi.py) 등등 수정을 해야한다.\n    \n    ![Untitled](/images/Heroku/Untitled%2019.png)\n    \n- templates 폴더 하나 만들기(그 안에 index.html 파일 만들기)\n    \n    ![Untitled](/images/Heroku/Untitled%2020.png)\n    \n    ![Untitled](/images/Heroku/Untitled%2021.png)\n    \n- index.html 파일 만들고 세팅한 후 flask run 으로 홈페이지 들어가기\n    \n    ![Untitled](/images/Heroku/Untitled%2022.png)\n    \n\n- 샘플 html\n\n```python\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>FlaskBlog</title>\n</head>\n<body>\n   <h1>aaaaa</h1>\n</body>\n</html>\n```\n\n- [app.py](http://app.py) 에 다음 코드 입력 수정\n    \n    ![Untitled](/images/Heroku/Untitled%2023.png)\n    \n\n```python\nrender_template\n\nreturn render_template('index.html')\n```\n\n- git 블로그와 로직은 똑같다. 로컬 환경에서 테스트 —> 서버로 배포\n- flask run 으로 로컬 환경에서 테스트\n    \n    ![Untitled](/images/Heroku/Untitled%2024.png)\n    \n\n- 잘 나왔다면 Heroku로 배포\n- Heroku 로 배포 할 때\n    1. git add.\n    2. git commit -m “”\n    3. git push origin main\n    4. git push heroku main\n    \n     4 까지 진행했으면 Heroku에서 Open App 누르면 수정된 홈페이지가 나온다\n    \n    ![Untitled](/images/Heroku/Untitled%2025.png)\n    \n    ![Untitled](/images/Heroku/Untitled%2026.png)\n    \n    주소 창 비교 확인!\n    \n\n## 폰트 바꿔보기\n\n- static폴더를 만들고 안에 또 css 폴더를 만들고 그 안에 style.css 파일을 하나 만든다.\n    \n    ![Untitled](/images/Heroku/Untitled%2027.png)\n    \n- style.css 파일에 다음 샘플코드 복붙\n\n```python\nh1 {\n    border: 2px #eee solid;\n    color: brown;\n    text-align: center;\n    padding: 10px;\n}\n```\n\n- index.html 파일에 head 부분에 다음 문장 복붙\n\n```python\n<link rel=\"stylesheet\" href=\"{{ url_for('static', filename= 'css/style.css') }}\">\n```\n\n![Untitled](/images/Heroku/Untitled%2028.png)\n\n- 저장 후 flask run 으로 테스트 하고 heroku 에 배포","slug":"day0801Heroku","published":1,"updated":"2022-08-01T07:34:59.951Z","_id":"cl6afr8xx000040uoe43wc8um","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n<hr>\n<p><img src=\"/images/Heroku/Untitled.png\" alt=\"Untitled\"></p>\n<p><img src=\"/images/Heroku/Untitled%201.png\" alt=\"Untitled\"></p>\n<ul>\n<li><p><a href=\"https://id.heroku.com/login\">Heroku 홈페이지</a>에 들어가서 회원가입</p>\n<ul>\n<li>비밀번호양식 → 영문+숫자+특수문자</li>\n</ul>\n</li>\n<li><p><a href=\"https://devcenter.heroku.com/articles/heroku-cli\">Heroku 다운로드</a></p>\n</li>\n<li><p>GitHub 에서 새로운 Repository 생성하기</p>\n<p>  <img src=\"/images/Heroku/Untitled%202.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>Add a README File 체크 후 생성한다.</p>\n</li>\n<li><p>바탕화면에 git clone 으로 불러온 후 VSCode로 연다.</p>\n<p>  <img src=\"/images/Heroku/Untitled%203.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>가상환경 생성 및 접속, Flask 설치</p>\n<p>  <img src=\"/images/Heroku/Untitled%204.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">virtualenv venv</span><br><span class=\"line\"></span><br><span class=\"line\">source venv/Scripts/activate</span><br><span class=\"line\"></span><br><span class=\"line\">pip install Flask gunicorn</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>파일 만들기</p>\n<p>  <img src=\"/images/Heroku/Untitled%205.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/Heroku/Untitled%206.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip freeze &gt; requirements.txt</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>코드 입력</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python.exe -m pip install --upgrade pip</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/Heroku/Untitled%207.png\" alt=\"Untitled\"></p>\n<ul>\n<li><p><a href=\"http://app.py/\">app.py</a> 파일 만들기</p>\n<p>  <img src=\"/images/Heroku/Untitled%208.png\" alt=\"Untitled\"></p>\n</li>\n<li><p><a href=\"http://app.py/\">app.py</a> 파일 안에 코드 입력 후 저장</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">index</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;Hello World!&quot;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>코드 입력</p>\n<p>  <img src=\"/images/Heroku/Untitled%209.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export FLASK_ENV=development</span><br><span class=\"line\"></span><br><span class=\"line\">export FLASK_APP=app</span><br><span class=\"line\"></span><br><span class=\"line\">flask run</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>flask run 까지 입력했다면 다음과 같이 나오는데 주소창을 클릭하면 로컬에서 테스트 하는 형태로 된다.(Git 블로그 hexo server 와 같은 로직)</p>\n<p>  <img src=\"/images/Heroku/Untitled%2010.png\" alt=\"Untitled\"></p>\n</li>\n<li><p><a href=\"http://app.py/\">app.py</a> 에 코드 추가</p>\n<p>  <img src=\"/images/Heroku/Untitled%2011.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">\tapp.run(port=<span class=\"number\">5000</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>‘Procfile’ 파일을 하나 만들고 코드 입력</p>\n<p>  <img src=\"/images/Heroku/Untitled%2012.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/Heroku/Untitled%2013.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">web: gunicorn wsgi:app</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>‘<a href=\"http://wsgi.py/\">wsgi.py</a>’ 파일을 하나 만들고 코드 입력</p>\n<p>  <img src=\"/images/Heroku/Untitled%2014.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> app <span class=\"keyword\">import</span> app</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    app.run()</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>파이썬 버전체크, 파이썬 실행(나가는 명령어는 exit())</p>\n<p>  <img src=\"/images/Heroku/Untitled%2015.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/Heroku/Untitled%2016.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -V</span><br><span class=\"line\"></span><br><span class=\"line\">python</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>‘runtime.txt’ 를 만들어서 파이썬 버전을 입력해준다</p>\n<p>  <img src=\"/images/Heroku/Untitled%2017.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>flask run 으로 로컬 테스트 해본 뒤 git 에 업로드 한다</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flask fun</span><br><span class=\"line\"></span><br><span class=\"line\">git add .</span><br><span class=\"line\"></span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;your msg&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">git push</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"Heroku-로그인\"><a href=\"#Heroku-로그인\" class=\"headerlink\" title=\"Heroku 로그인\"></a>Heroku 로그인</h2><ul>\n<li><p>heroku login 입력</p>\n<p>  <img src=\"/images/Heroku/Untitled%2018.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">heroku login</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>사이트 업그레이드(app.py 만 업그레이드)</p>\n<ul>\n<li>만약 “app” 를 “main “ 으로 이름을 바꾼다면 Procfile, <a href=\"http://wsgi.py/\">wsgi.py</a> 등등 수정을 해야한다.</li>\n</ul>\n<p>  <img src=\"/images/Heroku/Untitled%2019.png\" alt=\"Untitled\">\n  </p>\n</li>\n<li><p>templates 폴더 하나 만들기(그 안에 index.html 파일 만들기)</p>\n<p>  <img src=\"/images/Heroku/Untitled%2020.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/Heroku/Untitled%2021.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>index.html 파일 만들고 세팅한 후 flask run 으로 홈페이지 들어가기</p>\n<p>  <img src=\"/images/Heroku/Untitled%2022.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>샘플 html</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">&quot;en&quot;</span>&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;FlaskBlog&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">   &lt;h1&gt;aaaaa&lt;/h1&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p><a href=\"http://app.py/\">app.py</a> 에 다음 코드 입력 수정</p>\n<p>  <img src=\"/images/Heroku/Untitled%2023.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">render_template</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;index.html&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>git 블로그와 로직은 똑같다. 로컬 환경에서 테스트 —&gt; 서버로 배포</p>\n</li>\n<li><p>flask run 으로 로컬 환경에서 테스트</p>\n<p>  <img src=\"/images/Heroku/Untitled%2024.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>잘 나왔다면 Heroku로 배포</p>\n</li>\n<li><p>Heroku 로 배포 할 때</p>\n<ol>\n<li>git add.</li>\n<li>git commit -m “”</li>\n<li>git push origin main</li>\n<li>git push heroku main</li>\n</ol>\n<p>   4 까지 진행했으면 Heroku에서 Open App 누르면 수정된 홈페이지가 나온다</p>\n<p>  <img src=\"/images/Heroku/Untitled%2025.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/Heroku/Untitled%2026.png\" alt=\"Untitled\"></p>\n<p>  주소 창 비교 확인!</p>\n</li>\n</ul>\n<h2 id=\"폰트-바꿔보기\"><a href=\"#폰트-바꿔보기\" class=\"headerlink\" title=\"폰트 바꿔보기\"></a>폰트 바꿔보기</h2><ul>\n<li><p>static폴더를 만들고 안에 또 css 폴더를 만들고 그 안에 style.css 파일을 하나 만든다.</p>\n<p>  <img src=\"/images/Heroku/Untitled%2027.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>style.css 파일에 다음 샘플코드 복붙</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">h1 &#123;</span><br><span class=\"line\">    border: 2px <span class=\"comment\">#eee solid;</span></span><br><span class=\"line\">    color: brown;</span><br><span class=\"line\">    text-align: center;</span><br><span class=\"line\">    padding: 10px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>index.html 파일에 head 부분에 다음 문장 복붙</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;link rel=<span class=\"string\">&quot;stylesheet&quot;</span> href=<span class=\"string\">&quot;&#123;&#123; url_for(&#x27;static&#x27;, filename= &#x27;css/style.css&#x27;) &#125;&#125;&quot;</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/Heroku/Untitled%2028.png\" alt=\"Untitled\"></p>\n<ul>\n<li>저장 후 flask run 으로 테스트 하고 heroku 에 배포</li>\n</ul>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/08/01/day0801Heroku/python.png","excerpt":"<h3 id=\"Heroku-세팅하기\"><a href=\"#Heroku-세팅하기\" class=\"headerlink\" title=\"Heroku 세팅하기\"></a>Heroku 세팅하기</h3>","more":"<h3 id=\"Heroku-세팅하기\"><a href=\"#Heroku-세팅하기\" class=\"headerlink\" title=\"Heroku 세팅하기\"></a>Heroku 세팅하기</h3><!-- excerpt -->\n\n<hr>\n<p><img src=\"/images/Heroku/Untitled.png\" alt=\"Untitled\"></p>\n<p><img src=\"/images/Heroku/Untitled%201.png\" alt=\"Untitled\"></p>\n<ul>\n<li><p><a href=\"https://id.heroku.com/login\">Heroku 홈페이지</a>에 들어가서 회원가입</p>\n<ul>\n<li>비밀번호양식 → 영문+숫자+특수문자</li>\n</ul>\n</li>\n<li><p><a href=\"https://devcenter.heroku.com/articles/heroku-cli\">Heroku 다운로드</a></p>\n</li>\n<li><p>GitHub 에서 새로운 Repository 생성하기</p>\n<p>  <img src=\"/images/Heroku/Untitled%202.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>Add a README File 체크 후 생성한다.</p>\n</li>\n<li><p>바탕화면에 git clone 으로 불러온 후 VSCode로 연다.</p>\n<p>  <img src=\"/images/Heroku/Untitled%203.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>가상환경 생성 및 접속, Flask 설치</p>\n<p>  <img src=\"/images/Heroku/Untitled%204.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">virtualenv venv</span><br><span class=\"line\"></span><br><span class=\"line\">source venv/Scripts/activate</span><br><span class=\"line\"></span><br><span class=\"line\">pip install Flask gunicorn</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>파일 만들기</p>\n<p>  <img src=\"/images/Heroku/Untitled%205.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/Heroku/Untitled%206.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip freeze &gt; requirements.txt</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>코드 입력</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python.exe -m pip install --upgrade pip</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/Heroku/Untitled%207.png\" alt=\"Untitled\"></p>\n<ul>\n<li><p><a href=\"http://app.py/\">app.py</a> 파일 만들기</p>\n<p>  <img src=\"/images/Heroku/Untitled%208.png\" alt=\"Untitled\"></p>\n</li>\n<li><p><a href=\"http://app.py/\">app.py</a> 파일 안에 코드 입력 후 저장</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">index</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;Hello World!&quot;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>코드 입력</p>\n<p>  <img src=\"/images/Heroku/Untitled%209.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export FLASK_ENV=development</span><br><span class=\"line\"></span><br><span class=\"line\">export FLASK_APP=app</span><br><span class=\"line\"></span><br><span class=\"line\">flask run</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>flask run 까지 입력했다면 다음과 같이 나오는데 주소창을 클릭하면 로컬에서 테스트 하는 형태로 된다.(Git 블로그 hexo server 와 같은 로직)</p>\n<p>  <img src=\"/images/Heroku/Untitled%2010.png\" alt=\"Untitled\"></p>\n</li>\n<li><p><a href=\"http://app.py/\">app.py</a> 에 코드 추가</p>\n<p>  <img src=\"/images/Heroku/Untitled%2011.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">\tapp.run(port=<span class=\"number\">5000</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>‘Procfile’ 파일을 하나 만들고 코드 입력</p>\n<p>  <img src=\"/images/Heroku/Untitled%2012.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/Heroku/Untitled%2013.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">web: gunicorn wsgi:app</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>‘<a href=\"http://wsgi.py/\">wsgi.py</a>’ 파일을 하나 만들고 코드 입력</p>\n<p>  <img src=\"/images/Heroku/Untitled%2014.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> app <span class=\"keyword\">import</span> app</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    app.run()</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>파이썬 버전체크, 파이썬 실행(나가는 명령어는 exit())</p>\n<p>  <img src=\"/images/Heroku/Untitled%2015.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/Heroku/Untitled%2016.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -V</span><br><span class=\"line\"></span><br><span class=\"line\">python</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>‘runtime.txt’ 를 만들어서 파이썬 버전을 입력해준다</p>\n<p>  <img src=\"/images/Heroku/Untitled%2017.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>flask run 으로 로컬 테스트 해본 뒤 git 에 업로드 한다</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flask fun</span><br><span class=\"line\"></span><br><span class=\"line\">git add .</span><br><span class=\"line\"></span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;your msg&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">git push</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"Heroku-로그인\"><a href=\"#Heroku-로그인\" class=\"headerlink\" title=\"Heroku 로그인\"></a>Heroku 로그인</h2><ul>\n<li><p>heroku login 입력</p>\n<p>  <img src=\"/images/Heroku/Untitled%2018.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">heroku login</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>사이트 업그레이드(app.py 만 업그레이드)</p>\n<ul>\n<li>만약 “app” 를 “main “ 으로 이름을 바꾼다면 Procfile, <a href=\"http://wsgi.py/\">wsgi.py</a> 등등 수정을 해야한다.</li>\n</ul>\n<p>  <img src=\"/images/Heroku/Untitled%2019.png\" alt=\"Untitled\">\n  </p>\n</li>\n<li><p>templates 폴더 하나 만들기(그 안에 index.html 파일 만들기)</p>\n<p>  <img src=\"/images/Heroku/Untitled%2020.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/Heroku/Untitled%2021.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>index.html 파일 만들고 세팅한 후 flask run 으로 홈페이지 들어가기</p>\n<p>  <img src=\"/images/Heroku/Untitled%2022.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>샘플 html</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">&quot;en&quot;</span>&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;FlaskBlog&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">   &lt;h1&gt;aaaaa&lt;/h1&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p><a href=\"http://app.py/\">app.py</a> 에 다음 코드 입력 수정</p>\n<p>  <img src=\"/images/Heroku/Untitled%2023.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">render_template</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;index.html&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>git 블로그와 로직은 똑같다. 로컬 환경에서 테스트 —&gt; 서버로 배포</p>\n</li>\n<li><p>flask run 으로 로컬 환경에서 테스트</p>\n<p>  <img src=\"/images/Heroku/Untitled%2024.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>잘 나왔다면 Heroku로 배포</p>\n</li>\n<li><p>Heroku 로 배포 할 때</p>\n<ol>\n<li>git add.</li>\n<li>git commit -m “”</li>\n<li>git push origin main</li>\n<li>git push heroku main</li>\n</ol>\n<p>   4 까지 진행했으면 Heroku에서 Open App 누르면 수정된 홈페이지가 나온다</p>\n<p>  <img src=\"/images/Heroku/Untitled%2025.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/Heroku/Untitled%2026.png\" alt=\"Untitled\"></p>\n<p>  주소 창 비교 확인!</p>\n</li>\n</ul>\n<h2 id=\"폰트-바꿔보기\"><a href=\"#폰트-바꿔보기\" class=\"headerlink\" title=\"폰트 바꿔보기\"></a>폰트 바꿔보기</h2><ul>\n<li><p>static폴더를 만들고 안에 또 css 폴더를 만들고 그 안에 style.css 파일을 하나 만든다.</p>\n<p>  <img src=\"/images/Heroku/Untitled%2027.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>style.css 파일에 다음 샘플코드 복붙</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">h1 &#123;</span><br><span class=\"line\">    border: 2px <span class=\"comment\">#eee solid;</span></span><br><span class=\"line\">    color: brown;</span><br><span class=\"line\">    text-align: center;</span><br><span class=\"line\">    padding: 10px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>index.html 파일에 head 부분에 다음 문장 복붙</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;link rel=<span class=\"string\">&quot;stylesheet&quot;</span> href=<span class=\"string\">&quot;&#123;&#123; url_for(&#x27;static&#x27;, filename= &#x27;css/style.css&#x27;) &#125;&#125;&quot;</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/Heroku/Untitled%2028.png\" alt=\"Untitled\"></p>\n<ul>\n<li>저장 후 flask run 으로 테스트 하고 heroku 에 배포</li>\n</ul>\n"},{"title":"머신러닝 세팅 및 실습","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"thumbnailImage":"python.png","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-08-05T00:08:01.000Z","_content":"\n### 머신러닝 해보기\n<!-- more -->\n\n# 머신러닝 환경 세팅\n\n- 폴더 새로 만들고 가상환경 깔고 접속\n- pip install pandas sklearn django jupyterlab\n- jupyter lab 으로 실행\n- iris.csv 파일 불러오기\n- csv 파일 불러와서  독립변수 종속변수 분리하기\n    \n    ![Untitled](/images/0805/Untitled.png)\n    \n- 모형학습\n    \n    ![Untitled](/images/0805/Untitled%201.png)\n    \n- 모형 예측 후 저장\n    - 저장할 때 models 폴더를 안에 하나 만들어야 한다\n    \n    ![Untitled](/images/0805/Untitled%202.png)\n    \n    ![Untitled](/images/0805/Untitled%203.png)\n    \n    ![Untitled](/images/0805/Untitled%204.png)\n    \n- models 폴더에 pickle 형태로 모델이 저장된 것을 볼 수 있다\n    \n    ![Untitled](/images/0805/Untitled%205.png)\n    \n- jupyter lab 종료 후 (Ctrl + C)  django-admin startproject iris 입력\n    \n    ![Untitled](/images/0805/Untitled%206.png)\n    \n- iris 폴더로 이동\n- python [manage.py](http://manage.py) startapp predict 입력\n    \n    ![Untitled](/images/0805/Untitled%207.png)\n    \n    ![Untitled](/images/0805/Untitled%208.png)\n    \n- iris 폴더에서 [settimgs.py](http://settimgs.py) 를 연 후 INSTALLED_APPS 항목에 ‘predict’ 를 추가해준다(저장필수)\n    \n    ![Untitled](/images/0805/Untitled%209.png)\n    \n- [urls.py](http://urls.py) 에서 urlpatterns 항목에 다음과 같이 추가한다.\n    \n    ![Untitled](/images/0805/Untitled%2010.png)\n    \n    ![Untitled](/images/0805/Untitled%2011.png)\n    \n\n- predict 폴더 안에 [urls.py](http://urls.py) 파일을 하나 만들고 다음 코드를 입력한다.\n    \n    ![Untitled](/images/0805/Untitled%2012.png)\n    \n\n```python\nfrom django.urls import path\nfrom . import views\n\napp_name = 'predict'\nurlpatterns = [\n    path('', views.predict, name='predict')\n]\n```\n\n- [views.py](http://views.py) 파일로 이동 후 사용자 정의 함수 만들기\n    \n    ![Untitled](/images/0805/Untitled%2013.png)\n    \n\n```python\n# 백엔드 처리하는 곳\ndef predict(request):\n    return render(request, 'predict.html', {})\n```\n\n- predict 폴더안에 templates 폴더를 만들고 그 안에 predict.html 파일 만들기\n    \n    ![Untitled](/images/0805/Untitled%2014.png)\n    \n- 샘플 html 코드 입력 후 [manage.py](http://manage.py)가 있는 경로로 이동\n    \n    ![Untitled](/images/0805/Untitled%2015.png)\n    \n- python [manage.py](http://manage.py) runserver 입력\n    \n    ![Untitled](/images/0805/Untitled%2016.png)\n    \n- 저 밑에 주소 누르면 홈페이지 들어가짐\n    \n    ![Untitled](/images/0805/Untitled%2017.png)\n    \n- templates 폴더에 base.html 파일 생성 후 다음 코드 입력\n\n```html\n<!doctype html>\n<html lang=\"en\">\n    <head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n    <title>Iris prediction</title>\n    </head>\n    <body>\n\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav mr-auto\">\n                <li class=\"nav-item active\">\n                    <a class=\"nav-link\" href=\"/\">Prediction <span class=\"sr-only\">(current)</span></a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/results\">DB</a>\n                </li>\n            </ul>\n        </div>\n    </nav>\n\n    {% block main %}\n    {% endblock %}\n\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js\" integrity=\"sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q\" crossorigin=\"anonymous\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\" integrity=\"sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl\" crossorigin=\"anonymous\"></script>\n    </body>\n</html>\n```\n\n- predict.html 에 다음 코드 입력\n\n```html\n{% extends \"base.html\" %}\n\n{% block main %}\n<!-- Modal -->\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Prediction Results</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <h5>Prediction Input:</h5>\n                <div>Sepal Length: <span id=\"sl\"></span></div>\n                <div>Sepal Width: <span id=\"sw\"></span></div>\n                <div>Petal Length: <span id=\"pl\"></span></div>\n                <div>Petal width: <span id=\"pw\"></span></div>\n                <h5 class=\"pt-3\">Prediction Classification:</h5>\n                <div id=\"prediction\"></div>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                <a class=\"btn btn-primary\" href=\"/results\" role=\"button\">View DB</a>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"container pt-5\">\n    <div class=\"row justify-content-md-center\">\n        <div class=\"col-md-4\">\n            <h1>Iris Prediction</h1>\n            <form action=\"\" id=\"post-form\">\n                {% csrf_token %}\n                <div class=\"form-group\">\n                    <label for=\"sepal_length\">Sepal Length</label>\n                    <input type=\"number\" step=\"0.1\" class=\"form-control\" id=\"sepal_length\" placeholder=\"\" required>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"Sepal Width\">Sepal Width</label>\n                    <input type=\"number\" step=\"0.1\" class=\"form-control\" id=\"sepal_width\" placeholder=\"\" required>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"petal_length\">Petal Length</label>\n                    <input type=\"number\" step=\"0.1\" class=\"form-control\" id=\"petal_length\" placeholder=\"\" required>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"petal_width\">Petal Width</label>\n                    <input type=\"number\" step=\"0.1\" class=\"form-control\" id=\"petal_width\" placeholder=\"\" required>\n                </div>\n                <button type=\"submit\" value=\"Submit\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">Submit</button>\n            </form>\n        </div>\n    </div>\n</div>\n\n<script>\n    $(document).on('submit', '#post-form',function(e){\n        e.preventDefault();\n        $.ajax({\n            type:'POST',\n            url:'{% url \"predict:submit_prediction\" %}',\n            data:{\n                sepal_length:$('#sepal_length').val(),\n                sepal_width:$('#sepal_width').val(),\n                petal_length:$('#petal_length').val(),\n                petal_width:$('#petal_width').val(),\n                csrfmiddlewaretoken:$('input[name=csrfmiddlewaretoken]').val(),\n                action: 'post'\n            },\n            success:function(json) {\n                document.forms[\"post-form\"].reset();\n                document.getElementById(\"prediction\").innerHTML = json['result']\n                document.getElementById(\"sl\").innerHTML = json['sepal_length']\n                document.getElementById(\"sw\").innerHTML = json['sepal_width']\n                document.getElementById(\"pl\").innerHTML = json['petal_length']\n                document.getElementById(\"pw\").innerHTML = json['petal_width']\n            },\n            error : function(xhr,errmsg,err) {\n\n            }\n        });\n    })\n</script>\n\n{% endblock %}\n```\n\n- base.html 파일에 predict.html 을 끼워넣는다는 뜻이다.(extends로 연동)\n    \n    ![base.html 이 부분에](/images/0805/Untitled%2018.png)\n    \n    base.html 이 부분에\n    \n    ![predict.html 연동해서](/images/0805/Untitled%2019.png)\n    \n    predict.html 연동해서\n    \n    ![이 endblock 까지 삽입한다는 뜻](/images/0805/Untitled%2020.png)\n    \n    이 endblock 까지 삽입한다는 뜻","source":"_posts/머신러닝 해보기.md","raw":"---\ntitle: \"머신러닝 세팅 및 실습\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: Python\nclearReading: true\nthumbnailImage: python.png\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-08-05 09:08:01'\n---\n\n### 머신러닝 해보기\n<!-- more -->\n\n# 머신러닝 환경 세팅\n\n- 폴더 새로 만들고 가상환경 깔고 접속\n- pip install pandas sklearn django jupyterlab\n- jupyter lab 으로 실행\n- iris.csv 파일 불러오기\n- csv 파일 불러와서  독립변수 종속변수 분리하기\n    \n    ![Untitled](/images/0805/Untitled.png)\n    \n- 모형학습\n    \n    ![Untitled](/images/0805/Untitled%201.png)\n    \n- 모형 예측 후 저장\n    - 저장할 때 models 폴더를 안에 하나 만들어야 한다\n    \n    ![Untitled](/images/0805/Untitled%202.png)\n    \n    ![Untitled](/images/0805/Untitled%203.png)\n    \n    ![Untitled](/images/0805/Untitled%204.png)\n    \n- models 폴더에 pickle 형태로 모델이 저장된 것을 볼 수 있다\n    \n    ![Untitled](/images/0805/Untitled%205.png)\n    \n- jupyter lab 종료 후 (Ctrl + C)  django-admin startproject iris 입력\n    \n    ![Untitled](/images/0805/Untitled%206.png)\n    \n- iris 폴더로 이동\n- python [manage.py](http://manage.py) startapp predict 입력\n    \n    ![Untitled](/images/0805/Untitled%207.png)\n    \n    ![Untitled](/images/0805/Untitled%208.png)\n    \n- iris 폴더에서 [settimgs.py](http://settimgs.py) 를 연 후 INSTALLED_APPS 항목에 ‘predict’ 를 추가해준다(저장필수)\n    \n    ![Untitled](/images/0805/Untitled%209.png)\n    \n- [urls.py](http://urls.py) 에서 urlpatterns 항목에 다음과 같이 추가한다.\n    \n    ![Untitled](/images/0805/Untitled%2010.png)\n    \n    ![Untitled](/images/0805/Untitled%2011.png)\n    \n\n- predict 폴더 안에 [urls.py](http://urls.py) 파일을 하나 만들고 다음 코드를 입력한다.\n    \n    ![Untitled](/images/0805/Untitled%2012.png)\n    \n\n```python\nfrom django.urls import path\nfrom . import views\n\napp_name = 'predict'\nurlpatterns = [\n    path('', views.predict, name='predict')\n]\n```\n\n- [views.py](http://views.py) 파일로 이동 후 사용자 정의 함수 만들기\n    \n    ![Untitled](/images/0805/Untitled%2013.png)\n    \n\n```python\n# 백엔드 처리하는 곳\ndef predict(request):\n    return render(request, 'predict.html', {})\n```\n\n- predict 폴더안에 templates 폴더를 만들고 그 안에 predict.html 파일 만들기\n    \n    ![Untitled](/images/0805/Untitled%2014.png)\n    \n- 샘플 html 코드 입력 후 [manage.py](http://manage.py)가 있는 경로로 이동\n    \n    ![Untitled](/images/0805/Untitled%2015.png)\n    \n- python [manage.py](http://manage.py) runserver 입력\n    \n    ![Untitled](/images/0805/Untitled%2016.png)\n    \n- 저 밑에 주소 누르면 홈페이지 들어가짐\n    \n    ![Untitled](/images/0805/Untitled%2017.png)\n    \n- templates 폴더에 base.html 파일 생성 후 다음 코드 입력\n\n```html\n<!doctype html>\n<html lang=\"en\">\n    <head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n    <title>Iris prediction</title>\n    </head>\n    <body>\n\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav mr-auto\">\n                <li class=\"nav-item active\">\n                    <a class=\"nav-link\" href=\"/\">Prediction <span class=\"sr-only\">(current)</span></a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/results\">DB</a>\n                </li>\n            </ul>\n        </div>\n    </nav>\n\n    {% block main %}\n    {% endblock %}\n\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js\" integrity=\"sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q\" crossorigin=\"anonymous\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\" integrity=\"sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl\" crossorigin=\"anonymous\"></script>\n    </body>\n</html>\n```\n\n- predict.html 에 다음 코드 입력\n\n```html\n{% extends \"base.html\" %}\n\n{% block main %}\n<!-- Modal -->\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Prediction Results</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <h5>Prediction Input:</h5>\n                <div>Sepal Length: <span id=\"sl\"></span></div>\n                <div>Sepal Width: <span id=\"sw\"></span></div>\n                <div>Petal Length: <span id=\"pl\"></span></div>\n                <div>Petal width: <span id=\"pw\"></span></div>\n                <h5 class=\"pt-3\">Prediction Classification:</h5>\n                <div id=\"prediction\"></div>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                <a class=\"btn btn-primary\" href=\"/results\" role=\"button\">View DB</a>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"container pt-5\">\n    <div class=\"row justify-content-md-center\">\n        <div class=\"col-md-4\">\n            <h1>Iris Prediction</h1>\n            <form action=\"\" id=\"post-form\">\n                {% csrf_token %}\n                <div class=\"form-group\">\n                    <label for=\"sepal_length\">Sepal Length</label>\n                    <input type=\"number\" step=\"0.1\" class=\"form-control\" id=\"sepal_length\" placeholder=\"\" required>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"Sepal Width\">Sepal Width</label>\n                    <input type=\"number\" step=\"0.1\" class=\"form-control\" id=\"sepal_width\" placeholder=\"\" required>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"petal_length\">Petal Length</label>\n                    <input type=\"number\" step=\"0.1\" class=\"form-control\" id=\"petal_length\" placeholder=\"\" required>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"petal_width\">Petal Width</label>\n                    <input type=\"number\" step=\"0.1\" class=\"form-control\" id=\"petal_width\" placeholder=\"\" required>\n                </div>\n                <button type=\"submit\" value=\"Submit\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">Submit</button>\n            </form>\n        </div>\n    </div>\n</div>\n\n<script>\n    $(document).on('submit', '#post-form',function(e){\n        e.preventDefault();\n        $.ajax({\n            type:'POST',\n            url:'{% url \"predict:submit_prediction\" %}',\n            data:{\n                sepal_length:$('#sepal_length').val(),\n                sepal_width:$('#sepal_width').val(),\n                petal_length:$('#petal_length').val(),\n                petal_width:$('#petal_width').val(),\n                csrfmiddlewaretoken:$('input[name=csrfmiddlewaretoken]').val(),\n                action: 'post'\n            },\n            success:function(json) {\n                document.forms[\"post-form\"].reset();\n                document.getElementById(\"prediction\").innerHTML = json['result']\n                document.getElementById(\"sl\").innerHTML = json['sepal_length']\n                document.getElementById(\"sw\").innerHTML = json['sepal_width']\n                document.getElementById(\"pl\").innerHTML = json['petal_length']\n                document.getElementById(\"pw\").innerHTML = json['petal_width']\n            },\n            error : function(xhr,errmsg,err) {\n\n            }\n        });\n    })\n</script>\n\n{% endblock %}\n```\n\n- base.html 파일에 predict.html 을 끼워넣는다는 뜻이다.(extends로 연동)\n    \n    ![base.html 이 부분에](/images/0805/Untitled%2018.png)\n    \n    base.html 이 부분에\n    \n    ![predict.html 연동해서](/images/0805/Untitled%2019.png)\n    \n    predict.html 연동해서\n    \n    ![이 endblock 까지 삽입한다는 뜻](/images/0805/Untitled%2020.png)\n    \n    이 endblock 까지 삽입한다는 뜻","slug":"머신러닝 해보기","published":1,"updated":"2022-08-05T00:10:14.126Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6fpo6qy0000jguociqd6hjb","content":"<h3 id=\"머신러닝-해보기\"><a href=\"#머신러닝-해보기\" class=\"headerlink\" title=\"머신러닝 해보기\"></a>머신러닝 해보기</h3><span id=\"more\"></span>\n\n<h1 id=\"머신러닝-환경-세팅\"><a href=\"#머신러닝-환경-세팅\" class=\"headerlink\" title=\"머신러닝 환경 세팅\"></a>머신러닝 환경 세팅</h1><ul>\n<li><p>폴더 새로 만들고 가상환경 깔고 접속</p>\n</li>\n<li><p>pip install pandas sklearn django jupyterlab</p>\n</li>\n<li><p>jupyter lab 으로 실행</p>\n</li>\n<li><p>iris.csv 파일 불러오기</p>\n</li>\n<li><p>csv 파일 불러와서  독립변수 종속변수 분리하기</p>\n<p>  <img src=\"/images/0805/Untitled.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>모형학습</p>\n<p>  <img src=\"/images/0805/Untitled%201.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>모형 예측 후 저장</p>\n<ul>\n<li>저장할 때 models 폴더를 안에 하나 만들어야 한다</li>\n</ul>\n<p>  <img src=\"/images/0805/Untitled%202.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/0805/Untitled%203.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/0805/Untitled%204.png\" alt=\"Untitled\">\n  </p>\n</li>\n<li><p>models 폴더에 pickle 형태로 모델이 저장된 것을 볼 수 있다</p>\n<p>  <img src=\"/images/0805/Untitled%205.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>jupyter lab 종료 후 (Ctrl + C)  django-admin startproject iris 입력</p>\n<p>  <img src=\"/images/0805/Untitled%206.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>iris 폴더로 이동</p>\n</li>\n<li><p>python <a href=\"http://manage.py/\">manage.py</a> startapp predict 입력</p>\n<p>  <img src=\"/images/0805/Untitled%207.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/0805/Untitled%208.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>iris 폴더에서 <a href=\"http://settimgs.py/\">settimgs.py</a> 를 연 후 INSTALLED_APPS 항목에 ‘predict’ 를 추가해준다(저장필수)</p>\n<p>  <img src=\"/images/0805/Untitled%209.png\" alt=\"Untitled\"></p>\n</li>\n<li><p><a href=\"http://urls.py/\">urls.py</a> 에서 urlpatterns 항목에 다음과 같이 추가한다.</p>\n<p>  <img src=\"/images/0805/Untitled%2010.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/0805/Untitled%2011.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>predict 폴더 안에 <a href=\"http://urls.py/\">urls.py</a> 파일을 하나 만들고 다음 코드를 입력한다.</p>\n<p>  <img src=\"/images/0805/Untitled%2012.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.urls <span class=\"keyword\">import</span> path</span><br><span class=\"line\"><span class=\"keyword\">from</span> . <span class=\"keyword\">import</span> views</span><br><span class=\"line\"></span><br><span class=\"line\">app_name = <span class=\"string\">&#x27;predict&#x27;</span></span><br><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    path(<span class=\"string\">&#x27;&#x27;</span>, views.predict, name=<span class=\"string\">&#x27;predict&#x27;</span>)</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p><a href=\"http://views.py/\">views.py</a> 파일로 이동 후 사용자 정의 함수 만들기</p>\n<p>  <img src=\"/images/0805/Untitled%2013.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 백엔드 처리하는 곳</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">predict</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render(request, <span class=\"string\">&#x27;predict.html&#x27;</span>, &#123;&#125;)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>predict 폴더안에 templates 폴더를 만들고 그 안에 predict.html 파일 만들기</p>\n<p>  <img src=\"/images/0805/Untitled%2014.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>샘플 html 코드 입력 후 <a href=\"http://manage.py/\">manage.py</a>가 있는 경로로 이동</p>\n<p>  <img src=\"/images/0805/Untitled%2015.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>python <a href=\"http://manage.py/\">manage.py</a> runserver 입력</p>\n<p>  <img src=\"/images/0805/Untitled%2016.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>저 밑에 주소 누르면 홈페이지 들어가짐</p>\n<p>  <img src=\"/images/0805/Untitled%2017.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>templates 폴더에 base.html 파일 생성 후 다음 코드 입력</p>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!doctype <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- Required meta tags --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- Bootstrap CSS --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css&quot;</span> <span class=\"attr\">integrity</span>=<span class=\"string\">&quot;sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh&quot;</span> <span class=\"attr\">crossorigin</span>=<span class=\"string\">&quot;anonymous&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Iris prediction<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">nav</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;navbar navbar-expand-lg navbar-light bg-light&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;navbar-toggler&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">data-toggle</span>=<span class=\"string\">&quot;collapse&quot;</span> <span class=\"attr\">data-target</span>=<span class=\"string\">&quot;#navbarSupportedContent&quot;</span> <span class=\"attr\">aria-controls</span>=<span class=\"string\">&quot;navbarSupportedContent&quot;</span> <span class=\"attr\">aria-expanded</span>=<span class=\"string\">&quot;false&quot;</span> <span class=\"attr\">aria-label</span>=<span class=\"string\">&quot;Toggle navigation&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;navbar-toggler-icon&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;collapse navbar-collapse&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;navbarSupportedContent&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;navbar-nav mr-auto&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-item active&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-link&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/&quot;</span>&gt;</span>Prediction <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;sr-only&quot;</span>&gt;</span>(current)<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-item&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-link&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/results&quot;</span>&gt;</span>DB<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#123;% block main %&#125;</span><br><span class=\"line\">    &#123;% endblock %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js&quot;</span> <span class=\"attr\">integrity</span>=<span class=\"string\">&quot;sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q&quot;</span> <span class=\"attr\">crossorigin</span>=<span class=\"string\">&quot;anonymous&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js&quot;</span> <span class=\"attr\">integrity</span>=<span class=\"string\">&quot;sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl&quot;</span> <span class=\"attr\">crossorigin</span>=<span class=\"string\">&quot;anonymous&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>predict.html 에 다음 코드 입력</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% extends &quot;base.html&quot; %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% block main %&#125;</span><br><span class=\"line\"><span class=\"comment\">&lt;!-- Modal --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal fade&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;exampleModal&quot;</span> <span class=\"attr\">tabindex</span>=<span class=\"string\">&quot;-1&quot;</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;dialog&quot;</span> <span class=\"attr\">aria-labelledby</span>=<span class=\"string\">&quot;exampleModalLabel&quot;</span> <span class=\"attr\">aria-hidden</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-dialog&quot;</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;document&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-content&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-header&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">h5</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-title&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;exampleModalLabel&quot;</span>&gt;</span>Prediction Results<span class=\"tag\">&lt;/<span class=\"name\">h5</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;close&quot;</span> <span class=\"attr\">data-dismiss</span>=<span class=\"string\">&quot;modal&quot;</span> <span class=\"attr\">aria-label</span>=<span class=\"string\">&quot;Close&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">aria-hidden</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span><span class=\"symbol\">&amp;times;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-body&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">h5</span>&gt;</span>Prediction Input:<span class=\"tag\">&lt;/<span class=\"name\">h5</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>Sepal Length: <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;sl&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>Sepal Width: <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;sw&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>Petal Length: <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;pl&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>Petal width: <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;pw&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">h5</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;pt-3&quot;</span>&gt;</span>Prediction Classification:<span class=\"tag\">&lt;/<span class=\"name\">h5</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;prediction&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-footer&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-secondary&quot;</span> <span class=\"attr\">data-dismiss</span>=<span class=\"string\">&quot;modal&quot;</span>&gt;</span>Close<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-primary&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/results&quot;</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;button&quot;</span>&gt;</span>View DB<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container pt-5&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;row justify-content-md-center&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-md-4&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Iris Prediction<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;post-form&quot;</span>&gt;</span></span><br><span class=\"line\">                &#123;% csrf_token %&#125;</span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-group&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;sepal_length&quot;</span>&gt;</span>Sepal Length<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;number&quot;</span> <span class=\"attr\">step</span>=<span class=\"string\">&quot;0.1&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-control&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;sepal_length&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">required</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-group&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;Sepal Width&quot;</span>&gt;</span>Sepal Width<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;number&quot;</span> <span class=\"attr\">step</span>=<span class=\"string\">&quot;0.1&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-control&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;sepal_width&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">required</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-group&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;petal_length&quot;</span>&gt;</span>Petal Length<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;number&quot;</span> <span class=\"attr\">step</span>=<span class=\"string\">&quot;0.1&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-control&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;petal_length&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">required</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-group&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;petal_width&quot;</span>&gt;</span>Petal Width<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;number&quot;</span> <span class=\"attr\">step</span>=<span class=\"string\">&quot;0.1&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-control&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;petal_width&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">required</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;Submit&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-primary&quot;</span> <span class=\"attr\">data-toggle</span>=<span class=\"string\">&quot;modal&quot;</span> <span class=\"attr\">data-target</span>=<span class=\"string\">&quot;#exampleModal&quot;</span>&gt;</span>Submit<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    $(<span class=\"variable language_\">document</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;submit&#x27;</span>, <span class=\"string\">&#x27;#post-form&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">e</span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        e.<span class=\"title function_\">preventDefault</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">        $.<span class=\"title function_\">ajax</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">type</span>:<span class=\"string\">&#x27;POST&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">url</span>:<span class=\"string\">&#x27;&#123;% url &quot;predict:submit_prediction&quot; %&#125;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">data</span>:&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">sepal_length</span>:$(<span class=\"string\">&#x27;#sepal_length&#x27;</span>).<span class=\"title function_\">val</span>(),</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">sepal_width</span>:$(<span class=\"string\">&#x27;#sepal_width&#x27;</span>).<span class=\"title function_\">val</span>(),</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">petal_length</span>:$(<span class=\"string\">&#x27;#petal_length&#x27;</span>).<span class=\"title function_\">val</span>(),</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">petal_width</span>:$(<span class=\"string\">&#x27;#petal_width&#x27;</span>).<span class=\"title function_\">val</span>(),</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">csrfmiddlewaretoken</span>:$(<span class=\"string\">&#x27;input[name=csrfmiddlewaretoken]&#x27;</span>).<span class=\"title function_\">val</span>(),</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">action</span>: <span class=\"string\">&#x27;post&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">success</span>:<span class=\"keyword\">function</span>(<span class=\"params\">json</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">document</span>.<span class=\"property\">forms</span>[<span class=\"string\">&quot;post-form&quot;</span>].<span class=\"title function_\">reset</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;prediction&quot;</span>).<span class=\"property\">innerHTML</span> = json[<span class=\"string\">&#x27;result&#x27;</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;sl&quot;</span>).<span class=\"property\">innerHTML</span> = json[<span class=\"string\">&#x27;sepal_length&#x27;</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;sw&quot;</span>).<span class=\"property\">innerHTML</span> = json[<span class=\"string\">&#x27;sepal_width&#x27;</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;pl&quot;</span>).<span class=\"property\">innerHTML</span> = json[<span class=\"string\">&#x27;petal_length&#x27;</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;pw&quot;</span>).<span class=\"property\">innerHTML</span> = json[<span class=\"string\">&#x27;petal_width&#x27;</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            error : <span class=\"keyword\">function</span>(<span class=\"params\">xhr,errmsg,err</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>base.html 파일에 predict.html 을 끼워넣는다는 뜻이다.(extends로 연동)</p>\n<p>  <img src=\"/images/0805/Untitled%2018.png\" alt=\"base.html 이 부분에\"></p>\n<p>  base.html 이 부분에</p>\n<p>  <img src=\"/images/0805/Untitled%2019.png\" alt=\"predict.html 연동해서\"></p>\n<p>  predict.html 연동해서</p>\n<p>  <img src=\"/images/0805/Untitled%2020.png\" alt=\"이 endblock 까지 삽입한다는 뜻\"></p>\n<p>  이 endblock 까지 삽입한다는 뜻</p>\n</li>\n</ul>\n","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/08/05/%EB%A8%B8%EC%8B%A0%EB%9F%AC%EB%8B%9D%20%ED%95%B4%EB%B3%B4%EA%B8%B0/python.png","excerpt":"<h3 id=\"머신러닝-해보기\"><a href=\"#머신러닝-해보기\" class=\"headerlink\" title=\"머신러닝 해보기\"></a>머신러닝 해보기</h3>","more":"<h1 id=\"머신러닝-환경-세팅\"><a href=\"#머신러닝-환경-세팅\" class=\"headerlink\" title=\"머신러닝 환경 세팅\"></a>머신러닝 환경 세팅</h1><ul>\n<li><p>폴더 새로 만들고 가상환경 깔고 접속</p>\n</li>\n<li><p>pip install pandas sklearn django jupyterlab</p>\n</li>\n<li><p>jupyter lab 으로 실행</p>\n</li>\n<li><p>iris.csv 파일 불러오기</p>\n</li>\n<li><p>csv 파일 불러와서  독립변수 종속변수 분리하기</p>\n<p>  <img src=\"/images/0805/Untitled.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>모형학습</p>\n<p>  <img src=\"/images/0805/Untitled%201.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>모형 예측 후 저장</p>\n<ul>\n<li>저장할 때 models 폴더를 안에 하나 만들어야 한다</li>\n</ul>\n<p>  <img src=\"/images/0805/Untitled%202.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/0805/Untitled%203.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/0805/Untitled%204.png\" alt=\"Untitled\">\n  </p>\n</li>\n<li><p>models 폴더에 pickle 형태로 모델이 저장된 것을 볼 수 있다</p>\n<p>  <img src=\"/images/0805/Untitled%205.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>jupyter lab 종료 후 (Ctrl + C)  django-admin startproject iris 입력</p>\n<p>  <img src=\"/images/0805/Untitled%206.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>iris 폴더로 이동</p>\n</li>\n<li><p>python <a href=\"http://manage.py/\">manage.py</a> startapp predict 입력</p>\n<p>  <img src=\"/images/0805/Untitled%207.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/0805/Untitled%208.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>iris 폴더에서 <a href=\"http://settimgs.py/\">settimgs.py</a> 를 연 후 INSTALLED_APPS 항목에 ‘predict’ 를 추가해준다(저장필수)</p>\n<p>  <img src=\"/images/0805/Untitled%209.png\" alt=\"Untitled\"></p>\n</li>\n<li><p><a href=\"http://urls.py/\">urls.py</a> 에서 urlpatterns 항목에 다음과 같이 추가한다.</p>\n<p>  <img src=\"/images/0805/Untitled%2010.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/0805/Untitled%2011.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>predict 폴더 안에 <a href=\"http://urls.py/\">urls.py</a> 파일을 하나 만들고 다음 코드를 입력한다.</p>\n<p>  <img src=\"/images/0805/Untitled%2012.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.urls <span class=\"keyword\">import</span> path</span><br><span class=\"line\"><span class=\"keyword\">from</span> . <span class=\"keyword\">import</span> views</span><br><span class=\"line\"></span><br><span class=\"line\">app_name = <span class=\"string\">&#x27;predict&#x27;</span></span><br><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    path(<span class=\"string\">&#x27;&#x27;</span>, views.predict, name=<span class=\"string\">&#x27;predict&#x27;</span>)</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p><a href=\"http://views.py/\">views.py</a> 파일로 이동 후 사용자 정의 함수 만들기</p>\n<p>  <img src=\"/images/0805/Untitled%2013.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 백엔드 처리하는 곳</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">predict</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render(request, <span class=\"string\">&#x27;predict.html&#x27;</span>, &#123;&#125;)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>predict 폴더안에 templates 폴더를 만들고 그 안에 predict.html 파일 만들기</p>\n<p>  <img src=\"/images/0805/Untitled%2014.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>샘플 html 코드 입력 후 <a href=\"http://manage.py/\">manage.py</a>가 있는 경로로 이동</p>\n<p>  <img src=\"/images/0805/Untitled%2015.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>python <a href=\"http://manage.py/\">manage.py</a> runserver 입력</p>\n<p>  <img src=\"/images/0805/Untitled%2016.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>저 밑에 주소 누르면 홈페이지 들어가짐</p>\n<p>  <img src=\"/images/0805/Untitled%2017.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>templates 폴더에 base.html 파일 생성 후 다음 코드 입력</p>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!doctype <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- Required meta tags --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- Bootstrap CSS --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css&quot;</span> <span class=\"attr\">integrity</span>=<span class=\"string\">&quot;sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh&quot;</span> <span class=\"attr\">crossorigin</span>=<span class=\"string\">&quot;anonymous&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Iris prediction<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">nav</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;navbar navbar-expand-lg navbar-light bg-light&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;navbar-toggler&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">data-toggle</span>=<span class=\"string\">&quot;collapse&quot;</span> <span class=\"attr\">data-target</span>=<span class=\"string\">&quot;#navbarSupportedContent&quot;</span> <span class=\"attr\">aria-controls</span>=<span class=\"string\">&quot;navbarSupportedContent&quot;</span> <span class=\"attr\">aria-expanded</span>=<span class=\"string\">&quot;false&quot;</span> <span class=\"attr\">aria-label</span>=<span class=\"string\">&quot;Toggle navigation&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;navbar-toggler-icon&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;collapse navbar-collapse&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;navbarSupportedContent&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;navbar-nav mr-auto&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-item active&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-link&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/&quot;</span>&gt;</span>Prediction <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;sr-only&quot;</span>&gt;</span>(current)<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-item&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-link&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/results&quot;</span>&gt;</span>DB<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#123;% block main %&#125;</span><br><span class=\"line\">    &#123;% endblock %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js&quot;</span> <span class=\"attr\">integrity</span>=<span class=\"string\">&quot;sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q&quot;</span> <span class=\"attr\">crossorigin</span>=<span class=\"string\">&quot;anonymous&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js&quot;</span> <span class=\"attr\">integrity</span>=<span class=\"string\">&quot;sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl&quot;</span> <span class=\"attr\">crossorigin</span>=<span class=\"string\">&quot;anonymous&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>predict.html 에 다음 코드 입력</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% extends &quot;base.html&quot; %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% block main %&#125;</span><br><span class=\"line\"><span class=\"comment\">&lt;!-- Modal --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal fade&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;exampleModal&quot;</span> <span class=\"attr\">tabindex</span>=<span class=\"string\">&quot;-1&quot;</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;dialog&quot;</span> <span class=\"attr\">aria-labelledby</span>=<span class=\"string\">&quot;exampleModalLabel&quot;</span> <span class=\"attr\">aria-hidden</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-dialog&quot;</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;document&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-content&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-header&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">h5</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-title&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;exampleModalLabel&quot;</span>&gt;</span>Prediction Results<span class=\"tag\">&lt;/<span class=\"name\">h5</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;close&quot;</span> <span class=\"attr\">data-dismiss</span>=<span class=\"string\">&quot;modal&quot;</span> <span class=\"attr\">aria-label</span>=<span class=\"string\">&quot;Close&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">aria-hidden</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span><span class=\"symbol\">&amp;times;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-body&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">h5</span>&gt;</span>Prediction Input:<span class=\"tag\">&lt;/<span class=\"name\">h5</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>Sepal Length: <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;sl&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>Sepal Width: <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;sw&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>Petal Length: <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;pl&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>Petal width: <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;pw&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">h5</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;pt-3&quot;</span>&gt;</span>Prediction Classification:<span class=\"tag\">&lt;/<span class=\"name\">h5</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;prediction&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-footer&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-secondary&quot;</span> <span class=\"attr\">data-dismiss</span>=<span class=\"string\">&quot;modal&quot;</span>&gt;</span>Close<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-primary&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/results&quot;</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;button&quot;</span>&gt;</span>View DB<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container pt-5&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;row justify-content-md-center&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-md-4&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Iris Prediction<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;post-form&quot;</span>&gt;</span></span><br><span class=\"line\">                &#123;% csrf_token %&#125;</span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-group&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;sepal_length&quot;</span>&gt;</span>Sepal Length<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;number&quot;</span> <span class=\"attr\">step</span>=<span class=\"string\">&quot;0.1&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-control&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;sepal_length&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">required</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-group&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;Sepal Width&quot;</span>&gt;</span>Sepal Width<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;number&quot;</span> <span class=\"attr\">step</span>=<span class=\"string\">&quot;0.1&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-control&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;sepal_width&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">required</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-group&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;petal_length&quot;</span>&gt;</span>Petal Length<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;number&quot;</span> <span class=\"attr\">step</span>=<span class=\"string\">&quot;0.1&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-control&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;petal_length&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">required</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-group&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;petal_width&quot;</span>&gt;</span>Petal Width<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;number&quot;</span> <span class=\"attr\">step</span>=<span class=\"string\">&quot;0.1&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-control&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;petal_width&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">required</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;Submit&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-primary&quot;</span> <span class=\"attr\">data-toggle</span>=<span class=\"string\">&quot;modal&quot;</span> <span class=\"attr\">data-target</span>=<span class=\"string\">&quot;#exampleModal&quot;</span>&gt;</span>Submit<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    $(<span class=\"variable language_\">document</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;submit&#x27;</span>, <span class=\"string\">&#x27;#post-form&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">e</span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        e.<span class=\"title function_\">preventDefault</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">        $.<span class=\"title function_\">ajax</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">type</span>:<span class=\"string\">&#x27;POST&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">url</span>:<span class=\"string\">&#x27;&#123;% url &quot;predict:submit_prediction&quot; %&#125;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">data</span>:&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">sepal_length</span>:$(<span class=\"string\">&#x27;#sepal_length&#x27;</span>).<span class=\"title function_\">val</span>(),</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">sepal_width</span>:$(<span class=\"string\">&#x27;#sepal_width&#x27;</span>).<span class=\"title function_\">val</span>(),</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">petal_length</span>:$(<span class=\"string\">&#x27;#petal_length&#x27;</span>).<span class=\"title function_\">val</span>(),</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">petal_width</span>:$(<span class=\"string\">&#x27;#petal_width&#x27;</span>).<span class=\"title function_\">val</span>(),</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">csrfmiddlewaretoken</span>:$(<span class=\"string\">&#x27;input[name=csrfmiddlewaretoken]&#x27;</span>).<span class=\"title function_\">val</span>(),</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">action</span>: <span class=\"string\">&#x27;post&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">success</span>:<span class=\"keyword\">function</span>(<span class=\"params\">json</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">document</span>.<span class=\"property\">forms</span>[<span class=\"string\">&quot;post-form&quot;</span>].<span class=\"title function_\">reset</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;prediction&quot;</span>).<span class=\"property\">innerHTML</span> = json[<span class=\"string\">&#x27;result&#x27;</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;sl&quot;</span>).<span class=\"property\">innerHTML</span> = json[<span class=\"string\">&#x27;sepal_length&#x27;</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;sw&quot;</span>).<span class=\"property\">innerHTML</span> = json[<span class=\"string\">&#x27;sepal_width&#x27;</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;pl&quot;</span>).<span class=\"property\">innerHTML</span> = json[<span class=\"string\">&#x27;petal_length&#x27;</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;pw&quot;</span>).<span class=\"property\">innerHTML</span> = json[<span class=\"string\">&#x27;petal_width&#x27;</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            error : <span class=\"keyword\">function</span>(<span class=\"params\">xhr,errmsg,err</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>base.html 파일에 predict.html 을 끼워넣는다는 뜻이다.(extends로 연동)</p>\n<p>  <img src=\"/images/0805/Untitled%2018.png\" alt=\"base.html 이 부분에\"></p>\n<p>  base.html 이 부분에</p>\n<p>  <img src=\"/images/0805/Untitled%2019.png\" alt=\"predict.html 연동해서\"></p>\n<p>  predict.html 연동해서</p>\n<p>  <img src=\"/images/0805/Untitled%2020.png\" alt=\"이 endblock 까지 삽입한다는 뜻\"></p>\n<p>  이 endblock 까지 삽입한다는 뜻</p>\n</li>\n</ul>"},{"title":"딥러닝 실습","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"thumbnailImage":"python.png","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-08-06T13:08:01.000Z","_content":"\n\n- 딥러닝 실습\n<!-- excerpt -->\n\n## 데이터 불러오기\n\n\n```python\nfrom tensorflow.keras.datasets import imdb\n(train_input, train_target), (test_input, test_target) = imdb.load_data(num_words=500)\n\ntrain_input.shape, test_input.shape\n```\n\n    Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/imdb.npz\n    17465344/17464789 [==============================] - 0s 0us/step\n    17473536/17464789 [==============================] - 0s 0us/step\n    \n\n\n\n\n    ((25000,), (25000,))\n\n\n\n\n```python\nprint(len(train_input[0]))\nprint(len(train_input[1]))\n```\n\n    218\n    189\n    \n\n\n```python\nprint(train_input[0])\n```\n\n    [1, 14, 22, 16, 43, 2, 2, 2, 2, 65, 458, 2, 66, 2, 4, 173, 36, 256, 5, 25, 100, 43, 2, 112, 50, 2, 2, 9, 35, 480, 284, 5, 150, 4, 172, 112, 167, 2, 336, 385, 39, 4, 172, 2, 2, 17, 2, 38, 13, 447, 4, 192, 50, 16, 6, 147, 2, 19, 14, 22, 4, 2, 2, 469, 4, 22, 71, 87, 12, 16, 43, 2, 38, 76, 15, 13, 2, 4, 22, 17, 2, 17, 12, 16, 2, 18, 2, 5, 62, 386, 12, 8, 316, 8, 106, 5, 4, 2, 2, 16, 480, 66, 2, 33, 4, 130, 12, 16, 38, 2, 5, 25, 124, 51, 36, 135, 48, 25, 2, 33, 6, 22, 12, 215, 28, 77, 52, 5, 14, 407, 16, 82, 2, 8, 4, 107, 117, 2, 15, 256, 4, 2, 7, 2, 5, 2, 36, 71, 43, 2, 476, 26, 400, 317, 46, 7, 4, 2, 2, 13, 104, 88, 4, 381, 15, 297, 98, 32, 2, 56, 26, 141, 6, 194, 2, 18, 4, 226, 22, 21, 134, 476, 26, 480, 5, 144, 30, 2, 18, 51, 36, 28, 224, 92, 25, 104, 4, 226, 65, 16, 38, 2, 88, 12, 16, 283, 5, 16, 2, 113, 103, 32, 15, 16, 2, 19, 178, 32]\n    \n\n- 0은 리뷰가 부정적인 문장\n- 1은 리뷰가 긍정적인 문장\n\n\n```python\nprint(train_target[:20])\n```\n\n    [1 0 0 1 0 0 1 0 1 0 1 0 0 0 0 0 1 1 0 1]\n    \n\n- 훈련데이터 테스트데이터 분리\n\n\n```python\nfrom sklearn.model_selection import train_test_split\ntrain_input, val_input, train_target, val_target = train_test_split(\n    train_input, train_target, test_size=0.2, random_state=42\n)\n\ntrain_input.shape, val_input.shape, train_target.shape, val_target.shape\n```\n\n\n\n\n    ((20000,), (5000,), (20000,), (5000,))\n\n\n\n\n```python\nimport numpy as np\nlengths = np.array([len(x) for x in train_input])  # 리스트 컴프리헨션\n\nprint(np.mean(lengths), np.median(lengths))\n```\n\n    239.00925 178.0\n    \n\n\n```python\nimport matplotlib.pyplot as plt\nplt.hist(lengths)\nplt.xlabel('length')\nplt.ylabel('frequency')\nplt.show()\n```\n\n\n    \n![png](/images/0806/output_9_0.png)\n    \n\n\n- 20,000개의 리뷰 순회하면서 길이가 100이 되도록 잘라낸다.\n- 100개보다 적은 문장은 0으로 채운다.\n\n\n```python\nfrom tensorflow.keras.preprocessing.sequence import pad_sequences\ntrain_seq = pad_sequences(train_input, maxlen=100)\n\nprint(train_seq.shape)\n```\n\n    (20000, 100)\n    \n\n\n```python\nprint(train_seq[0])\n```\n\n    [ 10   4  20   9   2 364 352   5  45   6   2   2  33 269   8   2 142   2\n       5   2  17  73  17 204   5   2  19  55   2   2  92  66 104  14  20  93\n      76   2 151  33   4  58  12 188   2 151  12 215  69 224 142  73 237   6\n       2   7   2   2 188   2 103  14  31  10  10 451   7   2   5   2  80  91\n       2  30   2  34  14  20 151  50  26 131  49   2  84  46  50  37  80  79\n       6   2  46   7  14  20  10  10 470 158]\n    \n\n\n```python\nprint(train_input[0][-10:])   # 보통 댓글의 결말은 마지막에 작성하는걸로 예상해서 -10으로 거꾸로 추출\n```\n\n    [6, 2, 46, 7, 14, 20, 10, 10, 470, 158]\n    \n\n\n```python\nprint(train_seq[5])\n```\n\n    [  0   0   0   0   1   2 195  19  49   2   2 190   4   2 352   2 183  10\n      10  13  82  79   4   2  36  71 269   8   2  25  19  49   7   4   2   2\n       2   2   2  10  10  48  25  40   2  11   2   2  40   2   2   5   4   2\n       2  95  14 238  56 129   2  10  10  21   2  94 364 352   2   2  11 190\n      24 484   2   7  94 205 405  10  10  87   2  34  49   2   7   2   2   2\n       2   2 290   2  46  48  64  18   4   2]\n    \n\n\n```python\nval_seq = pad_sequences(val_input, maxlen=100)\n```\n\n\n```python\ntrain_seq.shape, val_seq.shape\n```\n\n\n\n\n    ((20000, 100), (5000, 100))\n\n\n\n## 순환신경망 모델 만들기\n\n\n```python\nfrom tensorflow import keras\nmodel = keras.Sequential()\nmodel.add(keras.layers.SimpleRNN(8,input_shape=(100,500)))\nmodel.add(keras.layers.Dense(1, activation='sigmoid'))\n```\n\n## LSTM\n- Long Short-Term Memory의 약자.\n- 단기 기억을 오래 기억하기 위해 고안되었다.\n\n\n```python\nfrom tensorflow.keras.datasets import imdb\nfrom sklearn.model_selection import train_test_split\n\n(train_input, train_target), (test_input, test_target) = imdb.load_data(num_words=500)\n\ntrain_input, val_input, train_target, val_target = train_test_split(\n    train_input, train_target, test_size=0.2, random_state=42\n)\n\ntrain_input.shape, val_input.shape, train_target.shape, val_target.shape\n```\n\n\n\n\n    ((20000,), (5000,), (20000,), (5000,))\n\n\n\n- 패딩 작업\n\n\n```python\nfrom tensorflow.keras.preprocessing.sequence import pad_sequences\ntrain_seq = pad_sequences(train_input, maxlen=100)\nval_seq = pad_sequences(val_input, maxlen=100)\n\ntrain_seq.shape, val_seq.shape\n```\n\n\n\n\n    ((20000, 100), (5000, 100))\n\n\n\n- LSTM 순환층을 만든다\n- 모델 아키텍처를 구성한다\n\n\n```python\nfrom tensorflow import keras\nmodel = keras.Sequential()\nmodel.add(keras.layers.Embedding(500,16,input_length = 100))\nmodel.add(keras.layers.LSTM(8))\nmodel.add(keras.layers.Dense(1, activation='sigmoid'))\n\nmodel.summary()\n```\n\n    Model: \"sequential_2\"\n    _________________________________________________________________\n     Layer (type)                Output Shape              Param #   \n    =================================================================\n     embedding_1 (Embedding)     (None, 100, 16)           8000      \n                                                                     \n     lstm (LSTM)                 (None, 8)                 800       \n                                                                     \n     dense_1 (Dense)             (None, 1)                 9         \n                                                                     \n    =================================================================\n    Total params: 8,809\n    Trainable params: 8,809\n    Non-trainable params: 0\n    _________________________________________________________________\n    \n\n- 모델 컴파일\n\n\n```python\nrmsprop = keras.optimizers.RMSprop(learning_rate=1e-4)\nmodel.compile(optimizer=rmsprop, loss = 'binary_crossentropy', metrics = ['accuracy'])\ncheckpoint_cb = keras.callbacks.ModelCheckpoint('best-lstm-model.h5', save_best_only=True)\nearly_stopping_cb = keras.callbacks.EarlyStopping(patience=3, restore_best_weights = True)\nhistory = model.fit(train_seq, train_target, epochs = 100, batch_size = 64,\n                    validation_data = (val_seq, val_target),\n                    callbacks=[checkpoint_cb, early_stopping_cb])\n```\n\n    Epoch 1/100\n    313/313 [==============================] - 11s 10ms/step - loss: 0.6916 - accuracy: 0.5670 - val_loss: 0.6895 - val_accuracy: 0.6242\n    Epoch 2/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.6825 - accuracy: 0.6376 - val_loss: 0.6659 - val_accuracy: 0.6560\n    Epoch 3/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.6278 - accuracy: 0.7081 - val_loss: 0.6109 - val_accuracy: 0.7158\n    Epoch 4/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.5935 - accuracy: 0.7249 - val_loss: 0.5872 - val_accuracy: 0.7226\n    Epoch 5/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.5693 - accuracy: 0.7377 - val_loss: 0.5643 - val_accuracy: 0.7322\n    Epoch 6/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.5461 - accuracy: 0.7513 - val_loss: 0.5450 - val_accuracy: 0.7336\n    Epoch 7/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.5243 - accuracy: 0.7649 - val_loss: 0.5213 - val_accuracy: 0.7600\n    Epoch 8/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.5059 - accuracy: 0.7749 - val_loss: 0.5054 - val_accuracy: 0.7700\n    Epoch 9/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4904 - accuracy: 0.7828 - val_loss: 0.4922 - val_accuracy: 0.7832\n    Epoch 10/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4774 - accuracy: 0.7923 - val_loss: 0.4813 - val_accuracy: 0.7906\n    Epoch 11/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4665 - accuracy: 0.7955 - val_loss: 0.4720 - val_accuracy: 0.7890\n    Epoch 12/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4579 - accuracy: 0.8007 - val_loss: 0.4649 - val_accuracy: 0.7916\n    Epoch 13/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4504 - accuracy: 0.8019 - val_loss: 0.4591 - val_accuracy: 0.7954\n    Epoch 14/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4438 - accuracy: 0.8027 - val_loss: 0.4694 - val_accuracy: 0.7822\n    Epoch 15/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4394 - accuracy: 0.8058 - val_loss: 0.4504 - val_accuracy: 0.8002\n    Epoch 16/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4349 - accuracy: 0.8077 - val_loss: 0.4487 - val_accuracy: 0.7970\n    Epoch 17/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4314 - accuracy: 0.8077 - val_loss: 0.4462 - val_accuracy: 0.7978\n    Epoch 18/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4277 - accuracy: 0.8087 - val_loss: 0.4440 - val_accuracy: 0.8014\n    Epoch 19/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4257 - accuracy: 0.8094 - val_loss: 0.4465 - val_accuracy: 0.7978\n    Epoch 20/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4233 - accuracy: 0.8099 - val_loss: 0.4400 - val_accuracy: 0.8026\n    Epoch 21/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4214 - accuracy: 0.8091 - val_loss: 0.4375 - val_accuracy: 0.8034\n    Epoch 22/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4199 - accuracy: 0.8110 - val_loss: 0.4361 - val_accuracy: 0.8028\n    Epoch 23/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4185 - accuracy: 0.8120 - val_loss: 0.4359 - val_accuracy: 0.8030\n    Epoch 24/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4173 - accuracy: 0.8108 - val_loss: 0.4352 - val_accuracy: 0.8036\n    Epoch 25/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4164 - accuracy: 0.8107 - val_loss: 0.4353 - val_accuracy: 0.8046\n    Epoch 26/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4153 - accuracy: 0.8120 - val_loss: 0.4350 - val_accuracy: 0.7966\n    Epoch 27/100\n    313/313 [==============================] - 3s 11ms/step - loss: 0.4146 - accuracy: 0.8106 - val_loss: 0.4351 - val_accuracy: 0.8062\n    Epoch 28/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4138 - accuracy: 0.8123 - val_loss: 0.4333 - val_accuracy: 0.8014\n    Epoch 29/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4132 - accuracy: 0.8116 - val_loss: 0.4336 - val_accuracy: 0.8014\n    Epoch 30/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4125 - accuracy: 0.8117 - val_loss: 0.4347 - val_accuracy: 0.7996\n    Epoch 31/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4122 - accuracy: 0.8110 - val_loss: 0.4332 - val_accuracy: 0.8046\n    Epoch 32/100\n    313/313 [==============================] - 3s 10ms/step - loss: 0.4115 - accuracy: 0.8134 - val_loss: 0.4325 - val_accuracy: 0.8010\n    Epoch 33/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4114 - accuracy: 0.8122 - val_loss: 0.4356 - val_accuracy: 0.8036\n    Epoch 34/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4107 - accuracy: 0.8130 - val_loss: 0.4334 - val_accuracy: 0.8054\n    Epoch 35/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4105 - accuracy: 0.8139 - val_loss: 0.4325 - val_accuracy: 0.8038\n    \n\n- 모형 학습이 잘 되었는가?\n\n\n```python\nimport matplotlib.pyplot as plt\nplt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.xlabel('epoch')\nplt.ylabel('loss')  # 오차\nplt.legend(['train', 'val'])\nplt.show()\n# 오차가 점점 많아질수록 과적합 된다는 뜻\n```\n\n\n    \n![png](/images/0806/output_28_0.png)\n    \n\n\n\n```python\nmodel = keras.Sequential()\nmodel.add(keras.layers.Embedding(500,16,input_length = 100))\nmodel.add(keras.layers.LSTM(8, dropout=0.3))\nmodel.add(keras.layers.Dense(1, activation='sigmoid'))\n```\n\n\n```python\nrmsprop = keras.optimizers.RMSprop(learning_rate=1e-4)\nmodel.compile(optimizer=rmsprop, loss = 'binary_crossentropy', metrics = ['accuracy'])\ncheckpoint_cb = keras.callbacks.ModelCheckpoint('best-lstm-model.h5', save_best_only=True)\nearly_stopping_cb = keras.callbacks.EarlyStopping(patience=3, restore_best_weights = True)\nhistory = model.fit(train_seq, train_target, epochs = 100, batch_size = 64,\n                    validation_data = (val_seq, val_target),\n                    callbacks=[checkpoint_cb, early_stopping_cb])\n\n\n```\n\n    Epoch 1/100\n    313/313 [==============================] - 5s 10ms/step - loss: 0.4186 - accuracy: 0.8083 - val_loss: 0.4319 - val_accuracy: 0.8032\n    Epoch 2/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4169 - accuracy: 0.8098 - val_loss: 0.4337 - val_accuracy: 0.7972\n    Epoch 3/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4154 - accuracy: 0.8113 - val_loss: 0.4326 - val_accuracy: 0.8012\n    Epoch 4/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4161 - accuracy: 0.8099 - val_loss: 0.4310 - val_accuracy: 0.8018\n    Epoch 5/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4144 - accuracy: 0.8134 - val_loss: 0.4312 - val_accuracy: 0.8032\n    Epoch 6/100\n    313/313 [==============================] - 3s 11ms/step - loss: 0.4143 - accuracy: 0.8106 - val_loss: 0.4307 - val_accuracy: 0.7992\n    Epoch 7/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4139 - accuracy: 0.8127 - val_loss: 0.4295 - val_accuracy: 0.8018\n    Epoch 8/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4133 - accuracy: 0.8118 - val_loss: 0.4294 - val_accuracy: 0.8028\n    Epoch 9/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4125 - accuracy: 0.8112 - val_loss: 0.4291 - val_accuracy: 0.8034\n    Epoch 10/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4113 - accuracy: 0.8129 - val_loss: 0.4290 - val_accuracy: 0.8034\n    Epoch 11/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4106 - accuracy: 0.8111 - val_loss: 0.4314 - val_accuracy: 0.8046\n    Epoch 12/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4095 - accuracy: 0.8145 - val_loss: 0.4279 - val_accuracy: 0.8018\n    Epoch 13/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4099 - accuracy: 0.8141 - val_loss: 0.4275 - val_accuracy: 0.8032\n    Epoch 14/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4098 - accuracy: 0.8128 - val_loss: 0.4299 - val_accuracy: 0.8036\n    Epoch 15/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4087 - accuracy: 0.8153 - val_loss: 0.4282 - val_accuracy: 0.8052\n    Epoch 16/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4081 - accuracy: 0.8141 - val_loss: 0.4272 - val_accuracy: 0.8064\n    Epoch 17/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4074 - accuracy: 0.8158 - val_loss: 0.4285 - val_accuracy: 0.8016\n    Epoch 18/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4065 - accuracy: 0.8140 - val_loss: 0.4286 - val_accuracy: 0.8006\n    Epoch 19/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4075 - accuracy: 0.8152 - val_loss: 0.4255 - val_accuracy: 0.8036\n    Epoch 20/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4080 - accuracy: 0.8117 - val_loss: 0.4265 - val_accuracy: 0.8026\n    Epoch 21/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4060 - accuracy: 0.8152 - val_loss: 0.4252 - val_accuracy: 0.8034\n    Epoch 22/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4065 - accuracy: 0.8149 - val_loss: 0.4258 - val_accuracy: 0.8040\n    Epoch 23/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4051 - accuracy: 0.8164 - val_loss: 0.4251 - val_accuracy: 0.8042\n    Epoch 24/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4059 - accuracy: 0.8167 - val_loss: 0.4249 - val_accuracy: 0.8036\n    Epoch 25/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4037 - accuracy: 0.8162 - val_loss: 0.4244 - val_accuracy: 0.8034\n    Epoch 26/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4041 - accuracy: 0.8160 - val_loss: 0.4262 - val_accuracy: 0.8062\n    Epoch 27/100\n    313/313 [==============================] - 3s 10ms/step - loss: 0.4021 - accuracy: 0.8152 - val_loss: 0.4245 - val_accuracy: 0.8050\n    Epoch 28/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4020 - accuracy: 0.8162 - val_loss: 0.4270 - val_accuracy: 0.8056\n    \n\n\n\n\n    [<matplotlib.lines.Line2D at 0x7f9996fbb050>]\n\n\n\n\n    \n![png](/images/0806/output_30_2.png)\n    \n\n\n\n```python\nplt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.xlabel('epoch')\nplt.ylabel('loss')  # 오차\nplt.legend(['train', 'val'])\nplt.show()\n```\n\n\n    \n![png](/images/0806/output_31_0.png)\n    \n\n\n- 2개의 층을 연결하기\n\n\n```python\nmodel = keras.Sequential()\nmodel.add(keras.layers.Embedding(500,16,input_length = 100))\nmodel.add(keras.layers.LSTM(8, dropout=0.3, return_sequences=True))\nmodel.add(keras.layers.LSTM(8, dropout=0.3))\nmodel.add(keras.layers.Dense(1, activation='sigmoid'))\n\nrmsprop = keras.optimizers.RMSprop(learning_rate=1e-4)\nmodel.compile(optimizer=rmsprop, loss = 'binary_crossentropy', metrics = ['accuracy'])\ncheckpoint_cb = keras.callbacks.ModelCheckpoint('best-lstm-model.h5', save_best_only=True)\nearly_stopping_cb = keras.callbacks.EarlyStopping(patience=3, restore_best_weights = True)\nhistory = model.fit(train_seq, train_target, epochs = 100, batch_size = 64,\n                    validation_data = (val_seq, val_target),\n                    callbacks=[checkpoint_cb, early_stopping_cb])\n```\n","source":"_posts/day0805.md","raw":"---\ntitle: \"딥러닝 실습\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: Python\nclearReading: true\nthumbnailImage: python.png\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-08-06 22:08:01'\n---\n\n\n- 딥러닝 실습\n<!-- excerpt -->\n\n## 데이터 불러오기\n\n\n```python\nfrom tensorflow.keras.datasets import imdb\n(train_input, train_target), (test_input, test_target) = imdb.load_data(num_words=500)\n\ntrain_input.shape, test_input.shape\n```\n\n    Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/imdb.npz\n    17465344/17464789 [==============================] - 0s 0us/step\n    17473536/17464789 [==============================] - 0s 0us/step\n    \n\n\n\n\n    ((25000,), (25000,))\n\n\n\n\n```python\nprint(len(train_input[0]))\nprint(len(train_input[1]))\n```\n\n    218\n    189\n    \n\n\n```python\nprint(train_input[0])\n```\n\n    [1, 14, 22, 16, 43, 2, 2, 2, 2, 65, 458, 2, 66, 2, 4, 173, 36, 256, 5, 25, 100, 43, 2, 112, 50, 2, 2, 9, 35, 480, 284, 5, 150, 4, 172, 112, 167, 2, 336, 385, 39, 4, 172, 2, 2, 17, 2, 38, 13, 447, 4, 192, 50, 16, 6, 147, 2, 19, 14, 22, 4, 2, 2, 469, 4, 22, 71, 87, 12, 16, 43, 2, 38, 76, 15, 13, 2, 4, 22, 17, 2, 17, 12, 16, 2, 18, 2, 5, 62, 386, 12, 8, 316, 8, 106, 5, 4, 2, 2, 16, 480, 66, 2, 33, 4, 130, 12, 16, 38, 2, 5, 25, 124, 51, 36, 135, 48, 25, 2, 33, 6, 22, 12, 215, 28, 77, 52, 5, 14, 407, 16, 82, 2, 8, 4, 107, 117, 2, 15, 256, 4, 2, 7, 2, 5, 2, 36, 71, 43, 2, 476, 26, 400, 317, 46, 7, 4, 2, 2, 13, 104, 88, 4, 381, 15, 297, 98, 32, 2, 56, 26, 141, 6, 194, 2, 18, 4, 226, 22, 21, 134, 476, 26, 480, 5, 144, 30, 2, 18, 51, 36, 28, 224, 92, 25, 104, 4, 226, 65, 16, 38, 2, 88, 12, 16, 283, 5, 16, 2, 113, 103, 32, 15, 16, 2, 19, 178, 32]\n    \n\n- 0은 리뷰가 부정적인 문장\n- 1은 리뷰가 긍정적인 문장\n\n\n```python\nprint(train_target[:20])\n```\n\n    [1 0 0 1 0 0 1 0 1 0 1 0 0 0 0 0 1 1 0 1]\n    \n\n- 훈련데이터 테스트데이터 분리\n\n\n```python\nfrom sklearn.model_selection import train_test_split\ntrain_input, val_input, train_target, val_target = train_test_split(\n    train_input, train_target, test_size=0.2, random_state=42\n)\n\ntrain_input.shape, val_input.shape, train_target.shape, val_target.shape\n```\n\n\n\n\n    ((20000,), (5000,), (20000,), (5000,))\n\n\n\n\n```python\nimport numpy as np\nlengths = np.array([len(x) for x in train_input])  # 리스트 컴프리헨션\n\nprint(np.mean(lengths), np.median(lengths))\n```\n\n    239.00925 178.0\n    \n\n\n```python\nimport matplotlib.pyplot as plt\nplt.hist(lengths)\nplt.xlabel('length')\nplt.ylabel('frequency')\nplt.show()\n```\n\n\n    \n![png](/images/0806/output_9_0.png)\n    \n\n\n- 20,000개의 리뷰 순회하면서 길이가 100이 되도록 잘라낸다.\n- 100개보다 적은 문장은 0으로 채운다.\n\n\n```python\nfrom tensorflow.keras.preprocessing.sequence import pad_sequences\ntrain_seq = pad_sequences(train_input, maxlen=100)\n\nprint(train_seq.shape)\n```\n\n    (20000, 100)\n    \n\n\n```python\nprint(train_seq[0])\n```\n\n    [ 10   4  20   9   2 364 352   5  45   6   2   2  33 269   8   2 142   2\n       5   2  17  73  17 204   5   2  19  55   2   2  92  66 104  14  20  93\n      76   2 151  33   4  58  12 188   2 151  12 215  69 224 142  73 237   6\n       2   7   2   2 188   2 103  14  31  10  10 451   7   2   5   2  80  91\n       2  30   2  34  14  20 151  50  26 131  49   2  84  46  50  37  80  79\n       6   2  46   7  14  20  10  10 470 158]\n    \n\n\n```python\nprint(train_input[0][-10:])   # 보통 댓글의 결말은 마지막에 작성하는걸로 예상해서 -10으로 거꾸로 추출\n```\n\n    [6, 2, 46, 7, 14, 20, 10, 10, 470, 158]\n    \n\n\n```python\nprint(train_seq[5])\n```\n\n    [  0   0   0   0   1   2 195  19  49   2   2 190   4   2 352   2 183  10\n      10  13  82  79   4   2  36  71 269   8   2  25  19  49   7   4   2   2\n       2   2   2  10  10  48  25  40   2  11   2   2  40   2   2   5   4   2\n       2  95  14 238  56 129   2  10  10  21   2  94 364 352   2   2  11 190\n      24 484   2   7  94 205 405  10  10  87   2  34  49   2   7   2   2   2\n       2   2 290   2  46  48  64  18   4   2]\n    \n\n\n```python\nval_seq = pad_sequences(val_input, maxlen=100)\n```\n\n\n```python\ntrain_seq.shape, val_seq.shape\n```\n\n\n\n\n    ((20000, 100), (5000, 100))\n\n\n\n## 순환신경망 모델 만들기\n\n\n```python\nfrom tensorflow import keras\nmodel = keras.Sequential()\nmodel.add(keras.layers.SimpleRNN(8,input_shape=(100,500)))\nmodel.add(keras.layers.Dense(1, activation='sigmoid'))\n```\n\n## LSTM\n- Long Short-Term Memory의 약자.\n- 단기 기억을 오래 기억하기 위해 고안되었다.\n\n\n```python\nfrom tensorflow.keras.datasets import imdb\nfrom sklearn.model_selection import train_test_split\n\n(train_input, train_target), (test_input, test_target) = imdb.load_data(num_words=500)\n\ntrain_input, val_input, train_target, val_target = train_test_split(\n    train_input, train_target, test_size=0.2, random_state=42\n)\n\ntrain_input.shape, val_input.shape, train_target.shape, val_target.shape\n```\n\n\n\n\n    ((20000,), (5000,), (20000,), (5000,))\n\n\n\n- 패딩 작업\n\n\n```python\nfrom tensorflow.keras.preprocessing.sequence import pad_sequences\ntrain_seq = pad_sequences(train_input, maxlen=100)\nval_seq = pad_sequences(val_input, maxlen=100)\n\ntrain_seq.shape, val_seq.shape\n```\n\n\n\n\n    ((20000, 100), (5000, 100))\n\n\n\n- LSTM 순환층을 만든다\n- 모델 아키텍처를 구성한다\n\n\n```python\nfrom tensorflow import keras\nmodel = keras.Sequential()\nmodel.add(keras.layers.Embedding(500,16,input_length = 100))\nmodel.add(keras.layers.LSTM(8))\nmodel.add(keras.layers.Dense(1, activation='sigmoid'))\n\nmodel.summary()\n```\n\n    Model: \"sequential_2\"\n    _________________________________________________________________\n     Layer (type)                Output Shape              Param #   \n    =================================================================\n     embedding_1 (Embedding)     (None, 100, 16)           8000      \n                                                                     \n     lstm (LSTM)                 (None, 8)                 800       \n                                                                     \n     dense_1 (Dense)             (None, 1)                 9         \n                                                                     \n    =================================================================\n    Total params: 8,809\n    Trainable params: 8,809\n    Non-trainable params: 0\n    _________________________________________________________________\n    \n\n- 모델 컴파일\n\n\n```python\nrmsprop = keras.optimizers.RMSprop(learning_rate=1e-4)\nmodel.compile(optimizer=rmsprop, loss = 'binary_crossentropy', metrics = ['accuracy'])\ncheckpoint_cb = keras.callbacks.ModelCheckpoint('best-lstm-model.h5', save_best_only=True)\nearly_stopping_cb = keras.callbacks.EarlyStopping(patience=3, restore_best_weights = True)\nhistory = model.fit(train_seq, train_target, epochs = 100, batch_size = 64,\n                    validation_data = (val_seq, val_target),\n                    callbacks=[checkpoint_cb, early_stopping_cb])\n```\n\n    Epoch 1/100\n    313/313 [==============================] - 11s 10ms/step - loss: 0.6916 - accuracy: 0.5670 - val_loss: 0.6895 - val_accuracy: 0.6242\n    Epoch 2/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.6825 - accuracy: 0.6376 - val_loss: 0.6659 - val_accuracy: 0.6560\n    Epoch 3/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.6278 - accuracy: 0.7081 - val_loss: 0.6109 - val_accuracy: 0.7158\n    Epoch 4/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.5935 - accuracy: 0.7249 - val_loss: 0.5872 - val_accuracy: 0.7226\n    Epoch 5/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.5693 - accuracy: 0.7377 - val_loss: 0.5643 - val_accuracy: 0.7322\n    Epoch 6/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.5461 - accuracy: 0.7513 - val_loss: 0.5450 - val_accuracy: 0.7336\n    Epoch 7/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.5243 - accuracy: 0.7649 - val_loss: 0.5213 - val_accuracy: 0.7600\n    Epoch 8/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.5059 - accuracy: 0.7749 - val_loss: 0.5054 - val_accuracy: 0.7700\n    Epoch 9/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4904 - accuracy: 0.7828 - val_loss: 0.4922 - val_accuracy: 0.7832\n    Epoch 10/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4774 - accuracy: 0.7923 - val_loss: 0.4813 - val_accuracy: 0.7906\n    Epoch 11/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4665 - accuracy: 0.7955 - val_loss: 0.4720 - val_accuracy: 0.7890\n    Epoch 12/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4579 - accuracy: 0.8007 - val_loss: 0.4649 - val_accuracy: 0.7916\n    Epoch 13/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4504 - accuracy: 0.8019 - val_loss: 0.4591 - val_accuracy: 0.7954\n    Epoch 14/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4438 - accuracy: 0.8027 - val_loss: 0.4694 - val_accuracy: 0.7822\n    Epoch 15/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4394 - accuracy: 0.8058 - val_loss: 0.4504 - val_accuracy: 0.8002\n    Epoch 16/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4349 - accuracy: 0.8077 - val_loss: 0.4487 - val_accuracy: 0.7970\n    Epoch 17/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4314 - accuracy: 0.8077 - val_loss: 0.4462 - val_accuracy: 0.7978\n    Epoch 18/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4277 - accuracy: 0.8087 - val_loss: 0.4440 - val_accuracy: 0.8014\n    Epoch 19/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4257 - accuracy: 0.8094 - val_loss: 0.4465 - val_accuracy: 0.7978\n    Epoch 20/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4233 - accuracy: 0.8099 - val_loss: 0.4400 - val_accuracy: 0.8026\n    Epoch 21/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4214 - accuracy: 0.8091 - val_loss: 0.4375 - val_accuracy: 0.8034\n    Epoch 22/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4199 - accuracy: 0.8110 - val_loss: 0.4361 - val_accuracy: 0.8028\n    Epoch 23/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4185 - accuracy: 0.8120 - val_loss: 0.4359 - val_accuracy: 0.8030\n    Epoch 24/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4173 - accuracy: 0.8108 - val_loss: 0.4352 - val_accuracy: 0.8036\n    Epoch 25/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4164 - accuracy: 0.8107 - val_loss: 0.4353 - val_accuracy: 0.8046\n    Epoch 26/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4153 - accuracy: 0.8120 - val_loss: 0.4350 - val_accuracy: 0.7966\n    Epoch 27/100\n    313/313 [==============================] - 3s 11ms/step - loss: 0.4146 - accuracy: 0.8106 - val_loss: 0.4351 - val_accuracy: 0.8062\n    Epoch 28/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4138 - accuracy: 0.8123 - val_loss: 0.4333 - val_accuracy: 0.8014\n    Epoch 29/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4132 - accuracy: 0.8116 - val_loss: 0.4336 - val_accuracy: 0.8014\n    Epoch 30/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4125 - accuracy: 0.8117 - val_loss: 0.4347 - val_accuracy: 0.7996\n    Epoch 31/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4122 - accuracy: 0.8110 - val_loss: 0.4332 - val_accuracy: 0.8046\n    Epoch 32/100\n    313/313 [==============================] - 3s 10ms/step - loss: 0.4115 - accuracy: 0.8134 - val_loss: 0.4325 - val_accuracy: 0.8010\n    Epoch 33/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4114 - accuracy: 0.8122 - val_loss: 0.4356 - val_accuracy: 0.8036\n    Epoch 34/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4107 - accuracy: 0.8130 - val_loss: 0.4334 - val_accuracy: 0.8054\n    Epoch 35/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4105 - accuracy: 0.8139 - val_loss: 0.4325 - val_accuracy: 0.8038\n    \n\n- 모형 학습이 잘 되었는가?\n\n\n```python\nimport matplotlib.pyplot as plt\nplt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.xlabel('epoch')\nplt.ylabel('loss')  # 오차\nplt.legend(['train', 'val'])\nplt.show()\n# 오차가 점점 많아질수록 과적합 된다는 뜻\n```\n\n\n    \n![png](/images/0806/output_28_0.png)\n    \n\n\n\n```python\nmodel = keras.Sequential()\nmodel.add(keras.layers.Embedding(500,16,input_length = 100))\nmodel.add(keras.layers.LSTM(8, dropout=0.3))\nmodel.add(keras.layers.Dense(1, activation='sigmoid'))\n```\n\n\n```python\nrmsprop = keras.optimizers.RMSprop(learning_rate=1e-4)\nmodel.compile(optimizer=rmsprop, loss = 'binary_crossentropy', metrics = ['accuracy'])\ncheckpoint_cb = keras.callbacks.ModelCheckpoint('best-lstm-model.h5', save_best_only=True)\nearly_stopping_cb = keras.callbacks.EarlyStopping(patience=3, restore_best_weights = True)\nhistory = model.fit(train_seq, train_target, epochs = 100, batch_size = 64,\n                    validation_data = (val_seq, val_target),\n                    callbacks=[checkpoint_cb, early_stopping_cb])\n\n\n```\n\n    Epoch 1/100\n    313/313 [==============================] - 5s 10ms/step - loss: 0.4186 - accuracy: 0.8083 - val_loss: 0.4319 - val_accuracy: 0.8032\n    Epoch 2/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4169 - accuracy: 0.8098 - val_loss: 0.4337 - val_accuracy: 0.7972\n    Epoch 3/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4154 - accuracy: 0.8113 - val_loss: 0.4326 - val_accuracy: 0.8012\n    Epoch 4/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4161 - accuracy: 0.8099 - val_loss: 0.4310 - val_accuracy: 0.8018\n    Epoch 5/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4144 - accuracy: 0.8134 - val_loss: 0.4312 - val_accuracy: 0.8032\n    Epoch 6/100\n    313/313 [==============================] - 3s 11ms/step - loss: 0.4143 - accuracy: 0.8106 - val_loss: 0.4307 - val_accuracy: 0.7992\n    Epoch 7/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4139 - accuracy: 0.8127 - val_loss: 0.4295 - val_accuracy: 0.8018\n    Epoch 8/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4133 - accuracy: 0.8118 - val_loss: 0.4294 - val_accuracy: 0.8028\n    Epoch 9/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4125 - accuracy: 0.8112 - val_loss: 0.4291 - val_accuracy: 0.8034\n    Epoch 10/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4113 - accuracy: 0.8129 - val_loss: 0.4290 - val_accuracy: 0.8034\n    Epoch 11/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4106 - accuracy: 0.8111 - val_loss: 0.4314 - val_accuracy: 0.8046\n    Epoch 12/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4095 - accuracy: 0.8145 - val_loss: 0.4279 - val_accuracy: 0.8018\n    Epoch 13/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4099 - accuracy: 0.8141 - val_loss: 0.4275 - val_accuracy: 0.8032\n    Epoch 14/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4098 - accuracy: 0.8128 - val_loss: 0.4299 - val_accuracy: 0.8036\n    Epoch 15/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4087 - accuracy: 0.8153 - val_loss: 0.4282 - val_accuracy: 0.8052\n    Epoch 16/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4081 - accuracy: 0.8141 - val_loss: 0.4272 - val_accuracy: 0.8064\n    Epoch 17/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4074 - accuracy: 0.8158 - val_loss: 0.4285 - val_accuracy: 0.8016\n    Epoch 18/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4065 - accuracy: 0.8140 - val_loss: 0.4286 - val_accuracy: 0.8006\n    Epoch 19/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4075 - accuracy: 0.8152 - val_loss: 0.4255 - val_accuracy: 0.8036\n    Epoch 20/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4080 - accuracy: 0.8117 - val_loss: 0.4265 - val_accuracy: 0.8026\n    Epoch 21/100\n    313/313 [==============================] - 3s 8ms/step - loss: 0.4060 - accuracy: 0.8152 - val_loss: 0.4252 - val_accuracy: 0.8034\n    Epoch 22/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4065 - accuracy: 0.8149 - val_loss: 0.4258 - val_accuracy: 0.8040\n    Epoch 23/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4051 - accuracy: 0.8164 - val_loss: 0.4251 - val_accuracy: 0.8042\n    Epoch 24/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4059 - accuracy: 0.8167 - val_loss: 0.4249 - val_accuracy: 0.8036\n    Epoch 25/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4037 - accuracy: 0.8162 - val_loss: 0.4244 - val_accuracy: 0.8034\n    Epoch 26/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4041 - accuracy: 0.8160 - val_loss: 0.4262 - val_accuracy: 0.8062\n    Epoch 27/100\n    313/313 [==============================] - 3s 10ms/step - loss: 0.4021 - accuracy: 0.8152 - val_loss: 0.4245 - val_accuracy: 0.8050\n    Epoch 28/100\n    313/313 [==============================] - 3s 9ms/step - loss: 0.4020 - accuracy: 0.8162 - val_loss: 0.4270 - val_accuracy: 0.8056\n    \n\n\n\n\n    [<matplotlib.lines.Line2D at 0x7f9996fbb050>]\n\n\n\n\n    \n![png](/images/0806/output_30_2.png)\n    \n\n\n\n```python\nplt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.xlabel('epoch')\nplt.ylabel('loss')  # 오차\nplt.legend(['train', 'val'])\nplt.show()\n```\n\n\n    \n![png](/images/0806/output_31_0.png)\n    \n\n\n- 2개의 층을 연결하기\n\n\n```python\nmodel = keras.Sequential()\nmodel.add(keras.layers.Embedding(500,16,input_length = 100))\nmodel.add(keras.layers.LSTM(8, dropout=0.3, return_sequences=True))\nmodel.add(keras.layers.LSTM(8, dropout=0.3))\nmodel.add(keras.layers.Dense(1, activation='sigmoid'))\n\nrmsprop = keras.optimizers.RMSprop(learning_rate=1e-4)\nmodel.compile(optimizer=rmsprop, loss = 'binary_crossentropy', metrics = ['accuracy'])\ncheckpoint_cb = keras.callbacks.ModelCheckpoint('best-lstm-model.h5', save_best_only=True)\nearly_stopping_cb = keras.callbacks.EarlyStopping(patience=3, restore_best_weights = True)\nhistory = model.fit(train_seq, train_target, epochs = 100, batch_size = 64,\n                    validation_data = (val_seq, val_target),\n                    callbacks=[checkpoint_cb, early_stopping_cb])\n```\n","slug":"day0805","published":1,"updated":"2022-08-07T04:46:08.708Z","_id":"cl6hwujn10000zcu0bmdw9t59","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt --></li>\n</ul>\n<h2 id=\"데이터-불러오기\"><a href=\"#데이터-불러오기\" class=\"headerlink\" title=\"데이터 불러오기\"></a>데이터 불러오기</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> tensorflow.keras.datasets <span class=\"keyword\">import</span> imdb</span><br><span class=\"line\">(train_input, train_target), (test_input, test_target) = imdb.load_data(num_words=<span class=\"number\">500</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">train_input.shape, test_input.shape</span><br></pre></td></tr></table></figure>\n\n<pre><code>Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/imdb.npz\n17465344/17464789 [==============================] - 0s 0us/step\n17473536/17464789 [==============================] - 0s 0us/step\n\n\n\n\n\n((25000,), (25000,))\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">len</span>(train_input[<span class=\"number\">0</span>]))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">len</span>(train_input[<span class=\"number\">1</span>]))</span><br></pre></td></tr></table></figure>\n\n<pre><code>218\n189\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(train_input[<span class=\"number\">0</span>])</span><br></pre></td></tr></table></figure>\n\n<pre><code>[1, 14, 22, 16, 43, 2, 2, 2, 2, 65, 458, 2, 66, 2, 4, 173, 36, 256, 5, 25, 100, 43, 2, 112, 50, 2, 2, 9, 35, 480, 284, 5, 150, 4, 172, 112, 167, 2, 336, 385, 39, 4, 172, 2, 2, 17, 2, 38, 13, 447, 4, 192, 50, 16, 6, 147, 2, 19, 14, 22, 4, 2, 2, 469, 4, 22, 71, 87, 12, 16, 43, 2, 38, 76, 15, 13, 2, 4, 22, 17, 2, 17, 12, 16, 2, 18, 2, 5, 62, 386, 12, 8, 316, 8, 106, 5, 4, 2, 2, 16, 480, 66, 2, 33, 4, 130, 12, 16, 38, 2, 5, 25, 124, 51, 36, 135, 48, 25, 2, 33, 6, 22, 12, 215, 28, 77, 52, 5, 14, 407, 16, 82, 2, 8, 4, 107, 117, 2, 15, 256, 4, 2, 7, 2, 5, 2, 36, 71, 43, 2, 476, 26, 400, 317, 46, 7, 4, 2, 2, 13, 104, 88, 4, 381, 15, 297, 98, 32, 2, 56, 26, 141, 6, 194, 2, 18, 4, 226, 22, 21, 134, 476, 26, 480, 5, 144, 30, 2, 18, 51, 36, 28, 224, 92, 25, 104, 4, 226, 65, 16, 38, 2, 88, 12, 16, 283, 5, 16, 2, 113, 103, 32, 15, 16, 2, 19, 178, 32]\n</code></pre>\n<ul>\n<li>0은 리뷰가 부정적인 문장</li>\n<li>1은 리뷰가 긍정적인 문장</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(train_target[:<span class=\"number\">20</span>])</span><br></pre></td></tr></table></figure>\n\n<pre><code>[1 0 0 1 0 0 1 0 1 0 1 0 0 0 0 0 1 1 0 1]\n</code></pre>\n<ul>\n<li>훈련데이터 테스트데이터 분리</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\">train_input, val_input, train_target, val_target = train_test_split(</span><br><span class=\"line\">    train_input, train_target, test_size=<span class=\"number\">0.2</span>, random_state=<span class=\"number\">42</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">train_input.shape, val_input.shape, train_target.shape, val_target.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>((20000,), (5000,), (20000,), (5000,))\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\">lengths = np.array([<span class=\"built_in\">len</span>(x) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> train_input])  <span class=\"comment\"># 리스트 컴프리헨션</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.mean(lengths), np.median(lengths))</span><br></pre></td></tr></table></figure>\n\n<pre><code>239.00925 178.0\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\">plt.hist(lengths)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;length&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;frequency&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0806/output_9_0.png\" alt=\"png\"></p>\n<ul>\n<li>20,000개의 리뷰 순회하면서 길이가 100이 되도록 잘라낸다.</li>\n<li>100개보다 적은 문장은 0으로 채운다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> tensorflow.keras.preprocessing.sequence <span class=\"keyword\">import</span> pad_sequences</span><br><span class=\"line\">train_seq = pad_sequences(train_input, maxlen=<span class=\"number\">100</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(train_seq.shape)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(20000, 100)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(train_seq[<span class=\"number\">0</span>])</span><br></pre></td></tr></table></figure>\n\n<pre><code>[ 10   4  20   9   2 364 352   5  45   6   2   2  33 269   8   2 142   2\n   5   2  17  73  17 204   5   2  19  55   2   2  92  66 104  14  20  93\n  76   2 151  33   4  58  12 188   2 151  12 215  69 224 142  73 237   6\n   2   7   2   2 188   2 103  14  31  10  10 451   7   2   5   2  80  91\n   2  30   2  34  14  20 151  50  26 131  49   2  84  46  50  37  80  79\n   6   2  46   7  14  20  10  10 470 158]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(train_input[<span class=\"number\">0</span>][-<span class=\"number\">10</span>:])   <span class=\"comment\"># 보통 댓글의 결말은 마지막에 작성하는걸로 예상해서 -10으로 거꾸로 추출</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>[6, 2, 46, 7, 14, 20, 10, 10, 470, 158]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(train_seq[<span class=\"number\">5</span>])</span><br></pre></td></tr></table></figure>\n\n<pre><code>[  0   0   0   0   1   2 195  19  49   2   2 190   4   2 352   2 183  10\n  10  13  82  79   4   2  36  71 269   8   2  25  19  49   7   4   2   2\n   2   2   2  10  10  48  25  40   2  11   2   2  40   2   2   5   4   2\n   2  95  14 238  56 129   2  10  10  21   2  94 364 352   2   2  11 190\n  24 484   2   7  94 205 405  10  10  87   2  34  49   2   7   2   2   2\n   2   2 290   2  46  48  64  18   4   2]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val_seq = pad_sequences(val_input, maxlen=<span class=\"number\">100</span>)</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">train_seq.shape, val_seq.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>((20000, 100), (5000, 100))\n</code></pre>\n<h2 id=\"순환신경망-모델-만들기\"><a href=\"#순환신경망-모델-만들기\" class=\"headerlink\" title=\"순환신경망 모델 만들기\"></a>순환신경망 모델 만들기</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> tensorflow <span class=\"keyword\">import</span> keras</span><br><span class=\"line\">model = keras.Sequential()</span><br><span class=\"line\">model.add(keras.layers.SimpleRNN(<span class=\"number\">8</span>,input_shape=(<span class=\"number\">100</span>,<span class=\"number\">500</span>)))</span><br><span class=\"line\">model.add(keras.layers.Dense(<span class=\"number\">1</span>, activation=<span class=\"string\">&#x27;sigmoid&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"LSTM\"><a href=\"#LSTM\" class=\"headerlink\" title=\"LSTM\"></a>LSTM</h2><ul>\n<li>Long Short-Term Memory의 약자.</li>\n<li>단기 기억을 오래 기억하기 위해 고안되었다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> tensorflow.keras.datasets <span class=\"keyword\">import</span> imdb</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"></span><br><span class=\"line\">(train_input, train_target), (test_input, test_target) = imdb.load_data(num_words=<span class=\"number\">500</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">train_input, val_input, train_target, val_target = train_test_split(</span><br><span class=\"line\">    train_input, train_target, test_size=<span class=\"number\">0.2</span>, random_state=<span class=\"number\">42</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">train_input.shape, val_input.shape, train_target.shape, val_target.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>((20000,), (5000,), (20000,), (5000,))\n</code></pre>\n<ul>\n<li>패딩 작업</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> tensorflow.keras.preprocessing.sequence <span class=\"keyword\">import</span> pad_sequences</span><br><span class=\"line\">train_seq = pad_sequences(train_input, maxlen=<span class=\"number\">100</span>)</span><br><span class=\"line\">val_seq = pad_sequences(val_input, maxlen=<span class=\"number\">100</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">train_seq.shape, val_seq.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>((20000, 100), (5000, 100))\n</code></pre>\n<ul>\n<li>LSTM 순환층을 만든다</li>\n<li>모델 아키텍처를 구성한다</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> tensorflow <span class=\"keyword\">import</span> keras</span><br><span class=\"line\">model = keras.Sequential()</span><br><span class=\"line\">model.add(keras.layers.Embedding(<span class=\"number\">500</span>,<span class=\"number\">16</span>,input_length = <span class=\"number\">100</span>))</span><br><span class=\"line\">model.add(keras.layers.LSTM(<span class=\"number\">8</span>))</span><br><span class=\"line\">model.add(keras.layers.Dense(<span class=\"number\">1</span>, activation=<span class=\"string\">&#x27;sigmoid&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">model.summary()</span><br></pre></td></tr></table></figure>\n\n<pre><code>Model: &quot;sequential_2&quot;\n_________________________________________________________________\n Layer (type)                Output Shape              Param #   \n=================================================================\n embedding_1 (Embedding)     (None, 100, 16)           8000      \n                                                                 \n lstm (LSTM)                 (None, 8)                 800       \n                                                                 \n dense_1 (Dense)             (None, 1)                 9         \n                                                                 \n=================================================================\nTotal params: 8,809\nTrainable params: 8,809\nNon-trainable params: 0\n_________________________________________________________________\n</code></pre>\n<ul>\n<li>모델 컴파일</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rmsprop = keras.optimizers.RMSprop(learning_rate=<span class=\"number\">1e-4</span>)</span><br><span class=\"line\">model.<span class=\"built_in\">compile</span>(optimizer=rmsprop, loss = <span class=\"string\">&#x27;binary_crossentropy&#x27;</span>, metrics = [<span class=\"string\">&#x27;accuracy&#x27;</span>])</span><br><span class=\"line\">checkpoint_cb = keras.callbacks.ModelCheckpoint(<span class=\"string\">&#x27;best-lstm-model.h5&#x27;</span>, save_best_only=<span class=\"literal\">True</span>)</span><br><span class=\"line\">early_stopping_cb = keras.callbacks.EarlyStopping(patience=<span class=\"number\">3</span>, restore_best_weights = <span class=\"literal\">True</span>)</span><br><span class=\"line\">history = model.fit(train_seq, train_target, epochs = <span class=\"number\">100</span>, batch_size = <span class=\"number\">64</span>,</span><br><span class=\"line\">                    validation_data = (val_seq, val_target),</span><br><span class=\"line\">                    callbacks=[checkpoint_cb, early_stopping_cb])</span><br></pre></td></tr></table></figure>\n\n<pre><code>Epoch 1/100\n313/313 [==============================] - 11s 10ms/step - loss: 0.6916 - accuracy: 0.5670 - val_loss: 0.6895 - val_accuracy: 0.6242\nEpoch 2/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.6825 - accuracy: 0.6376 - val_loss: 0.6659 - val_accuracy: 0.6560\nEpoch 3/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.6278 - accuracy: 0.7081 - val_loss: 0.6109 - val_accuracy: 0.7158\nEpoch 4/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.5935 - accuracy: 0.7249 - val_loss: 0.5872 - val_accuracy: 0.7226\nEpoch 5/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.5693 - accuracy: 0.7377 - val_loss: 0.5643 - val_accuracy: 0.7322\nEpoch 6/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.5461 - accuracy: 0.7513 - val_loss: 0.5450 - val_accuracy: 0.7336\nEpoch 7/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.5243 - accuracy: 0.7649 - val_loss: 0.5213 - val_accuracy: 0.7600\nEpoch 8/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.5059 - accuracy: 0.7749 - val_loss: 0.5054 - val_accuracy: 0.7700\nEpoch 9/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4904 - accuracy: 0.7828 - val_loss: 0.4922 - val_accuracy: 0.7832\nEpoch 10/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4774 - accuracy: 0.7923 - val_loss: 0.4813 - val_accuracy: 0.7906\nEpoch 11/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4665 - accuracy: 0.7955 - val_loss: 0.4720 - val_accuracy: 0.7890\nEpoch 12/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4579 - accuracy: 0.8007 - val_loss: 0.4649 - val_accuracy: 0.7916\nEpoch 13/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4504 - accuracy: 0.8019 - val_loss: 0.4591 - val_accuracy: 0.7954\nEpoch 14/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4438 - accuracy: 0.8027 - val_loss: 0.4694 - val_accuracy: 0.7822\nEpoch 15/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4394 - accuracy: 0.8058 - val_loss: 0.4504 - val_accuracy: 0.8002\nEpoch 16/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4349 - accuracy: 0.8077 - val_loss: 0.4487 - val_accuracy: 0.7970\nEpoch 17/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4314 - accuracy: 0.8077 - val_loss: 0.4462 - val_accuracy: 0.7978\nEpoch 18/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4277 - accuracy: 0.8087 - val_loss: 0.4440 - val_accuracy: 0.8014\nEpoch 19/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4257 - accuracy: 0.8094 - val_loss: 0.4465 - val_accuracy: 0.7978\nEpoch 20/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4233 - accuracy: 0.8099 - val_loss: 0.4400 - val_accuracy: 0.8026\nEpoch 21/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4214 - accuracy: 0.8091 - val_loss: 0.4375 - val_accuracy: 0.8034\nEpoch 22/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4199 - accuracy: 0.8110 - val_loss: 0.4361 - val_accuracy: 0.8028\nEpoch 23/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4185 - accuracy: 0.8120 - val_loss: 0.4359 - val_accuracy: 0.8030\nEpoch 24/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4173 - accuracy: 0.8108 - val_loss: 0.4352 - val_accuracy: 0.8036\nEpoch 25/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4164 - accuracy: 0.8107 - val_loss: 0.4353 - val_accuracy: 0.8046\nEpoch 26/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4153 - accuracy: 0.8120 - val_loss: 0.4350 - val_accuracy: 0.7966\nEpoch 27/100\n313/313 [==============================] - 3s 11ms/step - loss: 0.4146 - accuracy: 0.8106 - val_loss: 0.4351 - val_accuracy: 0.8062\nEpoch 28/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4138 - accuracy: 0.8123 - val_loss: 0.4333 - val_accuracy: 0.8014\nEpoch 29/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4132 - accuracy: 0.8116 - val_loss: 0.4336 - val_accuracy: 0.8014\nEpoch 30/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4125 - accuracy: 0.8117 - val_loss: 0.4347 - val_accuracy: 0.7996\nEpoch 31/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4122 - accuracy: 0.8110 - val_loss: 0.4332 - val_accuracy: 0.8046\nEpoch 32/100\n313/313 [==============================] - 3s 10ms/step - loss: 0.4115 - accuracy: 0.8134 - val_loss: 0.4325 - val_accuracy: 0.8010\nEpoch 33/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4114 - accuracy: 0.8122 - val_loss: 0.4356 - val_accuracy: 0.8036\nEpoch 34/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4107 - accuracy: 0.8130 - val_loss: 0.4334 - val_accuracy: 0.8054\nEpoch 35/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4105 - accuracy: 0.8139 - val_loss: 0.4325 - val_accuracy: 0.8038\n</code></pre>\n<ul>\n<li>모형 학습이 잘 되었는가?</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\">plt.plot(history.history[<span class=\"string\">&#x27;loss&#x27;</span>])</span><br><span class=\"line\">plt.plot(history.history[<span class=\"string\">&#x27;val_loss&#x27;</span>])</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;epoch&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;loss&#x27;</span>)  <span class=\"comment\"># 오차</span></span><br><span class=\"line\">plt.legend([<span class=\"string\">&#x27;train&#x27;</span>, <span class=\"string\">&#x27;val&#x27;</span>])</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"><span class=\"comment\"># 오차가 점점 많아질수록 과적합 된다는 뜻</span></span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0806/output_28_0.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">model = keras.Sequential()</span><br><span class=\"line\">model.add(keras.layers.Embedding(<span class=\"number\">500</span>,<span class=\"number\">16</span>,input_length = <span class=\"number\">100</span>))</span><br><span class=\"line\">model.add(keras.layers.LSTM(<span class=\"number\">8</span>, dropout=<span class=\"number\">0.3</span>))</span><br><span class=\"line\">model.add(keras.layers.Dense(<span class=\"number\">1</span>, activation=<span class=\"string\">&#x27;sigmoid&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rmsprop = keras.optimizers.RMSprop(learning_rate=<span class=\"number\">1e-4</span>)</span><br><span class=\"line\">model.<span class=\"built_in\">compile</span>(optimizer=rmsprop, loss = <span class=\"string\">&#x27;binary_crossentropy&#x27;</span>, metrics = [<span class=\"string\">&#x27;accuracy&#x27;</span>])</span><br><span class=\"line\">checkpoint_cb = keras.callbacks.ModelCheckpoint(<span class=\"string\">&#x27;best-lstm-model.h5&#x27;</span>, save_best_only=<span class=\"literal\">True</span>)</span><br><span class=\"line\">early_stopping_cb = keras.callbacks.EarlyStopping(patience=<span class=\"number\">3</span>, restore_best_weights = <span class=\"literal\">True</span>)</span><br><span class=\"line\">history = model.fit(train_seq, train_target, epochs = <span class=\"number\">100</span>, batch_size = <span class=\"number\">64</span>,</span><br><span class=\"line\">                    validation_data = (val_seq, val_target),</span><br><span class=\"line\">                    callbacks=[checkpoint_cb, early_stopping_cb])</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<pre><code>Epoch 1/100\n313/313 [==============================] - 5s 10ms/step - loss: 0.4186 - accuracy: 0.8083 - val_loss: 0.4319 - val_accuracy: 0.8032\nEpoch 2/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4169 - accuracy: 0.8098 - val_loss: 0.4337 - val_accuracy: 0.7972\nEpoch 3/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4154 - accuracy: 0.8113 - val_loss: 0.4326 - val_accuracy: 0.8012\nEpoch 4/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4161 - accuracy: 0.8099 - val_loss: 0.4310 - val_accuracy: 0.8018\nEpoch 5/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4144 - accuracy: 0.8134 - val_loss: 0.4312 - val_accuracy: 0.8032\nEpoch 6/100\n313/313 [==============================] - 3s 11ms/step - loss: 0.4143 - accuracy: 0.8106 - val_loss: 0.4307 - val_accuracy: 0.7992\nEpoch 7/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4139 - accuracy: 0.8127 - val_loss: 0.4295 - val_accuracy: 0.8018\nEpoch 8/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4133 - accuracy: 0.8118 - val_loss: 0.4294 - val_accuracy: 0.8028\nEpoch 9/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4125 - accuracy: 0.8112 - val_loss: 0.4291 - val_accuracy: 0.8034\nEpoch 10/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4113 - accuracy: 0.8129 - val_loss: 0.4290 - val_accuracy: 0.8034\nEpoch 11/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4106 - accuracy: 0.8111 - val_loss: 0.4314 - val_accuracy: 0.8046\nEpoch 12/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4095 - accuracy: 0.8145 - val_loss: 0.4279 - val_accuracy: 0.8018\nEpoch 13/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4099 - accuracy: 0.8141 - val_loss: 0.4275 - val_accuracy: 0.8032\nEpoch 14/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4098 - accuracy: 0.8128 - val_loss: 0.4299 - val_accuracy: 0.8036\nEpoch 15/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4087 - accuracy: 0.8153 - val_loss: 0.4282 - val_accuracy: 0.8052\nEpoch 16/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4081 - accuracy: 0.8141 - val_loss: 0.4272 - val_accuracy: 0.8064\nEpoch 17/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4074 - accuracy: 0.8158 - val_loss: 0.4285 - val_accuracy: 0.8016\nEpoch 18/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4065 - accuracy: 0.8140 - val_loss: 0.4286 - val_accuracy: 0.8006\nEpoch 19/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4075 - accuracy: 0.8152 - val_loss: 0.4255 - val_accuracy: 0.8036\nEpoch 20/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4080 - accuracy: 0.8117 - val_loss: 0.4265 - val_accuracy: 0.8026\nEpoch 21/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4060 - accuracy: 0.8152 - val_loss: 0.4252 - val_accuracy: 0.8034\nEpoch 22/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4065 - accuracy: 0.8149 - val_loss: 0.4258 - val_accuracy: 0.8040\nEpoch 23/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4051 - accuracy: 0.8164 - val_loss: 0.4251 - val_accuracy: 0.8042\nEpoch 24/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4059 - accuracy: 0.8167 - val_loss: 0.4249 - val_accuracy: 0.8036\nEpoch 25/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4037 - accuracy: 0.8162 - val_loss: 0.4244 - val_accuracy: 0.8034\nEpoch 26/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4041 - accuracy: 0.8160 - val_loss: 0.4262 - val_accuracy: 0.8062\nEpoch 27/100\n313/313 [==============================] - 3s 10ms/step - loss: 0.4021 - accuracy: 0.8152 - val_loss: 0.4245 - val_accuracy: 0.8050\nEpoch 28/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4020 - accuracy: 0.8162 - val_loss: 0.4270 - val_accuracy: 0.8056\n\n\n\n\n\n[&lt;matplotlib.lines.Line2D at 0x7f9996fbb050&gt;]\n</code></pre>\n<p><img src=\"/images/0806/output_30_2.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plt.plot(history.history[<span class=\"string\">&#x27;loss&#x27;</span>])</span><br><span class=\"line\">plt.plot(history.history[<span class=\"string\">&#x27;val_loss&#x27;</span>])</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;epoch&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;loss&#x27;</span>)  <span class=\"comment\"># 오차</span></span><br><span class=\"line\">plt.legend([<span class=\"string\">&#x27;train&#x27;</span>, <span class=\"string\">&#x27;val&#x27;</span>])</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0806/output_31_0.png\" alt=\"png\"></p>\n<ul>\n<li>2개의 층을 연결하기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">model = keras.Sequential()</span><br><span class=\"line\">model.add(keras.layers.Embedding(<span class=\"number\">500</span>,<span class=\"number\">16</span>,input_length = <span class=\"number\">100</span>))</span><br><span class=\"line\">model.add(keras.layers.LSTM(<span class=\"number\">8</span>, dropout=<span class=\"number\">0.3</span>, return_sequences=<span class=\"literal\">True</span>))</span><br><span class=\"line\">model.add(keras.layers.LSTM(<span class=\"number\">8</span>, dropout=<span class=\"number\">0.3</span>))</span><br><span class=\"line\">model.add(keras.layers.Dense(<span class=\"number\">1</span>, activation=<span class=\"string\">&#x27;sigmoid&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">rmsprop = keras.optimizers.RMSprop(learning_rate=<span class=\"number\">1e-4</span>)</span><br><span class=\"line\">model.<span class=\"built_in\">compile</span>(optimizer=rmsprop, loss = <span class=\"string\">&#x27;binary_crossentropy&#x27;</span>, metrics = [<span class=\"string\">&#x27;accuracy&#x27;</span>])</span><br><span class=\"line\">checkpoint_cb = keras.callbacks.ModelCheckpoint(<span class=\"string\">&#x27;best-lstm-model.h5&#x27;</span>, save_best_only=<span class=\"literal\">True</span>)</span><br><span class=\"line\">early_stopping_cb = keras.callbacks.EarlyStopping(patience=<span class=\"number\">3</span>, restore_best_weights = <span class=\"literal\">True</span>)</span><br><span class=\"line\">history = model.fit(train_seq, train_target, epochs = <span class=\"number\">100</span>, batch_size = <span class=\"number\">64</span>,</span><br><span class=\"line\">                    validation_data = (val_seq, val_target),</span><br><span class=\"line\">                    callbacks=[checkpoint_cb, early_stopping_cb])</span><br></pre></td></tr></table></figure>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/08/06/day0805/python.png","excerpt":"<ul>\n<li>딥러닝 실습","more":"<ul>\n<li>딥러닝 실습<!-- excerpt --></li>\n</ul>\n<h2 id=\"데이터-불러오기\"><a href=\"#데이터-불러오기\" class=\"headerlink\" title=\"데이터 불러오기\"></a>데이터 불러오기</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> tensorflow.keras.datasets <span class=\"keyword\">import</span> imdb</span><br><span class=\"line\">(train_input, train_target), (test_input, test_target) = imdb.load_data(num_words=<span class=\"number\">500</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">train_input.shape, test_input.shape</span><br></pre></td></tr></table></figure>\n\n<pre><code>Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/imdb.npz\n17465344/17464789 [==============================] - 0s 0us/step\n17473536/17464789 [==============================] - 0s 0us/step\n\n\n\n\n\n((25000,), (25000,))\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">len</span>(train_input[<span class=\"number\">0</span>]))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">len</span>(train_input[<span class=\"number\">1</span>]))</span><br></pre></td></tr></table></figure>\n\n<pre><code>218\n189\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(train_input[<span class=\"number\">0</span>])</span><br></pre></td></tr></table></figure>\n\n<pre><code>[1, 14, 22, 16, 43, 2, 2, 2, 2, 65, 458, 2, 66, 2, 4, 173, 36, 256, 5, 25, 100, 43, 2, 112, 50, 2, 2, 9, 35, 480, 284, 5, 150, 4, 172, 112, 167, 2, 336, 385, 39, 4, 172, 2, 2, 17, 2, 38, 13, 447, 4, 192, 50, 16, 6, 147, 2, 19, 14, 22, 4, 2, 2, 469, 4, 22, 71, 87, 12, 16, 43, 2, 38, 76, 15, 13, 2, 4, 22, 17, 2, 17, 12, 16, 2, 18, 2, 5, 62, 386, 12, 8, 316, 8, 106, 5, 4, 2, 2, 16, 480, 66, 2, 33, 4, 130, 12, 16, 38, 2, 5, 25, 124, 51, 36, 135, 48, 25, 2, 33, 6, 22, 12, 215, 28, 77, 52, 5, 14, 407, 16, 82, 2, 8, 4, 107, 117, 2, 15, 256, 4, 2, 7, 2, 5, 2, 36, 71, 43, 2, 476, 26, 400, 317, 46, 7, 4, 2, 2, 13, 104, 88, 4, 381, 15, 297, 98, 32, 2, 56, 26, 141, 6, 194, 2, 18, 4, 226, 22, 21, 134, 476, 26, 480, 5, 144, 30, 2, 18, 51, 36, 28, 224, 92, 25, 104, 4, 226, 65, 16, 38, 2, 88, 12, 16, 283, 5, 16, 2, 113, 103, 32, 15, 16, 2, 19, 178, 32]\n</code></pre>\n<ul>\n<li>0은 리뷰가 부정적인 문장</li>\n<li>1은 리뷰가 긍정적인 문장</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(train_target[:<span class=\"number\">20</span>])</span><br></pre></td></tr></table></figure>\n\n<pre><code>[1 0 0 1 0 0 1 0 1 0 1 0 0 0 0 0 1 1 0 1]\n</code></pre>\n<ul>\n<li>훈련데이터 테스트데이터 분리</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\">train_input, val_input, train_target, val_target = train_test_split(</span><br><span class=\"line\">    train_input, train_target, test_size=<span class=\"number\">0.2</span>, random_state=<span class=\"number\">42</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">train_input.shape, val_input.shape, train_target.shape, val_target.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>((20000,), (5000,), (20000,), (5000,))\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\">lengths = np.array([<span class=\"built_in\">len</span>(x) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> train_input])  <span class=\"comment\"># 리스트 컴프리헨션</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.mean(lengths), np.median(lengths))</span><br></pre></td></tr></table></figure>\n\n<pre><code>239.00925 178.0\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\">plt.hist(lengths)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;length&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;frequency&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0806/output_9_0.png\" alt=\"png\"></p>\n<ul>\n<li>20,000개의 리뷰 순회하면서 길이가 100이 되도록 잘라낸다.</li>\n<li>100개보다 적은 문장은 0으로 채운다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> tensorflow.keras.preprocessing.sequence <span class=\"keyword\">import</span> pad_sequences</span><br><span class=\"line\">train_seq = pad_sequences(train_input, maxlen=<span class=\"number\">100</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(train_seq.shape)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(20000, 100)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(train_seq[<span class=\"number\">0</span>])</span><br></pre></td></tr></table></figure>\n\n<pre><code>[ 10   4  20   9   2 364 352   5  45   6   2   2  33 269   8   2 142   2\n   5   2  17  73  17 204   5   2  19  55   2   2  92  66 104  14  20  93\n  76   2 151  33   4  58  12 188   2 151  12 215  69 224 142  73 237   6\n   2   7   2   2 188   2 103  14  31  10  10 451   7   2   5   2  80  91\n   2  30   2  34  14  20 151  50  26 131  49   2  84  46  50  37  80  79\n   6   2  46   7  14  20  10  10 470 158]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(train_input[<span class=\"number\">0</span>][-<span class=\"number\">10</span>:])   <span class=\"comment\"># 보통 댓글의 결말은 마지막에 작성하는걸로 예상해서 -10으로 거꾸로 추출</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>[6, 2, 46, 7, 14, 20, 10, 10, 470, 158]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(train_seq[<span class=\"number\">5</span>])</span><br></pre></td></tr></table></figure>\n\n<pre><code>[  0   0   0   0   1   2 195  19  49   2   2 190   4   2 352   2 183  10\n  10  13  82  79   4   2  36  71 269   8   2  25  19  49   7   4   2   2\n   2   2   2  10  10  48  25  40   2  11   2   2  40   2   2   5   4   2\n   2  95  14 238  56 129   2  10  10  21   2  94 364 352   2   2  11 190\n  24 484   2   7  94 205 405  10  10  87   2  34  49   2   7   2   2   2\n   2   2 290   2  46  48  64  18   4   2]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val_seq = pad_sequences(val_input, maxlen=<span class=\"number\">100</span>)</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">train_seq.shape, val_seq.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>((20000, 100), (5000, 100))\n</code></pre>\n<h2 id=\"순환신경망-모델-만들기\"><a href=\"#순환신경망-모델-만들기\" class=\"headerlink\" title=\"순환신경망 모델 만들기\"></a>순환신경망 모델 만들기</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> tensorflow <span class=\"keyword\">import</span> keras</span><br><span class=\"line\">model = keras.Sequential()</span><br><span class=\"line\">model.add(keras.layers.SimpleRNN(<span class=\"number\">8</span>,input_shape=(<span class=\"number\">100</span>,<span class=\"number\">500</span>)))</span><br><span class=\"line\">model.add(keras.layers.Dense(<span class=\"number\">1</span>, activation=<span class=\"string\">&#x27;sigmoid&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"LSTM\"><a href=\"#LSTM\" class=\"headerlink\" title=\"LSTM\"></a>LSTM</h2><ul>\n<li>Long Short-Term Memory의 약자.</li>\n<li>단기 기억을 오래 기억하기 위해 고안되었다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> tensorflow.keras.datasets <span class=\"keyword\">import</span> imdb</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"></span><br><span class=\"line\">(train_input, train_target), (test_input, test_target) = imdb.load_data(num_words=<span class=\"number\">500</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">train_input, val_input, train_target, val_target = train_test_split(</span><br><span class=\"line\">    train_input, train_target, test_size=<span class=\"number\">0.2</span>, random_state=<span class=\"number\">42</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">train_input.shape, val_input.shape, train_target.shape, val_target.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>((20000,), (5000,), (20000,), (5000,))\n</code></pre>\n<ul>\n<li>패딩 작업</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> tensorflow.keras.preprocessing.sequence <span class=\"keyword\">import</span> pad_sequences</span><br><span class=\"line\">train_seq = pad_sequences(train_input, maxlen=<span class=\"number\">100</span>)</span><br><span class=\"line\">val_seq = pad_sequences(val_input, maxlen=<span class=\"number\">100</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">train_seq.shape, val_seq.shape</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>((20000, 100), (5000, 100))\n</code></pre>\n<ul>\n<li>LSTM 순환층을 만든다</li>\n<li>모델 아키텍처를 구성한다</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> tensorflow <span class=\"keyword\">import</span> keras</span><br><span class=\"line\">model = keras.Sequential()</span><br><span class=\"line\">model.add(keras.layers.Embedding(<span class=\"number\">500</span>,<span class=\"number\">16</span>,input_length = <span class=\"number\">100</span>))</span><br><span class=\"line\">model.add(keras.layers.LSTM(<span class=\"number\">8</span>))</span><br><span class=\"line\">model.add(keras.layers.Dense(<span class=\"number\">1</span>, activation=<span class=\"string\">&#x27;sigmoid&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">model.summary()</span><br></pre></td></tr></table></figure>\n\n<pre><code>Model: &quot;sequential_2&quot;\n_________________________________________________________________\n Layer (type)                Output Shape              Param #   \n=================================================================\n embedding_1 (Embedding)     (None, 100, 16)           8000      \n                                                                 \n lstm (LSTM)                 (None, 8)                 800       \n                                                                 \n dense_1 (Dense)             (None, 1)                 9         \n                                                                 \n=================================================================\nTotal params: 8,809\nTrainable params: 8,809\nNon-trainable params: 0\n_________________________________________________________________\n</code></pre>\n<ul>\n<li>모델 컴파일</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rmsprop = keras.optimizers.RMSprop(learning_rate=<span class=\"number\">1e-4</span>)</span><br><span class=\"line\">model.<span class=\"built_in\">compile</span>(optimizer=rmsprop, loss = <span class=\"string\">&#x27;binary_crossentropy&#x27;</span>, metrics = [<span class=\"string\">&#x27;accuracy&#x27;</span>])</span><br><span class=\"line\">checkpoint_cb = keras.callbacks.ModelCheckpoint(<span class=\"string\">&#x27;best-lstm-model.h5&#x27;</span>, save_best_only=<span class=\"literal\">True</span>)</span><br><span class=\"line\">early_stopping_cb = keras.callbacks.EarlyStopping(patience=<span class=\"number\">3</span>, restore_best_weights = <span class=\"literal\">True</span>)</span><br><span class=\"line\">history = model.fit(train_seq, train_target, epochs = <span class=\"number\">100</span>, batch_size = <span class=\"number\">64</span>,</span><br><span class=\"line\">                    validation_data = (val_seq, val_target),</span><br><span class=\"line\">                    callbacks=[checkpoint_cb, early_stopping_cb])</span><br></pre></td></tr></table></figure>\n\n<pre><code>Epoch 1/100\n313/313 [==============================] - 11s 10ms/step - loss: 0.6916 - accuracy: 0.5670 - val_loss: 0.6895 - val_accuracy: 0.6242\nEpoch 2/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.6825 - accuracy: 0.6376 - val_loss: 0.6659 - val_accuracy: 0.6560\nEpoch 3/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.6278 - accuracy: 0.7081 - val_loss: 0.6109 - val_accuracy: 0.7158\nEpoch 4/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.5935 - accuracy: 0.7249 - val_loss: 0.5872 - val_accuracy: 0.7226\nEpoch 5/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.5693 - accuracy: 0.7377 - val_loss: 0.5643 - val_accuracy: 0.7322\nEpoch 6/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.5461 - accuracy: 0.7513 - val_loss: 0.5450 - val_accuracy: 0.7336\nEpoch 7/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.5243 - accuracy: 0.7649 - val_loss: 0.5213 - val_accuracy: 0.7600\nEpoch 8/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.5059 - accuracy: 0.7749 - val_loss: 0.5054 - val_accuracy: 0.7700\nEpoch 9/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4904 - accuracy: 0.7828 - val_loss: 0.4922 - val_accuracy: 0.7832\nEpoch 10/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4774 - accuracy: 0.7923 - val_loss: 0.4813 - val_accuracy: 0.7906\nEpoch 11/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4665 - accuracy: 0.7955 - val_loss: 0.4720 - val_accuracy: 0.7890\nEpoch 12/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4579 - accuracy: 0.8007 - val_loss: 0.4649 - val_accuracy: 0.7916\nEpoch 13/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4504 - accuracy: 0.8019 - val_loss: 0.4591 - val_accuracy: 0.7954\nEpoch 14/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4438 - accuracy: 0.8027 - val_loss: 0.4694 - val_accuracy: 0.7822\nEpoch 15/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4394 - accuracy: 0.8058 - val_loss: 0.4504 - val_accuracy: 0.8002\nEpoch 16/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4349 - accuracy: 0.8077 - val_loss: 0.4487 - val_accuracy: 0.7970\nEpoch 17/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4314 - accuracy: 0.8077 - val_loss: 0.4462 - val_accuracy: 0.7978\nEpoch 18/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4277 - accuracy: 0.8087 - val_loss: 0.4440 - val_accuracy: 0.8014\nEpoch 19/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4257 - accuracy: 0.8094 - val_loss: 0.4465 - val_accuracy: 0.7978\nEpoch 20/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4233 - accuracy: 0.8099 - val_loss: 0.4400 - val_accuracy: 0.8026\nEpoch 21/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4214 - accuracy: 0.8091 - val_loss: 0.4375 - val_accuracy: 0.8034\nEpoch 22/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4199 - accuracy: 0.8110 - val_loss: 0.4361 - val_accuracy: 0.8028\nEpoch 23/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4185 - accuracy: 0.8120 - val_loss: 0.4359 - val_accuracy: 0.8030\nEpoch 24/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4173 - accuracy: 0.8108 - val_loss: 0.4352 - val_accuracy: 0.8036\nEpoch 25/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4164 - accuracy: 0.8107 - val_loss: 0.4353 - val_accuracy: 0.8046\nEpoch 26/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4153 - accuracy: 0.8120 - val_loss: 0.4350 - val_accuracy: 0.7966\nEpoch 27/100\n313/313 [==============================] - 3s 11ms/step - loss: 0.4146 - accuracy: 0.8106 - val_loss: 0.4351 - val_accuracy: 0.8062\nEpoch 28/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4138 - accuracy: 0.8123 - val_loss: 0.4333 - val_accuracy: 0.8014\nEpoch 29/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4132 - accuracy: 0.8116 - val_loss: 0.4336 - val_accuracy: 0.8014\nEpoch 30/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4125 - accuracy: 0.8117 - val_loss: 0.4347 - val_accuracy: 0.7996\nEpoch 31/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4122 - accuracy: 0.8110 - val_loss: 0.4332 - val_accuracy: 0.8046\nEpoch 32/100\n313/313 [==============================] - 3s 10ms/step - loss: 0.4115 - accuracy: 0.8134 - val_loss: 0.4325 - val_accuracy: 0.8010\nEpoch 33/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4114 - accuracy: 0.8122 - val_loss: 0.4356 - val_accuracy: 0.8036\nEpoch 34/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4107 - accuracy: 0.8130 - val_loss: 0.4334 - val_accuracy: 0.8054\nEpoch 35/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4105 - accuracy: 0.8139 - val_loss: 0.4325 - val_accuracy: 0.8038\n</code></pre>\n<ul>\n<li>모형 학습이 잘 되었는가?</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\">plt.plot(history.history[<span class=\"string\">&#x27;loss&#x27;</span>])</span><br><span class=\"line\">plt.plot(history.history[<span class=\"string\">&#x27;val_loss&#x27;</span>])</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;epoch&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;loss&#x27;</span>)  <span class=\"comment\"># 오차</span></span><br><span class=\"line\">plt.legend([<span class=\"string\">&#x27;train&#x27;</span>, <span class=\"string\">&#x27;val&#x27;</span>])</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"><span class=\"comment\"># 오차가 점점 많아질수록 과적합 된다는 뜻</span></span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0806/output_28_0.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">model = keras.Sequential()</span><br><span class=\"line\">model.add(keras.layers.Embedding(<span class=\"number\">500</span>,<span class=\"number\">16</span>,input_length = <span class=\"number\">100</span>))</span><br><span class=\"line\">model.add(keras.layers.LSTM(<span class=\"number\">8</span>, dropout=<span class=\"number\">0.3</span>))</span><br><span class=\"line\">model.add(keras.layers.Dense(<span class=\"number\">1</span>, activation=<span class=\"string\">&#x27;sigmoid&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rmsprop = keras.optimizers.RMSprop(learning_rate=<span class=\"number\">1e-4</span>)</span><br><span class=\"line\">model.<span class=\"built_in\">compile</span>(optimizer=rmsprop, loss = <span class=\"string\">&#x27;binary_crossentropy&#x27;</span>, metrics = [<span class=\"string\">&#x27;accuracy&#x27;</span>])</span><br><span class=\"line\">checkpoint_cb = keras.callbacks.ModelCheckpoint(<span class=\"string\">&#x27;best-lstm-model.h5&#x27;</span>, save_best_only=<span class=\"literal\">True</span>)</span><br><span class=\"line\">early_stopping_cb = keras.callbacks.EarlyStopping(patience=<span class=\"number\">3</span>, restore_best_weights = <span class=\"literal\">True</span>)</span><br><span class=\"line\">history = model.fit(train_seq, train_target, epochs = <span class=\"number\">100</span>, batch_size = <span class=\"number\">64</span>,</span><br><span class=\"line\">                    validation_data = (val_seq, val_target),</span><br><span class=\"line\">                    callbacks=[checkpoint_cb, early_stopping_cb])</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<pre><code>Epoch 1/100\n313/313 [==============================] - 5s 10ms/step - loss: 0.4186 - accuracy: 0.8083 - val_loss: 0.4319 - val_accuracy: 0.8032\nEpoch 2/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4169 - accuracy: 0.8098 - val_loss: 0.4337 - val_accuracy: 0.7972\nEpoch 3/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4154 - accuracy: 0.8113 - val_loss: 0.4326 - val_accuracy: 0.8012\nEpoch 4/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4161 - accuracy: 0.8099 - val_loss: 0.4310 - val_accuracy: 0.8018\nEpoch 5/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4144 - accuracy: 0.8134 - val_loss: 0.4312 - val_accuracy: 0.8032\nEpoch 6/100\n313/313 [==============================] - 3s 11ms/step - loss: 0.4143 - accuracy: 0.8106 - val_loss: 0.4307 - val_accuracy: 0.7992\nEpoch 7/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4139 - accuracy: 0.8127 - val_loss: 0.4295 - val_accuracy: 0.8018\nEpoch 8/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4133 - accuracy: 0.8118 - val_loss: 0.4294 - val_accuracy: 0.8028\nEpoch 9/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4125 - accuracy: 0.8112 - val_loss: 0.4291 - val_accuracy: 0.8034\nEpoch 10/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4113 - accuracy: 0.8129 - val_loss: 0.4290 - val_accuracy: 0.8034\nEpoch 11/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4106 - accuracy: 0.8111 - val_loss: 0.4314 - val_accuracy: 0.8046\nEpoch 12/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4095 - accuracy: 0.8145 - val_loss: 0.4279 - val_accuracy: 0.8018\nEpoch 13/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4099 - accuracy: 0.8141 - val_loss: 0.4275 - val_accuracy: 0.8032\nEpoch 14/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4098 - accuracy: 0.8128 - val_loss: 0.4299 - val_accuracy: 0.8036\nEpoch 15/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4087 - accuracy: 0.8153 - val_loss: 0.4282 - val_accuracy: 0.8052\nEpoch 16/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4081 - accuracy: 0.8141 - val_loss: 0.4272 - val_accuracy: 0.8064\nEpoch 17/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4074 - accuracy: 0.8158 - val_loss: 0.4285 - val_accuracy: 0.8016\nEpoch 18/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4065 - accuracy: 0.8140 - val_loss: 0.4286 - val_accuracy: 0.8006\nEpoch 19/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4075 - accuracy: 0.8152 - val_loss: 0.4255 - val_accuracy: 0.8036\nEpoch 20/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4080 - accuracy: 0.8117 - val_loss: 0.4265 - val_accuracy: 0.8026\nEpoch 21/100\n313/313 [==============================] - 3s 8ms/step - loss: 0.4060 - accuracy: 0.8152 - val_loss: 0.4252 - val_accuracy: 0.8034\nEpoch 22/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4065 - accuracy: 0.8149 - val_loss: 0.4258 - val_accuracy: 0.8040\nEpoch 23/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4051 - accuracy: 0.8164 - val_loss: 0.4251 - val_accuracy: 0.8042\nEpoch 24/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4059 - accuracy: 0.8167 - val_loss: 0.4249 - val_accuracy: 0.8036\nEpoch 25/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4037 - accuracy: 0.8162 - val_loss: 0.4244 - val_accuracy: 0.8034\nEpoch 26/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4041 - accuracy: 0.8160 - val_loss: 0.4262 - val_accuracy: 0.8062\nEpoch 27/100\n313/313 [==============================] - 3s 10ms/step - loss: 0.4021 - accuracy: 0.8152 - val_loss: 0.4245 - val_accuracy: 0.8050\nEpoch 28/100\n313/313 [==============================] - 3s 9ms/step - loss: 0.4020 - accuracy: 0.8162 - val_loss: 0.4270 - val_accuracy: 0.8056\n\n\n\n\n\n[&lt;matplotlib.lines.Line2D at 0x7f9996fbb050&gt;]\n</code></pre>\n<p><img src=\"/images/0806/output_30_2.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plt.plot(history.history[<span class=\"string\">&#x27;loss&#x27;</span>])</span><br><span class=\"line\">plt.plot(history.history[<span class=\"string\">&#x27;val_loss&#x27;</span>])</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;epoch&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;loss&#x27;</span>)  <span class=\"comment\"># 오차</span></span><br><span class=\"line\">plt.legend([<span class=\"string\">&#x27;train&#x27;</span>, <span class=\"string\">&#x27;val&#x27;</span>])</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"/images/0806/output_31_0.png\" alt=\"png\"></p>\n<ul>\n<li>2개의 층을 연결하기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">model = keras.Sequential()</span><br><span class=\"line\">model.add(keras.layers.Embedding(<span class=\"number\">500</span>,<span class=\"number\">16</span>,input_length = <span class=\"number\">100</span>))</span><br><span class=\"line\">model.add(keras.layers.LSTM(<span class=\"number\">8</span>, dropout=<span class=\"number\">0.3</span>, return_sequences=<span class=\"literal\">True</span>))</span><br><span class=\"line\">model.add(keras.layers.LSTM(<span class=\"number\">8</span>, dropout=<span class=\"number\">0.3</span>))</span><br><span class=\"line\">model.add(keras.layers.Dense(<span class=\"number\">1</span>, activation=<span class=\"string\">&#x27;sigmoid&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">rmsprop = keras.optimizers.RMSprop(learning_rate=<span class=\"number\">1e-4</span>)</span><br><span class=\"line\">model.<span class=\"built_in\">compile</span>(optimizer=rmsprop, loss = <span class=\"string\">&#x27;binary_crossentropy&#x27;</span>, metrics = [<span class=\"string\">&#x27;accuracy&#x27;</span>])</span><br><span class=\"line\">checkpoint_cb = keras.callbacks.ModelCheckpoint(<span class=\"string\">&#x27;best-lstm-model.h5&#x27;</span>, save_best_only=<span class=\"literal\">True</span>)</span><br><span class=\"line\">early_stopping_cb = keras.callbacks.EarlyStopping(patience=<span class=\"number\">3</span>, restore_best_weights = <span class=\"literal\">True</span>)</span><br><span class=\"line\">history = model.fit(train_seq, train_target, epochs = <span class=\"number\">100</span>, batch_size = <span class=\"number\">64</span>,</span><br><span class=\"line\">                    validation_data = (val_seq, val_target),</span><br><span class=\"line\">                    callbacks=[checkpoint_cb, early_stopping_cb])</span><br></pre></td></tr></table></figure>\n"},{"title":"Git 잔디심기 오류해결","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"thumbnailImage":"Github.png","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-08-06T23:30:23.000Z","_content":"\n\n\n- 가끔씩 commit 를 했는데 잔디가 안 심어져서 해결법 찾아봄\n<!-- excerpt -->\n\n- 분명 1 commit를 했는데 commit이 등록이 안돼서 잔디가 안 심어지는 경우가 발생했다.\n    \n    구글링 해본 결과!\n    \n\n## GitHub에 등록된 이메일과 닉네임이 내 로컬 이메일과 닉네임하고 달라서 생긴 문제..\n\n- GitHub에 등록된 이메일은 [gmail](http://gmail.com) 이었고 내 로컬 컴퓨터에서 쓴 이메일은 [naver](http://naver.com) 이었다…\n\n---\n\n## 해결법\n\n- 다음 코드를 입력해서 설정을 바꿔주면 해결된다. dhtpdud2009@naver.com 을 발견했다.\n    \n    (q 누르면 나가짐)\n    \n    ![Untitled](/images/0806/Untitled.png)\n    \n    ![Untitled](/images/0806/Untitled%201.png)\n    \n\n```\ngit config --list\n```\n\n- GitHub에 등록된 이메일을 확인하자\n    \n    ![Untitled](/images/0806/Untitled%202.png)\n    \n    ![Untitled](/images/0806/Untitled%203.png)\n    \n- 둘이 다른 것을 확인했다.\n\n- 다음 코드로 로컬 config 이메일과 Global config 이메일을 통일 시킨다\n    \n    ![Untitled](/images/0806/Untitled%204.png)\n    \n\n```\ngit config user.name \"이름\"    --> 이름이 다른 경우\ngit config user.email \"이메일\" --> 이메일이 다른 경우\n\ngit config --global user.name \"이름\"     --> 글로벌도\ngit config --global user.email \"이메일\"  --> 동일하게\n```\n\n- 이 후 commit 을 하면 정상적으로 1 commit 씩 GitHub 에 등록된다!","source":"_posts/day0806 Git 잔디심기 오류해결.md","raw":"---\ntitle: \"Git 잔디심기 오류해결\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: blog\nclearReading: true\nthumbnailImage: Github.png\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-08-07 08:30:23'\n---\n\n\n\n- 가끔씩 commit 를 했는데 잔디가 안 심어져서 해결법 찾아봄\n<!-- excerpt -->\n\n- 분명 1 commit를 했는데 commit이 등록이 안돼서 잔디가 안 심어지는 경우가 발생했다.\n    \n    구글링 해본 결과!\n    \n\n## GitHub에 등록된 이메일과 닉네임이 내 로컬 이메일과 닉네임하고 달라서 생긴 문제..\n\n- GitHub에 등록된 이메일은 [gmail](http://gmail.com) 이었고 내 로컬 컴퓨터에서 쓴 이메일은 [naver](http://naver.com) 이었다…\n\n---\n\n## 해결법\n\n- 다음 코드를 입력해서 설정을 바꿔주면 해결된다. dhtpdud2009@naver.com 을 발견했다.\n    \n    (q 누르면 나가짐)\n    \n    ![Untitled](/images/0806/Untitled.png)\n    \n    ![Untitled](/images/0806/Untitled%201.png)\n    \n\n```\ngit config --list\n```\n\n- GitHub에 등록된 이메일을 확인하자\n    \n    ![Untitled](/images/0806/Untitled%202.png)\n    \n    ![Untitled](/images/0806/Untitled%203.png)\n    \n- 둘이 다른 것을 확인했다.\n\n- 다음 코드로 로컬 config 이메일과 Global config 이메일을 통일 시킨다\n    \n    ![Untitled](/images/0806/Untitled%204.png)\n    \n\n```\ngit config user.name \"이름\"    --> 이름이 다른 경우\ngit config user.email \"이메일\" --> 이메일이 다른 경우\n\ngit config --global user.name \"이름\"     --> 글로벌도\ngit config --global user.email \"이메일\"  --> 동일하게\n```\n\n- 이 후 commit 을 하면 정상적으로 1 commit 씩 GitHub 에 등록된다!","slug":"day0806 Git 잔디심기 오류해결","published":1,"updated":"2022-10-30T13:51:01.006Z","_id":"cl6iue5er0000cou0hvsxer4o","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n</li>\n<li><p>분명 1 commit를 했는데 commit이 등록이 안돼서 잔디가 안 심어지는 경우가 발생했다.</p>\n<p>  구글링 해본 결과!</p>\n</li>\n</ul>\n<h2 id=\"GitHub에-등록된-이메일과-닉네임이-내-로컬-이메일과-닉네임하고-달라서-생긴-문제\"><a href=\"#GitHub에-등록된-이메일과-닉네임이-내-로컬-이메일과-닉네임하고-달라서-생긴-문제\" class=\"headerlink\" title=\"GitHub에 등록된 이메일과 닉네임이 내 로컬 이메일과 닉네임하고 달라서 생긴 문제..\"></a>GitHub에 등록된 이메일과 닉네임이 내 로컬 이메일과 닉네임하고 달라서 생긴 문제..</h2><ul>\n<li>GitHub에 등록된 이메일은 <a href=\"http://gmail.com/\">gmail</a> 이었고 내 로컬 컴퓨터에서 쓴 이메일은 <a href=\"http://naver.com/\">naver</a> 이었다…</li>\n</ul>\n<hr>\n<h2 id=\"해결법\"><a href=\"#해결법\" class=\"headerlink\" title=\"해결법\"></a>해결법</h2><ul>\n<li><p>다음 코드를 입력해서 설정을 바꿔주면 해결된다. <a href=\"mailto:&#x64;&#104;&#116;&#112;&#x64;&#x75;&#x64;&#x32;&#x30;&#48;&#x39;&#64;&#110;&#x61;&#118;&#101;&#114;&#46;&#x63;&#111;&#x6d;\">&#x64;&#104;&#116;&#112;&#x64;&#x75;&#x64;&#x32;&#x30;&#48;&#x39;&#64;&#110;&#x61;&#118;&#101;&#114;&#46;&#x63;&#111;&#x6d;</a> 을 발견했다.</p>\n<p>  (q 누르면 나가짐)</p>\n<p>  <img src=\"/images/0806/Untitled.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/0806/Untitled%201.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --list</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>GitHub에 등록된 이메일을 확인하자</p>\n<p>  <img src=\"/images/0806/Untitled%202.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/0806/Untitled%203.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>둘이 다른 것을 확인했다.</p>\n</li>\n<li><p>다음 코드로 로컬 config 이메일과 Global config 이메일을 통일 시킨다</p>\n<p>  <img src=\"/images/0806/Untitled%204.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config user.name &quot;이름&quot;    --&gt; 이름이 다른 경우</span><br><span class=\"line\">git config user.email &quot;이메일&quot; --&gt; 이메일이 다른 경우</span><br><span class=\"line\"></span><br><span class=\"line\">git config --global user.name &quot;이름&quot;     --&gt; 글로벌도</span><br><span class=\"line\">git config --global user.email &quot;이메일&quot;  --&gt; 동일하게</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>이 후 commit 을 하면 정상적으로 1 commit 씩 GitHub 에 등록된다!</li>\n</ul>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/08/07/day0806%20Git%20%EC%9E%94%EB%94%94%EC%8B%AC%EA%B8%B0%20%EC%98%A4%EB%A5%98%ED%95%B4%EA%B2%B0/Github.png","excerpt":"<ul>\n<li><p>가끔씩 commit 를 했는데 잔디가 안 심어져서 해결법 찾아봄</p>","more":"<ul>\n<li><p>가끔씩 commit 를 했는데 잔디가 안 심어져서 해결법 찾아봄</p>\n<!-- excerpt -->\n</li>\n<li><p>분명 1 commit를 했는데 commit이 등록이 안돼서 잔디가 안 심어지는 경우가 발생했다.</p>\n<p>  구글링 해본 결과!</p>\n</li>\n</ul>\n<h2 id=\"GitHub에-등록된-이메일과-닉네임이-내-로컬-이메일과-닉네임하고-달라서-생긴-문제\"><a href=\"#GitHub에-등록된-이메일과-닉네임이-내-로컬-이메일과-닉네임하고-달라서-생긴-문제\" class=\"headerlink\" title=\"GitHub에 등록된 이메일과 닉네임이 내 로컬 이메일과 닉네임하고 달라서 생긴 문제..\"></a>GitHub에 등록된 이메일과 닉네임이 내 로컬 이메일과 닉네임하고 달라서 생긴 문제..</h2><ul>\n<li>GitHub에 등록된 이메일은 <a href=\"http://gmail.com/\">gmail</a> 이었고 내 로컬 컴퓨터에서 쓴 이메일은 <a href=\"http://naver.com/\">naver</a> 이었다…</li>\n</ul>\n<hr>\n<h2 id=\"해결법\"><a href=\"#해결법\" class=\"headerlink\" title=\"해결법\"></a>해결법</h2><ul>\n<li><p>다음 코드를 입력해서 설정을 바꿔주면 해결된다. <a href=\"mailto:&#x64;&#104;&#116;&#112;&#x64;&#x75;&#x64;&#x32;&#x30;&#48;&#x39;&#64;&#110;&#x61;&#118;&#101;&#114;&#46;&#x63;&#111;&#x6d;\">&#x64;&#104;&#116;&#112;&#x64;&#x75;&#x64;&#x32;&#x30;&#48;&#x39;&#64;&#110;&#x61;&#118;&#101;&#114;&#46;&#x63;&#111;&#x6d;</a> 을 발견했다.</p>\n<p>  (q 누르면 나가짐)</p>\n<p>  <img src=\"/images/0806/Untitled.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/0806/Untitled%201.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --list</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>GitHub에 등록된 이메일을 확인하자</p>\n<p>  <img src=\"/images/0806/Untitled%202.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/0806/Untitled%203.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>둘이 다른 것을 확인했다.</p>\n</li>\n<li><p>다음 코드로 로컬 config 이메일과 Global config 이메일을 통일 시킨다</p>\n<p>  <img src=\"/images/0806/Untitled%204.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config user.name &quot;이름&quot;    --&gt; 이름이 다른 경우</span><br><span class=\"line\">git config user.email &quot;이메일&quot; --&gt; 이메일이 다른 경우</span><br><span class=\"line\"></span><br><span class=\"line\">git config --global user.name &quot;이름&quot;     --&gt; 글로벌도</span><br><span class=\"line\">git config --global user.email &quot;이메일&quot;  --&gt; 동일하게</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>이 후 commit 을 하면 정상적으로 1 commit 씩 GitHub 에 등록된다!</li>\n</ul>\n"},{"title":"크롤링 작업","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"metaAlignment":"center","date":"2022-08-08T13:40:23.000Z","_content":"\n여기까지 크롤링 코드 짜는데만 5시간 ㅜㅜ\n<!-- excerpt -->\n\n```python\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nimport time\nfrom bs4 import BeautifulSoup\nimport requests\nimport pandas as pd\nfrom datetime import datetime\nimport time\nfrom urllib.parse import quote\n\ndef subscription():\n  url = 'https://www.applyhome.co.kr/ai/aia/selectAPTLttotPblancListView.do'\n  response = requests.get(url)\n  soup = BeautifulSoup(response.content, \"html.parser\")\n  \n  return soup\n\ndef text_many():\n  soup = subscription()\n  area = soup.find_all('td')\n  for text in area:\n    print(text.get_text())\n\ndef detail():\n    # 크롬드라이버 실행  (경로 예: '/Users/Roy/Downloads/chromedriver')\n    driver = webdriver.Chrome('D:\\Programming\\chromedriver.exe') \n\n    #크롬 드라이버에 url 주소 넣고 실행\n    driver.get('https://www.applyhome.co.kr/ai/aia/selectAPTLttotPblancListView.do')\n    # 페이지가 완전히 로딩되도록 3초동안 기다림\n    time.sleep(3)\n    driver.find_element(By.XPATH,('//*[@id=\"subContent\"]/div[4]/table/tbody/tr[1]/td[4]/a/b/text()')).click()\n    # soup = subscription()\n    # detail = soup.find('td.txt_l')\n    \n    # return detail\n    \n\nif __name__ == \"__main__\":\n  print(list(text_many()))\n  # detail()\n```","source":"_posts/day0808.md","raw":"---\ntitle: \"크롤링 작업\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: python\nclearReading: true\nmetaAlignment: center\ndate: '2022-08-08 22:40:23'\n---\n\n여기까지 크롤링 코드 짜는데만 5시간 ㅜㅜ\n<!-- excerpt -->\n\n```python\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nimport time\nfrom bs4 import BeautifulSoup\nimport requests\nimport pandas as pd\nfrom datetime import datetime\nimport time\nfrom urllib.parse import quote\n\ndef subscription():\n  url = 'https://www.applyhome.co.kr/ai/aia/selectAPTLttotPblancListView.do'\n  response = requests.get(url)\n  soup = BeautifulSoup(response.content, \"html.parser\")\n  \n  return soup\n\ndef text_many():\n  soup = subscription()\n  area = soup.find_all('td')\n  for text in area:\n    print(text.get_text())\n\ndef detail():\n    # 크롬드라이버 실행  (경로 예: '/Users/Roy/Downloads/chromedriver')\n    driver = webdriver.Chrome('D:\\Programming\\chromedriver.exe') \n\n    #크롬 드라이버에 url 주소 넣고 실행\n    driver.get('https://www.applyhome.co.kr/ai/aia/selectAPTLttotPblancListView.do')\n    # 페이지가 완전히 로딩되도록 3초동안 기다림\n    time.sleep(3)\n    driver.find_element(By.XPATH,('//*[@id=\"subContent\"]/div[4]/table/tbody/tr[1]/td[4]/a/b/text()')).click()\n    # soup = subscription()\n    # detail = soup.find('td.txt_l')\n    \n    # return detail\n    \n\nif __name__ == \"__main__\":\n  print(list(text_many()))\n  # detail()\n```","slug":"day0808","published":1,"updated":"2022-09-07T10:19:55.605Z","_id":"cl6kt2lde0000nou06z7t9tqy","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> selenium <span class=\"keyword\">import</span> webdriver</span><br><span class=\"line\"><span class=\"keyword\">from</span> selenium.webdriver.common.by <span class=\"keyword\">import</span> By</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">from</span> urllib.parse <span class=\"keyword\">import</span> quote</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">subscription</span>():</span><br><span class=\"line\">  url = <span class=\"string\">&#x27;https://www.applyhome.co.kr/ai/aia/selectAPTLttotPblancListView.do&#x27;</span></span><br><span class=\"line\">  response = requests.get(url)</span><br><span class=\"line\">  soup = BeautifulSoup(response.content, <span class=\"string\">&quot;html.parser&quot;</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> soup</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">text_many</span>():</span><br><span class=\"line\">  soup = subscription()</span><br><span class=\"line\">  area = soup.find_all(<span class=\"string\">&#x27;td&#x27;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">for</span> text <span class=\"keyword\">in</span> area:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(text.get_text())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">detail</span>():</span><br><span class=\"line\">    <span class=\"comment\"># 크롬드라이버 실행  (경로 예: &#x27;/Users/Roy/Downloads/chromedriver&#x27;)</span></span><br><span class=\"line\">    driver = webdriver.Chrome(<span class=\"string\">&#x27;D:\\Programming\\chromedriver.exe&#x27;</span>) </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#크롬 드라이버에 url 주소 넣고 실행</span></span><br><span class=\"line\">    driver.get(<span class=\"string\">&#x27;https://www.applyhome.co.kr/ai/aia/selectAPTLttotPblancListView.do&#x27;</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 페이지가 완전히 로딩되도록 3초동안 기다림</span></span><br><span class=\"line\">    time.sleep(<span class=\"number\">3</span>)</span><br><span class=\"line\">    driver.find_element(By.XPATH,(<span class=\"string\">&#x27;//*[@id=&quot;subContent&quot;]/div[4]/table/tbody/tr[1]/td[4]/a/b/text()&#x27;</span>)).click()</span><br><span class=\"line\">    <span class=\"comment\"># soup = subscription()</span></span><br><span class=\"line\">    <span class=\"comment\"># detail = soup.find(&#x27;td.txt_l&#x27;)</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># return detail</span></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"built_in\">list</span>(text_many()))</span><br><span class=\"line\">  <span class=\"comment\"># detail()</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"<p>여기까지 크롤링 코드 짜는데만 5시간 ㅜㅜ</p>","more":"<p>여기까지 크롤링 코드 짜는데만 5시간 ㅜㅜ</p>\n<!-- excerpt -->\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> selenium <span class=\"keyword\">import</span> webdriver</span><br><span class=\"line\"><span class=\"keyword\">from</span> selenium.webdriver.common.by <span class=\"keyword\">import</span> By</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">from</span> urllib.parse <span class=\"keyword\">import</span> quote</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">subscription</span>():</span><br><span class=\"line\">  url = <span class=\"string\">&#x27;https://www.applyhome.co.kr/ai/aia/selectAPTLttotPblancListView.do&#x27;</span></span><br><span class=\"line\">  response = requests.get(url)</span><br><span class=\"line\">  soup = BeautifulSoup(response.content, <span class=\"string\">&quot;html.parser&quot;</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> soup</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">text_many</span>():</span><br><span class=\"line\">  soup = subscription()</span><br><span class=\"line\">  area = soup.find_all(<span class=\"string\">&#x27;td&#x27;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">for</span> text <span class=\"keyword\">in</span> area:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(text.get_text())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">detail</span>():</span><br><span class=\"line\">    <span class=\"comment\"># 크롬드라이버 실행  (경로 예: &#x27;/Users/Roy/Downloads/chromedriver&#x27;)</span></span><br><span class=\"line\">    driver = webdriver.Chrome(<span class=\"string\">&#x27;D:\\Programming\\chromedriver.exe&#x27;</span>) </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#크롬 드라이버에 url 주소 넣고 실행</span></span><br><span class=\"line\">    driver.get(<span class=\"string\">&#x27;https://www.applyhome.co.kr/ai/aia/selectAPTLttotPblancListView.do&#x27;</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 페이지가 완전히 로딩되도록 3초동안 기다림</span></span><br><span class=\"line\">    time.sleep(<span class=\"number\">3</span>)</span><br><span class=\"line\">    driver.find_element(By.XPATH,(<span class=\"string\">&#x27;//*[@id=&quot;subContent&quot;]/div[4]/table/tbody/tr[1]/td[4]/a/b/text()&#x27;</span>)).click()</span><br><span class=\"line\">    <span class=\"comment\"># soup = subscription()</span></span><br><span class=\"line\">    <span class=\"comment\"># detail = soup.find(&#x27;td.txt_l&#x27;)</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># return detail</span></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"built_in\">list</span>(text_many()))</span><br><span class=\"line\">  <span class=\"comment\"># detail()</span></span><br></pre></td></tr></table></figure>"},{"title":"2022-06-17 메모","output":"html_document","date":"2022-06-17T00:00:00.000Z","_content":"\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n# 0617\n\n# 0617\n\n블로그 만들기\n\n- 티스토리 블로그 / 네이버 블로그 / medium ← 개발\n- 깃허브 블로그\n\n알아야 할 것 → hugo, hexo, jekyll, html, css, git & github, 터미널 명령어, 마크다운\n\nIT/기획자 (제안서) →→ **티스토리 블로그**\n\n개발자(코딩) →→ **깃허브 블로그**\n\n# Hexo 설치\n\nnodejs 홈페이지에서\n\n![Untitled](/images/0617/Untitled.png)\n\n왼쪽꺼 다운로드\n\n설치시 Add to PATH 선택 후 다운\n\n![Untitled](/images/0617/Untitled%201.png)\n\n![Untitled](/images/0617/Untitled%202.png)\n\n- Node 뜨면 아무키나 누르고 powershell 진입\n- 설치 완료 후 cmd 에서 node -v 입력\n\n![Untitled](/images/0617/Untitled%203.png)\n\n- npm install -g hexo-cli 입력 후 엔터\n\n![Untitled](/images/0617/Untitled%204.png)\n\n---\n\n# 블로그 만들기\n\n- 바탕화면에서 git bash 후 hexo init blog 입력\n\n![Untitled](/images/0617/Untitled%205.png)\n\n- cd blog —> ls 차례대로 입력\n\n![Untitled](/images/0617/Untitled%206.png)\n\n- github 에서 0616에서 배웠던 업로드 한다. (git add . 로 모든 파일 업로드)\n- 바탕화면에 blog 폴더 우클릭 후 PyCharm 으로 열기\n\n![Untitled](/images/0617/Untitled%207.png)\n\n- 터미널 열고\n\n![Untitled](/images/0617/Untitled%208.png)\n\n- npm install\n- npm install hexo-server --save\n- npm install hexo-deployer-git --save 차례대로 입력\n- hexo server 입력\n\n![Untitled](/images/0617/Untitled%209.png)\n\n- 하이퍼링크 클릭하면 블로그 완성\n\n---\n\n# 블로그 배포하기\n\n- github 들어가서 “본인닉네임.github.io” 로 만들기\n- hexo 들어가서\n\n![Untitled](/images/0617/Untitled%2010.png)\n\n저렇게 쓰기(NeewLife 자리에 본인 닉네임)\n\n- 맨 밑에 내려와서\n\n![Untitled](/images/0617/Untitled%2011.png)\n\n**https://github.com/본인닉네임/본인닉네임.github.io.git** 임\n\n- 다시 깃배쉬 밑에 “hexo generate, hexo deploy” 입력\n\n![Untitled](/images/0617/Untitled%2012.png)\n\n![Untitled](/images/0617/Untitled%2013.png)\n\n- 주소창에 “본인닉네임.github.io” 검색하면 Hexo 블로그 배포완료된걸 확인\n\n![Untitled](/images/0617/Untitled%2014.png)\n\n- 다 됐으면 git add . 로 업로드\n\n- 주의사항\n\n중간에 ***# Site*** 부분만 수정가능\n\n![Untitled](/images/0617/Untitled%2015.png)\n\n---\n\n- rtools42 다운받기\n\n![Untitled](/images/0617/Untitled%2016.png)\n\n- R Studio 들어가서 설정\n\n![Untitled](/images/0617/Untitled%2017.png)\n\n- Soft-wrap R source files 체크\n\n![Untitled](/images/0617/Untitled%2018.png)\n\n- Default text encoding UTF-8 로 변경\n- Apperarance에서 Pastel On Dark로 설정\n\n![Untitled](/images/0617/Untitled%2019.png)\n\n- github에서 R_lecture 새로 만들기(README 체크 하기)\n- 바탕화면에서 git bash로 R_lecture 불러오기(주소 복사 후 git clone)\n- R Studio에서\n\n![Untitled](/images/0617/Untitled%2020.png)\n\n![Untitled](/images/0617/Untitled%2021.png)\n\n- 만들고 data, docs, source 폴더 만들기\n\n![Untitled](/images/0617/Untitled%2022.png)\n\n- source 폴더로 들어가서 경로로 설정해주기\n\n![Untitled](/images/0617/Untitled%2023.png)\n\n- 새 스크립트 만들기\n\n![Untitled](/images/0617/Untitled%2024.png)\n\n- day01로 저장해보면 source 폴더안에 저장이 된다\n\n![Untitled](/images/0617/Untitled%2025.png)\n\n---\n\n- day01 폴더를 day0617로 변경한 뒤\n\n![Untitled](/images/0617/Untitled%2026.png)\n\n입력 후 ctrl + enter 누른다.\n\n![Untitled](/images/0617/Untitled%2027.png)\n\n- 이 창이 뜬다면 성공\n- library(ggplot2) 입력 후 ctrl + enter 누르기\n\n![Untitled](/images/0617/Untitled%2028.png)\n\n—> ggplot2 패키지 내의 함수들을 사용하겠다는 명령어이다.\n\n# 함수 공부방법\n\n- [https://cran.r-project.org/](https://cran.r-project.org/)에서 ggplot2 package 설명서 찾아가서\n\ngeom_point 함수 example에서 싹다 드래그\n\n![Untitled](/images/0617/Untitled%2029.png)\n\n- R Studio 에 붙여넣기\n\n![Untitled](/images/0617/Untitled%2030.png)\n\n- ctrl + enter 로 하나씩 실행해보면서 익혀보기\n- aes가 뭔데? 싶으면\n\n![Untitled](/images/0617/Untitled%2031.png)\n\n- 저기서 aes 클릭해서\n\n![Untitled](/images/0617/Untitled%2032.png)\n\n- 또 공부\n- 영어 모르겠으면 파파고에 복붙\n- 하다 모르겠다?\n\n![Untitled](/images/0617/Untitled%2033.png)\n\n- Cheat Sheets 활용\n- [http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html](http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html)\n\n      ===>조금 더 나은 표\n\n---\n\n![Untitled](/images/0617/Untitled%2034.png)\n\n- 함수의 분포도\n\n![Untitled](/images/0617/Untitled%2035.png)\n\n- 함수의 그래프 형태(다음과 같이 나온다)\n\n![Untitled](/images/0617/Untitled%2036.png)\n\n---\n\n- R Markdown 클릭\n\n![Untitled](/images/0617/Untitled%2037.png)\n\n- Document로 만들기\n\n![Untitled](/images/0617/Untitled%2038.png)\n\n- 초록색 C 아이콘 클릭 후 R 클릭\n\n![Untitled](/images/0617/Untitled%2039.png)\n\n- ##R Markdown 밑으로 지우고\n\n```r\n## ggplot2 시각화\n- 다음과 같이 시각화를 작성한다.\n\n'''{r}\n\nlibrary(ggplot2)\n\nggplot(data = iris, aes(x = Sepal.Length,\ny = Sepal.Width)) +\ngeom_point()\n\n'''\n```\n\n- 입력한 후 맨 위에 **output** 부분을 다음과 같이 변경한다.(shift + enter 로 줄바꿈)\n    \n    ![Untitled](/images/0617/Untitled%2040.png)\n    \n- 그 후에 저장\n- 바탕화면의 R_lecture\\source 안에 “day0617” Markdown 원본파일을\n- blog\\source 에 복붙한다.\n\n![Untitled](/images/0617/Untitled%2041.png)\n\n- blog 폴더를 PyCharm 으로 열어서 hexo server 하면 업로드 끝\n\n![Untitled](/images/0617/Untitled%2042.png)","source":"_posts/0617 f76ecd14aebf4b66a1bf966d7061b068.md","raw":"---\ntitle: \"2022-06-17 메모\"\noutput: html_document\ndate: '2022-06-17'\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n# 0617\n\n# 0617\n\n블로그 만들기\n\n- 티스토리 블로그 / 네이버 블로그 / medium ← 개발\n- 깃허브 블로그\n\n알아야 할 것 → hugo, hexo, jekyll, html, css, git & github, 터미널 명령어, 마크다운\n\nIT/기획자 (제안서) →→ **티스토리 블로그**\n\n개발자(코딩) →→ **깃허브 블로그**\n\n# Hexo 설치\n\nnodejs 홈페이지에서\n\n![Untitled](/images/0617/Untitled.png)\n\n왼쪽꺼 다운로드\n\n설치시 Add to PATH 선택 후 다운\n\n![Untitled](/images/0617/Untitled%201.png)\n\n![Untitled](/images/0617/Untitled%202.png)\n\n- Node 뜨면 아무키나 누르고 powershell 진입\n- 설치 완료 후 cmd 에서 node -v 입력\n\n![Untitled](/images/0617/Untitled%203.png)\n\n- npm install -g hexo-cli 입력 후 엔터\n\n![Untitled](/images/0617/Untitled%204.png)\n\n---\n\n# 블로그 만들기\n\n- 바탕화면에서 git bash 후 hexo init blog 입력\n\n![Untitled](/images/0617/Untitled%205.png)\n\n- cd blog —> ls 차례대로 입력\n\n![Untitled](/images/0617/Untitled%206.png)\n\n- github 에서 0616에서 배웠던 업로드 한다. (git add . 로 모든 파일 업로드)\n- 바탕화면에 blog 폴더 우클릭 후 PyCharm 으로 열기\n\n![Untitled](/images/0617/Untitled%207.png)\n\n- 터미널 열고\n\n![Untitled](/images/0617/Untitled%208.png)\n\n- npm install\n- npm install hexo-server --save\n- npm install hexo-deployer-git --save 차례대로 입력\n- hexo server 입력\n\n![Untitled](/images/0617/Untitled%209.png)\n\n- 하이퍼링크 클릭하면 블로그 완성\n\n---\n\n# 블로그 배포하기\n\n- github 들어가서 “본인닉네임.github.io” 로 만들기\n- hexo 들어가서\n\n![Untitled](/images/0617/Untitled%2010.png)\n\n저렇게 쓰기(NeewLife 자리에 본인 닉네임)\n\n- 맨 밑에 내려와서\n\n![Untitled](/images/0617/Untitled%2011.png)\n\n**https://github.com/본인닉네임/본인닉네임.github.io.git** 임\n\n- 다시 깃배쉬 밑에 “hexo generate, hexo deploy” 입력\n\n![Untitled](/images/0617/Untitled%2012.png)\n\n![Untitled](/images/0617/Untitled%2013.png)\n\n- 주소창에 “본인닉네임.github.io” 검색하면 Hexo 블로그 배포완료된걸 확인\n\n![Untitled](/images/0617/Untitled%2014.png)\n\n- 다 됐으면 git add . 로 업로드\n\n- 주의사항\n\n중간에 ***# Site*** 부분만 수정가능\n\n![Untitled](/images/0617/Untitled%2015.png)\n\n---\n\n- rtools42 다운받기\n\n![Untitled](/images/0617/Untitled%2016.png)\n\n- R Studio 들어가서 설정\n\n![Untitled](/images/0617/Untitled%2017.png)\n\n- Soft-wrap R source files 체크\n\n![Untitled](/images/0617/Untitled%2018.png)\n\n- Default text encoding UTF-8 로 변경\n- Apperarance에서 Pastel On Dark로 설정\n\n![Untitled](/images/0617/Untitled%2019.png)\n\n- github에서 R_lecture 새로 만들기(README 체크 하기)\n- 바탕화면에서 git bash로 R_lecture 불러오기(주소 복사 후 git clone)\n- R Studio에서\n\n![Untitled](/images/0617/Untitled%2020.png)\n\n![Untitled](/images/0617/Untitled%2021.png)\n\n- 만들고 data, docs, source 폴더 만들기\n\n![Untitled](/images/0617/Untitled%2022.png)\n\n- source 폴더로 들어가서 경로로 설정해주기\n\n![Untitled](/images/0617/Untitled%2023.png)\n\n- 새 스크립트 만들기\n\n![Untitled](/images/0617/Untitled%2024.png)\n\n- day01로 저장해보면 source 폴더안에 저장이 된다\n\n![Untitled](/images/0617/Untitled%2025.png)\n\n---\n\n- day01 폴더를 day0617로 변경한 뒤\n\n![Untitled](/images/0617/Untitled%2026.png)\n\n입력 후 ctrl + enter 누른다.\n\n![Untitled](/images/0617/Untitled%2027.png)\n\n- 이 창이 뜬다면 성공\n- library(ggplot2) 입력 후 ctrl + enter 누르기\n\n![Untitled](/images/0617/Untitled%2028.png)\n\n—> ggplot2 패키지 내의 함수들을 사용하겠다는 명령어이다.\n\n# 함수 공부방법\n\n- [https://cran.r-project.org/](https://cran.r-project.org/)에서 ggplot2 package 설명서 찾아가서\n\ngeom_point 함수 example에서 싹다 드래그\n\n![Untitled](/images/0617/Untitled%2029.png)\n\n- R Studio 에 붙여넣기\n\n![Untitled](/images/0617/Untitled%2030.png)\n\n- ctrl + enter 로 하나씩 실행해보면서 익혀보기\n- aes가 뭔데? 싶으면\n\n![Untitled](/images/0617/Untitled%2031.png)\n\n- 저기서 aes 클릭해서\n\n![Untitled](/images/0617/Untitled%2032.png)\n\n- 또 공부\n- 영어 모르겠으면 파파고에 복붙\n- 하다 모르겠다?\n\n![Untitled](/images/0617/Untitled%2033.png)\n\n- Cheat Sheets 활용\n- [http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html](http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html)\n\n      ===>조금 더 나은 표\n\n---\n\n![Untitled](/images/0617/Untitled%2034.png)\n\n- 함수의 분포도\n\n![Untitled](/images/0617/Untitled%2035.png)\n\n- 함수의 그래프 형태(다음과 같이 나온다)\n\n![Untitled](/images/0617/Untitled%2036.png)\n\n---\n\n- R Markdown 클릭\n\n![Untitled](/images/0617/Untitled%2037.png)\n\n- Document로 만들기\n\n![Untitled](/images/0617/Untitled%2038.png)\n\n- 초록색 C 아이콘 클릭 후 R 클릭\n\n![Untitled](/images/0617/Untitled%2039.png)\n\n- ##R Markdown 밑으로 지우고\n\n```r\n## ggplot2 시각화\n- 다음과 같이 시각화를 작성한다.\n\n'''{r}\n\nlibrary(ggplot2)\n\nggplot(data = iris, aes(x = Sepal.Length,\ny = Sepal.Width)) +\ngeom_point()\n\n'''\n```\n\n- 입력한 후 맨 위에 **output** 부분을 다음과 같이 변경한다.(shift + enter 로 줄바꿈)\n    \n    ![Untitled](/images/0617/Untitled%2040.png)\n    \n- 그 후에 저장\n- 바탕화면의 R_lecture\\source 안에 “day0617” Markdown 원본파일을\n- blog\\source 에 복붙한다.\n\n![Untitled](/images/0617/Untitled%2041.png)\n\n- blog 폴더를 PyCharm 으로 열어서 hexo server 하면 업로드 끝\n\n![Untitled](/images/0617/Untitled%2042.png)","slug":"0617 f76ecd14aebf4b66a1bf966d7061b068","published":1,"updated":"2022-09-07T10:19:55.596Z","_id":"cl7a2g8lm0000t8uo7k4l4tq5","comments":1,"layout":"post","photos":[],"link":"","content":"<figure class=\"highlight plaintext\"><figcaption><span>setup, include</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">knitr::opts_chunk$set(echo = TRUE)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"0617\"><a href=\"#0617\" class=\"headerlink\" title=\"0617\"></a>0617</h1><h1 id=\"0617-1\"><a href=\"#0617-1\" class=\"headerlink\" title=\"0617\"></a>0617</h1><p>블로그 만들기</p>\n<ul>\n<li>티스토리 블로그 &#x2F; 네이버 블로그 &#x2F; medium ← 개발</li>\n<li>깃허브 블로그</li>\n</ul>\n<p>알아야 할 것 → hugo, hexo, jekyll, html, css, git &amp; github, 터미널 명령어, 마크다운</p>\n<p>IT&#x2F;기획자 (제안서) →→ <strong>티스토리 블로그</strong></p>\n<p>개발자(코딩) →→ <strong>깃허브 블로그</strong></p>\n<h1 id=\"Hexo-설치\"><a href=\"#Hexo-설치\" class=\"headerlink\" title=\"Hexo 설치\"></a>Hexo 설치</h1><p>nodejs 홈페이지에서</p>\n<p><img src=\"/images/0617/Untitled.png\" alt=\"Untitled\"></p>\n<p>왼쪽꺼 다운로드</p>\n<p>설치시 Add to PATH 선택 후 다운</p>\n<p><img src=\"/images/0617/Untitled%201.png\" alt=\"Untitled\"></p>\n<p><img src=\"/images/0617/Untitled%202.png\" alt=\"Untitled\"></p>\n<ul>\n<li>Node 뜨면 아무키나 누르고 powershell 진입</li>\n<li>설치 완료 후 cmd 에서 node -v 입력</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%203.png\" alt=\"Untitled\"></p>\n<ul>\n<li>npm install -g hexo-cli 입력 후 엔터</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%204.png\" alt=\"Untitled\"></p>\n<hr>\n<h1 id=\"블로그-만들기\"><a href=\"#블로그-만들기\" class=\"headerlink\" title=\"블로그 만들기\"></a>블로그 만들기</h1><ul>\n<li>바탕화면에서 git bash 후 hexo init blog 입력</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%205.png\" alt=\"Untitled\"></p>\n<ul>\n<li>cd blog —&gt; ls 차례대로 입력</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%206.png\" alt=\"Untitled\"></p>\n<ul>\n<li>github 에서 0616에서 배웠던 업로드 한다. (git add . 로 모든 파일 업로드)</li>\n<li>바탕화면에 blog 폴더 우클릭 후 PyCharm 으로 열기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%207.png\" alt=\"Untitled\"></p>\n<ul>\n<li>터미널 열고</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%208.png\" alt=\"Untitled\"></p>\n<ul>\n<li>npm install</li>\n<li>npm install hexo-server –save</li>\n<li>npm install hexo-deployer-git –save 차례대로 입력</li>\n<li>hexo server 입력</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%209.png\" alt=\"Untitled\"></p>\n<ul>\n<li>하이퍼링크 클릭하면 블로그 완성</li>\n</ul>\n<hr>\n<h1 id=\"블로그-배포하기\"><a href=\"#블로그-배포하기\" class=\"headerlink\" title=\"블로그 배포하기\"></a>블로그 배포하기</h1><ul>\n<li>github 들어가서 “본인닉네임.github.io” 로 만들기</li>\n<li>hexo 들어가서</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2010.png\" alt=\"Untitled\"></p>\n<p>저렇게 쓰기(NeewLife 자리에 본인 닉네임)</p>\n<ul>\n<li>맨 밑에 내려와서</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2011.png\" alt=\"Untitled\"></p>\n<p><strong><a href=\"https://github.com/%EB%B3%B8%EC%9D%B8%EB%8B%89%EB%84%A4%EC%9E%84/%EB%B3%B8%EC%9D%B8%EB%8B%89%EB%84%A4%EC%9E%84.github.io.git\">https://github.com/본인닉네임/본인닉네임.github.io.git</a></strong> 임</p>\n<ul>\n<li>다시 깃배쉬 밑에 “hexo generate, hexo deploy” 입력</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2012.png\" alt=\"Untitled\"></p>\n<p><img src=\"/images/0617/Untitled%2013.png\" alt=\"Untitled\"></p>\n<ul>\n<li>주소창에 “본인닉네임.github.io” 검색하면 Hexo 블로그 배포완료된걸 확인</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2014.png\" alt=\"Untitled\"></p>\n<ul>\n<li><p>다 됐으면 git add . 로 업로드</p>\n</li>\n<li><p>주의사항</p>\n</li>\n</ul>\n<p>중간에 <em><strong># Site</strong></em> 부분만 수정가능</p>\n<p><img src=\"/images/0617/Untitled%2015.png\" alt=\"Untitled\"></p>\n<hr>\n<ul>\n<li>rtools42 다운받기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2016.png\" alt=\"Untitled\"></p>\n<ul>\n<li>R Studio 들어가서 설정</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2017.png\" alt=\"Untitled\"></p>\n<ul>\n<li>Soft-wrap R source files 체크</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2018.png\" alt=\"Untitled\"></p>\n<ul>\n<li>Default text encoding UTF-8 로 변경</li>\n<li>Apperarance에서 Pastel On Dark로 설정</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2019.png\" alt=\"Untitled\"></p>\n<ul>\n<li>github에서 R_lecture 새로 만들기(README 체크 하기)</li>\n<li>바탕화면에서 git bash로 R_lecture 불러오기(주소 복사 후 git clone)</li>\n<li>R Studio에서</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2020.png\" alt=\"Untitled\"></p>\n<p><img src=\"/images/0617/Untitled%2021.png\" alt=\"Untitled\"></p>\n<ul>\n<li>만들고 data, docs, source 폴더 만들기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2022.png\" alt=\"Untitled\"></p>\n<ul>\n<li>source 폴더로 들어가서 경로로 설정해주기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2023.png\" alt=\"Untitled\"></p>\n<ul>\n<li>새 스크립트 만들기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2024.png\" alt=\"Untitled\"></p>\n<ul>\n<li>day01로 저장해보면 source 폴더안에 저장이 된다</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2025.png\" alt=\"Untitled\"></p>\n<hr>\n<ul>\n<li>day01 폴더를 day0617로 변경한 뒤</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2026.png\" alt=\"Untitled\"></p>\n<p>입력 후 ctrl + enter 누른다.</p>\n<p><img src=\"/images/0617/Untitled%2027.png\" alt=\"Untitled\"></p>\n<ul>\n<li>이 창이 뜬다면 성공</li>\n<li>library(ggplot2) 입력 후 ctrl + enter 누르기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2028.png\" alt=\"Untitled\"></p>\n<p>—&gt; ggplot2 패키지 내의 함수들을 사용하겠다는 명령어이다.</p>\n<h1 id=\"함수-공부방법\"><a href=\"#함수-공부방법\" class=\"headerlink\" title=\"함수 공부방법\"></a>함수 공부방법</h1><ul>\n<li><a href=\"https://cran.r-project.org/\">https://cran.r-project.org/</a>에서 ggplot2 package 설명서 찾아가서</li>\n</ul>\n<p>geom_point 함수 example에서 싹다 드래그</p>\n<p><img src=\"/images/0617/Untitled%2029.png\" alt=\"Untitled\"></p>\n<ul>\n<li>R Studio 에 붙여넣기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2030.png\" alt=\"Untitled\"></p>\n<ul>\n<li>ctrl + enter 로 하나씩 실행해보면서 익혀보기</li>\n<li>aes가 뭔데? 싶으면</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2031.png\" alt=\"Untitled\"></p>\n<ul>\n<li>저기서 aes 클릭해서</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2032.png\" alt=\"Untitled\"></p>\n<ul>\n<li>또 공부</li>\n<li>영어 모르겠으면 파파고에 복붙</li>\n<li>하다 모르겠다?</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2033.png\" alt=\"Untitled\"></p>\n<ul>\n<li><p>Cheat Sheets 활용</p>\n</li>\n<li><p><a href=\"http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html\">http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html</a></p>\n<pre><code>===&gt;조금 더 나은 표\n</code></pre>\n</li>\n</ul>\n<hr>\n<p><img src=\"/images/0617/Untitled%2034.png\" alt=\"Untitled\"></p>\n<ul>\n<li>함수의 분포도</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2035.png\" alt=\"Untitled\"></p>\n<ul>\n<li>함수의 그래프 형태(다음과 같이 나온다)</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2036.png\" alt=\"Untitled\"></p>\n<hr>\n<ul>\n<li>R Markdown 클릭</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2037.png\" alt=\"Untitled\"></p>\n<ul>\n<li>Document로 만들기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2038.png\" alt=\"Untitled\"></p>\n<ul>\n<li>초록색 C 아이콘 클릭 후 R 클릭</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2039.png\" alt=\"Untitled\"></p>\n<ul>\n<li>##R Markdown 밑으로 지우고</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## ggplot2 시각화</span></span><br><span class=\"line\"><span class=\"operator\">-</span> 다음과 같이 시각화를 작성한다.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;</span><span class=\"string\">&#x27;&#123;r&#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">library(ggplot2)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">ggplot(data = iris, aes(x = Sepal.Length,</span></span><br><span class=\"line\"><span class=\"string\">y = Sepal.Width)) +</span></span><br><span class=\"line\"><span class=\"string\">geom_point()</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&#x27;</span><span class=\"string\">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>입력한 후 맨 위에 <strong>output</strong> 부분을 다음과 같이 변경한다.(shift + enter 로 줄바꿈)</p>\n<p>  <img src=\"/images/0617/Untitled%2040.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>그 후에 저장</p>\n</li>\n<li><p>바탕화면의 R_lecture\\source 안에 “day0617” Markdown 원본파일을</p>\n</li>\n<li><p>blog\\source 에 복붙한다.</p>\n</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2041.png\" alt=\"Untitled\"></p>\n<ul>\n<li>blog 폴더를 PyCharm 으로 열어서 hexo server 하면 업로드 끝</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2042.png\" alt=\"Untitled\"></p>\n","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"","more":"<figure class=\"highlight plaintext\"><figcaption><span>setup, include</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">knitr::opts_chunk$set(echo = TRUE)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"0617\"><a href=\"#0617\" class=\"headerlink\" title=\"0617\"></a>0617</h1><h1 id=\"0617-1\"><a href=\"#0617-1\" class=\"headerlink\" title=\"0617\"></a>0617</h1><p>블로그 만들기</p>\n<ul>\n<li>티스토리 블로그 &#x2F; 네이버 블로그 &#x2F; medium ← 개발</li>\n<li>깃허브 블로그</li>\n</ul>\n<p>알아야 할 것 → hugo, hexo, jekyll, html, css, git &amp; github, 터미널 명령어, 마크다운</p>\n<p>IT&#x2F;기획자 (제안서) →→ <strong>티스토리 블로그</strong></p>\n<p>개발자(코딩) →→ <strong>깃허브 블로그</strong></p>\n<h1 id=\"Hexo-설치\"><a href=\"#Hexo-설치\" class=\"headerlink\" title=\"Hexo 설치\"></a>Hexo 설치</h1><p>nodejs 홈페이지에서</p>\n<p><img src=\"/images/0617/Untitled.png\" alt=\"Untitled\"></p>\n<p>왼쪽꺼 다운로드</p>\n<p>설치시 Add to PATH 선택 후 다운</p>\n<p><img src=\"/images/0617/Untitled%201.png\" alt=\"Untitled\"></p>\n<p><img src=\"/images/0617/Untitled%202.png\" alt=\"Untitled\"></p>\n<ul>\n<li>Node 뜨면 아무키나 누르고 powershell 진입</li>\n<li>설치 완료 후 cmd 에서 node -v 입력</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%203.png\" alt=\"Untitled\"></p>\n<ul>\n<li>npm install -g hexo-cli 입력 후 엔터</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%204.png\" alt=\"Untitled\"></p>\n<hr>\n<h1 id=\"블로그-만들기\"><a href=\"#블로그-만들기\" class=\"headerlink\" title=\"블로그 만들기\"></a>블로그 만들기</h1><ul>\n<li>바탕화면에서 git bash 후 hexo init blog 입력</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%205.png\" alt=\"Untitled\"></p>\n<ul>\n<li>cd blog —&gt; ls 차례대로 입력</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%206.png\" alt=\"Untitled\"></p>\n<ul>\n<li>github 에서 0616에서 배웠던 업로드 한다. (git add . 로 모든 파일 업로드)</li>\n<li>바탕화면에 blog 폴더 우클릭 후 PyCharm 으로 열기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%207.png\" alt=\"Untitled\"></p>\n<ul>\n<li>터미널 열고</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%208.png\" alt=\"Untitled\"></p>\n<ul>\n<li>npm install</li>\n<li>npm install hexo-server –save</li>\n<li>npm install hexo-deployer-git –save 차례대로 입력</li>\n<li>hexo server 입력</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%209.png\" alt=\"Untitled\"></p>\n<ul>\n<li>하이퍼링크 클릭하면 블로그 완성</li>\n</ul>\n<hr>\n<h1 id=\"블로그-배포하기\"><a href=\"#블로그-배포하기\" class=\"headerlink\" title=\"블로그 배포하기\"></a>블로그 배포하기</h1><ul>\n<li>github 들어가서 “본인닉네임.github.io” 로 만들기</li>\n<li>hexo 들어가서</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2010.png\" alt=\"Untitled\"></p>\n<p>저렇게 쓰기(NeewLife 자리에 본인 닉네임)</p>\n<ul>\n<li>맨 밑에 내려와서</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2011.png\" alt=\"Untitled\"></p>\n<p><strong><a href=\"https://github.com/%EB%B3%B8%EC%9D%B8%EB%8B%89%EB%84%A4%EC%9E%84/%EB%B3%B8%EC%9D%B8%EB%8B%89%EB%84%A4%EC%9E%84.github.io.git\">https://github.com/본인닉네임/본인닉네임.github.io.git</a></strong> 임</p>\n<ul>\n<li>다시 깃배쉬 밑에 “hexo generate, hexo deploy” 입력</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2012.png\" alt=\"Untitled\"></p>\n<p><img src=\"/images/0617/Untitled%2013.png\" alt=\"Untitled\"></p>\n<ul>\n<li>주소창에 “본인닉네임.github.io” 검색하면 Hexo 블로그 배포완료된걸 확인</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2014.png\" alt=\"Untitled\"></p>\n<ul>\n<li><p>다 됐으면 git add . 로 업로드</p>\n</li>\n<li><p>주의사항</p>\n</li>\n</ul>\n<p>중간에 <em><strong># Site</strong></em> 부분만 수정가능</p>\n<p><img src=\"/images/0617/Untitled%2015.png\" alt=\"Untitled\"></p>\n<hr>\n<ul>\n<li>rtools42 다운받기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2016.png\" alt=\"Untitled\"></p>\n<ul>\n<li>R Studio 들어가서 설정</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2017.png\" alt=\"Untitled\"></p>\n<ul>\n<li>Soft-wrap R source files 체크</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2018.png\" alt=\"Untitled\"></p>\n<ul>\n<li>Default text encoding UTF-8 로 변경</li>\n<li>Apperarance에서 Pastel On Dark로 설정</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2019.png\" alt=\"Untitled\"></p>\n<ul>\n<li>github에서 R_lecture 새로 만들기(README 체크 하기)</li>\n<li>바탕화면에서 git bash로 R_lecture 불러오기(주소 복사 후 git clone)</li>\n<li>R Studio에서</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2020.png\" alt=\"Untitled\"></p>\n<p><img src=\"/images/0617/Untitled%2021.png\" alt=\"Untitled\"></p>\n<ul>\n<li>만들고 data, docs, source 폴더 만들기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2022.png\" alt=\"Untitled\"></p>\n<ul>\n<li>source 폴더로 들어가서 경로로 설정해주기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2023.png\" alt=\"Untitled\"></p>\n<ul>\n<li>새 스크립트 만들기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2024.png\" alt=\"Untitled\"></p>\n<ul>\n<li>day01로 저장해보면 source 폴더안에 저장이 된다</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2025.png\" alt=\"Untitled\"></p>\n<hr>\n<ul>\n<li>day01 폴더를 day0617로 변경한 뒤</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2026.png\" alt=\"Untitled\"></p>\n<p>입력 후 ctrl + enter 누른다.</p>\n<p><img src=\"/images/0617/Untitled%2027.png\" alt=\"Untitled\"></p>\n<ul>\n<li>이 창이 뜬다면 성공</li>\n<li>library(ggplot2) 입력 후 ctrl + enter 누르기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2028.png\" alt=\"Untitled\"></p>\n<p>—&gt; ggplot2 패키지 내의 함수들을 사용하겠다는 명령어이다.</p>\n<h1 id=\"함수-공부방법\"><a href=\"#함수-공부방법\" class=\"headerlink\" title=\"함수 공부방법\"></a>함수 공부방법</h1><ul>\n<li><a href=\"https://cran.r-project.org/\">https://cran.r-project.org/</a>에서 ggplot2 package 설명서 찾아가서</li>\n</ul>\n<p>geom_point 함수 example에서 싹다 드래그</p>\n<p><img src=\"/images/0617/Untitled%2029.png\" alt=\"Untitled\"></p>\n<ul>\n<li>R Studio 에 붙여넣기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2030.png\" alt=\"Untitled\"></p>\n<ul>\n<li>ctrl + enter 로 하나씩 실행해보면서 익혀보기</li>\n<li>aes가 뭔데? 싶으면</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2031.png\" alt=\"Untitled\"></p>\n<ul>\n<li>저기서 aes 클릭해서</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2032.png\" alt=\"Untitled\"></p>\n<ul>\n<li>또 공부</li>\n<li>영어 모르겠으면 파파고에 복붙</li>\n<li>하다 모르겠다?</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2033.png\" alt=\"Untitled\"></p>\n<ul>\n<li><p>Cheat Sheets 활용</p>\n</li>\n<li><p><a href=\"http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html\">http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html</a></p>\n<pre><code>===&gt;조금 더 나은 표\n</code></pre>\n</li>\n</ul>\n<hr>\n<p><img src=\"/images/0617/Untitled%2034.png\" alt=\"Untitled\"></p>\n<ul>\n<li>함수의 분포도</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2035.png\" alt=\"Untitled\"></p>\n<ul>\n<li>함수의 그래프 형태(다음과 같이 나온다)</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2036.png\" alt=\"Untitled\"></p>\n<hr>\n<ul>\n<li>R Markdown 클릭</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2037.png\" alt=\"Untitled\"></p>\n<ul>\n<li>Document로 만들기</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2038.png\" alt=\"Untitled\"></p>\n<ul>\n<li>초록색 C 아이콘 클릭 후 R 클릭</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2039.png\" alt=\"Untitled\"></p>\n<ul>\n<li>##R Markdown 밑으로 지우고</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## ggplot2 시각화</span></span><br><span class=\"line\"><span class=\"operator\">-</span> 다음과 같이 시각화를 작성한다.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;</span><span class=\"string\">&#x27;&#123;r&#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">library(ggplot2)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">ggplot(data = iris, aes(x = Sepal.Length,</span></span><br><span class=\"line\"><span class=\"string\">y = Sepal.Width)) +</span></span><br><span class=\"line\"><span class=\"string\">geom_point()</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&#x27;</span><span class=\"string\">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>입력한 후 맨 위에 <strong>output</strong> 부분을 다음과 같이 변경한다.(shift + enter 로 줄바꿈)</p>\n<p>  <img src=\"/images/0617/Untitled%2040.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>그 후에 저장</p>\n</li>\n<li><p>바탕화면의 R_lecture\\source 안에 “day0617” Markdown 원본파일을</p>\n</li>\n<li><p>blog\\source 에 복붙한다.</p>\n</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2041.png\" alt=\"Untitled\"></p>\n<ul>\n<li>blog 폴더를 PyCharm 으로 열어서 hexo server 하면 업로드 끝</li>\n</ul>\n<p><img src=\"/images/0617/Untitled%2042.png\" alt=\"Untitled\"></p>\n"},{"title":"day 0628 원본","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"thumbnailImage":"python.png","thumbnailImagePosition":"left","autoThumbnailImage":"yes","metaAlignment":"center","date":"2022-06-28T03:31:30.000Z","_content":"\n복습 후 삭제 하자\n<!-- excerpt -->\n\n\n## 반복문 복습\n- for loop and while loop\n\n\n```python\nfor i in range(3):\n  print(\"Hello World\")\n  print(\"안녕하세요\")\n```\n\n    Hello World\n    안녕하세요\n    Hello World\n    안녕하세요\n    Hello World\n    안녕하세요\n    \n\n\n```python\n# \"K\" in \"Kaggle\"\nif \"K\" == \"a\":\n  print(\"출력이 되나요?\")\nelse: \n  print(\"출력이 안된듯\")\n\n```\n\n    출력이 안된듯\n    \n\n\n```python\na = \"Kaggle\"\n\nfor i in a:\n  print(i)\n  if i == \"a\":\n    break\n```\n\n    K\n    a\n    \n\n- 리스트의 값이 존재\n- 전체 총합 구하기\n\n\n\n```python\nnumbers = [1, 2, 3, 4, 5]\nsum = 0\n\nfor num in numbers:\n  print(\"numbers: \", num)\n  sum = sum + num \n  print(\"total:\", sum)\n\nprint(\"----최종 결괏값----\")\nprint(sum)\n```\n\n    numbers:  1\n    total: 1\n    numbers:  2\n    total: 3\n    numbers:  3\n    total: 6\n    numbers:  4\n    total: 10\n    numbers:  5\n    total: 15\n    ----최종 결괏값----\n    15\n    \n\n\n```python\nfruits = ['apple', 'kiwi', 'mango']\nnewlist = []\n\n# apple : a가 있나요? 있네요, newlist에 추가하세요. \n# kiwi : a가 있나요? 없네요. 그럼 넘어가요\n# mango : a가 있나요? 있네요. newlist에 추가하세요. \nfor fruit in fruits:\n  print(\"조건문 밖 : \", fruit)\n  if \"a\" in fruit:\n    print(\"조건문 안쪽 : \", fruit)\n    newlist.append(fruit)\n\nprint(newlist)\n```\n\n    조건문 밖 :  apple\n    조건문 안쪽 :  apple\n    조건문 밖 :  kiwi\n    조건문 밖 :  mango\n    조건문 안쪽 :  mango\n    ['apple', 'mango']\n    \n\n### While Loop\n\nwhile문 : 분석할 때? 거의 쓸일이 없음\n\n\n\n```python\ni = 1\nwhile i < 10: # 참일때만 반복문 코드가 돔\n  # 코드\n  print(i)\n  i += 1 # 1씩 증감\n  # i -= 1 # 1씩 감소\n```\n\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    \n\n## 사용자 정의 함수\n- 내가 필요에 의해 직접 함수를 작성\n\n\n\n```python\ndef 함수명(param1, param2):\n  # 코드 \n  return None\n```\n\n\n```python\ndef add(a = 0, b = 1):\n  # c = a + b \n  # return c\n  return a + b\n\nprint(add(a = 5, b = 4))\nprint(add())\n```\n\n    9\n    1\n    \n\n- 사칙연산 사용자 정의 함수 만들기\n- 함수 문서화\n  + 키워드 : Docstring\n\n\n```python\ndef subtract(a, b):\n  \"\"\"a, b를 빼는 함수\n\n  Parameters:\n  a (int): int형 숫자 a가 입력\n  \n  b (int): int형 숫자 b가 입력\n\n  Returns:\n    int : 반환값\n  \"\"\"\n  return a-b\n\nprint(subtract(a = 5, b = 10))\nprint(subtract.__doc__)\n```\n\n    -5\n    a, b를 빼는 함수\n    \n      Parameters:\n      a (int): int형 숫자 a가 입력\n      \n      b (int): int형 숫자 b가 입력\n    \n      Returns:\n        int : 반환값\n    \n      \n    \n\n## NumPy\n- 내장 모듈(=라이브러리=패키지) (X)\n- 별도 라이브러리 설치 필요\n\n\n```python\nimport numpy as np\nprint(np.__version__)\n```\n\n    1.21.6\n    \n\n\n```python\ntemp = [1, 2, 3]\ntemp_array = np.array(temp) # 리스트에서 배열로 변환\n\nprint(type(temp))\nprint(type(temp_array))\n```\n\n    <class 'list'>\n    <class 'numpy.ndarray'>\n    \n\n## 사칙연산\n\n\n```python\nmath_score = [90, 80, 100, 60]\neng_score = [80, 90, 100, 50]\n\n# math_score + eng_score\nmath_array = np.array(math_score)\neng_array = np.array(eng_score)\n\ntotal = math_array + eng_array\nprint(total)\nprint(type(total))\n```\n\n    [170 170 200 110]\n    <class 'numpy.ndarray'>\n    \n\n## 집계함수\n\n\n```python\nprint(np.min(total))\nprint(np.max(total))\nprint(np.sum(total))\n```\n\n    110\n    200\n    650\n    \n\n## 차원 확인\n- 배열의 차원 확인 필요\n- \n\n\n```python\n# 1차원 배열 생성\ntemp_arr = np.array([1, 2, 3])\nprint(temp_arr.shape)\nprint(temp_arr.ndim)\nprint(temp_arr)\n```\n\n    (3,)\n    1\n    [1 2 3]\n    \n\n\n```python\n# 2차원 배열 생성\ntemp_arr = np.array([[1, 2, 3], [4, 5, 6]])\nprint(temp_arr.shape)\nprint(temp_arr.ndim)\nprint(temp_arr)\n```\n\n    (2, 3)\n    2\n    [[1 2 3]\n     [4 5 6]]\n    \n\n\n```python\n# 3차원 배열 -> 이미지\ntemp_arr = np.array([[[1, 2, 3], [4, 5, 6]], [[7, 8, 9], [10, 11, 12]]])\nprint(temp_arr.shape)\nprint(temp_arr.ndim)\nprint(temp_arr)\n```\n\n    (2, 2, 3)\n    3\n    [[[ 1  2  3]\n      [ 4  5  6]]\n    \n     [[ 7  8  9]\n      [10 11 12]]]\n    \n\n\n```python\n(255, 255, 3)\n```\n\n## 배열 생성의 다양한 방법들\n- 모두 0으로 채운다. \n\n\n```python\nimport numpy as np \nprint(np.__version__)\n```\n\n    1.21.6\n    \n\n\n```python\ntemp_arr = np.zeros((2, 3))\ntemp_arr\n```\n\n\n\n\n    array([[0., 0., 0.],\n           [0., 0., 0.]])\n\n\n\n- 모두 1로 채운다. \n\n\n```python\ntemp_arr = np.ones((2, 3))\ntemp_arr\n```\n\n\n\n\n    array([[1., 1., 1.],\n           [1., 1., 1.]])\n\n\n\n- 임의의 상수값으로 채운다. \n\n\n```python\ntemp_arr = np.full((3, 3), 100)\ntemp_arr\n```\n\n\n\n\n    array([[100, 100, 100],\n           [100, 100, 100],\n           [100, 100, 100]])\n\n\n\n- 최소, 최대 숫자의 범위를 정해두고, 각 구간별로 값을 생성\n\n\n```python\ntemp_arr = np.linspace(5, 10, 10)\ntemp_arr\n```\n\n\n\n\n    array([ 5.        ,  5.55555556,  6.11111111,  6.66666667,  7.22222222,\n            7.77777778,  8.33333333,  8.88888889,  9.44444444, 10.        ])\n\n\n\n- 반복문 시, 자주 등장하는 배열\n\n\n```python\ntemp_arr = np.arange(1, 11, 1)\ntemp_arr\n```\n\n\n\n\n    array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])\n\n\n\n## 난수 생성\n\n\n```python\nfrom numpy import random\nx = random.rand()\nprint(x)\n```\n\n    0.11621638529248979\n    \n\n\n```python\nimport numpy \nx = numpy.random.rand()\nprint(x)\n```\n\n    0.3315584451465583\n    \n\n- 랜덤 정수값 추출\n\n\n```python\nfrom numpy import random \n# x = random.randint(100, size = (5))\nx = random.randint(100, size = (3, 5))\nprint(x)\nprint(type(x))\n```\n\n    [[88  2 19 78 13]\n     [92 80 62 22 96]\n     [66 71 89 62 76]]\n    <class 'numpy.ndarray'>\n    \n\n- 랜덤 배열, 실숫값 추출\n\n\n```python\nfrom numpy import random \nx = random.rand(2, 5)\nprint(x)\nprint(type(x))\n```\n\n    [[0.06336531 0.34486775 0.66923826 0.31566607 0.84566463]\n     [0.61713876 0.67541796 0.65161201 0.04912466 0.45433901]]\n    <class 'numpy.ndarray'>\n    \n\n## NumPy 사칙 연산\n\n\n```python\nimport numpy as np\narray_01 = np.array([1, 2, 3])\narray_02 = np.array([10, 20, 30])\n```\n\n\n```python\n# 덧셈\nnewArr = np.add(array_01, array_02)\nprint(newArr)\n\n# 뺄셈\nnewArr = np.subtract(array_01, array_02)\nprint(newArr)\n\n# 곱셈\nnewArr = np.multiply(array_01, array_02)\nprint(newArr)\n\n# 나누기\nnewArr = np.divide(array_01, array_02)\nprint(newArr)\n\n# 거듭제곱\narray_01 = np.array([1, 2, 3])\narray_02 = np.array([2, 4, 2])\nnewArr = np.power(array_01, array_02)\nprint(newArr)\n```\n\n    [3 5 5]\n    [-1 -1  1]\n    [2 6 6]\n    [0.5        0.66666667 1.5       ]\n    [ 1 16  9]\n    \n\n## 소숫점 정렬\n- 소숫점을 정렬하는 다양한 방법\n\n\n```python\n# 소숫점 제거 \nimport numpy as np\ntemp_arr = np.trunc([-1.23, 1.23])\nprint(temp_arr)\n\ntemp_arr = np.fix([-1.23, 1.23])\nprint(temp_arr)\n```\n\n    [-1.  1.]\n    [-1.  1.]\n    \n\n\n```python\n# 임의의 소숫점 자리에서 반올림\ntemp_arr = np.around([-1.234546123, 1.238791631], 5)\nprint(temp_arr)\n```\n\n    [-1.23455  1.23879]\n    \n\n\n```python\n# 소숫점 모두 내림\ntemp_arr = np.floor([-1.234546123, 1.238791631])\nprint(temp_arr)\n```\n\n    [-2.  1.]\n    \n\n\n\n\n```python\n# 소숫점 모두 올림\ntemp_arr = np.ceil([-1.234546123, 1.238791631])\nprint(temp_arr)\n```\n\n    [-1.  2.]\n    \n\n## 조건식\n- pandas 가공\n- numpy\n- 조건식\n  + 하나의 조건식 (= np.where)\n  + 다중 조건식\n\n\n\n```python\ntemp_arr = np.arange(10)\ntemp_arr\n```\n\n\n\n\n    array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n\n\n\n\n```python\n# 5보다 작으면 원 값 유지\n# 5보다 크면 곱하기 10을 해줌\n```\n\n\n```python\n# np.where(조건식, 참일 때, 거짓일 때)\nnp.where(temp_arr < 5, temp_arr, temp_arr * 10)\n```\n\n\n\n\n    array([ 0,  1,  2,  3,  4, 50, 60, 70, 80, 90])\n\n\n\n\n\n\n```python\ntemp_arr = np.arange(10)\n# temp_arr\ncond_list   = [temp_arr > 5 , temp_arr < 2]\nchoice_list = [temp_arr  * 2, temp_arr + 100]\n\n# np.select(조건식 리스트, 결괏값 리스트, default = )\nnp.select(cond_list, choice_list, default = temp_arr)\n```\n\n\n\n\n    array([100, 101,   2,   3,   4,   5,  12,  14,  16,  18])\n\n\n\n## Reshape\n- 배열의 차원 또는 크기를 바꾼다. \n- 곱셈만 할줄 알면 끝. \n\n\n```python\nimport numpy as np \ntemp_array = np.ones((3, 4))\nprint(temp_array.shape)\nprint(temp_array)\n```\n\n    (3, 4)\n    [[1. 1. 1. 1.]\n     [1. 1. 1. 1.]\n     [1. 1. 1. 1.]]\n    \n\n\n```python\nafter_reshape = temp_array.reshape(2, 2, 5)\nprint(after_reshape.shape)\nprint(after_reshape)\n```\n\n\n    ---------------------------------------------------------------------------\n\n    ValueError                                Traceback (most recent call last)\n\n    <ipython-input-50-d57dd065a075> in <module>()\n    ----> 1 after_reshape = temp_array.reshape(2, 2, 5)\n          2 print(after_reshape.shape)\n          3 print(after_reshape)\n    \n\n    ValueError: cannot reshape array of size 12 into shape (2,2,5)\n\n\n\n```python\nafter_reshape = temp_array.reshape(7, -1)\nprint(after_reshape.shape)\nprint(after_reshape)\n```\n\n\n    ---------------------------------------------------------------------------\n\n    ValueError                                Traceback (most recent call last)\n\n    <ipython-input-53-00ad0ee6a004> in <module>()\n    ----> 1 after_reshape = temp_array.reshape(7, -1)\n          2 print(after_reshape.shape)\n          3 print(after_reshape)\n    \n\n    ValueError: cannot reshape array of size 12 into shape (7,newaxis)\n\n\n# 브로드 캐스팅 \n\n# pandas 튜토리얼\n\n\n```python\nimport pandas as pd \nprint(pd.__version__)\n```\n\n    1.3.5\n    \n\n\n```python\ntemp_dict = {\n    'col1' : [1, 2], \n    'col2' : [3, 4]\n}\n\ndf = pd.DataFrame(temp_dict)\nprint(df)\nprint(type(df))\n```\n\n       col1  col2\n    0     1     3\n    1     2     4\n    <class 'pandas.core.frame.DataFrame'>\n    \n\n## 구글 드라이브 연동\n\n\n\n```python\nfrom google.colab import drive \ndrive.mount('/content/drive')\n```\n\n    Mounted at /content/drive\n    \n\n\n```python\nDATA_PATH = '/content/drive/MyDrive/Colab Notebooks/human_AI/Basic/Chapter 3. pandas/data/'\nprint(DATA_PATH + 'Lemonade2016.csv')\n\nlemonade = pd.read_csv(DATA_PATH + 'Lemonade2016.csv')\n# covid_df = pd.read_csv(DATA_PATH + 'owid-covid-data.csv')\n\nlemonade.info() # str()\n```\n\n    /content/drive/MyDrive/Colab Notebooks/human_AI/Basic/Chapter 3. pandas/data/Lemonade2016.csv\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 32 entries, 0 to 31\n    Data columns (total 7 columns):\n     #   Column       Non-Null Count  Dtype  \n    ---  ------       --------------  -----  \n     0   Date         31 non-null     object \n     1   Location     32 non-null     object \n     2   Lemon        32 non-null     int64  \n     3   Orange       32 non-null     int64  \n     4   Temperature  32 non-null     int64  \n     5   Leaflets     31 non-null     float64\n     6   Price        32 non-null     float64\n    dtypes: float64(2), int64(3), object(2)\n    memory usage: 1.9+ KB\n    \n\n\n\n\n","source":"_posts/day0628_1.md","raw":"---\ntitle: \"day 0628 원본\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: 복습할 것들\nclearReading: true\nthumbnailImage: python.png\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nmetaAlignment: center\ndate: '2022-06-28 12:31:30'\n---\n\n복습 후 삭제 하자\n<!-- excerpt -->\n\n\n## 반복문 복습\n- for loop and while loop\n\n\n```python\nfor i in range(3):\n  print(\"Hello World\")\n  print(\"안녕하세요\")\n```\n\n    Hello World\n    안녕하세요\n    Hello World\n    안녕하세요\n    Hello World\n    안녕하세요\n    \n\n\n```python\n# \"K\" in \"Kaggle\"\nif \"K\" == \"a\":\n  print(\"출력이 되나요?\")\nelse: \n  print(\"출력이 안된듯\")\n\n```\n\n    출력이 안된듯\n    \n\n\n```python\na = \"Kaggle\"\n\nfor i in a:\n  print(i)\n  if i == \"a\":\n    break\n```\n\n    K\n    a\n    \n\n- 리스트의 값이 존재\n- 전체 총합 구하기\n\n\n\n```python\nnumbers = [1, 2, 3, 4, 5]\nsum = 0\n\nfor num in numbers:\n  print(\"numbers: \", num)\n  sum = sum + num \n  print(\"total:\", sum)\n\nprint(\"----최종 결괏값----\")\nprint(sum)\n```\n\n    numbers:  1\n    total: 1\n    numbers:  2\n    total: 3\n    numbers:  3\n    total: 6\n    numbers:  4\n    total: 10\n    numbers:  5\n    total: 15\n    ----최종 결괏값----\n    15\n    \n\n\n```python\nfruits = ['apple', 'kiwi', 'mango']\nnewlist = []\n\n# apple : a가 있나요? 있네요, newlist에 추가하세요. \n# kiwi : a가 있나요? 없네요. 그럼 넘어가요\n# mango : a가 있나요? 있네요. newlist에 추가하세요. \nfor fruit in fruits:\n  print(\"조건문 밖 : \", fruit)\n  if \"a\" in fruit:\n    print(\"조건문 안쪽 : \", fruit)\n    newlist.append(fruit)\n\nprint(newlist)\n```\n\n    조건문 밖 :  apple\n    조건문 안쪽 :  apple\n    조건문 밖 :  kiwi\n    조건문 밖 :  mango\n    조건문 안쪽 :  mango\n    ['apple', 'mango']\n    \n\n### While Loop\n\nwhile문 : 분석할 때? 거의 쓸일이 없음\n\n\n\n```python\ni = 1\nwhile i < 10: # 참일때만 반복문 코드가 돔\n  # 코드\n  print(i)\n  i += 1 # 1씩 증감\n  # i -= 1 # 1씩 감소\n```\n\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    \n\n## 사용자 정의 함수\n- 내가 필요에 의해 직접 함수를 작성\n\n\n\n```python\ndef 함수명(param1, param2):\n  # 코드 \n  return None\n```\n\n\n```python\ndef add(a = 0, b = 1):\n  # c = a + b \n  # return c\n  return a + b\n\nprint(add(a = 5, b = 4))\nprint(add())\n```\n\n    9\n    1\n    \n\n- 사칙연산 사용자 정의 함수 만들기\n- 함수 문서화\n  + 키워드 : Docstring\n\n\n```python\ndef subtract(a, b):\n  \"\"\"a, b를 빼는 함수\n\n  Parameters:\n  a (int): int형 숫자 a가 입력\n  \n  b (int): int형 숫자 b가 입력\n\n  Returns:\n    int : 반환값\n  \"\"\"\n  return a-b\n\nprint(subtract(a = 5, b = 10))\nprint(subtract.__doc__)\n```\n\n    -5\n    a, b를 빼는 함수\n    \n      Parameters:\n      a (int): int형 숫자 a가 입력\n      \n      b (int): int형 숫자 b가 입력\n    \n      Returns:\n        int : 반환값\n    \n      \n    \n\n## NumPy\n- 내장 모듈(=라이브러리=패키지) (X)\n- 별도 라이브러리 설치 필요\n\n\n```python\nimport numpy as np\nprint(np.__version__)\n```\n\n    1.21.6\n    \n\n\n```python\ntemp = [1, 2, 3]\ntemp_array = np.array(temp) # 리스트에서 배열로 변환\n\nprint(type(temp))\nprint(type(temp_array))\n```\n\n    <class 'list'>\n    <class 'numpy.ndarray'>\n    \n\n## 사칙연산\n\n\n```python\nmath_score = [90, 80, 100, 60]\neng_score = [80, 90, 100, 50]\n\n# math_score + eng_score\nmath_array = np.array(math_score)\neng_array = np.array(eng_score)\n\ntotal = math_array + eng_array\nprint(total)\nprint(type(total))\n```\n\n    [170 170 200 110]\n    <class 'numpy.ndarray'>\n    \n\n## 집계함수\n\n\n```python\nprint(np.min(total))\nprint(np.max(total))\nprint(np.sum(total))\n```\n\n    110\n    200\n    650\n    \n\n## 차원 확인\n- 배열의 차원 확인 필요\n- \n\n\n```python\n# 1차원 배열 생성\ntemp_arr = np.array([1, 2, 3])\nprint(temp_arr.shape)\nprint(temp_arr.ndim)\nprint(temp_arr)\n```\n\n    (3,)\n    1\n    [1 2 3]\n    \n\n\n```python\n# 2차원 배열 생성\ntemp_arr = np.array([[1, 2, 3], [4, 5, 6]])\nprint(temp_arr.shape)\nprint(temp_arr.ndim)\nprint(temp_arr)\n```\n\n    (2, 3)\n    2\n    [[1 2 3]\n     [4 5 6]]\n    \n\n\n```python\n# 3차원 배열 -> 이미지\ntemp_arr = np.array([[[1, 2, 3], [4, 5, 6]], [[7, 8, 9], [10, 11, 12]]])\nprint(temp_arr.shape)\nprint(temp_arr.ndim)\nprint(temp_arr)\n```\n\n    (2, 2, 3)\n    3\n    [[[ 1  2  3]\n      [ 4  5  6]]\n    \n     [[ 7  8  9]\n      [10 11 12]]]\n    \n\n\n```python\n(255, 255, 3)\n```\n\n## 배열 생성의 다양한 방법들\n- 모두 0으로 채운다. \n\n\n```python\nimport numpy as np \nprint(np.__version__)\n```\n\n    1.21.6\n    \n\n\n```python\ntemp_arr = np.zeros((2, 3))\ntemp_arr\n```\n\n\n\n\n    array([[0., 0., 0.],\n           [0., 0., 0.]])\n\n\n\n- 모두 1로 채운다. \n\n\n```python\ntemp_arr = np.ones((2, 3))\ntemp_arr\n```\n\n\n\n\n    array([[1., 1., 1.],\n           [1., 1., 1.]])\n\n\n\n- 임의의 상수값으로 채운다. \n\n\n```python\ntemp_arr = np.full((3, 3), 100)\ntemp_arr\n```\n\n\n\n\n    array([[100, 100, 100],\n           [100, 100, 100],\n           [100, 100, 100]])\n\n\n\n- 최소, 최대 숫자의 범위를 정해두고, 각 구간별로 값을 생성\n\n\n```python\ntemp_arr = np.linspace(5, 10, 10)\ntemp_arr\n```\n\n\n\n\n    array([ 5.        ,  5.55555556,  6.11111111,  6.66666667,  7.22222222,\n            7.77777778,  8.33333333,  8.88888889,  9.44444444, 10.        ])\n\n\n\n- 반복문 시, 자주 등장하는 배열\n\n\n```python\ntemp_arr = np.arange(1, 11, 1)\ntemp_arr\n```\n\n\n\n\n    array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])\n\n\n\n## 난수 생성\n\n\n```python\nfrom numpy import random\nx = random.rand()\nprint(x)\n```\n\n    0.11621638529248979\n    \n\n\n```python\nimport numpy \nx = numpy.random.rand()\nprint(x)\n```\n\n    0.3315584451465583\n    \n\n- 랜덤 정수값 추출\n\n\n```python\nfrom numpy import random \n# x = random.randint(100, size = (5))\nx = random.randint(100, size = (3, 5))\nprint(x)\nprint(type(x))\n```\n\n    [[88  2 19 78 13]\n     [92 80 62 22 96]\n     [66 71 89 62 76]]\n    <class 'numpy.ndarray'>\n    \n\n- 랜덤 배열, 실숫값 추출\n\n\n```python\nfrom numpy import random \nx = random.rand(2, 5)\nprint(x)\nprint(type(x))\n```\n\n    [[0.06336531 0.34486775 0.66923826 0.31566607 0.84566463]\n     [0.61713876 0.67541796 0.65161201 0.04912466 0.45433901]]\n    <class 'numpy.ndarray'>\n    \n\n## NumPy 사칙 연산\n\n\n```python\nimport numpy as np\narray_01 = np.array([1, 2, 3])\narray_02 = np.array([10, 20, 30])\n```\n\n\n```python\n# 덧셈\nnewArr = np.add(array_01, array_02)\nprint(newArr)\n\n# 뺄셈\nnewArr = np.subtract(array_01, array_02)\nprint(newArr)\n\n# 곱셈\nnewArr = np.multiply(array_01, array_02)\nprint(newArr)\n\n# 나누기\nnewArr = np.divide(array_01, array_02)\nprint(newArr)\n\n# 거듭제곱\narray_01 = np.array([1, 2, 3])\narray_02 = np.array([2, 4, 2])\nnewArr = np.power(array_01, array_02)\nprint(newArr)\n```\n\n    [3 5 5]\n    [-1 -1  1]\n    [2 6 6]\n    [0.5        0.66666667 1.5       ]\n    [ 1 16  9]\n    \n\n## 소숫점 정렬\n- 소숫점을 정렬하는 다양한 방법\n\n\n```python\n# 소숫점 제거 \nimport numpy as np\ntemp_arr = np.trunc([-1.23, 1.23])\nprint(temp_arr)\n\ntemp_arr = np.fix([-1.23, 1.23])\nprint(temp_arr)\n```\n\n    [-1.  1.]\n    [-1.  1.]\n    \n\n\n```python\n# 임의의 소숫점 자리에서 반올림\ntemp_arr = np.around([-1.234546123, 1.238791631], 5)\nprint(temp_arr)\n```\n\n    [-1.23455  1.23879]\n    \n\n\n```python\n# 소숫점 모두 내림\ntemp_arr = np.floor([-1.234546123, 1.238791631])\nprint(temp_arr)\n```\n\n    [-2.  1.]\n    \n\n\n\n\n```python\n# 소숫점 모두 올림\ntemp_arr = np.ceil([-1.234546123, 1.238791631])\nprint(temp_arr)\n```\n\n    [-1.  2.]\n    \n\n## 조건식\n- pandas 가공\n- numpy\n- 조건식\n  + 하나의 조건식 (= np.where)\n  + 다중 조건식\n\n\n\n```python\ntemp_arr = np.arange(10)\ntemp_arr\n```\n\n\n\n\n    array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n\n\n\n\n```python\n# 5보다 작으면 원 값 유지\n# 5보다 크면 곱하기 10을 해줌\n```\n\n\n```python\n# np.where(조건식, 참일 때, 거짓일 때)\nnp.where(temp_arr < 5, temp_arr, temp_arr * 10)\n```\n\n\n\n\n    array([ 0,  1,  2,  3,  4, 50, 60, 70, 80, 90])\n\n\n\n\n\n\n```python\ntemp_arr = np.arange(10)\n# temp_arr\ncond_list   = [temp_arr > 5 , temp_arr < 2]\nchoice_list = [temp_arr  * 2, temp_arr + 100]\n\n# np.select(조건식 리스트, 결괏값 리스트, default = )\nnp.select(cond_list, choice_list, default = temp_arr)\n```\n\n\n\n\n    array([100, 101,   2,   3,   4,   5,  12,  14,  16,  18])\n\n\n\n## Reshape\n- 배열의 차원 또는 크기를 바꾼다. \n- 곱셈만 할줄 알면 끝. \n\n\n```python\nimport numpy as np \ntemp_array = np.ones((3, 4))\nprint(temp_array.shape)\nprint(temp_array)\n```\n\n    (3, 4)\n    [[1. 1. 1. 1.]\n     [1. 1. 1. 1.]\n     [1. 1. 1. 1.]]\n    \n\n\n```python\nafter_reshape = temp_array.reshape(2, 2, 5)\nprint(after_reshape.shape)\nprint(after_reshape)\n```\n\n\n    ---------------------------------------------------------------------------\n\n    ValueError                                Traceback (most recent call last)\n\n    <ipython-input-50-d57dd065a075> in <module>()\n    ----> 1 after_reshape = temp_array.reshape(2, 2, 5)\n          2 print(after_reshape.shape)\n          3 print(after_reshape)\n    \n\n    ValueError: cannot reshape array of size 12 into shape (2,2,5)\n\n\n\n```python\nafter_reshape = temp_array.reshape(7, -1)\nprint(after_reshape.shape)\nprint(after_reshape)\n```\n\n\n    ---------------------------------------------------------------------------\n\n    ValueError                                Traceback (most recent call last)\n\n    <ipython-input-53-00ad0ee6a004> in <module>()\n    ----> 1 after_reshape = temp_array.reshape(7, -1)\n          2 print(after_reshape.shape)\n          3 print(after_reshape)\n    \n\n    ValueError: cannot reshape array of size 12 into shape (7,newaxis)\n\n\n# 브로드 캐스팅 \n\n# pandas 튜토리얼\n\n\n```python\nimport pandas as pd \nprint(pd.__version__)\n```\n\n    1.3.5\n    \n\n\n```python\ntemp_dict = {\n    'col1' : [1, 2], \n    'col2' : [3, 4]\n}\n\ndf = pd.DataFrame(temp_dict)\nprint(df)\nprint(type(df))\n```\n\n       col1  col2\n    0     1     3\n    1     2     4\n    <class 'pandas.core.frame.DataFrame'>\n    \n\n## 구글 드라이브 연동\n\n\n\n```python\nfrom google.colab import drive \ndrive.mount('/content/drive')\n```\n\n    Mounted at /content/drive\n    \n\n\n```python\nDATA_PATH = '/content/drive/MyDrive/Colab Notebooks/human_AI/Basic/Chapter 3. pandas/data/'\nprint(DATA_PATH + 'Lemonade2016.csv')\n\nlemonade = pd.read_csv(DATA_PATH + 'Lemonade2016.csv')\n# covid_df = pd.read_csv(DATA_PATH + 'owid-covid-data.csv')\n\nlemonade.info() # str()\n```\n\n    /content/drive/MyDrive/Colab Notebooks/human_AI/Basic/Chapter 3. pandas/data/Lemonade2016.csv\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 32 entries, 0 to 31\n    Data columns (total 7 columns):\n     #   Column       Non-Null Count  Dtype  \n    ---  ------       --------------  -----  \n     0   Date         31 non-null     object \n     1   Location     32 non-null     object \n     2   Lemon        32 non-null     int64  \n     3   Orange       32 non-null     int64  \n     4   Temperature  32 non-null     int64  \n     5   Leaflets     31 non-null     float64\n     6   Price        32 non-null     float64\n    dtypes: float64(2), int64(3), object(2)\n    memory usage: 1.9+ KB\n    \n\n\n\n\n","slug":"day0628_1","published":1,"updated":"2022-09-07T10:19:55.601Z","_id":"cl7a2g8lq0001t8uo5jpj707o","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n\n<h2 id=\"반복문-복습\"><a href=\"#반복문-복습\" class=\"headerlink\" title=\"반복문 복습\"></a>반복문 복습</h2><ul>\n<li>for loop and while loop</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">3</span>):</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Hello World&quot;</span>)</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;안녕하세요&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Hello World\n안녕하세요\nHello World\n안녕하세요\nHello World\n안녕하세요\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># &quot;K&quot; in &quot;Kaggle&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"string\">&quot;K&quot;</span> == <span class=\"string\">&quot;a&quot;</span>:</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;출력이 되나요?&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>: </span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;출력이 안된듯&quot;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<pre><code>출력이 안된듯\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&quot;Kaggle&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> a:</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> i == <span class=\"string\">&quot;a&quot;</span>:</span><br><span class=\"line\">    <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>K\na\n</code></pre>\n<ul>\n<li>리스트의 값이 존재</li>\n<li>전체 총합 구하기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">numbers = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\"><span class=\"built_in\">sum</span> = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> num <span class=\"keyword\">in</span> numbers:</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;numbers: &quot;</span>, num)</span><br><span class=\"line\">  <span class=\"built_in\">sum</span> = <span class=\"built_in\">sum</span> + num </span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;total:&quot;</span>, <span class=\"built_in\">sum</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;----최종 결괏값----&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">sum</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>numbers:  1\ntotal: 1\nnumbers:  2\ntotal: 3\nnumbers:  3\ntotal: 6\nnumbers:  4\ntotal: 10\nnumbers:  5\ntotal: 15\n----최종 결괏값----\n15\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fruits = [<span class=\"string\">&#x27;apple&#x27;</span>, <span class=\"string\">&#x27;kiwi&#x27;</span>, <span class=\"string\">&#x27;mango&#x27;</span>]</span><br><span class=\"line\">newlist = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># apple : a가 있나요? 있네요, newlist에 추가하세요. </span></span><br><span class=\"line\"><span class=\"comment\"># kiwi : a가 있나요? 없네요. 그럼 넘어가요</span></span><br><span class=\"line\"><span class=\"comment\"># mango : a가 있나요? 있네요. newlist에 추가하세요. </span></span><br><span class=\"line\"><span class=\"keyword\">for</span> fruit <span class=\"keyword\">in</span> fruits:</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;조건문 밖 : &quot;</span>, fruit)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"string\">&quot;a&quot;</span> <span class=\"keyword\">in</span> fruit:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;조건문 안쪽 : &quot;</span>, fruit)</span><br><span class=\"line\">    newlist.append(fruit)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(newlist)</span><br></pre></td></tr></table></figure>\n\n<pre><code>조건문 밖 :  apple\n조건문 안쪽 :  apple\n조건문 밖 :  kiwi\n조건문 밖 :  mango\n조건문 안쪽 :  mango\n[&#39;apple&#39;, &#39;mango&#39;]\n</code></pre>\n<h3 id=\"While-Loop\"><a href=\"#While-Loop\" class=\"headerlink\" title=\"While Loop\"></a>While Loop</h3><p>while문 : 분석할 때? 거의 쓸일이 없음</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> i &lt; <span class=\"number\">10</span>: <span class=\"comment\"># 참일때만 반복문 코드가 돔</span></span><br><span class=\"line\">  <span class=\"comment\"># 코드</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">  i += <span class=\"number\">1</span> <span class=\"comment\"># 1씩 증감</span></span><br><span class=\"line\">  <span class=\"comment\"># i -= 1 # 1씩 감소</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>1\n2\n3\n4\n5\n6\n7\n8\n9\n</code></pre>\n<h2 id=\"사용자-정의-함수\"><a href=\"#사용자-정의-함수\" class=\"headerlink\" title=\"사용자 정의 함수\"></a>사용자 정의 함수</h2><ul>\n<li>내가 필요에 의해 직접 함수를 작성</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">함수명</span>(<span class=\"params\">param1, param2</span>):</span><br><span class=\"line\">  <span class=\"comment\"># 코드 </span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">None</span></span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add</span>(<span class=\"params\">a = <span class=\"number\">0</span>, b = <span class=\"number\">1</span></span>):</span><br><span class=\"line\">  <span class=\"comment\"># c = a + b </span></span><br><span class=\"line\">  <span class=\"comment\"># return c</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> a + b</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(add(a = <span class=\"number\">5</span>, b = <span class=\"number\">4</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(add())</span><br></pre></td></tr></table></figure>\n\n<pre><code>9\n1\n</code></pre>\n<ul>\n<li>사칙연산 사용자 정의 함수 만들기</li>\n<li>함수 문서화<ul>\n<li>키워드 : Docstring</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">subtract</span>(<span class=\"params\">a, b</span>):</span><br><span class=\"line\">  <span class=\"string\">&quot;&quot;&quot;a, b를 빼는 함수</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  Parameters:</span></span><br><span class=\"line\"><span class=\"string\">  a (int): int형 숫자 a가 입력</span></span><br><span class=\"line\"><span class=\"string\">  </span></span><br><span class=\"line\"><span class=\"string\">  b (int): int형 숫자 b가 입력</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  Returns:</span></span><br><span class=\"line\"><span class=\"string\">    int : 반환값</span></span><br><span class=\"line\"><span class=\"string\">  &quot;&quot;&quot;</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> a-b</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(subtract(a = <span class=\"number\">5</span>, b = <span class=\"number\">10</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(subtract.__doc__)</span><br></pre></td></tr></table></figure>\n\n<pre><code>-5\na, b를 빼는 함수\n\n  Parameters:\n  a (int): int형 숫자 a가 입력\n  \n  b (int): int형 숫자 b가 입력\n\n  Returns:\n    int : 반환값\n\n  \n</code></pre>\n<h2 id=\"NumPy\"><a href=\"#NumPy\" class=\"headerlink\" title=\"NumPy\"></a>NumPy</h2><ul>\n<li>내장 모듈(&#x3D;라이브러리&#x3D;패키지) (X)</li>\n<li>별도 라이브러리 설치 필요</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.__version__)</span><br></pre></td></tr></table></figure>\n\n<pre><code>1.21.6\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\">temp_array = np.array(temp) <span class=\"comment\"># 리스트에서 배열로 변환</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(temp))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(temp_array))</span><br></pre></td></tr></table></figure>\n\n<pre><code>&lt;class &#39;list&#39;&gt;\n&lt;class &#39;numpy.ndarray&#39;&gt;\n</code></pre>\n<h2 id=\"사칙연산\"><a href=\"#사칙연산\" class=\"headerlink\" title=\"사칙연산\"></a>사칙연산</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">math_score = [<span class=\"number\">90</span>, <span class=\"number\">80</span>, <span class=\"number\">100</span>, <span class=\"number\">60</span>]</span><br><span class=\"line\">eng_score = [<span class=\"number\">80</span>, <span class=\"number\">90</span>, <span class=\"number\">100</span>, <span class=\"number\">50</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># math_score + eng_score</span></span><br><span class=\"line\">math_array = np.array(math_score)</span><br><span class=\"line\">eng_array = np.array(eng_score)</span><br><span class=\"line\"></span><br><span class=\"line\">total = math_array + eng_array</span><br><span class=\"line\"><span class=\"built_in\">print</span>(total)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(total))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[170 170 200 110]\n&lt;class &#39;numpy.ndarray&#39;&gt;\n</code></pre>\n<h2 id=\"집계함수\"><a href=\"#집계함수\" class=\"headerlink\" title=\"집계함수\"></a>집계함수</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(np.<span class=\"built_in\">min</span>(total))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.<span class=\"built_in\">max</span>(total))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.<span class=\"built_in\">sum</span>(total))</span><br></pre></td></tr></table></figure>\n\n<pre><code>110\n200\n650\n</code></pre>\n<h2 id=\"차원-확인\"><a href=\"#차원-확인\" class=\"headerlink\" title=\"차원 확인\"></a>차원 확인</h2><ul>\n<li>배열의 차원 확인 필요</li>\n<li></li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1차원 배열 생성</span></span><br><span class=\"line\">temp_arr = np.array([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr.ndim)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(3,)\n1\n[1 2 3]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 2차원 배열 생성</span></span><br><span class=\"line\">temp_arr = np.array([[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr.ndim)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(2, 3)\n2\n[[1 2 3]\n [4 5 6]]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 3차원 배열 -&gt; 이미지</span></span><br><span class=\"line\">temp_arr = np.array([[[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]], [[<span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>], [<span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>]]])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr.ndim)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(2, 2, 3)\n3\n[[[ 1  2  3]\n  [ 4  5  6]]\n\n [[ 7  8  9]\n  [10 11 12]]]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">3</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"배열-생성의-다양한-방법들\"><a href=\"#배열-생성의-다양한-방법들\" class=\"headerlink\" title=\"배열 생성의 다양한 방법들\"></a>배열 생성의 다양한 방법들</h2><ul>\n<li>모두 0으로 채운다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np </span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.__version__)</span><br></pre></td></tr></table></figure>\n\n<pre><code>1.21.6\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_arr = np.zeros((<span class=\"number\">2</span>, <span class=\"number\">3</span>))</span><br><span class=\"line\">temp_arr</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([[0., 0., 0.],\n       [0., 0., 0.]])\n</code></pre>\n<ul>\n<li>모두 1로 채운다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_arr = np.ones((<span class=\"number\">2</span>, <span class=\"number\">3</span>))</span><br><span class=\"line\">temp_arr</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([[1., 1., 1.],\n       [1., 1., 1.]])\n</code></pre>\n<ul>\n<li>임의의 상수값으로 채운다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_arr = np.full((<span class=\"number\">3</span>, <span class=\"number\">3</span>), <span class=\"number\">100</span>)</span><br><span class=\"line\">temp_arr</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([[100, 100, 100],\n       [100, 100, 100],\n       [100, 100, 100]])\n</code></pre>\n<ul>\n<li>최소, 최대 숫자의 범위를 정해두고, 각 구간별로 값을 생성</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_arr = np.linspace(<span class=\"number\">5</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">temp_arr</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([ 5.        ,  5.55555556,  6.11111111,  6.66666667,  7.22222222,\n        7.77777778,  8.33333333,  8.88888889,  9.44444444, 10.        ])\n</code></pre>\n<ul>\n<li>반복문 시, 자주 등장하는 배열</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_arr = np.arange(<span class=\"number\">1</span>, <span class=\"number\">11</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">temp_arr</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])\n</code></pre>\n<h2 id=\"난수-생성\"><a href=\"#난수-생성\" class=\"headerlink\" title=\"난수 생성\"></a>난수 생성</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> numpy <span class=\"keyword\">import</span> random</span><br><span class=\"line\">x = random.rand()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x)</span><br></pre></td></tr></table></figure>\n\n<pre><code>0.11621638529248979\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy </span><br><span class=\"line\">x = numpy.random.rand()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x)</span><br></pre></td></tr></table></figure>\n\n<pre><code>0.3315584451465583\n</code></pre>\n<ul>\n<li>랜덤 정수값 추출</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> numpy <span class=\"keyword\">import</span> random </span><br><span class=\"line\"><span class=\"comment\"># x = random.randint(100, size = (5))</span></span><br><span class=\"line\">x = random.randint(<span class=\"number\">100</span>, size = (<span class=\"number\">3</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(x))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[[88  2 19 78 13]\n [92 80 62 22 96]\n [66 71 89 62 76]]\n&lt;class &#39;numpy.ndarray&#39;&gt;\n</code></pre>\n<ul>\n<li>랜덤 배열, 실숫값 추출</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> numpy <span class=\"keyword\">import</span> random </span><br><span class=\"line\">x = random.rand(<span class=\"number\">2</span>, <span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(x))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[[0.06336531 0.34486775 0.66923826 0.31566607 0.84566463]\n [0.61713876 0.67541796 0.65161201 0.04912466 0.45433901]]\n&lt;class &#39;numpy.ndarray&#39;&gt;\n</code></pre>\n<h2 id=\"NumPy-사칙-연산\"><a href=\"#NumPy-사칙-연산\" class=\"headerlink\" title=\"NumPy 사칙 연산\"></a>NumPy 사칙 연산</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\">array_01 = np.array([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>])</span><br><span class=\"line\">array_02 = np.array([<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span>])</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 덧셈</span></span><br><span class=\"line\">newArr = np.add(array_01, array_02)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(newArr)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 뺄셈</span></span><br><span class=\"line\">newArr = np.subtract(array_01, array_02)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(newArr)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 곱셈</span></span><br><span class=\"line\">newArr = np.multiply(array_01, array_02)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(newArr)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 나누기</span></span><br><span class=\"line\">newArr = np.divide(array_01, array_02)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(newArr)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 거듭제곱</span></span><br><span class=\"line\">array_01 = np.array([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>])</span><br><span class=\"line\">array_02 = np.array([<span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>])</span><br><span class=\"line\">newArr = np.power(array_01, array_02)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(newArr)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[3 5 5]\n[-1 -1  1]\n[2 6 6]\n[0.5        0.66666667 1.5       ]\n[ 1 16  9]\n</code></pre>\n<h2 id=\"소숫점-정렬\"><a href=\"#소숫점-정렬\" class=\"headerlink\" title=\"소숫점 정렬\"></a>소숫점 정렬</h2><ul>\n<li>소숫점을 정렬하는 다양한 방법</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 소숫점 제거 </span></span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\">temp_arr = np.trunc([-<span class=\"number\">1.23</span>, <span class=\"number\">1.23</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr)</span><br><span class=\"line\"></span><br><span class=\"line\">temp_arr = np.fix([-<span class=\"number\">1.23</span>, <span class=\"number\">1.23</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[-1.  1.]\n[-1.  1.]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 임의의 소숫점 자리에서 반올림</span></span><br><span class=\"line\">temp_arr = np.around([-<span class=\"number\">1.234546123</span>, <span class=\"number\">1.238791631</span>], <span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[-1.23455  1.23879]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 소숫점 모두 내림</span></span><br><span class=\"line\">temp_arr = np.floor([-<span class=\"number\">1.234546123</span>, <span class=\"number\">1.238791631</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[-2.  1.]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 소숫점 모두 올림</span></span><br><span class=\"line\">temp_arr = np.ceil([-<span class=\"number\">1.234546123</span>, <span class=\"number\">1.238791631</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[-1.  2.]\n</code></pre>\n<h2 id=\"조건식\"><a href=\"#조건식\" class=\"headerlink\" title=\"조건식\"></a>조건식</h2><ul>\n<li>pandas 가공</li>\n<li>numpy</li>\n<li>조건식<ul>\n<li>하나의 조건식 (&#x3D; np.where)</li>\n<li>다중 조건식</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_arr = np.arange(<span class=\"number\">10</span>)</span><br><span class=\"line\">temp_arr</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 5보다 작으면 원 값 유지</span></span><br><span class=\"line\"><span class=\"comment\"># 5보다 크면 곱하기 10을 해줌</span></span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># np.where(조건식, 참일 때, 거짓일 때)</span></span><br><span class=\"line\">np.where(temp_arr &lt; <span class=\"number\">5</span>, temp_arr, temp_arr * <span class=\"number\">10</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([ 0,  1,  2,  3,  4, 50, 60, 70, 80, 90])\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_arr = np.arange(<span class=\"number\">10</span>)</span><br><span class=\"line\"><span class=\"comment\"># temp_arr</span></span><br><span class=\"line\">cond_list   = [temp_arr &gt; <span class=\"number\">5</span> , temp_arr &lt; <span class=\"number\">2</span>]</span><br><span class=\"line\">choice_list = [temp_arr  * <span class=\"number\">2</span>, temp_arr + <span class=\"number\">100</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># np.select(조건식 리스트, 결괏값 리스트, default = )</span></span><br><span class=\"line\">np.select(cond_list, choice_list, default = temp_arr)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([100, 101,   2,   3,   4,   5,  12,  14,  16,  18])\n</code></pre>\n<h2 id=\"Reshape\"><a href=\"#Reshape\" class=\"headerlink\" title=\"Reshape\"></a>Reshape</h2><ul>\n<li>배열의 차원 또는 크기를 바꾼다. </li>\n<li>곱셈만 할줄 알면 끝.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np </span><br><span class=\"line\">temp_array = np.ones((<span class=\"number\">3</span>, <span class=\"number\">4</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_array.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_array)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(3, 4)\n[[1. 1. 1. 1.]\n [1. 1. 1. 1.]\n [1. 1. 1. 1.]]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">after_reshape = temp_array.reshape(<span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(after_reshape.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(after_reshape)</span><br></pre></td></tr></table></figure>\n\n\n<pre><code>---------------------------------------------------------------------------\n\nValueError                                Traceback (most recent call last)\n\n&lt;ipython-input-50-d57dd065a075&gt; in &lt;module&gt;()\n----&gt; 1 after_reshape = temp_array.reshape(2, 2, 5)\n      2 print(after_reshape.shape)\n      3 print(after_reshape)\n\n\nValueError: cannot reshape array of size 12 into shape (2,2,5)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">after_reshape = temp_array.reshape(<span class=\"number\">7</span>, -<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(after_reshape.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(after_reshape)</span><br></pre></td></tr></table></figure>\n\n\n<pre><code>---------------------------------------------------------------------------\n\nValueError                                Traceback (most recent call last)\n\n&lt;ipython-input-53-00ad0ee6a004&gt; in &lt;module&gt;()\n----&gt; 1 after_reshape = temp_array.reshape(7, -1)\n      2 print(after_reshape.shape)\n      3 print(after_reshape)\n\n\nValueError: cannot reshape array of size 12 into shape (7,newaxis)\n</code></pre>\n<h1 id=\"브로드-캐스팅\"><a href=\"#브로드-캐스팅\" class=\"headerlink\" title=\"브로드 캐스팅\"></a>브로드 캐스팅</h1><h1 id=\"pandas-튜토리얼\"><a href=\"#pandas-튜토리얼\" class=\"headerlink\" title=\"pandas 튜토리얼\"></a>pandas 튜토리얼</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd </span><br><span class=\"line\"><span class=\"built_in\">print</span>(pd.__version__)</span><br></pre></td></tr></table></figure>\n\n<pre><code>1.3.5\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_dict = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;col1&#x27;</span> : [<span class=\"number\">1</span>, <span class=\"number\">2</span>], </span><br><span class=\"line\">    <span class=\"string\">&#x27;col2&#x27;</span> : [<span class=\"number\">3</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">df = pd.DataFrame(temp_dict)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(df))</span><br></pre></td></tr></table></figure>\n\n<pre><code>   col1  col2\n0     1     3\n1     2     4\n&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\n</code></pre>\n<h2 id=\"구글-드라이브-연동\"><a href=\"#구글-드라이브-연동\" class=\"headerlink\" title=\"구글 드라이브 연동\"></a>구글 드라이브 연동</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> google.colab <span class=\"keyword\">import</span> drive </span><br><span class=\"line\">drive.mount(<span class=\"string\">&#x27;/content/drive&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Mounted at /content/drive\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DATA_PATH = <span class=\"string\">&#x27;/content/drive/MyDrive/Colab Notebooks/human_AI/Basic/Chapter 3. pandas/data/&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(DATA_PATH + <span class=\"string\">&#x27;Lemonade2016.csv&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">lemonade = pd.read_csv(DATA_PATH + <span class=\"string\">&#x27;Lemonade2016.csv&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># covid_df = pd.read_csv(DATA_PATH + &#x27;owid-covid-data.csv&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\">lemonade.info() <span class=\"comment\"># str()</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>/content/drive/MyDrive/Colab Notebooks/human_AI/Basic/Chapter 3. pandas/data/Lemonade2016.csv\n&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 32 entries, 0 to 31\nData columns (total 7 columns):\n #   Column       Non-Null Count  Dtype  \n---  ------       --------------  -----  \n 0   Date         31 non-null     object \n 1   Location     32 non-null     object \n 2   Lemon        32 non-null     int64  \n 3   Orange       32 non-null     int64  \n 4   Temperature  32 non-null     int64  \n 5   Leaflets     31 non-null     float64\n 6   Price        32 non-null     float64\ndtypes: float64(2), int64(3), object(2)\nmemory usage: 1.9+ KB\n</code></pre>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/06/28/day0628_1/python.png","excerpt":"<p>복습 후 삭제 하자</p>","more":"<p>복습 후 삭제 하자</p>\n<!-- excerpt -->\n\n\n<h2 id=\"반복문-복습\"><a href=\"#반복문-복습\" class=\"headerlink\" title=\"반복문 복습\"></a>반복문 복습</h2><ul>\n<li>for loop and while loop</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">3</span>):</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Hello World&quot;</span>)</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;안녕하세요&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Hello World\n안녕하세요\nHello World\n안녕하세요\nHello World\n안녕하세요\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># &quot;K&quot; in &quot;Kaggle&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"string\">&quot;K&quot;</span> == <span class=\"string\">&quot;a&quot;</span>:</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;출력이 되나요?&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>: </span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;출력이 안된듯&quot;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<pre><code>출력이 안된듯\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&quot;Kaggle&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> a:</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> i == <span class=\"string\">&quot;a&quot;</span>:</span><br><span class=\"line\">    <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>K\na\n</code></pre>\n<ul>\n<li>리스트의 값이 존재</li>\n<li>전체 총합 구하기</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">numbers = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\"><span class=\"built_in\">sum</span> = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> num <span class=\"keyword\">in</span> numbers:</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;numbers: &quot;</span>, num)</span><br><span class=\"line\">  <span class=\"built_in\">sum</span> = <span class=\"built_in\">sum</span> + num </span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;total:&quot;</span>, <span class=\"built_in\">sum</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;----최종 결괏값----&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">sum</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>numbers:  1\ntotal: 1\nnumbers:  2\ntotal: 3\nnumbers:  3\ntotal: 6\nnumbers:  4\ntotal: 10\nnumbers:  5\ntotal: 15\n----최종 결괏값----\n15\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fruits = [<span class=\"string\">&#x27;apple&#x27;</span>, <span class=\"string\">&#x27;kiwi&#x27;</span>, <span class=\"string\">&#x27;mango&#x27;</span>]</span><br><span class=\"line\">newlist = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># apple : a가 있나요? 있네요, newlist에 추가하세요. </span></span><br><span class=\"line\"><span class=\"comment\"># kiwi : a가 있나요? 없네요. 그럼 넘어가요</span></span><br><span class=\"line\"><span class=\"comment\"># mango : a가 있나요? 있네요. newlist에 추가하세요. </span></span><br><span class=\"line\"><span class=\"keyword\">for</span> fruit <span class=\"keyword\">in</span> fruits:</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">&quot;조건문 밖 : &quot;</span>, fruit)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"string\">&quot;a&quot;</span> <span class=\"keyword\">in</span> fruit:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;조건문 안쪽 : &quot;</span>, fruit)</span><br><span class=\"line\">    newlist.append(fruit)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(newlist)</span><br></pre></td></tr></table></figure>\n\n<pre><code>조건문 밖 :  apple\n조건문 안쪽 :  apple\n조건문 밖 :  kiwi\n조건문 밖 :  mango\n조건문 안쪽 :  mango\n[&#39;apple&#39;, &#39;mango&#39;]\n</code></pre>\n<h3 id=\"While-Loop\"><a href=\"#While-Loop\" class=\"headerlink\" title=\"While Loop\"></a>While Loop</h3><p>while문 : 분석할 때? 거의 쓸일이 없음</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> i &lt; <span class=\"number\">10</span>: <span class=\"comment\"># 참일때만 반복문 코드가 돔</span></span><br><span class=\"line\">  <span class=\"comment\"># 코드</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">  i += <span class=\"number\">1</span> <span class=\"comment\"># 1씩 증감</span></span><br><span class=\"line\">  <span class=\"comment\"># i -= 1 # 1씩 감소</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>1\n2\n3\n4\n5\n6\n7\n8\n9\n</code></pre>\n<h2 id=\"사용자-정의-함수\"><a href=\"#사용자-정의-함수\" class=\"headerlink\" title=\"사용자 정의 함수\"></a>사용자 정의 함수</h2><ul>\n<li>내가 필요에 의해 직접 함수를 작성</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">함수명</span>(<span class=\"params\">param1, param2</span>):</span><br><span class=\"line\">  <span class=\"comment\"># 코드 </span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">None</span></span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add</span>(<span class=\"params\">a = <span class=\"number\">0</span>, b = <span class=\"number\">1</span></span>):</span><br><span class=\"line\">  <span class=\"comment\"># c = a + b </span></span><br><span class=\"line\">  <span class=\"comment\"># return c</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> a + b</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(add(a = <span class=\"number\">5</span>, b = <span class=\"number\">4</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(add())</span><br></pre></td></tr></table></figure>\n\n<pre><code>9\n1\n</code></pre>\n<ul>\n<li>사칙연산 사용자 정의 함수 만들기</li>\n<li>함수 문서화<ul>\n<li>키워드 : Docstring</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">subtract</span>(<span class=\"params\">a, b</span>):</span><br><span class=\"line\">  <span class=\"string\">&quot;&quot;&quot;a, b를 빼는 함수</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  Parameters:</span></span><br><span class=\"line\"><span class=\"string\">  a (int): int형 숫자 a가 입력</span></span><br><span class=\"line\"><span class=\"string\">  </span></span><br><span class=\"line\"><span class=\"string\">  b (int): int형 숫자 b가 입력</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  Returns:</span></span><br><span class=\"line\"><span class=\"string\">    int : 반환값</span></span><br><span class=\"line\"><span class=\"string\">  &quot;&quot;&quot;</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> a-b</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(subtract(a = <span class=\"number\">5</span>, b = <span class=\"number\">10</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(subtract.__doc__)</span><br></pre></td></tr></table></figure>\n\n<pre><code>-5\na, b를 빼는 함수\n\n  Parameters:\n  a (int): int형 숫자 a가 입력\n  \n  b (int): int형 숫자 b가 입력\n\n  Returns:\n    int : 반환값\n\n  \n</code></pre>\n<h2 id=\"NumPy\"><a href=\"#NumPy\" class=\"headerlink\" title=\"NumPy\"></a>NumPy</h2><ul>\n<li>내장 모듈(&#x3D;라이브러리&#x3D;패키지) (X)</li>\n<li>별도 라이브러리 설치 필요</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.__version__)</span><br></pre></td></tr></table></figure>\n\n<pre><code>1.21.6\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\">temp_array = np.array(temp) <span class=\"comment\"># 리스트에서 배열로 변환</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(temp))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(temp_array))</span><br></pre></td></tr></table></figure>\n\n<pre><code>&lt;class &#39;list&#39;&gt;\n&lt;class &#39;numpy.ndarray&#39;&gt;\n</code></pre>\n<h2 id=\"사칙연산\"><a href=\"#사칙연산\" class=\"headerlink\" title=\"사칙연산\"></a>사칙연산</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">math_score = [<span class=\"number\">90</span>, <span class=\"number\">80</span>, <span class=\"number\">100</span>, <span class=\"number\">60</span>]</span><br><span class=\"line\">eng_score = [<span class=\"number\">80</span>, <span class=\"number\">90</span>, <span class=\"number\">100</span>, <span class=\"number\">50</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># math_score + eng_score</span></span><br><span class=\"line\">math_array = np.array(math_score)</span><br><span class=\"line\">eng_array = np.array(eng_score)</span><br><span class=\"line\"></span><br><span class=\"line\">total = math_array + eng_array</span><br><span class=\"line\"><span class=\"built_in\">print</span>(total)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(total))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[170 170 200 110]\n&lt;class &#39;numpy.ndarray&#39;&gt;\n</code></pre>\n<h2 id=\"집계함수\"><a href=\"#집계함수\" class=\"headerlink\" title=\"집계함수\"></a>집계함수</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(np.<span class=\"built_in\">min</span>(total))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.<span class=\"built_in\">max</span>(total))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.<span class=\"built_in\">sum</span>(total))</span><br></pre></td></tr></table></figure>\n\n<pre><code>110\n200\n650\n</code></pre>\n<h2 id=\"차원-확인\"><a href=\"#차원-확인\" class=\"headerlink\" title=\"차원 확인\"></a>차원 확인</h2><ul>\n<li>배열의 차원 확인 필요</li>\n<li></li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1차원 배열 생성</span></span><br><span class=\"line\">temp_arr = np.array([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr.ndim)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(3,)\n1\n[1 2 3]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 2차원 배열 생성</span></span><br><span class=\"line\">temp_arr = np.array([[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr.ndim)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(2, 3)\n2\n[[1 2 3]\n [4 5 6]]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 3차원 배열 -&gt; 이미지</span></span><br><span class=\"line\">temp_arr = np.array([[[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]], [[<span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>], [<span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>]]])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr.ndim)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(2, 2, 3)\n3\n[[[ 1  2  3]\n  [ 4  5  6]]\n\n [[ 7  8  9]\n  [10 11 12]]]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">3</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"배열-생성의-다양한-방법들\"><a href=\"#배열-생성의-다양한-방법들\" class=\"headerlink\" title=\"배열 생성의 다양한 방법들\"></a>배열 생성의 다양한 방법들</h2><ul>\n<li>모두 0으로 채운다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np </span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.__version__)</span><br></pre></td></tr></table></figure>\n\n<pre><code>1.21.6\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_arr = np.zeros((<span class=\"number\">2</span>, <span class=\"number\">3</span>))</span><br><span class=\"line\">temp_arr</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([[0., 0., 0.],\n       [0., 0., 0.]])\n</code></pre>\n<ul>\n<li>모두 1로 채운다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_arr = np.ones((<span class=\"number\">2</span>, <span class=\"number\">3</span>))</span><br><span class=\"line\">temp_arr</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([[1., 1., 1.],\n       [1., 1., 1.]])\n</code></pre>\n<ul>\n<li>임의의 상수값으로 채운다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_arr = np.full((<span class=\"number\">3</span>, <span class=\"number\">3</span>), <span class=\"number\">100</span>)</span><br><span class=\"line\">temp_arr</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([[100, 100, 100],\n       [100, 100, 100],\n       [100, 100, 100]])\n</code></pre>\n<ul>\n<li>최소, 최대 숫자의 범위를 정해두고, 각 구간별로 값을 생성</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_arr = np.linspace(<span class=\"number\">5</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">temp_arr</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([ 5.        ,  5.55555556,  6.11111111,  6.66666667,  7.22222222,\n        7.77777778,  8.33333333,  8.88888889,  9.44444444, 10.        ])\n</code></pre>\n<ul>\n<li>반복문 시, 자주 등장하는 배열</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_arr = np.arange(<span class=\"number\">1</span>, <span class=\"number\">11</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">temp_arr</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])\n</code></pre>\n<h2 id=\"난수-생성\"><a href=\"#난수-생성\" class=\"headerlink\" title=\"난수 생성\"></a>난수 생성</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> numpy <span class=\"keyword\">import</span> random</span><br><span class=\"line\">x = random.rand()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x)</span><br></pre></td></tr></table></figure>\n\n<pre><code>0.11621638529248979\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy </span><br><span class=\"line\">x = numpy.random.rand()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x)</span><br></pre></td></tr></table></figure>\n\n<pre><code>0.3315584451465583\n</code></pre>\n<ul>\n<li>랜덤 정수값 추출</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> numpy <span class=\"keyword\">import</span> random </span><br><span class=\"line\"><span class=\"comment\"># x = random.randint(100, size = (5))</span></span><br><span class=\"line\">x = random.randint(<span class=\"number\">100</span>, size = (<span class=\"number\">3</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(x))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[[88  2 19 78 13]\n [92 80 62 22 96]\n [66 71 89 62 76]]\n&lt;class &#39;numpy.ndarray&#39;&gt;\n</code></pre>\n<ul>\n<li>랜덤 배열, 실숫값 추출</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> numpy <span class=\"keyword\">import</span> random </span><br><span class=\"line\">x = random.rand(<span class=\"number\">2</span>, <span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(x))</span><br></pre></td></tr></table></figure>\n\n<pre><code>[[0.06336531 0.34486775 0.66923826 0.31566607 0.84566463]\n [0.61713876 0.67541796 0.65161201 0.04912466 0.45433901]]\n&lt;class &#39;numpy.ndarray&#39;&gt;\n</code></pre>\n<h2 id=\"NumPy-사칙-연산\"><a href=\"#NumPy-사칙-연산\" class=\"headerlink\" title=\"NumPy 사칙 연산\"></a>NumPy 사칙 연산</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\">array_01 = np.array([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>])</span><br><span class=\"line\">array_02 = np.array([<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span>])</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 덧셈</span></span><br><span class=\"line\">newArr = np.add(array_01, array_02)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(newArr)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 뺄셈</span></span><br><span class=\"line\">newArr = np.subtract(array_01, array_02)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(newArr)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 곱셈</span></span><br><span class=\"line\">newArr = np.multiply(array_01, array_02)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(newArr)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 나누기</span></span><br><span class=\"line\">newArr = np.divide(array_01, array_02)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(newArr)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 거듭제곱</span></span><br><span class=\"line\">array_01 = np.array([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>])</span><br><span class=\"line\">array_02 = np.array([<span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>])</span><br><span class=\"line\">newArr = np.power(array_01, array_02)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(newArr)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[3 5 5]\n[-1 -1  1]\n[2 6 6]\n[0.5        0.66666667 1.5       ]\n[ 1 16  9]\n</code></pre>\n<h2 id=\"소숫점-정렬\"><a href=\"#소숫점-정렬\" class=\"headerlink\" title=\"소숫점 정렬\"></a>소숫점 정렬</h2><ul>\n<li>소숫점을 정렬하는 다양한 방법</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 소숫점 제거 </span></span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\">temp_arr = np.trunc([-<span class=\"number\">1.23</span>, <span class=\"number\">1.23</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr)</span><br><span class=\"line\"></span><br><span class=\"line\">temp_arr = np.fix([-<span class=\"number\">1.23</span>, <span class=\"number\">1.23</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[-1.  1.]\n[-1.  1.]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 임의의 소숫점 자리에서 반올림</span></span><br><span class=\"line\">temp_arr = np.around([-<span class=\"number\">1.234546123</span>, <span class=\"number\">1.238791631</span>], <span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[-1.23455  1.23879]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 소숫점 모두 내림</span></span><br><span class=\"line\">temp_arr = np.floor([-<span class=\"number\">1.234546123</span>, <span class=\"number\">1.238791631</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[-2.  1.]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 소숫점 모두 올림</span></span><br><span class=\"line\">temp_arr = np.ceil([-<span class=\"number\">1.234546123</span>, <span class=\"number\">1.238791631</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_arr)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[-1.  2.]\n</code></pre>\n<h2 id=\"조건식\"><a href=\"#조건식\" class=\"headerlink\" title=\"조건식\"></a>조건식</h2><ul>\n<li>pandas 가공</li>\n<li>numpy</li>\n<li>조건식<ul>\n<li>하나의 조건식 (&#x3D; np.where)</li>\n<li>다중 조건식</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_arr = np.arange(<span class=\"number\">10</span>)</span><br><span class=\"line\">temp_arr</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 5보다 작으면 원 값 유지</span></span><br><span class=\"line\"><span class=\"comment\"># 5보다 크면 곱하기 10을 해줌</span></span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># np.where(조건식, 참일 때, 거짓일 때)</span></span><br><span class=\"line\">np.where(temp_arr &lt; <span class=\"number\">5</span>, temp_arr, temp_arr * <span class=\"number\">10</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([ 0,  1,  2,  3,  4, 50, 60, 70, 80, 90])\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_arr = np.arange(<span class=\"number\">10</span>)</span><br><span class=\"line\"><span class=\"comment\"># temp_arr</span></span><br><span class=\"line\">cond_list   = [temp_arr &gt; <span class=\"number\">5</span> , temp_arr &lt; <span class=\"number\">2</span>]</span><br><span class=\"line\">choice_list = [temp_arr  * <span class=\"number\">2</span>, temp_arr + <span class=\"number\">100</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># np.select(조건식 리스트, 결괏값 리스트, default = )</span></span><br><span class=\"line\">np.select(cond_list, choice_list, default = temp_arr)</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([100, 101,   2,   3,   4,   5,  12,  14,  16,  18])\n</code></pre>\n<h2 id=\"Reshape\"><a href=\"#Reshape\" class=\"headerlink\" title=\"Reshape\"></a>Reshape</h2><ul>\n<li>배열의 차원 또는 크기를 바꾼다. </li>\n<li>곱셈만 할줄 알면 끝.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np </span><br><span class=\"line\">temp_array = np.ones((<span class=\"number\">3</span>, <span class=\"number\">4</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_array.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(temp_array)</span><br></pre></td></tr></table></figure>\n\n<pre><code>(3, 4)\n[[1. 1. 1. 1.]\n [1. 1. 1. 1.]\n [1. 1. 1. 1.]]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">after_reshape = temp_array.reshape(<span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(after_reshape.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(after_reshape)</span><br></pre></td></tr></table></figure>\n\n\n<pre><code>---------------------------------------------------------------------------\n\nValueError                                Traceback (most recent call last)\n\n&lt;ipython-input-50-d57dd065a075&gt; in &lt;module&gt;()\n----&gt; 1 after_reshape = temp_array.reshape(2, 2, 5)\n      2 print(after_reshape.shape)\n      3 print(after_reshape)\n\n\nValueError: cannot reshape array of size 12 into shape (2,2,5)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">after_reshape = temp_array.reshape(<span class=\"number\">7</span>, -<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(after_reshape.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(after_reshape)</span><br></pre></td></tr></table></figure>\n\n\n<pre><code>---------------------------------------------------------------------------\n\nValueError                                Traceback (most recent call last)\n\n&lt;ipython-input-53-00ad0ee6a004&gt; in &lt;module&gt;()\n----&gt; 1 after_reshape = temp_array.reshape(7, -1)\n      2 print(after_reshape.shape)\n      3 print(after_reshape)\n\n\nValueError: cannot reshape array of size 12 into shape (7,newaxis)\n</code></pre>\n<h1 id=\"브로드-캐스팅\"><a href=\"#브로드-캐스팅\" class=\"headerlink\" title=\"브로드 캐스팅\"></a>브로드 캐스팅</h1><h1 id=\"pandas-튜토리얼\"><a href=\"#pandas-튜토리얼\" class=\"headerlink\" title=\"pandas 튜토리얼\"></a>pandas 튜토리얼</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd </span><br><span class=\"line\"><span class=\"built_in\">print</span>(pd.__version__)</span><br></pre></td></tr></table></figure>\n\n<pre><code>1.3.5\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_dict = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;col1&#x27;</span> : [<span class=\"number\">1</span>, <span class=\"number\">2</span>], </span><br><span class=\"line\">    <span class=\"string\">&#x27;col2&#x27;</span> : [<span class=\"number\">3</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">df = pd.DataFrame(temp_dict)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(df))</span><br></pre></td></tr></table></figure>\n\n<pre><code>   col1  col2\n0     1     3\n1     2     4\n&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\n</code></pre>\n<h2 id=\"구글-드라이브-연동\"><a href=\"#구글-드라이브-연동\" class=\"headerlink\" title=\"구글 드라이브 연동\"></a>구글 드라이브 연동</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> google.colab <span class=\"keyword\">import</span> drive </span><br><span class=\"line\">drive.mount(<span class=\"string\">&#x27;/content/drive&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Mounted at /content/drive\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DATA_PATH = <span class=\"string\">&#x27;/content/drive/MyDrive/Colab Notebooks/human_AI/Basic/Chapter 3. pandas/data/&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(DATA_PATH + <span class=\"string\">&#x27;Lemonade2016.csv&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">lemonade = pd.read_csv(DATA_PATH + <span class=\"string\">&#x27;Lemonade2016.csv&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># covid_df = pd.read_csv(DATA_PATH + &#x27;owid-covid-data.csv&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\">lemonade.info() <span class=\"comment\"># str()</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>/content/drive/MyDrive/Colab Notebooks/human_AI/Basic/Chapter 3. pandas/data/Lemonade2016.csv\n&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 32 entries, 0 to 31\nData columns (total 7 columns):\n #   Column       Non-Null Count  Dtype  \n---  ------       --------------  -----  \n 0   Date         31 non-null     object \n 1   Location     32 non-null     object \n 2   Lemon        32 non-null     int64  \n 3   Orange       32 non-null     int64  \n 4   Temperature  32 non-null     int64  \n 5   Leaflets     31 non-null     float64\n 6   Price        32 non-null     float64\ndtypes: float64(2), int64(3), object(2)\nmemory usage: 1.9+ KB\n</code></pre>\n"},{"title":"카카오 챗봇 프로젝트","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"metaAlignment":"center","date":"2022-08-14T12:57:23.000Z","_content":"\n챗봇 구상중\n<!-- excerpt -->\n\n# 컨텍스트를 활용한 답변 만들기\n\n1. 질문 블록을 하나 만들어서 사용자 발화를 입력한다.\n2. 그 답변을 처리할 블록을 하나 만들어서 사용자 발화를 입력한다.\n3. 질문 블록(A)에서 오른쪽 위의 [•••] 버튼을 클릭한 후 컨텍스트 설정 메뉴로 이동합니다.\n4. 컨텍스트 설정 팝업창에서 Output 컨텍스트 섹션의 [+] 버튼을 눌러 컨텍스트 이름을 입력하고 유효 횟수(lifespan, 수명)와 유효 시간(ttl, seconds 단위의 시간 값)을 지정합니다.\n\n   - 질문 블록(A)이 실행될 때 Output 컨텍스트가 지정된 수명과 유효 시간만큼 생성되어 유지됩니다.\n5. 답변 블록(B)의 컨텍스트 설정 메뉴에서 질문 블록의 Output 컨텍스트 이름과 동일하게 Input 컨텍스트 이름을 지정합니다.","source":"_posts/day0814.md","raw":"---\ntitle: \"카카오 챗봇 프로젝트\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: python\nclearReading: true\nmetaAlignment: center\ndate: '2022-08-14 21:57:23'\n---\n\n챗봇 구상중\n<!-- excerpt -->\n\n# 컨텍스트를 활용한 답변 만들기\n\n1. 질문 블록을 하나 만들어서 사용자 발화를 입력한다.\n2. 그 답변을 처리할 블록을 하나 만들어서 사용자 발화를 입력한다.\n3. 질문 블록(A)에서 오른쪽 위의 [•••] 버튼을 클릭한 후 컨텍스트 설정 메뉴로 이동합니다.\n4. 컨텍스트 설정 팝업창에서 Output 컨텍스트 섹션의 [+] 버튼을 눌러 컨텍스트 이름을 입력하고 유효 횟수(lifespan, 수명)와 유효 시간(ttl, seconds 단위의 시간 값)을 지정합니다.\n\n   - 질문 블록(A)이 실행될 때 Output 컨텍스트가 지정된 수명과 유효 시간만큼 생성되어 유지됩니다.\n5. 답변 블록(B)의 컨텍스트 설정 메뉴에서 질문 블록의 Output 컨텍스트 이름과 동일하게 Input 컨텍스트 이름을 지정합니다.","slug":"day0814","published":1,"updated":"2022-08-26T06:00:45.191Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7a2g8lx0003t8uo4lf9gxmk","content":"<!-- excerpt -->\n\n<h1 id=\"컨텍스트를-활용한-답변-만들기\"><a href=\"#컨텍스트를-활용한-답변-만들기\" class=\"headerlink\" title=\"컨텍스트를 활용한 답변 만들기\"></a>컨텍스트를 활용한 답변 만들기</h1><ol>\n<li><p>질문 블록을 하나 만들어서 사용자 발화를 입력한다.</p>\n</li>\n<li><p>그 답변을 처리할 블록을 하나 만들어서 사용자 발화를 입력한다.</p>\n</li>\n<li><p>질문 블록(A)에서 오른쪽 위의 [•••] 버튼을 클릭한 후 컨텍스트 설정 메뉴로 이동합니다.</p>\n</li>\n<li><p>컨텍스트 설정 팝업창에서 Output 컨텍스트 섹션의 [+] 버튼을 눌러 컨텍스트 이름을 입력하고 유효 횟수(lifespan, 수명)와 유효 시간(ttl, seconds 단위의 시간 값)을 지정합니다.</p>\n<ul>\n<li>질문 블록(A)이 실행될 때 Output 컨텍스트가 지정된 수명과 유효 시간만큼 생성되어 유지됩니다.</li>\n</ul>\n</li>\n<li><p>답변 블록(B)의 컨텍스트 설정 메뉴에서 질문 블록의 Output 컨텍스트 이름과 동일하게 Input 컨텍스트 이름을 지정합니다.</p>\n</li>\n</ol>","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"<p>챗봇 구상중</p>","more":"<p>챗봇 구상중</p>\n<!-- excerpt -->\n\n<h1 id=\"컨텍스트를-활용한-답변-만들기\"><a href=\"#컨텍스트를-활용한-답변-만들기\" class=\"headerlink\" title=\"컨텍스트를 활용한 답변 만들기\"></a>컨텍스트를 활용한 답변 만들기</h1><ol>\n<li><p>질문 블록을 하나 만들어서 사용자 발화를 입력한다.</p>\n</li>\n<li><p>그 답변을 처리할 블록을 하나 만들어서 사용자 발화를 입력한다.</p>\n</li>\n<li><p>질문 블록(A)에서 오른쪽 위의 [•••] 버튼을 클릭한 후 컨텍스트 설정 메뉴로 이동합니다.</p>\n</li>\n<li><p>컨텍스트 설정 팝업창에서 Output 컨텍스트 섹션의 [+] 버튼을 눌러 컨텍스트 이름을 입력하고 유효 횟수(lifespan, 수명)와 유효 시간(ttl, seconds 단위의 시간 값)을 지정합니다.</p>\n<ul>\n<li>질문 블록(A)이 실행될 때 Output 컨텍스트가 지정된 수명과 유효 시간만큼 생성되어 유지됩니다.</li>\n</ul>\n</li>\n<li><p>답변 블록(B)의 컨텍스트 설정 메뉴에서 질문 블록의 Output 컨텍스트 이름과 동일하게 Input 컨텍스트 이름을 지정합니다.</p>\n</li>\n</ol>\n"},{"title":"Python 대시보드 만들기","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"metaAlignment":"center","date":"2022-08-24T14:27:20.000Z","_content":"\n홈페이지 만들기\n<!-- excerpt -->\n\n# 대시보드\n\n\n- 웹 개발 프로젝트\n- 대시보드 오픈소스 / 유료 툴\n\n### Flask 관련\n\n- 효율적으로 디자인 패턴하기(중요)\n- 웹 개발도 가능하게\n\n### R\n\n- Shiny 대시보드 프레임워크 로 통합되어있음\n\n### Python\n\n- 웹 개발 프레임워크가 Django, Flask 가 있는 것처럼\n    \n    Python 프레임워크는 한두개가 아니라 다양하다.\n    \n\n대시보드 = 시각화를 예쁘게 해주는 코드\n\n좀 더 세부적으로 하고 싶다면 plotly 를 써야 함\n\n- 구글에 python dashboard framework 만 쳐도 엄청 나옴\n- dash python 주로 쓴다\n\n### Python(유료툴)\n\n- 대세 : 태블로, PowerBi\n\n### Java 스크립트 내 Python 코드 호출\n\n- Jpython (에러가 많음)\n- 차라리 외부에서 만들고 iframe 형태로 만들어라\n\n---\n\n# Flask를 가지고 대시보드 만들기\n\n폴더를 하나 생성 후 VSCode 로 연다.\n\n가상환경 설정 후, 다음 코드를 입력한다.\n\n![Untitled](/images/대시보드/Untitled.png)\n\n```python\npip install dash plotly Flask pandas gunicorn psycopg2-binary SQLAlchemy Flask-SQLAlchemy\n```\n\n- 지금까지는 [app.py](http://app.py)에 전부 다 스킬 코드를 집어 넣었지만,\n    \n    이렇게 app 객체를 전역으로 사용하면 “순환참조오류” 가 발생할 확률이 높음\n    \n\n- 순환참조오류 : A → B , B → A  가 발생하는 경우. 무한반복됨\n\n- 그렇다면 어떻게 해야되냐\n    \n    app ‘폴더’ 를 하나 만들고 ‘__init__.py’ 라는 ‘파일’ 을 하나 생성한다.\n    \n\n![Untitled](/images/대시보드/Untitled%201.png)\n\n- 가상환경에 접속한다.\n\n```bash\nvirtualenv venv # 가상환경 생성\nsource venv/Scripts/activate # 가상환경 접속\n```\n\n- 필수 라이브러리를 설치한다\n\n```bash\npip install dash plotly Flask pandas gunicorn psycopg2-binary SQLAlchemy Flask-SQLAlchemy\n```\n\n- `__init__.py` 파일에 다음 코드를 작성한다.\n\n```python\n# app/__init__.py\nimport os\n\nfrom flask import Flask\n\ndef create_app(test_config=None):\n    app = Flask(__name__, instance_relative_config=True)\n    app.config.from_mapping(\n        SECRET_KEY = 'development'\n    )\n\n    if test_config is None:\n        app.config.from_pyfile('config.py', silent=True)\n    else:\n        app.config.from_mapping(test_config)\n\n    try:\n        os.makedirs(app.instance_path)\n    except OSError:\n        pass\n\n    return app\n```\n\n- `main` 파일을 하나 만들고 다음 블루프린트 코드를 작성한다\n\n```python\n# app/main.py\nfrom flask import Blueprint, render_template\n\nbp = Blueprint('main', __name__, url_prefix='/')\n\n@bp.route('/')\ndef main():\n    return \"Hello World!\"\n```\n\n- `__init__.py` 와 `main` 을 연결시키기 위해서 `__init__.py` 파일에 경로를 추가한다.\n    \n    ![Untitled](/images/대시보드/Untitled%202.png)\n    \n\n```python\nfrom . import main\napp.register_blueprint(main.bp)\n```\n\n- 이번에는 [`wsgi.py`](http://wsgi.py) 파일을 만들고 그 안에 코드를 작성한다\n\n```python\nfrom app import create_app\n\napp = create_app()\n\nif __name__ == \"__main__\":\n    app.run(host='0.0.0.0', debug=True)\n```\n\n- 이제 flask run 을 터미널에 입력해서 서버테스트를 한다.(파일 위치는 다음과 같음)\n    \n    ![Untitled](/images/대시보드/Untitled%203.png)\n    \n    ![Untitled](/images/대시보드/Untitled%204.png)\n    \n\n## templates 폴더\n\n- 이번에는 templates 폴더를 하나 만든다.\n- bootstrap 5.2.0 버전을 활용하여 base.html 및 main.html 파일을 생성하여 Manu Bar와 Hello World를 출력하는 코드를 작성한다.\n- 이 때 확장자명 html 파일은 모두 jinja2로 저장하는 것에 주의한다.\n\n### 1. header.jinja2 파일 작성\n\n- app/templates/header.jinja2   이렇게 파일을 만든다.\n    - header.jinja2 파일에 아래 코드를 작성한다.\n    \n    ```html\n    <ul class=\"nav\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link active\" aria-current=\"page\" href=\"/main\">Main</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link active\" href=\"/dashapp1\">Dashapp1</a>\n      </li>\n    </ul>\n    ```\n    \n\n### 2. base.jinja2 파일 작성\n\n- 이번에는 base.jinja2 파일을 만들고 header.jinja2 파일을 불러오자\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <title>Bootstrap demo</title>\n    <link\n      href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css\"\n      rel=\"stylesheet\"\n      integrity=\"sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx\"\n      crossorigin=\"anonymous\"\n    />\n    <script\n      src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js\"\n      integrity=\"sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa\"\n      crossorigin=\"anonymous\"\n    ></script>\n  </head>\n  <body>\n    {% include 'header.jinja2' %}\n    <br />\n    <div class=\"container\">{% block content %} {% endblock %}</div>\n  </body>\n</html>\n```\n\n## main 페이지 작성\n\n- app폴더에 main “폴더” 를 만든다\n- main 폴더 내부에 templates 폴더와 `[main.py](http://main.py)` 를 생성한다\n\n- templates 폴더 내부에 main.jinja2 파일을 만든 후 다음 코드를 작성한다\\\n\n```html\n{% extends \"base.jinja2\" %}\n\n{% block content %}\n<h1>Hello World</h1>\n\n{% endblock %}\n```\n\n- `[main.py](http://main.py)` 에 다음 코드를 입력한다\n\n```python\n# app/main/main.py\nfrom flask import Blueprint, render_template\n\nbp = Blueprint('main', __name__, template_folder = \"templates\", url_prefix='/')\n\n@bp.route('/')\ndef main():\n    return render_template(\"main.jinja2\", title = 'main page')\n```\n\n- `app/__init__.py` 파일에서 main 코드의 일부 경로를 수정한다\n    \n    ![Untitled](/images/대시보드/Untitled%205.png)\n    \n\n```python\n# app/__init__.py\nimport os\n\nfrom flask import Flask\n\ndef create_app(test_config=None):\n    app = Flask(__name__, instance_relative_config=True)\n    app.config.from_mapping(\n        SECRET_KEY = 'development'\n    )\n.\n.\nfrom .main import main\napp.register_blueprint(main.bp)\n\nreturn app\n```\n\n- 이제 flask run 을 해서 서버테스트를 한다.\n\nflask 애플리케이션 팩토리 블루프린트를 이해해야함","source":"_posts/대시보드.md","raw":"---\ntitle: \"Python 대시보드 만들기\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: python\nclearReading: true\nmetaAlignment: center\ndate: '2022-08-24 23:27:20'\n---\n\n홈페이지 만들기\n<!-- excerpt -->\n\n# 대시보드\n\n\n- 웹 개발 프로젝트\n- 대시보드 오픈소스 / 유료 툴\n\n### Flask 관련\n\n- 효율적으로 디자인 패턴하기(중요)\n- 웹 개발도 가능하게\n\n### R\n\n- Shiny 대시보드 프레임워크 로 통합되어있음\n\n### Python\n\n- 웹 개발 프레임워크가 Django, Flask 가 있는 것처럼\n    \n    Python 프레임워크는 한두개가 아니라 다양하다.\n    \n\n대시보드 = 시각화를 예쁘게 해주는 코드\n\n좀 더 세부적으로 하고 싶다면 plotly 를 써야 함\n\n- 구글에 python dashboard framework 만 쳐도 엄청 나옴\n- dash python 주로 쓴다\n\n### Python(유료툴)\n\n- 대세 : 태블로, PowerBi\n\n### Java 스크립트 내 Python 코드 호출\n\n- Jpython (에러가 많음)\n- 차라리 외부에서 만들고 iframe 형태로 만들어라\n\n---\n\n# Flask를 가지고 대시보드 만들기\n\n폴더를 하나 생성 후 VSCode 로 연다.\n\n가상환경 설정 후, 다음 코드를 입력한다.\n\n![Untitled](/images/대시보드/Untitled.png)\n\n```python\npip install dash plotly Flask pandas gunicorn psycopg2-binary SQLAlchemy Flask-SQLAlchemy\n```\n\n- 지금까지는 [app.py](http://app.py)에 전부 다 스킬 코드를 집어 넣었지만,\n    \n    이렇게 app 객체를 전역으로 사용하면 “순환참조오류” 가 발생할 확률이 높음\n    \n\n- 순환참조오류 : A → B , B → A  가 발생하는 경우. 무한반복됨\n\n- 그렇다면 어떻게 해야되냐\n    \n    app ‘폴더’ 를 하나 만들고 ‘__init__.py’ 라는 ‘파일’ 을 하나 생성한다.\n    \n\n![Untitled](/images/대시보드/Untitled%201.png)\n\n- 가상환경에 접속한다.\n\n```bash\nvirtualenv venv # 가상환경 생성\nsource venv/Scripts/activate # 가상환경 접속\n```\n\n- 필수 라이브러리를 설치한다\n\n```bash\npip install dash plotly Flask pandas gunicorn psycopg2-binary SQLAlchemy Flask-SQLAlchemy\n```\n\n- `__init__.py` 파일에 다음 코드를 작성한다.\n\n```python\n# app/__init__.py\nimport os\n\nfrom flask import Flask\n\ndef create_app(test_config=None):\n    app = Flask(__name__, instance_relative_config=True)\n    app.config.from_mapping(\n        SECRET_KEY = 'development'\n    )\n\n    if test_config is None:\n        app.config.from_pyfile('config.py', silent=True)\n    else:\n        app.config.from_mapping(test_config)\n\n    try:\n        os.makedirs(app.instance_path)\n    except OSError:\n        pass\n\n    return app\n```\n\n- `main` 파일을 하나 만들고 다음 블루프린트 코드를 작성한다\n\n```python\n# app/main.py\nfrom flask import Blueprint, render_template\n\nbp = Blueprint('main', __name__, url_prefix='/')\n\n@bp.route('/')\ndef main():\n    return \"Hello World!\"\n```\n\n- `__init__.py` 와 `main` 을 연결시키기 위해서 `__init__.py` 파일에 경로를 추가한다.\n    \n    ![Untitled](/images/대시보드/Untitled%202.png)\n    \n\n```python\nfrom . import main\napp.register_blueprint(main.bp)\n```\n\n- 이번에는 [`wsgi.py`](http://wsgi.py) 파일을 만들고 그 안에 코드를 작성한다\n\n```python\nfrom app import create_app\n\napp = create_app()\n\nif __name__ == \"__main__\":\n    app.run(host='0.0.0.0', debug=True)\n```\n\n- 이제 flask run 을 터미널에 입력해서 서버테스트를 한다.(파일 위치는 다음과 같음)\n    \n    ![Untitled](/images/대시보드/Untitled%203.png)\n    \n    ![Untitled](/images/대시보드/Untitled%204.png)\n    \n\n## templates 폴더\n\n- 이번에는 templates 폴더를 하나 만든다.\n- bootstrap 5.2.0 버전을 활용하여 base.html 및 main.html 파일을 생성하여 Manu Bar와 Hello World를 출력하는 코드를 작성한다.\n- 이 때 확장자명 html 파일은 모두 jinja2로 저장하는 것에 주의한다.\n\n### 1. header.jinja2 파일 작성\n\n- app/templates/header.jinja2   이렇게 파일을 만든다.\n    - header.jinja2 파일에 아래 코드를 작성한다.\n    \n    ```html\n    <ul class=\"nav\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link active\" aria-current=\"page\" href=\"/main\">Main</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link active\" href=\"/dashapp1\">Dashapp1</a>\n      </li>\n    </ul>\n    ```\n    \n\n### 2. base.jinja2 파일 작성\n\n- 이번에는 base.jinja2 파일을 만들고 header.jinja2 파일을 불러오자\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <title>Bootstrap demo</title>\n    <link\n      href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css\"\n      rel=\"stylesheet\"\n      integrity=\"sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx\"\n      crossorigin=\"anonymous\"\n    />\n    <script\n      src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js\"\n      integrity=\"sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa\"\n      crossorigin=\"anonymous\"\n    ></script>\n  </head>\n  <body>\n    {% include 'header.jinja2' %}\n    <br />\n    <div class=\"container\">{% block content %} {% endblock %}</div>\n  </body>\n</html>\n```\n\n## main 페이지 작성\n\n- app폴더에 main “폴더” 를 만든다\n- main 폴더 내부에 templates 폴더와 `[main.py](http://main.py)` 를 생성한다\n\n- templates 폴더 내부에 main.jinja2 파일을 만든 후 다음 코드를 작성한다\\\n\n```html\n{% extends \"base.jinja2\" %}\n\n{% block content %}\n<h1>Hello World</h1>\n\n{% endblock %}\n```\n\n- `[main.py](http://main.py)` 에 다음 코드를 입력한다\n\n```python\n# app/main/main.py\nfrom flask import Blueprint, render_template\n\nbp = Blueprint('main', __name__, template_folder = \"templates\", url_prefix='/')\n\n@bp.route('/')\ndef main():\n    return render_template(\"main.jinja2\", title = 'main page')\n```\n\n- `app/__init__.py` 파일에서 main 코드의 일부 경로를 수정한다\n    \n    ![Untitled](/images/대시보드/Untitled%205.png)\n    \n\n```python\n# app/__init__.py\nimport os\n\nfrom flask import Flask\n\ndef create_app(test_config=None):\n    app = Flask(__name__, instance_relative_config=True)\n    app.config.from_mapping(\n        SECRET_KEY = 'development'\n    )\n.\n.\nfrom .main import main\napp.register_blueprint(main.bp)\n\nreturn app\n```\n\n- 이제 flask run 을 해서 서버테스트를 한다.\n\nflask 애플리케이션 팩토리 블루프린트를 이해해야함","slug":"대시보드","published":1,"updated":"2022-09-07T10:19:55.610Z","_id":"cl7a2g8m20005t8uo4bjf477r","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n<h1 id=\"대시보드\"><a href=\"#대시보드\" class=\"headerlink\" title=\"대시보드\"></a>대시보드</h1><ul>\n<li>웹 개발 프로젝트</li>\n<li>대시보드 오픈소스 &#x2F; 유료 툴</li>\n</ul>\n<h3 id=\"Flask-관련\"><a href=\"#Flask-관련\" class=\"headerlink\" title=\"Flask 관련\"></a>Flask 관련</h3><ul>\n<li>효율적으로 디자인 패턴하기(중요)</li>\n<li>웹 개발도 가능하게</li>\n</ul>\n<h3 id=\"R\"><a href=\"#R\" class=\"headerlink\" title=\"R\"></a>R</h3><ul>\n<li>Shiny 대시보드 프레임워크 로 통합되어있음</li>\n</ul>\n<h3 id=\"Python\"><a href=\"#Python\" class=\"headerlink\" title=\"Python\"></a>Python</h3><ul>\n<li><p>웹 개발 프레임워크가 Django, Flask 가 있는 것처럼</p>\n<p>  Python 프레임워크는 한두개가 아니라 다양하다.</p>\n</li>\n</ul>\n<p>대시보드 &#x3D; 시각화를 예쁘게 해주는 코드</p>\n<p>좀 더 세부적으로 하고 싶다면 plotly 를 써야 함</p>\n<ul>\n<li>구글에 python dashboard framework 만 쳐도 엄청 나옴</li>\n<li>dash python 주로 쓴다</li>\n</ul>\n<h3 id=\"Python-유료툴\"><a href=\"#Python-유료툴\" class=\"headerlink\" title=\"Python(유료툴)\"></a>Python(유료툴)</h3><ul>\n<li>대세 : 태블로, PowerBi</li>\n</ul>\n<h3 id=\"Java-스크립트-내-Python-코드-호출\"><a href=\"#Java-스크립트-내-Python-코드-호출\" class=\"headerlink\" title=\"Java 스크립트 내 Python 코드 호출\"></a>Java 스크립트 내 Python 코드 호출</h3><ul>\n<li>Jpython (에러가 많음)</li>\n<li>차라리 외부에서 만들고 iframe 형태로 만들어라</li>\n</ul>\n<hr>\n<h1 id=\"Flask를-가지고-대시보드-만들기\"><a href=\"#Flask를-가지고-대시보드-만들기\" class=\"headerlink\" title=\"Flask를 가지고 대시보드 만들기\"></a>Flask를 가지고 대시보드 만들기</h1><p>폴더를 하나 생성 후 VSCode 로 연다.</p>\n<p>가상환경 설정 후, 다음 코드를 입력한다.</p>\n<p><img src=\"/images/%EB%8C%80%EC%8B%9C%EB%B3%B4%EB%93%9C/Untitled.png\" alt=\"Untitled\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install dash plotly Flask pandas gunicorn psycopg2-binary SQLAlchemy Flask-SQLAlchemy</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>지금까지는 <a href=\"http://app.py/\">app.py</a>에 전부 다 스킬 코드를 집어 넣었지만,</p>\n<p>  이렇게 app 객체를 전역으로 사용하면 “순환참조오류” 가 발생할 확률이 높음</p>\n</li>\n<li><p>순환참조오류 : A → B , B → A  가 발생하는 경우. 무한반복됨</p>\n</li>\n<li><p>그렇다면 어떻게 해야되냐</p>\n<p>  app ‘폴더’ 를 하나 만들고 ‘<strong>init</strong>.py’ 라는 ‘파일’ 을 하나 생성한다.</p>\n</li>\n</ul>\n<p><img src=\"/images/%EB%8C%80%EC%8B%9C%EB%B3%B4%EB%93%9C/Untitled%201.png\" alt=\"Untitled\"></p>\n<ul>\n<li>가상환경에 접속한다.</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">virtualenv venv <span class=\"comment\"># 가상환경 생성</span></span><br><span class=\"line\"><span class=\"built_in\">source</span> venv/Scripts/activate <span class=\"comment\"># 가상환경 접속</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>필수 라이브러리를 설치한다</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install dash plotly Flask pandas gunicorn psycopg2-binary SQLAlchemy Flask-SQLAlchemy</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>__init__.py</code> 파일에 다음 코드를 작성한다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># app/__init__.py</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">create_app</span>(<span class=\"params\">test_config=<span class=\"literal\">None</span></span>):</span><br><span class=\"line\">    app = Flask(__name__, instance_relative_config=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    app.config.from_mapping(</span><br><span class=\"line\">        SECRET_KEY = <span class=\"string\">&#x27;development&#x27;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> test_config <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        app.config.from_pyfile(<span class=\"string\">&#x27;config.py&#x27;</span>, silent=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        app.config.from_mapping(test_config)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        os.makedirs(app.instance_path)</span><br><span class=\"line\">    <span class=\"keyword\">except</span> OSError:</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> app</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>main</code> 파일을 하나 만들고 다음 블루프린트 코드를 작성한다</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># app/main.py</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Blueprint, render_template</span><br><span class=\"line\"></span><br><span class=\"line\">bp = Blueprint(<span class=\"string\">&#x27;main&#x27;</span>, __name__, url_prefix=<span class=\"string\">&#x27;/&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@bp.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;Hello World!&quot;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p><code>__init__.py</code> 와 <code>main</code> 을 연결시키기 위해서 <code>__init__.py</code> 파일에 경로를 추가한다.</p>\n<p>  <img src=\"/images/%EB%8C%80%EC%8B%9C%EB%B3%B4%EB%93%9C/Untitled%202.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> . <span class=\"keyword\">import</span> main</span><br><span class=\"line\">app.register_blueprint(main.bp)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>이번에는 <a href=\"http://wsgi.py/\"><code>wsgi.py</code></a> 파일을 만들고 그 안에 코드를 작성한다</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> app <span class=\"keyword\">import</span> create_app</span><br><span class=\"line\"></span><br><span class=\"line\">app = create_app()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    app.run(host=<span class=\"string\">&#x27;0.0.0.0&#x27;</span>, debug=<span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>이제 flask run 을 터미널에 입력해서 서버테스트를 한다.(파일 위치는 다음과 같음)</p>\n<p>  <img src=\"/images/%EB%8C%80%EC%8B%9C%EB%B3%B4%EB%93%9C/Untitled%203.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/%EB%8C%80%EC%8B%9C%EB%B3%B4%EB%93%9C/Untitled%204.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<h2 id=\"templates-폴더\"><a href=\"#templates-폴더\" class=\"headerlink\" title=\"templates 폴더\"></a>templates 폴더</h2><ul>\n<li>이번에는 templates 폴더를 하나 만든다.</li>\n<li>bootstrap 5.2.0 버전을 활용하여 base.html 및 main.html 파일을 생성하여 Manu Bar와 Hello World를 출력하는 코드를 작성한다.</li>\n<li>이 때 확장자명 html 파일은 모두 jinja2로 저장하는 것에 주의한다.</li>\n</ul>\n<h3 id=\"1-header-jinja2-파일-작성\"><a href=\"#1-header-jinja2-파일-작성\" class=\"headerlink\" title=\"1. header.jinja2 파일 작성\"></a>1. header.jinja2 파일 작성</h3><ul>\n<li><p>app&#x2F;templates&#x2F;header.jinja2   이렇게 파일을 만든다.</p>\n<ul>\n<li>header.jinja2 파일에 아래 코드를 작성한다.</li>\n</ul>\n  <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-item&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-link active&quot;</span> <span class=\"attr\">aria-current</span>=<span class=\"string\">&quot;page&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/main&quot;</span>&gt;</span>Main<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-item&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-link active&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/dashapp1&quot;</span>&gt;</span>Dashapp1<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"2-base-jinja2-파일-작성\"><a href=\"#2-base-jinja2-파일-작성\" class=\"headerlink\" title=\"2. base.jinja2 파일 작성\"></a>2. base.jinja2 파일 작성</h3><ul>\n<li>이번에는 base.jinja2 파일을 만들고 header.jinja2 파일을 불러오자</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Bootstrap demo<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">integrity</span>=<span class=\"string\">&quot;sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">crossorigin</span>=<span class=\"string\">&quot;anonymous&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">integrity</span>=<span class=\"string\">&quot;sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">crossorigin</span>=<span class=\"string\">&quot;anonymous&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    &#123;% include &#x27;header.jinja2&#x27; %&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span>&#123;% block content %&#125; &#123;% endblock %&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"main-페이지-작성\"><a href=\"#main-페이지-작성\" class=\"headerlink\" title=\"main 페이지 작성\"></a>main 페이지 작성</h2><ul>\n<li><p>app폴더에 main “폴더” 를 만든다</p>\n</li>\n<li><p>main 폴더 내부에 templates 폴더와 <code>[main.py](http://main.py)</code> 를 생성한다</p>\n</li>\n<li><p>templates 폴더 내부에 main.jinja2 파일을 만든 후 다음 코드를 작성한다\\</p>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% extends &quot;base.jinja2&quot; %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% block content %&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello World<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>[main.py](http://main.py)</code> 에 다음 코드를 입력한다</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># app/main/main.py</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Blueprint, render_template</span><br><span class=\"line\"></span><br><span class=\"line\">bp = Blueprint(<span class=\"string\">&#x27;main&#x27;</span>, __name__, template_folder = <span class=\"string\">&quot;templates&quot;</span>, url_prefix=<span class=\"string\">&#x27;/&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@bp.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&quot;main.jinja2&quot;</span>, title = <span class=\"string\">&#x27;main page&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p><code>app/__init__.py</code> 파일에서 main 코드의 일부 경로를 수정한다</p>\n<p>  <img src=\"/images/%EB%8C%80%EC%8B%9C%EB%B3%B4%EB%93%9C/Untitled%205.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># app/__init__.py</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">create_app</span>(<span class=\"params\">test_config=<span class=\"literal\">None</span></span>):</span><br><span class=\"line\">    app = Flask(__name__, instance_relative_config=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    app.config.from_mapping(</span><br><span class=\"line\">        SECRET_KEY = <span class=\"string\">&#x27;development&#x27;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\"><span class=\"keyword\">from</span> .main <span class=\"keyword\">import</span> main</span><br><span class=\"line\">app.register_blueprint(main.bp)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> app</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>이제 flask run 을 해서 서버테스트를 한다.</li>\n</ul>\n<p>flask 애플리케이션 팩토리 블루프린트를 이해해야함</p>","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"<p>홈페이지 만들기</p>","more":"<p>홈페이지 만들기</p>\n<!-- excerpt -->\n\n<h1 id=\"대시보드\"><a href=\"#대시보드\" class=\"headerlink\" title=\"대시보드\"></a>대시보드</h1><ul>\n<li>웹 개발 프로젝트</li>\n<li>대시보드 오픈소스 &#x2F; 유료 툴</li>\n</ul>\n<h3 id=\"Flask-관련\"><a href=\"#Flask-관련\" class=\"headerlink\" title=\"Flask 관련\"></a>Flask 관련</h3><ul>\n<li>효율적으로 디자인 패턴하기(중요)</li>\n<li>웹 개발도 가능하게</li>\n</ul>\n<h3 id=\"R\"><a href=\"#R\" class=\"headerlink\" title=\"R\"></a>R</h3><ul>\n<li>Shiny 대시보드 프레임워크 로 통합되어있음</li>\n</ul>\n<h3 id=\"Python\"><a href=\"#Python\" class=\"headerlink\" title=\"Python\"></a>Python</h3><ul>\n<li><p>웹 개발 프레임워크가 Django, Flask 가 있는 것처럼</p>\n<p>  Python 프레임워크는 한두개가 아니라 다양하다.</p>\n</li>\n</ul>\n<p>대시보드 &#x3D; 시각화를 예쁘게 해주는 코드</p>\n<p>좀 더 세부적으로 하고 싶다면 plotly 를 써야 함</p>\n<ul>\n<li>구글에 python dashboard framework 만 쳐도 엄청 나옴</li>\n<li>dash python 주로 쓴다</li>\n</ul>\n<h3 id=\"Python-유료툴\"><a href=\"#Python-유료툴\" class=\"headerlink\" title=\"Python(유료툴)\"></a>Python(유료툴)</h3><ul>\n<li>대세 : 태블로, PowerBi</li>\n</ul>\n<h3 id=\"Java-스크립트-내-Python-코드-호출\"><a href=\"#Java-스크립트-내-Python-코드-호출\" class=\"headerlink\" title=\"Java 스크립트 내 Python 코드 호출\"></a>Java 스크립트 내 Python 코드 호출</h3><ul>\n<li>Jpython (에러가 많음)</li>\n<li>차라리 외부에서 만들고 iframe 형태로 만들어라</li>\n</ul>\n<hr>\n<h1 id=\"Flask를-가지고-대시보드-만들기\"><a href=\"#Flask를-가지고-대시보드-만들기\" class=\"headerlink\" title=\"Flask를 가지고 대시보드 만들기\"></a>Flask를 가지고 대시보드 만들기</h1><p>폴더를 하나 생성 후 VSCode 로 연다.</p>\n<p>가상환경 설정 후, 다음 코드를 입력한다.</p>\n<p><img src=\"/images/%EB%8C%80%EC%8B%9C%EB%B3%B4%EB%93%9C/Untitled.png\" alt=\"Untitled\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install dash plotly Flask pandas gunicorn psycopg2-binary SQLAlchemy Flask-SQLAlchemy</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>지금까지는 <a href=\"http://app.py/\">app.py</a>에 전부 다 스킬 코드를 집어 넣었지만,</p>\n<p>  이렇게 app 객체를 전역으로 사용하면 “순환참조오류” 가 발생할 확률이 높음</p>\n</li>\n<li><p>순환참조오류 : A → B , B → A  가 발생하는 경우. 무한반복됨</p>\n</li>\n<li><p>그렇다면 어떻게 해야되냐</p>\n<p>  app ‘폴더’ 를 하나 만들고 ‘<strong>init</strong>.py’ 라는 ‘파일’ 을 하나 생성한다.</p>\n</li>\n</ul>\n<p><img src=\"/images/%EB%8C%80%EC%8B%9C%EB%B3%B4%EB%93%9C/Untitled%201.png\" alt=\"Untitled\"></p>\n<ul>\n<li>가상환경에 접속한다.</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">virtualenv venv <span class=\"comment\"># 가상환경 생성</span></span><br><span class=\"line\"><span class=\"built_in\">source</span> venv/Scripts/activate <span class=\"comment\"># 가상환경 접속</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>필수 라이브러리를 설치한다</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install dash plotly Flask pandas gunicorn psycopg2-binary SQLAlchemy Flask-SQLAlchemy</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>__init__.py</code> 파일에 다음 코드를 작성한다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># app/__init__.py</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">create_app</span>(<span class=\"params\">test_config=<span class=\"literal\">None</span></span>):</span><br><span class=\"line\">    app = Flask(__name__, instance_relative_config=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    app.config.from_mapping(</span><br><span class=\"line\">        SECRET_KEY = <span class=\"string\">&#x27;development&#x27;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> test_config <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        app.config.from_pyfile(<span class=\"string\">&#x27;config.py&#x27;</span>, silent=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        app.config.from_mapping(test_config)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        os.makedirs(app.instance_path)</span><br><span class=\"line\">    <span class=\"keyword\">except</span> OSError:</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> app</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>main</code> 파일을 하나 만들고 다음 블루프린트 코드를 작성한다</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># app/main.py</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Blueprint, render_template</span><br><span class=\"line\"></span><br><span class=\"line\">bp = Blueprint(<span class=\"string\">&#x27;main&#x27;</span>, __name__, url_prefix=<span class=\"string\">&#x27;/&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@bp.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;Hello World!&quot;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p><code>__init__.py</code> 와 <code>main</code> 을 연결시키기 위해서 <code>__init__.py</code> 파일에 경로를 추가한다.</p>\n<p>  <img src=\"/images/%EB%8C%80%EC%8B%9C%EB%B3%B4%EB%93%9C/Untitled%202.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> . <span class=\"keyword\">import</span> main</span><br><span class=\"line\">app.register_blueprint(main.bp)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>이번에는 <a href=\"http://wsgi.py/\"><code>wsgi.py</code></a> 파일을 만들고 그 안에 코드를 작성한다</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> app <span class=\"keyword\">import</span> create_app</span><br><span class=\"line\"></span><br><span class=\"line\">app = create_app()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    app.run(host=<span class=\"string\">&#x27;0.0.0.0&#x27;</span>, debug=<span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>이제 flask run 을 터미널에 입력해서 서버테스트를 한다.(파일 위치는 다음과 같음)</p>\n<p>  <img src=\"/images/%EB%8C%80%EC%8B%9C%EB%B3%B4%EB%93%9C/Untitled%203.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/%EB%8C%80%EC%8B%9C%EB%B3%B4%EB%93%9C/Untitled%204.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<h2 id=\"templates-폴더\"><a href=\"#templates-폴더\" class=\"headerlink\" title=\"templates 폴더\"></a>templates 폴더</h2><ul>\n<li>이번에는 templates 폴더를 하나 만든다.</li>\n<li>bootstrap 5.2.0 버전을 활용하여 base.html 및 main.html 파일을 생성하여 Manu Bar와 Hello World를 출력하는 코드를 작성한다.</li>\n<li>이 때 확장자명 html 파일은 모두 jinja2로 저장하는 것에 주의한다.</li>\n</ul>\n<h3 id=\"1-header-jinja2-파일-작성\"><a href=\"#1-header-jinja2-파일-작성\" class=\"headerlink\" title=\"1. header.jinja2 파일 작성\"></a>1. header.jinja2 파일 작성</h3><ul>\n<li><p>app&#x2F;templates&#x2F;header.jinja2   이렇게 파일을 만든다.</p>\n<ul>\n<li>header.jinja2 파일에 아래 코드를 작성한다.</li>\n</ul>\n  <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-item&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-link active&quot;</span> <span class=\"attr\">aria-current</span>=<span class=\"string\">&quot;page&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/main&quot;</span>&gt;</span>Main<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-item&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-link active&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/dashapp1&quot;</span>&gt;</span>Dashapp1<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"2-base-jinja2-파일-작성\"><a href=\"#2-base-jinja2-파일-작성\" class=\"headerlink\" title=\"2. base.jinja2 파일 작성\"></a>2. base.jinja2 파일 작성</h3><ul>\n<li>이번에는 base.jinja2 파일을 만들고 header.jinja2 파일을 불러오자</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Bootstrap demo<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">integrity</span>=<span class=\"string\">&quot;sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">crossorigin</span>=<span class=\"string\">&quot;anonymous&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">integrity</span>=<span class=\"string\">&quot;sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">crossorigin</span>=<span class=\"string\">&quot;anonymous&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    &#123;% include &#x27;header.jinja2&#x27; %&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span>&#123;% block content %&#125; &#123;% endblock %&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"main-페이지-작성\"><a href=\"#main-페이지-작성\" class=\"headerlink\" title=\"main 페이지 작성\"></a>main 페이지 작성</h2><ul>\n<li><p>app폴더에 main “폴더” 를 만든다</p>\n</li>\n<li><p>main 폴더 내부에 templates 폴더와 <code>[main.py](http://main.py)</code> 를 생성한다</p>\n</li>\n<li><p>templates 폴더 내부에 main.jinja2 파일을 만든 후 다음 코드를 작성한다\\</p>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% extends &quot;base.jinja2&quot; %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% block content %&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello World<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>[main.py](http://main.py)</code> 에 다음 코드를 입력한다</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># app/main/main.py</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Blueprint, render_template</span><br><span class=\"line\"></span><br><span class=\"line\">bp = Blueprint(<span class=\"string\">&#x27;main&#x27;</span>, __name__, template_folder = <span class=\"string\">&quot;templates&quot;</span>, url_prefix=<span class=\"string\">&#x27;/&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@bp.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&quot;main.jinja2&quot;</span>, title = <span class=\"string\">&#x27;main page&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p><code>app/__init__.py</code> 파일에서 main 코드의 일부 경로를 수정한다</p>\n<p>  <img src=\"/images/%EB%8C%80%EC%8B%9C%EB%B3%B4%EB%93%9C/Untitled%205.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># app/__init__.py</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">create_app</span>(<span class=\"params\">test_config=<span class=\"literal\">None</span></span>):</span><br><span class=\"line\">    app = Flask(__name__, instance_relative_config=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    app.config.from_mapping(</span><br><span class=\"line\">        SECRET_KEY = <span class=\"string\">&#x27;development&#x27;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\"><span class=\"keyword\">from</span> .main <span class=\"keyword\">import</span> main</span><br><span class=\"line\">app.register_blueprint(main.bp)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> app</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>이제 flask run 을 해서 서버테스트를 한다.</li>\n</ul>\n<p>flask 애플리케이션 팩토리 블루프린트를 이해해야함</p>\n"},{"title":"JScript 조건문, 반복문","output":{"html_document":{"keep_md":true}},"clearReading":true,"metaAlignment":"center","date":"2022-09-07T10:23:21.000Z","_content":"\n- if문, switch문, for문, while문\n<!-- excerpt -->\n- if 조건문\n    - if / else if / else 를 사용해서 조건문을 만들 수 있다.\n    - if문 안에 if문을 사용하여 조건문을 계속 만들 수 있다.\n    - else if 와 else 는 생략 가능하다.\n    - if (조건1){실행할 코드}\n        \n        else if (조건2){실행할 코드}\n        \n        else {조건1, 2 가 아닐 경우 실행할 코드}\n\n- switch 조건문\n    - switch(조건){\n            case 조건1:\n        조건1일 때의 본문;\n            case 조건2:\n        조건2일 때의 본문;\n    \n    - break를 만날 때 까지 계속 내려간다. 중간에 break 값이 있으면 거짓이어도 break됨\n    \n- for 문\n    - for (시작;  범위;  반복할 스탭){\n               실행할 반복문;\n        }\n    - 범위안에 해당하는 동안 반복문을 반복한다.\n    - 이중 for 문을 사용할 수도 있고, for문 안에 if문 등등 응용할 수도 있다.\n    - 반복하는 횟수가 중요할 때 유용한 함수 (ex 구구단)\n\n- while 문\n    - while (조건){\n          실행할 반복문\n      }\n    - while 문은 for 문과 다르게 무한반복이다.\n    - 빠져나오려면 반복문 안에 break를 삽입해야한다.\n    - 횟수보단 조건이 중요할 때 유용한 함수\n    - continue를 만나면 continue 밑에 있는 반복문은 실행하지 않고 다음 반복문으로 넘어간다.","source":"_posts/day0907.md","raw":"---\ntitle: \"JScript 조건문, 반복문\"\noutput:\n  html_document:\n    keep_md: true\ncategories: JScript\nclearReading: true\nmetaAlignment: center\ndate: '2022-09-07 19:23:21'\n---\n\n- if문, switch문, for문, while문\n<!-- excerpt -->\n- if 조건문\n    - if / else if / else 를 사용해서 조건문을 만들 수 있다.\n    - if문 안에 if문을 사용하여 조건문을 계속 만들 수 있다.\n    - else if 와 else 는 생략 가능하다.\n    - if (조건1){실행할 코드}\n        \n        else if (조건2){실행할 코드}\n        \n        else {조건1, 2 가 아닐 경우 실행할 코드}\n\n- switch 조건문\n    - switch(조건){\n            case 조건1:\n        조건1일 때의 본문;\n            case 조건2:\n        조건2일 때의 본문;\n    \n    - break를 만날 때 까지 계속 내려간다. 중간에 break 값이 있으면 거짓이어도 break됨\n    \n- for 문\n    - for (시작;  범위;  반복할 스탭){\n               실행할 반복문;\n        }\n    - 범위안에 해당하는 동안 반복문을 반복한다.\n    - 이중 for 문을 사용할 수도 있고, for문 안에 if문 등등 응용할 수도 있다.\n    - 반복하는 횟수가 중요할 때 유용한 함수 (ex 구구단)\n\n- while 문\n    - while (조건){\n          실행할 반복문\n      }\n    - while 문은 for 문과 다르게 무한반복이다.\n    - 빠져나오려면 반복문 안에 break를 삽입해야한다.\n    - 횟수보단 조건이 중요할 때 유용한 함수\n    - continue를 만나면 continue 밑에 있는 반복문은 실행하지 않고 다음 반복문으로 넘어간다.","slug":"day0907","published":1,"updated":"2023-04-15T21:13:32.100Z","_id":"cl7rh8gwo0000c0u0erorfcyt","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt --></li>\n<li><p>if 조건문</p>\n<ul>\n<li><p>if &#x2F; else if &#x2F; else 를 사용해서 조건문을 만들 수 있다.</p>\n</li>\n<li><p>if문 안에 if문을 사용하여 조건문을 계속 만들 수 있다.</p>\n</li>\n<li><p>else if 와 else 는 생략 가능하다.</p>\n</li>\n<li><p>if (조건1){실행할 코드}</p>\n<p>  else if (조건2){실행할 코드}</p>\n<p>  else {조건1, 2 가 아닐 경우 실행할 코드}</p>\n</li>\n</ul>\n</li>\n<li><p>switch 조건문</p>\n<ul>\n<li><p>switch(조건){<br>  case 조건1:<br>  조건1일 때의 본문;<br>  case 조건2:<br>  조건2일 때의 본문;</p>\n</li>\n<li><p>break를 만날 때 까지 계속 내려간다. 중간에 break 값이 있으면 거짓이어도 break됨</p>\n</li>\n</ul>\n</li>\n<li><p>for 문</p>\n<ul>\n<li>for (시작;  범위;  반복할 스탭){<br>     실행할 반복문;<br>  }</li>\n<li>범위안에 해당하는 동안 반복문을 반복한다.</li>\n<li>이중 for 문을 사용할 수도 있고, for문 안에 if문 등등 응용할 수도 있다.</li>\n<li>반복하는 횟수가 중요할 때 유용한 함수 (ex 구구단)</li>\n</ul>\n</li>\n<li><p>while 문</p>\n<ul>\n<li>while (조건){<br>실행할 반복문<br>}</li>\n<li>while 문은 for 문과 다르게 무한반복이다.</li>\n<li>빠져나오려면 반복문 안에 break를 삽입해야한다.</li>\n<li>횟수보단 조건이 중요할 때 유용한 함수</li>\n<li>continue를 만나면 continue 밑에 있는 반복문은 실행하지 않고 다음 반복문으로 넘어간다.</li>\n</ul>\n</li>\n</ul>","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"<ul>\n<li><p>if문, switch문, for문, while문</p>","more":"<ul>\n<li><p>if문, switch문, for문, while문</p>\n<!-- excerpt --></li>\n<li><p>if 조건문</p>\n<ul>\n<li><p>if &#x2F; else if &#x2F; else 를 사용해서 조건문을 만들 수 있다.</p>\n</li>\n<li><p>if문 안에 if문을 사용하여 조건문을 계속 만들 수 있다.</p>\n</li>\n<li><p>else if 와 else 는 생략 가능하다.</p>\n</li>\n<li><p>if (조건1){실행할 코드}</p>\n<p>  else if (조건2){실행할 코드}</p>\n<p>  else {조건1, 2 가 아닐 경우 실행할 코드}</p>\n</li>\n</ul>\n</li>\n<li><p>switch 조건문</p>\n<ul>\n<li><p>switch(조건){<br>  case 조건1:<br>  조건1일 때의 본문;<br>  case 조건2:<br>  조건2일 때의 본문;</p>\n</li>\n<li><p>break를 만날 때 까지 계속 내려간다. 중간에 break 값이 있으면 거짓이어도 break됨</p>\n</li>\n</ul>\n</li>\n<li><p>for 문</p>\n<ul>\n<li>for (시작;  범위;  반복할 스탭){<br>     실행할 반복문;<br>  }</li>\n<li>범위안에 해당하는 동안 반복문을 반복한다.</li>\n<li>이중 for 문을 사용할 수도 있고, for문 안에 if문 등등 응용할 수도 있다.</li>\n<li>반복하는 횟수가 중요할 때 유용한 함수 (ex 구구단)</li>\n</ul>\n</li>\n<li><p>while 문</p>\n<ul>\n<li>while (조건){<br>실행할 반복문<br>}</li>\n<li>while 문은 for 문과 다르게 무한반복이다.</li>\n<li>빠져나오려면 반복문 안에 break를 삽입해야한다.</li>\n<li>횟수보단 조건이 중요할 때 유용한 함수</li>\n<li>continue를 만나면 continue 밑에 있는 반복문은 실행하지 않고 다음 반복문으로 넘어간다.</li>\n</ul>\n</li>\n</ul>\n"},{"title":"Heroku PostgreSQL 연동","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"thumbnailImage":"heroku.png","thumbnailImagePosition":"left","metaAlignment":"center","date":"2022-09-03T14:50:23.000Z","_content":"\n-  Heroku PostgreSQL 연동\n<!-- excerpt -->\n- Heroku에 DB를 올려서 PostgreSQL 연동하여 배포하는 형식\n\n### 사전준비\n\n- Github에 각 개인에게 맞는 Github Repo를 생성한다.\n- 가상환경 설정을 진행한다.\n- PostgreSQL DB를 설정한다.\n    - [https://www.notion.so/Heroku-f34fbae1867049ad8e297e53ad435282](https://www.notion.so/Heroku-f34fbae1867049ad8e297e53ad435282)\n        \n        \n\n### Postgres 설정\n\n- 먼저 Local 에서 PostgreSQL을 다운로드 하여 설치한 후, 시스템 환경 변수 설정을 한다.\n    \n    ![Untitled](/images/day0903/Untitled.png)\n    \n    ![Untitled](/images/day0903/Untitled%201.png)\n    \n    ![Untitled](/images/day0903/Untitled%202.png)\n    \n- 그 후에 Heroku 에서 Postgres 를 설정하기 위해 Heroku Addon 사이트에 접속한다.\n    - [https://elements.heroku.com/addons/heroku-postgresql](https://elements.heroku.com/addons/heroku-postgresql)\n    \n    ![Untitled](/images/day0903/Untitled%203.png)\n    \n\n- 설정 방법은 크게 2가지가 있다.\n    - CLI(가상환경 터미널)에서 설치하는 방법\n    \n    ```bash\n    heroku addons:create 내 프로젝트 이름:hobby-dev\n    ```\n    \n    - Web UI 를 통해서 설치하는 방법\n        - Install Heroku Postgres 버튼을 클릭 후 본인에 맞는 프로젝트를 연결한다.\n            \n            ![Untitled](/images/day0903/Untitled%204.png)\n            \n    \n    - Settings 탭을 누른 후, View Credentials를 클릭한다.\n        \n        ![Untitled](/images/day0903/Untitled%205.png)\n        \n    \n    - Password,  URI  등 기억하자.\n    \n    ![Untitled](/images/day0903/Untitled%206.png)\n    \n\n## 테이블 생성 및 데이터 추가 / 조회\n\n- Local 버전에서 iris 테이블을 불러온 후 PostgreSQL에 추가하는 코드를 app.py에 아래와 같이 추가한다.\n\n```bash\n# -*- coding: utf-8 -*-\nfrom flask import Flask\nimport pandas as pd \nfrom sqlalchemy import create_engine, MetaData, Table, Column, Integer, String\n\n## DB 연결 Local\ndef db_create():\n    # 로컬\n\t\tengine = create_engine(\"postgresql://postgres:1234@localhost:5432/chatbot\", echo = False)\n\t\t\n\t\t# Heroku\n\t\tengine = create_engine(\"postgresql://mzgnoxixyinhjd:d7ac5c7c91e4b4b82bfbdc56dc09a762cf9025423f26c0d0d5d0a6a1a6442765@ec2-34-235-31-124.compute-1.amazonaws.com:5432/dfqa3qaa76tclf\", echo = False)\n\n    engine.connect()\n    engine.execute(\"\"\"\n        CREATE TABLE IF NOT EXISTS iris(\n            sepal_length FLOAT NOT NULL,\n            sepal_width FLOAT NOT NULL,\n            pepal_length FLOAT NOT NULL,\n            pepal_width FLOAT NOT NULL,\n            species VARCHAR(100) NOT NULL\n        );\"\"\"\n    )\n    data = pd.read_csv('data/iris.csv')\n    print(data)\n    data.to_sql(name='iris', con=engine, schema = 'public', if_exists='replace', index=False)\n\napp = Flask(__name__)\n\n@app.route(\"/\")\ndef index():\n    db_create()\n    return \"Hello World!\"\n\nif __name__ == \"__main__\":\n    db_create()\n    app.run()\n```\n\n- 이제 Flask 파일을 실행한 후, 정상적으로 DB가 들어가졌는지 확인한다.\n\n```bash\npython app.py\n```\n\n![Untitled](/images/day0903/Untitled%207.png)\n\n## Heroku에 배포하기\n\n- 이제 Heroku에 동일하게 파일을 배포한다.\n- 이 때 변경할 것은 URI만 변경해주고 다시 Push 한다\n    \n    ```bash\n    git add .\n    git commit -m \"initial updated\"\n    git push # github repo에 추가\n    git push heroku main\n    ```\n    \n\n- 코드를 수정했기 때문에, 우선 웹사이트가 열리는지를 확인해야 한다.\n\n![Untitled](/images/day0903/Untitled%208.png)\n\n- 이번에는 pgAdmin 에 새로운 서버를 생성한 후, 확인해본다. 먼저 아래와 같이 새로운 서버를 작성한다.\n    - 여기서 아까 기억했던 Password, Username 등을 작성한다.\n    - General 은 아무 이름이나 작성가능\n    \n    ![Untitled](/images/day0903/Untitled%209.png)\n    \n\n- 그 후에 본인에게 맞는 DB를 찾고 조회가 되는지 확인한다.\n\n![Untitled](/images/day0903/Untitled%2010.png)","source":"_posts/day0903.md","raw":"---\ntitle: \"Heroku PostgreSQL 연동\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: python\nclearReading: true\nthumbnailImage: heroku.png\nthumbnailImagePosition: left\nmetaAlignment: center\ndate: '2022-09-03 23:50:23'\n---\n\n-  Heroku PostgreSQL 연동\n<!-- excerpt -->\n- Heroku에 DB를 올려서 PostgreSQL 연동하여 배포하는 형식\n\n### 사전준비\n\n- Github에 각 개인에게 맞는 Github Repo를 생성한다.\n- 가상환경 설정을 진행한다.\n- PostgreSQL DB를 설정한다.\n    - [https://www.notion.so/Heroku-f34fbae1867049ad8e297e53ad435282](https://www.notion.so/Heroku-f34fbae1867049ad8e297e53ad435282)\n        \n        \n\n### Postgres 설정\n\n- 먼저 Local 에서 PostgreSQL을 다운로드 하여 설치한 후, 시스템 환경 변수 설정을 한다.\n    \n    ![Untitled](/images/day0903/Untitled.png)\n    \n    ![Untitled](/images/day0903/Untitled%201.png)\n    \n    ![Untitled](/images/day0903/Untitled%202.png)\n    \n- 그 후에 Heroku 에서 Postgres 를 설정하기 위해 Heroku Addon 사이트에 접속한다.\n    - [https://elements.heroku.com/addons/heroku-postgresql](https://elements.heroku.com/addons/heroku-postgresql)\n    \n    ![Untitled](/images/day0903/Untitled%203.png)\n    \n\n- 설정 방법은 크게 2가지가 있다.\n    - CLI(가상환경 터미널)에서 설치하는 방법\n    \n    ```bash\n    heroku addons:create 내 프로젝트 이름:hobby-dev\n    ```\n    \n    - Web UI 를 통해서 설치하는 방법\n        - Install Heroku Postgres 버튼을 클릭 후 본인에 맞는 프로젝트를 연결한다.\n            \n            ![Untitled](/images/day0903/Untitled%204.png)\n            \n    \n    - Settings 탭을 누른 후, View Credentials를 클릭한다.\n        \n        ![Untitled](/images/day0903/Untitled%205.png)\n        \n    \n    - Password,  URI  등 기억하자.\n    \n    ![Untitled](/images/day0903/Untitled%206.png)\n    \n\n## 테이블 생성 및 데이터 추가 / 조회\n\n- Local 버전에서 iris 테이블을 불러온 후 PostgreSQL에 추가하는 코드를 app.py에 아래와 같이 추가한다.\n\n```bash\n# -*- coding: utf-8 -*-\nfrom flask import Flask\nimport pandas as pd \nfrom sqlalchemy import create_engine, MetaData, Table, Column, Integer, String\n\n## DB 연결 Local\ndef db_create():\n    # 로컬\n\t\tengine = create_engine(\"postgresql://postgres:1234@localhost:5432/chatbot\", echo = False)\n\t\t\n\t\t# Heroku\n\t\tengine = create_engine(\"postgresql://mzgnoxixyinhjd:d7ac5c7c91e4b4b82bfbdc56dc09a762cf9025423f26c0d0d5d0a6a1a6442765@ec2-34-235-31-124.compute-1.amazonaws.com:5432/dfqa3qaa76tclf\", echo = False)\n\n    engine.connect()\n    engine.execute(\"\"\"\n        CREATE TABLE IF NOT EXISTS iris(\n            sepal_length FLOAT NOT NULL,\n            sepal_width FLOAT NOT NULL,\n            pepal_length FLOAT NOT NULL,\n            pepal_width FLOAT NOT NULL,\n            species VARCHAR(100) NOT NULL\n        );\"\"\"\n    )\n    data = pd.read_csv('data/iris.csv')\n    print(data)\n    data.to_sql(name='iris', con=engine, schema = 'public', if_exists='replace', index=False)\n\napp = Flask(__name__)\n\n@app.route(\"/\")\ndef index():\n    db_create()\n    return \"Hello World!\"\n\nif __name__ == \"__main__\":\n    db_create()\n    app.run()\n```\n\n- 이제 Flask 파일을 실행한 후, 정상적으로 DB가 들어가졌는지 확인한다.\n\n```bash\npython app.py\n```\n\n![Untitled](/images/day0903/Untitled%207.png)\n\n## Heroku에 배포하기\n\n- 이제 Heroku에 동일하게 파일을 배포한다.\n- 이 때 변경할 것은 URI만 변경해주고 다시 Push 한다\n    \n    ```bash\n    git add .\n    git commit -m \"initial updated\"\n    git push # github repo에 추가\n    git push heroku main\n    ```\n    \n\n- 코드를 수정했기 때문에, 우선 웹사이트가 열리는지를 확인해야 한다.\n\n![Untitled](/images/day0903/Untitled%208.png)\n\n- 이번에는 pgAdmin 에 새로운 서버를 생성한 후, 확인해본다. 먼저 아래와 같이 새로운 서버를 작성한다.\n    - 여기서 아까 기억했던 Password, Username 등을 작성한다.\n    - General 은 아무 이름이나 작성가능\n    \n    ![Untitled](/images/day0903/Untitled%209.png)\n    \n\n- 그 후에 본인에게 맞는 DB를 찾고 조회가 되는지 확인한다.\n\n![Untitled](/images/day0903/Untitled%2010.png)","slug":"day0903","published":1,"updated":"2022-09-07T10:28:10.638Z","_id":"cl7rh8gwp0001c0u0f1j3197h","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt --></li>\n<li>Heroku에 DB를 올려서 PostgreSQL 연동하여 배포하는 형식</li>\n</ul>\n<h3 id=\"사전준비\"><a href=\"#사전준비\" class=\"headerlink\" title=\"사전준비\"></a>사전준비</h3><ul>\n<li>Github에 각 개인에게 맞는 Github Repo를 생성한다.</li>\n<li>가상환경 설정을 진행한다.</li>\n<li>PostgreSQL DB를 설정한다.<ul>\n<li><a href=\"https://www.notion.so/Heroku-f34fbae1867049ad8e297e53ad435282\">https://www.notion.so/Heroku-f34fbae1867049ad8e297e53ad435282</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Postgres-설정\"><a href=\"#Postgres-설정\" class=\"headerlink\" title=\"Postgres 설정\"></a>Postgres 설정</h3><ul>\n<li><p>먼저 Local 에서 PostgreSQL을 다운로드 하여 설치한 후, 시스템 환경 변수 설정을 한다.</p>\n<p>  <img src=\"/images/day0903/Untitled.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/day0903/Untitled%201.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/day0903/Untitled%202.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>그 후에 Heroku 에서 Postgres 를 설정하기 위해 Heroku Addon 사이트에 접속한다.</p>\n<ul>\n<li><a href=\"https://elements.heroku.com/addons/heroku-postgresql\">https://elements.heroku.com/addons/heroku-postgresql</a></li>\n</ul>\n<p>  <img src=\"/images/day0903/Untitled%203.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>설정 방법은 크게 2가지가 있다.</p>\n<ul>\n<li>CLI(가상환경 터미널)에서 설치하는 방법</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">heroku addons:create 내 프로젝트 이름:hobby-dev</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>Web UI 를 통해서 설치하는 방법</p>\n<ul>\n<li><p>Install Heroku Postgres 버튼을 클릭 후 본인에 맞는 프로젝트를 연결한다.</p>\n<p>  <img src=\"/images/day0903/Untitled%204.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n</li>\n<li><p>Settings 탭을 누른 후, View Credentials를 클릭한다.</p>\n<p>  <img src=\"/images/day0903/Untitled%205.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>Password,  URI  등 기억하자.</p>\n</li>\n</ul>\n<p>  <img src=\"/images/day0903/Untitled%206.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<h2 id=\"테이블-생성-및-데이터-추가-x2F-조회\"><a href=\"#테이블-생성-및-데이터-추가-x2F-조회\" class=\"headerlink\" title=\"테이블 생성 및 데이터 추가 &#x2F; 조회\"></a>테이블 생성 및 데이터 추가 &#x2F; 조회</h2><ul>\n<li>Local 버전에서 iris 테이블을 불러온 후 PostgreSQL에 추가하는 코드를 app.py에 아래와 같이 추가한다.</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\">from flask import Flask</span><br><span class=\"line\">import pandas as pd </span><br><span class=\"line\">from sqlalchemy import create_engine, MetaData, Table, Column, Integer, String</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## DB 연결 Local</span></span><br><span class=\"line\">def db_create():</span><br><span class=\"line\">    <span class=\"comment\"># 로컬</span></span><br><span class=\"line\">\t\tengine = create_engine(<span class=\"string\">&quot;postgresql://postgres:1234@localhost:5432/chatbot&quot;</span>, <span class=\"built_in\">echo</span> = False)</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\"># Heroku</span></span><br><span class=\"line\">\t\tengine = create_engine(<span class=\"string\">&quot;postgresql://mzgnoxixyinhjd:d7ac5c7c91e4b4b82bfbdc56dc09a762cf9025423f26c0d0d5d0a6a1a6442765@ec2-34-235-31-124.compute-1.amazonaws.com:5432/dfqa3qaa76tclf&quot;</span>, <span class=\"built_in\">echo</span> = False)</span><br><span class=\"line\"></span><br><span class=\"line\">    engine.connect()</span><br><span class=\"line\">    engine.execute(<span class=\"string\">&quot;&quot;</span><span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">        CREATE TABLE IF NOT EXISTS iris(</span></span><br><span class=\"line\"><span class=\"string\">            sepal_length FLOAT NOT NULL,</span></span><br><span class=\"line\"><span class=\"string\">            sepal_width FLOAT NOT NULL,</span></span><br><span class=\"line\"><span class=\"string\">            pepal_length FLOAT NOT NULL,</span></span><br><span class=\"line\"><span class=\"string\">            pepal_width FLOAT NOT NULL,</span></span><br><span class=\"line\"><span class=\"string\">            species VARCHAR(100) NOT NULL</span></span><br><span class=\"line\"><span class=\"string\">        );&quot;</span><span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    data = pd.read_csv(<span class=\"string\">&#x27;data/iris.csv&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(data)</span><br><span class=\"line\">    data.to_sql(name=<span class=\"string\">&#x27;iris&#x27;</span>, con=engine, schema = <span class=\"string\">&#x27;public&#x27;</span>, if_exists=<span class=\"string\">&#x27;replace&#x27;</span>, index=False)</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(<span class=\"string\">&quot;/&quot;</span>)</span><br><span class=\"line\">def index():</span><br><span class=\"line\">    db_create()</span><br><span class=\"line\">    <span class=\"built_in\">return</span> <span class=\"string\">&quot;Hello World!&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    db_create()</span><br><span class=\"line\">    app.run()</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>이제 Flask 파일을 실행한 후, 정상적으로 DB가 들어가졌는지 확인한다.</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python app.py</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/day0903/Untitled%207.png\" alt=\"Untitled\"></p>\n<h2 id=\"Heroku에-배포하기\"><a href=\"#Heroku에-배포하기\" class=\"headerlink\" title=\"Heroku에 배포하기\"></a>Heroku에 배포하기</h2><ul>\n<li><p>이제 Heroku에 동일하게 파일을 배포한다.</p>\n</li>\n<li><p>이 때 변경할 것은 URI만 변경해주고 다시 Push 한다</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;initial updated&quot;</span></span><br><span class=\"line\">git push <span class=\"comment\"># github repo에 추가</span></span><br><span class=\"line\">git push heroku main</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>코드를 수정했기 때문에, 우선 웹사이트가 열리는지를 확인해야 한다.</p>\n</li>\n</ul>\n<p><img src=\"/images/day0903/Untitled%208.png\" alt=\"Untitled\"></p>\n<ul>\n<li><p>이번에는 pgAdmin 에 새로운 서버를 생성한 후, 확인해본다. 먼저 아래와 같이 새로운 서버를 작성한다.</p>\n<ul>\n<li>여기서 아까 기억했던 Password, Username 등을 작성한다.</li>\n<li>General 은 아무 이름이나 작성가능</li>\n</ul>\n<p>  <img src=\"/images/day0903/Untitled%209.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>그 후에 본인에게 맞는 DB를 찾고 조회가 되는지 확인한다.</p>\n</li>\n</ul>\n<p><img src=\"/images/day0903/Untitled%2010.png\" alt=\"Untitled\"></p>","site":{"data":{}},"thumbnailImageUrl":"http://neewlife.github.io/2022/09/03/day0903/heroku.png","excerpt":"<ul>\n<li>Heroku PostgreSQL 연동","more":"<ul>\n<li>Heroku PostgreSQL 연동<!-- excerpt --></li>\n<li>Heroku에 DB를 올려서 PostgreSQL 연동하여 배포하는 형식</li>\n</ul>\n<h3 id=\"사전준비\"><a href=\"#사전준비\" class=\"headerlink\" title=\"사전준비\"></a>사전준비</h3><ul>\n<li>Github에 각 개인에게 맞는 Github Repo를 생성한다.</li>\n<li>가상환경 설정을 진행한다.</li>\n<li>PostgreSQL DB를 설정한다.<ul>\n<li><a href=\"https://www.notion.so/Heroku-f34fbae1867049ad8e297e53ad435282\">https://www.notion.so/Heroku-f34fbae1867049ad8e297e53ad435282</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Postgres-설정\"><a href=\"#Postgres-설정\" class=\"headerlink\" title=\"Postgres 설정\"></a>Postgres 설정</h3><ul>\n<li><p>먼저 Local 에서 PostgreSQL을 다운로드 하여 설치한 후, 시스템 환경 변수 설정을 한다.</p>\n<p>  <img src=\"/images/day0903/Untitled.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/day0903/Untitled%201.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/day0903/Untitled%202.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>그 후에 Heroku 에서 Postgres 를 설정하기 위해 Heroku Addon 사이트에 접속한다.</p>\n<ul>\n<li><a href=\"https://elements.heroku.com/addons/heroku-postgresql\">https://elements.heroku.com/addons/heroku-postgresql</a></li>\n</ul>\n<p>  <img src=\"/images/day0903/Untitled%203.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>설정 방법은 크게 2가지가 있다.</p>\n<ul>\n<li>CLI(가상환경 터미널)에서 설치하는 방법</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">heroku addons:create 내 프로젝트 이름:hobby-dev</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>Web UI 를 통해서 설치하는 방법</p>\n<ul>\n<li><p>Install Heroku Postgres 버튼을 클릭 후 본인에 맞는 프로젝트를 연결한다.</p>\n<p>  <img src=\"/images/day0903/Untitled%204.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n</li>\n<li><p>Settings 탭을 누른 후, View Credentials를 클릭한다.</p>\n<p>  <img src=\"/images/day0903/Untitled%205.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>Password,  URI  등 기억하자.</p>\n</li>\n</ul>\n<p>  <img src=\"/images/day0903/Untitled%206.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<h2 id=\"테이블-생성-및-데이터-추가-x2F-조회\"><a href=\"#테이블-생성-및-데이터-추가-x2F-조회\" class=\"headerlink\" title=\"테이블 생성 및 데이터 추가 &#x2F; 조회\"></a>테이블 생성 및 데이터 추가 &#x2F; 조회</h2><ul>\n<li>Local 버전에서 iris 테이블을 불러온 후 PostgreSQL에 추가하는 코드를 app.py에 아래와 같이 추가한다.</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\">from flask import Flask</span><br><span class=\"line\">import pandas as pd </span><br><span class=\"line\">from sqlalchemy import create_engine, MetaData, Table, Column, Integer, String</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## DB 연결 Local</span></span><br><span class=\"line\">def db_create():</span><br><span class=\"line\">    <span class=\"comment\"># 로컬</span></span><br><span class=\"line\">\t\tengine = create_engine(<span class=\"string\">&quot;postgresql://postgres:1234@localhost:5432/chatbot&quot;</span>, <span class=\"built_in\">echo</span> = False)</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\"># Heroku</span></span><br><span class=\"line\">\t\tengine = create_engine(<span class=\"string\">&quot;postgresql://mzgnoxixyinhjd:d7ac5c7c91e4b4b82bfbdc56dc09a762cf9025423f26c0d0d5d0a6a1a6442765@ec2-34-235-31-124.compute-1.amazonaws.com:5432/dfqa3qaa76tclf&quot;</span>, <span class=\"built_in\">echo</span> = False)</span><br><span class=\"line\"></span><br><span class=\"line\">    engine.connect()</span><br><span class=\"line\">    engine.execute(<span class=\"string\">&quot;&quot;</span><span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">        CREATE TABLE IF NOT EXISTS iris(</span></span><br><span class=\"line\"><span class=\"string\">            sepal_length FLOAT NOT NULL,</span></span><br><span class=\"line\"><span class=\"string\">            sepal_width FLOAT NOT NULL,</span></span><br><span class=\"line\"><span class=\"string\">            pepal_length FLOAT NOT NULL,</span></span><br><span class=\"line\"><span class=\"string\">            pepal_width FLOAT NOT NULL,</span></span><br><span class=\"line\"><span class=\"string\">            species VARCHAR(100) NOT NULL</span></span><br><span class=\"line\"><span class=\"string\">        );&quot;</span><span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    data = pd.read_csv(<span class=\"string\">&#x27;data/iris.csv&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(data)</span><br><span class=\"line\">    data.to_sql(name=<span class=\"string\">&#x27;iris&#x27;</span>, con=engine, schema = <span class=\"string\">&#x27;public&#x27;</span>, if_exists=<span class=\"string\">&#x27;replace&#x27;</span>, index=False)</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(<span class=\"string\">&quot;/&quot;</span>)</span><br><span class=\"line\">def index():</span><br><span class=\"line\">    db_create()</span><br><span class=\"line\">    <span class=\"built_in\">return</span> <span class=\"string\">&quot;Hello World!&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    db_create()</span><br><span class=\"line\">    app.run()</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>이제 Flask 파일을 실행한 후, 정상적으로 DB가 들어가졌는지 확인한다.</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python app.py</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/day0903/Untitled%207.png\" alt=\"Untitled\"></p>\n<h2 id=\"Heroku에-배포하기\"><a href=\"#Heroku에-배포하기\" class=\"headerlink\" title=\"Heroku에 배포하기\"></a>Heroku에 배포하기</h2><ul>\n<li><p>이제 Heroku에 동일하게 파일을 배포한다.</p>\n</li>\n<li><p>이 때 변경할 것은 URI만 변경해주고 다시 Push 한다</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;initial updated&quot;</span></span><br><span class=\"line\">git push <span class=\"comment\"># github repo에 추가</span></span><br><span class=\"line\">git push heroku main</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>코드를 수정했기 때문에, 우선 웹사이트가 열리는지를 확인해야 한다.</p>\n</li>\n</ul>\n<p><img src=\"/images/day0903/Untitled%208.png\" alt=\"Untitled\"></p>\n<ul>\n<li><p>이번에는 pgAdmin 에 새로운 서버를 생성한 후, 확인해본다. 먼저 아래와 같이 새로운 서버를 작성한다.</p>\n<ul>\n<li>여기서 아까 기억했던 Password, Username 등을 작성한다.</li>\n<li>General 은 아무 이름이나 작성가능</li>\n</ul>\n<p>  <img src=\"/images/day0903/Untitled%209.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>그 후에 본인에게 맞는 DB를 찾고 조회가 되는지 확인한다.</p>\n</li>\n</ul>\n<p><img src=\"/images/day0903/Untitled%2010.png\" alt=\"Untitled\"></p>\n"},{"title":"개발자 공부방법","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"metaAlignment":"center","date":"2022-09-09T13:59:21.000Z","_content":"\n- 공부방법\n<!-- excerpt -->\n1. 로드맵을 구해야 된다.\n    - 가야 될 길이 어디인지\n    - 현재 내가 어디에 있는지 계속 파악하면서 공부하기\n    \n2. 5가지를 익혀야 된다.\n    1. 이름\n        - 개념을 익힌다는 것은 용어를 익힌다는 것이고,\n            \n            이름에는 역사와 정의가 들어있다.\n            \n    2. 왜 사용하는지(기술의 탄생배경과 목적)\n    3. 만드는 법(정의하는 법)\n    4. 사용하는 법(호출하는 법)\n    5. 모범적인 샘플\n    \n3. TodoList 관리\n    - 아침에 오면 자기가 오늘 할 일이 뭔지 개인별로 잘게 쪼개진 구체적인 리스트가 있어야 되고,\n        \n        한 것은 체크하고, 못한 것은 내일 리스트에 넘어가야된다.\n        \n4. 구글링\n    - 복붙하는 것은 죄가 절대 아니다.\n    - 검색을 하려면 키워드를 잘 뽑아내야한다.\n        \n        “하라는 대로 했는데 안돼요” —> 어떻게 질문하느냐에 따라서 답변의 퀄리티가 달라진다.\n        \n    - 정답을 다 알려주고 있는데도 내가 찾는 코드인지 모르면 쓸모없다.\n    - 내 코드에 어디에 어떻게 갖다 붙일지, 제대로 동작하는지 테스트, 내 의도에 맞게 커스터마이징하기\n    \n\n<개발자의 격언>\n\n1. 바퀴를 또 발명하지 마라.\n    \n    이미 선배들이 인생을 갈아 넣어서 바퀴를 만들어 놨는데 내가 그거 또 개발해봤자 내 시간낭비이다.\n    \n2. divide and conquer 쪼개서 차차 정복하라.","source":"_posts/공부방법.md","raw":"---\ntitle: \"개발자 공부방법\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: blog\nclearReading: true\nmetaAlignment: center\ndate: '2022-09-09 22:59:21'\n---\n\n- 공부방법\n<!-- excerpt -->\n1. 로드맵을 구해야 된다.\n    - 가야 될 길이 어디인지\n    - 현재 내가 어디에 있는지 계속 파악하면서 공부하기\n    \n2. 5가지를 익혀야 된다.\n    1. 이름\n        - 개념을 익힌다는 것은 용어를 익힌다는 것이고,\n            \n            이름에는 역사와 정의가 들어있다.\n            \n    2. 왜 사용하는지(기술의 탄생배경과 목적)\n    3. 만드는 법(정의하는 법)\n    4. 사용하는 법(호출하는 법)\n    5. 모범적인 샘플\n    \n3. TodoList 관리\n    - 아침에 오면 자기가 오늘 할 일이 뭔지 개인별로 잘게 쪼개진 구체적인 리스트가 있어야 되고,\n        \n        한 것은 체크하고, 못한 것은 내일 리스트에 넘어가야된다.\n        \n4. 구글링\n    - 복붙하는 것은 죄가 절대 아니다.\n    - 검색을 하려면 키워드를 잘 뽑아내야한다.\n        \n        “하라는 대로 했는데 안돼요” —> 어떻게 질문하느냐에 따라서 답변의 퀄리티가 달라진다.\n        \n    - 정답을 다 알려주고 있는데도 내가 찾는 코드인지 모르면 쓸모없다.\n    - 내 코드에 어디에 어떻게 갖다 붙일지, 제대로 동작하는지 테스트, 내 의도에 맞게 커스터마이징하기\n    \n\n<개발자의 격언>\n\n1. 바퀴를 또 발명하지 마라.\n    \n    이미 선배들이 인생을 갈아 넣어서 바퀴를 만들어 놨는데 내가 그거 또 개발해봤자 내 시간낭비이다.\n    \n2. divide and conquer 쪼개서 차차 정복하라.","slug":"공부방법","published":1,"updated":"2022-09-09T14:00:09.180Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7ujpuz60000n0u09dq22vux","content":"<!-- excerpt --></li>\n</ul>\n<ol>\n<li><p>로드맵을 구해야 된다.</p>\n<ul>\n<li>가야 될 길이 어디인지</li>\n<li>현재 내가 어디에 있는지 계속 파악하면서 공부하기</li>\n</ul>\n</li>\n<li><p>5가지를 익혀야 된다.</p>\n<ol>\n<li><p>이름</p>\n<ul>\n<li><p>개념을 익힌다는 것은 용어를 익힌다는 것이고,</p>\n<p>  이름에는 역사와 정의가 들어있다.</p>\n</li>\n</ul>\n</li>\n<li><p>왜 사용하는지(기술의 탄생배경과 목적)</p>\n</li>\n<li><p>만드는 법(정의하는 법)</p>\n</li>\n<li><p>사용하는 법(호출하는 법)</p>\n</li>\n<li><p>모범적인 샘플</p>\n</li>\n</ol>\n</li>\n<li><p>TodoList 관리</p>\n<ul>\n<li><p>아침에 오면 자기가 오늘 할 일이 뭔지 개인별로 잘게 쪼개진 구체적인 리스트가 있어야 되고,</p>\n<p>  한 것은 체크하고, 못한 것은 내일 리스트에 넘어가야된다.</p>\n</li>\n</ul>\n</li>\n<li><p>구글링</p>\n<ul>\n<li><p>복붙하는 것은 죄가 절대 아니다.</p>\n</li>\n<li><p>검색을 하려면 키워드를 잘 뽑아내야한다.</p>\n<p>  “하라는 대로 했는데 안돼요” —&gt; 어떻게 질문하느냐에 따라서 답변의 퀄리티가 달라진다.</p>\n</li>\n<li><p>정답을 다 알려주고 있는데도 내가 찾는 코드인지 모르면 쓸모없다.</p>\n</li>\n<li><p>내 코드에 어디에 어떻게 갖다 붙일지, 제대로 동작하는지 테스트, 내 의도에 맞게 커스터마이징하기</p>\n</li>\n</ul>\n</li>\n</ol>\n<p>&lt;개발자의 격언&gt;</p>\n<ol>\n<li><p>바퀴를 또 발명하지 마라.</p>\n<p> 이미 선배들이 인생을 갈아 넣어서 바퀴를 만들어 놨는데 내가 그거 또 개발해봤자 내 시간낭비이다.</p>\n</li>\n<li><p>divide and conquer 쪼개서 차차 정복하라.</p>\n</li>\n</ol>","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"<ul>\n<li>공부방법","more":"<ul>\n<li>공부방법<!-- excerpt --></li>\n</ul>\n<ol>\n<li><p>로드맵을 구해야 된다.</p>\n<ul>\n<li>가야 될 길이 어디인지</li>\n<li>현재 내가 어디에 있는지 계속 파악하면서 공부하기</li>\n</ul>\n</li>\n<li><p>5가지를 익혀야 된다.</p>\n<ol>\n<li><p>이름</p>\n<ul>\n<li><p>개념을 익힌다는 것은 용어를 익힌다는 것이고,</p>\n<p>  이름에는 역사와 정의가 들어있다.</p>\n</li>\n</ul>\n</li>\n<li><p>왜 사용하는지(기술의 탄생배경과 목적)</p>\n</li>\n<li><p>만드는 법(정의하는 법)</p>\n</li>\n<li><p>사용하는 법(호출하는 법)</p>\n</li>\n<li><p>모범적인 샘플</p>\n</li>\n</ol>\n</li>\n<li><p>TodoList 관리</p>\n<ul>\n<li><p>아침에 오면 자기가 오늘 할 일이 뭔지 개인별로 잘게 쪼개진 구체적인 리스트가 있어야 되고,</p>\n<p>  한 것은 체크하고, 못한 것은 내일 리스트에 넘어가야된다.</p>\n</li>\n</ul>\n</li>\n<li><p>구글링</p>\n<ul>\n<li><p>복붙하는 것은 죄가 절대 아니다.</p>\n</li>\n<li><p>검색을 하려면 키워드를 잘 뽑아내야한다.</p>\n<p>  “하라는 대로 했는데 안돼요” —&gt; 어떻게 질문하느냐에 따라서 답변의 퀄리티가 달라진다.</p>\n</li>\n<li><p>정답을 다 알려주고 있는데도 내가 찾는 코드인지 모르면 쓸모없다.</p>\n</li>\n<li><p>내 코드에 어디에 어떻게 갖다 붙일지, 제대로 동작하는지 테스트, 내 의도에 맞게 커스터마이징하기</p>\n</li>\n</ul>\n</li>\n</ol>\n<p>&lt;개발자의 격언&gt;</p>\n<ol>\n<li><p>바퀴를 또 발명하지 마라.</p>\n<p> 이미 선배들이 인생을 갈아 넣어서 바퀴를 만들어 놨는데 내가 그거 또 개발해봤자 내 시간낭비이다.</p>\n</li>\n<li><p>divide and conquer 쪼개서 차차 정복하라.</p>\n</li>\n</ol>\n"},{"title":"JScript 문제","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"metaAlignment":"center","date":"2022-09-13T14:06:21.000Z","_content":"\n- 문제7. n개의 랜덤배열을 만든 후, 오름차순으로 정렬하여라.\n<!-- more -->\n\n```\nrandomNum3 = [];\nfor (let i = 0; i < 5; i++){\n    randomNum3[i] = Math.floor(Math.random() * 100)\n}\nconsole.log(randomNum3);\n\nfunction asc(arr) {\n    for (let n = 1; n < arr.length; n++){\n        for (let i = 1;i <arr.length; i++){\n            if(arr[i] < arr[i-1]){\n                var change = arr[i-1];\n                arr[i-1] = arr[i];\n                arr[i] = change;\n            }console.log(arr);\n        }\n    }\n} \n\nasc(randomNum3)\n// console.log(asc(randomNum3));\n\n```","source":"_posts/day0913.md","raw":"---\ntitle: \"JScript 문제\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: JScript\nclearReading: true\nmetaAlignment: center\ndate: '2022-09-13 23:06:21'\n---\n\n- 문제7. n개의 랜덤배열을 만든 후, 오름차순으로 정렬하여라.\n<!-- more -->\n\n```\nrandomNum3 = [];\nfor (let i = 0; i < 5; i++){\n    randomNum3[i] = Math.floor(Math.random() * 100)\n}\nconsole.log(randomNum3);\n\nfunction asc(arr) {\n    for (let n = 1; n < arr.length; n++){\n        for (let i = 1;i <arr.length; i++){\n            if(arr[i] < arr[i-1]){\n                var change = arr[i-1];\n                arr[i-1] = arr[i];\n                arr[i] = change;\n            }console.log(arr);\n        }\n    }\n} \n\nasc(randomNum3)\n// console.log(asc(randomNum3));\n\n```","slug":"day0913","published":1,"updated":"2022-09-13T14:08:35.475Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl809s1y20002agu05ds27sqe","content":"<ul>\n<li>문제7. n개의 랜덤배열을 만든 후, 오름차순으로 정렬하여라.<span id=\"more\"></span></li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">randomNum3 = [];</span><br><span class=\"line\">for (let i = 0; i &lt; 5; i++)&#123;</span><br><span class=\"line\">    randomNum3[i] = Math.floor(Math.random() * 100)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">console.log(randomNum3);</span><br><span class=\"line\"></span><br><span class=\"line\">function asc(arr) &#123;</span><br><span class=\"line\">    for (let n = 1; n &lt; arr.length; n++)&#123;</span><br><span class=\"line\">        for (let i = 1;i &lt;arr.length; i++)&#123;</span><br><span class=\"line\">            if(arr[i] &lt; arr[i-1])&#123;</span><br><span class=\"line\">                var change = arr[i-1];</span><br><span class=\"line\">                arr[i-1] = arr[i];</span><br><span class=\"line\">                arr[i] = change;</span><br><span class=\"line\">            &#125;console.log(arr);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\">asc(randomNum3)</span><br><span class=\"line\">// console.log(asc(randomNum3));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"<ul>\n<li>문제7. n개의 랜덤배열을 만든 후, 오름차순으로 정렬하여라.","more":"</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">randomNum3 = [];</span><br><span class=\"line\">for (let i = 0; i &lt; 5; i++)&#123;</span><br><span class=\"line\">    randomNum3[i] = Math.floor(Math.random() * 100)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">console.log(randomNum3);</span><br><span class=\"line\"></span><br><span class=\"line\">function asc(arr) &#123;</span><br><span class=\"line\">    for (let n = 1; n &lt; arr.length; n++)&#123;</span><br><span class=\"line\">        for (let i = 1;i &lt;arr.length; i++)&#123;</span><br><span class=\"line\">            if(arr[i] &lt; arr[i-1])&#123;</span><br><span class=\"line\">                var change = arr[i-1];</span><br><span class=\"line\">                arr[i-1] = arr[i];</span><br><span class=\"line\">                arr[i] = change;</span><br><span class=\"line\">            &#125;console.log(arr);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\">asc(randomNum3)</span><br><span class=\"line\">// console.log(asc(randomNum3));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"day0915 복습","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"metaAlignment":"center","date":"2022-09-15T13:20:21.000Z","_content":"\n## 자바스크립트 복습\n<!-- excerpt -->\n1. dom요소를 자유자재로 가지고 올 수 있는가?\n    1. id를 통해서\n        - html에서 해당 태그에id 값을 부여한다\n    2. 태그의 계층구조를 활용\n        - <body> 태그 안에 <div> 안에 <span> 태그를 가져올 수 있다.\n    3. css 선택자를 통해서\n        \n        ```html\n        <div id=\"divId1\">\n            <span id=\"spanId1\"></span>\n            <span id=\"spanId2\"></span>\n            <span id=\"spanId3\"></span>\n        </div>\n        ```\n        \n        - 다음 html코드에서 id값이 “spanId3” 인 span 태그를 불러오려면\n        \n        ```jsx\n        let abc = document.getElementId(\"spanId3\");\n        ```\n        \n        로 불러온 후 abc 를 이용한다.\n        \n        - 태그를 불러오는 방법은\n            - document.getElementId(”아이디값”)\n            - document.getElementClass(”클래스값”)\n              등등 있고, VSCode 자동완성을 참고하면 무수히 다양한 방법이 있다.\n\n    4. 무엇이 리스트로 가져와지는지 아는가\n        - 해당 id나 클래스값에 해당하는 태그가 리스트로 불러와진다.\n    5. 하나가 아니라 리스트로 받았을 때 그것중에 하나를 가져올 수 있다.\n        - css 연산자를 통해서 or 리스트 IndexOf[0] 등을 사용하여 가져온다.\n\n\n2. 이벤트 처리\n    1. 어떤 마우스 이벤트, 어떤 키보드 이벤트가 있는 지 대강 안다.\n        - 클릭할 때, 더블클릭할 때, 마우스가 올라가있을 때,\n        - 키보드로 입력할 때, 방향키를 사용할 때, 등등\n        - “연결할함수.on이벤트”  까지 입력하면 자동완성으로 대강 이벤트를 볼 수 있다.\n    2. 가져온 dom 요소에 원하는 이벤트를 연결할 수 있다.\n    3. 연결되면 실행할 함수 또는 문장을 연결할 수 있다.\n        - 위에서 abc로 불러온 dom 요소를\n        \n        ```jsx\n        abc.onclick = function(){\n            alert(\"클릭시 실행\")\n        }\n        ```\n        \n        - 이런 식으로 불러서 연결할 수 있다.","source":"_posts/day0915.md","raw":"---\ntitle: \"day0915 복습\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: JScript\nclearReading: true\nmetaAlignment: center\ndate: '2022-09-15 22:20:21'\n---\n\n## 자바스크립트 복습\n<!-- excerpt -->\n1. dom요소를 자유자재로 가지고 올 수 있는가?\n    1. id를 통해서\n        - html에서 해당 태그에id 값을 부여한다\n    2. 태그의 계층구조를 활용\n        - <body> 태그 안에 <div> 안에 <span> 태그를 가져올 수 있다.\n    3. css 선택자를 통해서\n        \n        ```html\n        <div id=\"divId1\">\n            <span id=\"spanId1\"></span>\n            <span id=\"spanId2\"></span>\n            <span id=\"spanId3\"></span>\n        </div>\n        ```\n        \n        - 다음 html코드에서 id값이 “spanId3” 인 span 태그를 불러오려면\n        \n        ```jsx\n        let abc = document.getElementId(\"spanId3\");\n        ```\n        \n        로 불러온 후 abc 를 이용한다.\n        \n        - 태그를 불러오는 방법은\n            - document.getElementId(”아이디값”)\n            - document.getElementClass(”클래스값”)\n              등등 있고, VSCode 자동완성을 참고하면 무수히 다양한 방법이 있다.\n\n    4. 무엇이 리스트로 가져와지는지 아는가\n        - 해당 id나 클래스값에 해당하는 태그가 리스트로 불러와진다.\n    5. 하나가 아니라 리스트로 받았을 때 그것중에 하나를 가져올 수 있다.\n        - css 연산자를 통해서 or 리스트 IndexOf[0] 등을 사용하여 가져온다.\n\n\n2. 이벤트 처리\n    1. 어떤 마우스 이벤트, 어떤 키보드 이벤트가 있는 지 대강 안다.\n        - 클릭할 때, 더블클릭할 때, 마우스가 올라가있을 때,\n        - 키보드로 입력할 때, 방향키를 사용할 때, 등등\n        - “연결할함수.on이벤트”  까지 입력하면 자동완성으로 대강 이벤트를 볼 수 있다.\n    2. 가져온 dom 요소에 원하는 이벤트를 연결할 수 있다.\n    3. 연결되면 실행할 함수 또는 문장을 연결할 수 있다.\n        - 위에서 abc로 불러온 dom 요소를\n        \n        ```jsx\n        abc.onclick = function(){\n            alert(\"클릭시 실행\")\n        }\n        ```\n        \n        - 이런 식으로 불러서 연결할 수 있다.","slug":"day0915","published":1,"updated":"2022-09-15T13:22:23.268Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8330ae10000wcu0681lhm0e","content":"<!-- excerpt -->\n<ol>\n<li><p>dom요소를 자유자재로 가지고 올 수 있는가?</p>\n<ol>\n<li><p>id를 통해서</p>\n<ul>\n<li>html에서 해당 태그에id 값을 부여한다</li>\n</ul>\n</li>\n<li><p>태그의 계층구조를 활용</p>\n<ul>\n<li><body> 태그 안에 <div> 안에 <span> 태그를 가져올 수 있다.</li>\n</ul>\n</li>\n<li><p>css 선택자를 통해서</p>\n <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;divId1&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;spanId1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;spanId2&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;spanId3&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>다음 html코드에서 id값이 “spanId3” 인 span 태그를 불러오려면</li>\n</ul>\n <figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> abc = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementId</span>(<span class=\"string\">&quot;spanId3&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p> 로 불러온 후 abc 를 이용한다.</p>\n<ul>\n<li>태그를 불러오는 방법은<ul>\n<li>document.getElementId(”아이디값”)</li>\n<li>document.getElementClass(”클래스값”)<br>등등 있고, VSCode 자동완성을 참고하면 무수히 다양한 방법이 있다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>무엇이 리스트로 가져와지는지 아는가</p>\n<ul>\n<li>해당 id나 클래스값에 해당하는 태그가 리스트로 불러와진다.</li>\n</ul>\n</li>\n<li><p>하나가 아니라 리스트로 받았을 때 그것중에 하나를 가져올 수 있다.</p>\n<ul>\n<li>css 연산자를 통해서 or 리스트 IndexOf[0] 등을 사용하여 가져온다.</li>\n</ul>\n</li>\n</ol>\n</li>\n<li><p>이벤트 처리</p>\n<ol>\n<li>어떤 마우스 이벤트, 어떤 키보드 이벤트가 있는 지 대강 안다.<ul>\n<li>클릭할 때, 더블클릭할 때, 마우스가 올라가있을 때,</li>\n<li>키보드로 입력할 때, 방향키를 사용할 때, 등등</li>\n<li>“연결할함수.on이벤트”  까지 입력하면 자동완성으로 대강 이벤트를 볼 수 있다.</li>\n</ul>\n</li>\n<li>가져온 dom 요소에 원하는 이벤트를 연결할 수 있다.</li>\n<li>연결되면 실행할 함수 또는 문장을 연결할 수 있다.<ul>\n<li>위에서 abc로 불러온 dom 요소를</li>\n</ul>\n <figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">abc.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;클릭시 실행&quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>이런 식으로 불러서 연결할 수 있다.</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"<h2 id=\"자바스크립트-복습\"><a href=\"#자바스크립트-복습\" class=\"headerlink\" title=\"자바스크립트 복습\"></a>자바스크립트 복습</h2>","more":"<h2 id=\"자바스크립트-복습\"><a href=\"#자바스크립트-복습\" class=\"headerlink\" title=\"자바스크립트 복습\"></a>자바스크립트 복습</h2><!-- excerpt -->\n<ol>\n<li><p>dom요소를 자유자재로 가지고 올 수 있는가?</p>\n<ol>\n<li><p>id를 통해서</p>\n<ul>\n<li>html에서 해당 태그에id 값을 부여한다</li>\n</ul>\n</li>\n<li><p>태그의 계층구조를 활용</p>\n<ul>\n<li><body> 태그 안에 <div> 안에 <span> 태그를 가져올 수 있다.</li>\n</ul>\n</li>\n<li><p>css 선택자를 통해서</p>\n <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;divId1&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;spanId1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;spanId2&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;spanId3&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>다음 html코드에서 id값이 “spanId3” 인 span 태그를 불러오려면</li>\n</ul>\n <figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> abc = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementId</span>(<span class=\"string\">&quot;spanId3&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p> 로 불러온 후 abc 를 이용한다.</p>\n<ul>\n<li>태그를 불러오는 방법은<ul>\n<li>document.getElementId(”아이디값”)</li>\n<li>document.getElementClass(”클래스값”)<br>등등 있고, VSCode 자동완성을 참고하면 무수히 다양한 방법이 있다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>무엇이 리스트로 가져와지는지 아는가</p>\n<ul>\n<li>해당 id나 클래스값에 해당하는 태그가 리스트로 불러와진다.</li>\n</ul>\n</li>\n<li><p>하나가 아니라 리스트로 받았을 때 그것중에 하나를 가져올 수 있다.</p>\n<ul>\n<li>css 연산자를 통해서 or 리스트 IndexOf[0] 등을 사용하여 가져온다.</li>\n</ul>\n</li>\n</ol>\n</li>\n<li><p>이벤트 처리</p>\n<ol>\n<li>어떤 마우스 이벤트, 어떤 키보드 이벤트가 있는 지 대강 안다.<ul>\n<li>클릭할 때, 더블클릭할 때, 마우스가 올라가있을 때,</li>\n<li>키보드로 입력할 때, 방향키를 사용할 때, 등등</li>\n<li>“연결할함수.on이벤트”  까지 입력하면 자동완성으로 대강 이벤트를 볼 수 있다.</li>\n</ul>\n</li>\n<li>가져온 dom 요소에 원하는 이벤트를 연결할 수 있다.</li>\n<li>연결되면 실행할 함수 또는 문장을 연결할 수 있다.<ul>\n<li>위에서 abc로 불러온 dom 요소를</li>\n</ul>\n <figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">abc.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;클릭시 실행&quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>이런 식으로 불러서 연결할 수 있다.</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n"},{"title":"Java, JDK 설치","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","metaAlignment":"center","date":"2022-09-16T13:51:21.000Z","_content":"<br>\n<!-- excerpt -->\n\n### 여기서는 Java 11 버전을 다운받아보자.\n- 구글에 “JDK 11 download” 이라고 친다.\n    \n    ![Untitled](/images/day0916/Untitled.png)\n    \n- 오라클에서 각 운영체제에 맞게 다운받는다.\n\n- “시스템 환경변수 편집” 을 들어가서 Path에 Java 경로가 없는 것을 확인한다.\n    - 만약 Java 경로가 있을 시 설치할 때 충돌이 일어날 수 있다!\n        \n        ![Untitled](/images/day0916/Untitled%201.png)\n        \n    \n    ![Untitled](/images/day0916/Untitled%202.png)\n    \n    - 자바가 이미 깔려져 있어서 java 경로가 있지만, 원래는 없어야 함\n    - 디폴트 경로는 C:\\Program Files\\Java\\jdk-버전명\n\n- 설치된 자바 경로를 바꾸려면\n    - 다시 환경변수를 확인해서 C:\\Program Files\\Java\\jdk-버전명  이 있는 것을 확인하고,\n        \n        시스템 변수에 JAVA_HOME 변수를 새로 만든 후 “C:\\Program Files\\Java\\jdk-버전명” 넣어주고\n        \n        ![Untitled](/images/day0916/Untitled%203.png)\n        \n    \n    - PATH 에서 %JAVA_HOME%\\bin  을 추가한다\n        \n        ![Untitled](/images/day0916/Untitled%204.png)\n        \n\n- cmd창을 열어서 “javac -version” 을 입력해서 버전을 확인한다.\n    \n    ![Untitled](/images/day0916/Untitled%205.png)\n    \n\n- java version 도 입력해서 자바 버전을 확인하자.\n    \n    ![Untitled](/images/day0916/Untitled%206.png)\n    \n- 이클립스 = JAVA IDE 의 대표주자\n- 이클립스에 스프링전용 플러그인을 설치하면 이클립스로 스프링 개발을 할 수 있다.\n- STS는 아예 스프링전용으로 만들어진 이클립스\n- \n\n### STS3 다운받기\n\n- 구글에 STS3 를 친다.\n    \n    ![Untitled](/images/day0916/Untitled%207.png)\n    \n\n- STS3 는 STS위키에 들어가서 다운받아야한다\n    \n    ![Untitled](/images/day0916/Untitled%208.png)\n    \n    ![Untitled](/images/day0916/Untitled%209.png)\n    \n- 자기 운영체제에 맞는 버전을 다운받는다\n    \n    ![Untitled](/images/day0916/Untitled%2010.png)\n    \n\n## 알집으로 안 풀리기 때문에 구글에서 7zip 을 다운받아서 7zip으로 압축풀어야 한다!!\n\n- sts 압축파일 안에 sts-버전명 폴더(이하 sts 폴더)만 압축풀기 한다.\n    \n    ![Untitled](/images/day0916/Untitled%2011.png)\n    \n- sts 폴더 안에 STS.exe 파일 실행\n    \n    ![Untitled](/images/day0916/Untitled%2012.png)\n    \n\n- Workspace 설치 경로를 sts 폴더와 같은 경로에 JavaWorkspace 폴더를 만든 후에 설치경로로 잡아준다(체크표시는 덤)\n\n![Untitled](/images/day0916/Untitled%2013.png)\n\n- 설치가 끝나면 STS가 실행 된다.\n- 다음과 같이 새 java 프로젝트를 만든다\n    \n    ![Untitled](/images/day0916/Untitled%2014.png)\n    \n\n- 맨 밑에 체크박스는 해제하고 만든다.\n    \n    ![Untitled](/images/day0916/Untitled%2015.png)\n    \n    ![Untitled](/images/day0916/Untitled%2016.png)\n    \n\n### 새 java 파일 만드는 방법\n\n---\n\n- firstJavaproject 폴더 우클릭 → New → Class 클릭\n    \n    ![Untitled](/images/day0916/Untitled%2017.png)\n    \n- 이름 작성 후 체크박스 체크 하고 만든다.\n\n![Untitled](/images/day0916/Untitled%2018.png)\n\n- System.out.println(”Hello World!”);  치고 f11을 누르면 실행한다(테마를 바꿨음)\n    \n    ![Untitled](/images/day0916/Untitled%2019.png)\n    \n\n- 설정(Window  —> Preferences) 들어가서 encoding 검색\n    \n    ![Untitled](/images/day0916/Untitled%2020.png)\n    \n\n- General ⇒ Content Types ⇒ Text 찍고 Default encoding 을 utf-8 로 바꾼다음 Update 해주고 저장한다.\n    \n    ![Untitled](/images/day0916/Untitled%2021.png)\n    \n\n- Text 안에 Java Properties File 도 utf-8로 변환하고 Update 해준다.\n    \n    ![Untitled](/images/day0916/Untitled%2022.png)\n    \n\n- Workspace 에서도 UTF-8 로 입력 해준 뒤 저장한다.\n    \n    ![Untitled](/images/day0916/Untitled%2023.png)\n    \n\n### 이클립스 단축키\n\n- “syso” + ctrl키 + 스페이스바\n- “F11” 은 실행단축키","source":"_posts/day0916.md","raw":"---\ntitle: \"Java, JDK 설치\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: Java\nmetaAlignment: center\ndate: '2022-09-16 22:51:21'\n---\n<br>\n<!-- excerpt -->\n\n### 여기서는 Java 11 버전을 다운받아보자.\n- 구글에 “JDK 11 download” 이라고 친다.\n    \n    ![Untitled](/images/day0916/Untitled.png)\n    \n- 오라클에서 각 운영체제에 맞게 다운받는다.\n\n- “시스템 환경변수 편집” 을 들어가서 Path에 Java 경로가 없는 것을 확인한다.\n    - 만약 Java 경로가 있을 시 설치할 때 충돌이 일어날 수 있다!\n        \n        ![Untitled](/images/day0916/Untitled%201.png)\n        \n    \n    ![Untitled](/images/day0916/Untitled%202.png)\n    \n    - 자바가 이미 깔려져 있어서 java 경로가 있지만, 원래는 없어야 함\n    - 디폴트 경로는 C:\\Program Files\\Java\\jdk-버전명\n\n- 설치된 자바 경로를 바꾸려면\n    - 다시 환경변수를 확인해서 C:\\Program Files\\Java\\jdk-버전명  이 있는 것을 확인하고,\n        \n        시스템 변수에 JAVA_HOME 변수를 새로 만든 후 “C:\\Program Files\\Java\\jdk-버전명” 넣어주고\n        \n        ![Untitled](/images/day0916/Untitled%203.png)\n        \n    \n    - PATH 에서 %JAVA_HOME%\\bin  을 추가한다\n        \n        ![Untitled](/images/day0916/Untitled%204.png)\n        \n\n- cmd창을 열어서 “javac -version” 을 입력해서 버전을 확인한다.\n    \n    ![Untitled](/images/day0916/Untitled%205.png)\n    \n\n- java version 도 입력해서 자바 버전을 확인하자.\n    \n    ![Untitled](/images/day0916/Untitled%206.png)\n    \n- 이클립스 = JAVA IDE 의 대표주자\n- 이클립스에 스프링전용 플러그인을 설치하면 이클립스로 스프링 개발을 할 수 있다.\n- STS는 아예 스프링전용으로 만들어진 이클립스\n- \n\n### STS3 다운받기\n\n- 구글에 STS3 를 친다.\n    \n    ![Untitled](/images/day0916/Untitled%207.png)\n    \n\n- STS3 는 STS위키에 들어가서 다운받아야한다\n    \n    ![Untitled](/images/day0916/Untitled%208.png)\n    \n    ![Untitled](/images/day0916/Untitled%209.png)\n    \n- 자기 운영체제에 맞는 버전을 다운받는다\n    \n    ![Untitled](/images/day0916/Untitled%2010.png)\n    \n\n## 알집으로 안 풀리기 때문에 구글에서 7zip 을 다운받아서 7zip으로 압축풀어야 한다!!\n\n- sts 압축파일 안에 sts-버전명 폴더(이하 sts 폴더)만 압축풀기 한다.\n    \n    ![Untitled](/images/day0916/Untitled%2011.png)\n    \n- sts 폴더 안에 STS.exe 파일 실행\n    \n    ![Untitled](/images/day0916/Untitled%2012.png)\n    \n\n- Workspace 설치 경로를 sts 폴더와 같은 경로에 JavaWorkspace 폴더를 만든 후에 설치경로로 잡아준다(체크표시는 덤)\n\n![Untitled](/images/day0916/Untitled%2013.png)\n\n- 설치가 끝나면 STS가 실행 된다.\n- 다음과 같이 새 java 프로젝트를 만든다\n    \n    ![Untitled](/images/day0916/Untitled%2014.png)\n    \n\n- 맨 밑에 체크박스는 해제하고 만든다.\n    \n    ![Untitled](/images/day0916/Untitled%2015.png)\n    \n    ![Untitled](/images/day0916/Untitled%2016.png)\n    \n\n### 새 java 파일 만드는 방법\n\n---\n\n- firstJavaproject 폴더 우클릭 → New → Class 클릭\n    \n    ![Untitled](/images/day0916/Untitled%2017.png)\n    \n- 이름 작성 후 체크박스 체크 하고 만든다.\n\n![Untitled](/images/day0916/Untitled%2018.png)\n\n- System.out.println(”Hello World!”);  치고 f11을 누르면 실행한다(테마를 바꿨음)\n    \n    ![Untitled](/images/day0916/Untitled%2019.png)\n    \n\n- 설정(Window  —> Preferences) 들어가서 encoding 검색\n    \n    ![Untitled](/images/day0916/Untitled%2020.png)\n    \n\n- General ⇒ Content Types ⇒ Text 찍고 Default encoding 을 utf-8 로 바꾼다음 Update 해주고 저장한다.\n    \n    ![Untitled](/images/day0916/Untitled%2021.png)\n    \n\n- Text 안에 Java Properties File 도 utf-8로 변환하고 Update 해준다.\n    \n    ![Untitled](/images/day0916/Untitled%2022.png)\n    \n\n- Workspace 에서도 UTF-8 로 입력 해준 뒤 저장한다.\n    \n    ![Untitled](/images/day0916/Untitled%2023.png)\n    \n\n### 이클립스 단축키\n\n- “syso” + ctrl키 + 스페이스바\n- “F11” 은 실행단축키","slug":"day0916","published":1,"updated":"2023-04-15T20:57:20.776Z","_id":"cl84jghkj00007ou0gnsif89u","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n<h3 id=\"여기서는-Java-11-버전을-다운받아보자\"><a href=\"#여기서는-Java-11-버전을-다운받아보자\" class=\"headerlink\" title=\"여기서는 Java 11 버전을 다운받아보자.\"></a>여기서는 Java 11 버전을 다운받아보자.</h3><ul>\n<li><p>구글에 “JDK 11 download” 이라고 친다.</p>\n<p>  <img src=\"/images/day0916/Untitled.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>오라클에서 각 운영체제에 맞게 다운받는다.</p>\n</li>\n<li><p>“시스템 환경변수 편집” 을 들어가서 Path에 Java 경로가 없는 것을 확인한다.</p>\n<ul>\n<li><p>만약 Java 경로가 있을 시 설치할 때 충돌이 일어날 수 있다!</p>\n<p>  <img src=\"/images/day0916/Untitled%201.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<p>  <img src=\"/images/day0916/Untitled%202.png\" alt=\"Untitled\"></p>\n<ul>\n<li>자바가 이미 깔려져 있어서 java 경로가 있지만, 원래는 없어야 함</li>\n<li>디폴트 경로는 C:\\Program Files\\Java\\jdk-버전명</li>\n</ul>\n</li>\n<li><p>설치된 자바 경로를 바꾸려면</p>\n<ul>\n<li><p>다시 환경변수를 확인해서 C:\\Program Files\\Java\\jdk-버전명  이 있는 것을 확인하고,</p>\n<p>  시스템 변수에 JAVA_HOME 변수를 새로 만든 후 “C:\\Program Files\\Java\\jdk-버전명” 넣어주고</p>\n<p>  <img src=\"/images/day0916/Untitled%203.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>PATH 에서 %JAVA_HOME%\\bin  을 추가한다</p>\n<p>  <img src=\"/images/day0916/Untitled%204.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n</li>\n<li><p>cmd창을 열어서 “javac -version” 을 입력해서 버전을 확인한다.</p>\n<p>  <img src=\"/images/day0916/Untitled%205.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>java version 도 입력해서 자바 버전을 확인하자.</p>\n<p>  <img src=\"/images/day0916/Untitled%206.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>이클립스 &#x3D; JAVA IDE 의 대표주자</p>\n</li>\n<li><p>이클립스에 스프링전용 플러그인을 설치하면 이클립스로 스프링 개발을 할 수 있다.</p>\n</li>\n<li><p>STS는 아예 스프링전용으로 만들어진 이클립스</p>\n</li>\n<li></li>\n</ul>\n<h3 id=\"STS3-다운받기\"><a href=\"#STS3-다운받기\" class=\"headerlink\" title=\"STS3 다운받기\"></a>STS3 다운받기</h3><ul>\n<li><p>구글에 STS3 를 친다.</p>\n<p>  <img src=\"/images/day0916/Untitled%207.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>STS3 는 STS위키에 들어가서 다운받아야한다</p>\n<p>  <img src=\"/images/day0916/Untitled%208.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/day0916/Untitled%209.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>자기 운영체제에 맞는 버전을 다운받는다</p>\n<p>  <img src=\"/images/day0916/Untitled%2010.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<h2 id=\"알집으로-안-풀리기-때문에-구글에서-7zip-을-다운받아서-7zip으로-압축풀어야-한다\"><a href=\"#알집으로-안-풀리기-때문에-구글에서-7zip-을-다운받아서-7zip으로-압축풀어야-한다\" class=\"headerlink\" title=\"알집으로 안 풀리기 때문에 구글에서 7zip 을 다운받아서 7zip으로 압축풀어야 한다!!\"></a>알집으로 안 풀리기 때문에 구글에서 7zip 을 다운받아서 7zip으로 압축풀어야 한다!!</h2><ul>\n<li><p>sts 압축파일 안에 sts-버전명 폴더(이하 sts 폴더)만 압축풀기 한다.</p>\n<p>  <img src=\"/images/day0916/Untitled%2011.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>sts 폴더 안에 STS.exe 파일 실행</p>\n<p>  <img src=\"/images/day0916/Untitled%2012.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>Workspace 설치 경로를 sts 폴더와 같은 경로에 JavaWorkspace 폴더를 만든 후에 설치경로로 잡아준다(체크표시는 덤)</p>\n</li>\n</ul>\n<p><img src=\"/images/day0916/Untitled%2013.png\" alt=\"Untitled\"></p>\n<ul>\n<li><p>설치가 끝나면 STS가 실행 된다.</p>\n</li>\n<li><p>다음과 같이 새 java 프로젝트를 만든다</p>\n<p>  <img src=\"/images/day0916/Untitled%2014.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>맨 밑에 체크박스는 해제하고 만든다.</p>\n<p>  <img src=\"/images/day0916/Untitled%2015.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/day0916/Untitled%2016.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<h3 id=\"새-java-파일-만드는-방법\"><a href=\"#새-java-파일-만드는-방법\" class=\"headerlink\" title=\"새 java 파일 만드는 방법\"></a>새 java 파일 만드는 방법</h3><hr>\n<ul>\n<li><p>firstJavaproject 폴더 우클릭 → New → Class 클릭</p>\n<p>  <img src=\"/images/day0916/Untitled%2017.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>이름 작성 후 체크박스 체크 하고 만든다.</p>\n</li>\n</ul>\n<p><img src=\"/images/day0916/Untitled%2018.png\" alt=\"Untitled\"></p>\n<ul>\n<li><p>System.out.println(”Hello World!”);  치고 f11을 누르면 실행한다(테마를 바꿨음)</p>\n<p>  <img src=\"/images/day0916/Untitled%2019.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>설정(Window  —&gt; Preferences) 들어가서 encoding 검색</p>\n<p>  <img src=\"/images/day0916/Untitled%2020.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>General ⇒ Content Types ⇒ Text 찍고 Default encoding 을 utf-8 로 바꾼다음 Update 해주고 저장한다.</p>\n<p>  <img src=\"/images/day0916/Untitled%2021.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>Text 안에 Java Properties File 도 utf-8로 변환하고 Update 해준다.</p>\n<p>  <img src=\"/images/day0916/Untitled%2022.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>Workspace 에서도 UTF-8 로 입력 해준 뒤 저장한다.</p>\n<p>  <img src=\"/images/day0916/Untitled%2023.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<h3 id=\"이클립스-단축키\"><a href=\"#이클립스-단축키\" class=\"headerlink\" title=\"이클립스 단축키\"></a>이클립스 단축키</h3><ul>\n<li>“syso” + ctrl키 + 스페이스바</li>\n<li>“F11” 은 실행단축키</li>\n</ul>","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"<br>","more":"<br>\n<!-- excerpt -->\n\n<h3 id=\"여기서는-Java-11-버전을-다운받아보자\"><a href=\"#여기서는-Java-11-버전을-다운받아보자\" class=\"headerlink\" title=\"여기서는 Java 11 버전을 다운받아보자.\"></a>여기서는 Java 11 버전을 다운받아보자.</h3><ul>\n<li><p>구글에 “JDK 11 download” 이라고 친다.</p>\n<p>  <img src=\"/images/day0916/Untitled.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>오라클에서 각 운영체제에 맞게 다운받는다.</p>\n</li>\n<li><p>“시스템 환경변수 편집” 을 들어가서 Path에 Java 경로가 없는 것을 확인한다.</p>\n<ul>\n<li><p>만약 Java 경로가 있을 시 설치할 때 충돌이 일어날 수 있다!</p>\n<p>  <img src=\"/images/day0916/Untitled%201.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<p>  <img src=\"/images/day0916/Untitled%202.png\" alt=\"Untitled\"></p>\n<ul>\n<li>자바가 이미 깔려져 있어서 java 경로가 있지만, 원래는 없어야 함</li>\n<li>디폴트 경로는 C:\\Program Files\\Java\\jdk-버전명</li>\n</ul>\n</li>\n<li><p>설치된 자바 경로를 바꾸려면</p>\n<ul>\n<li><p>다시 환경변수를 확인해서 C:\\Program Files\\Java\\jdk-버전명  이 있는 것을 확인하고,</p>\n<p>  시스템 변수에 JAVA_HOME 변수를 새로 만든 후 “C:\\Program Files\\Java\\jdk-버전명” 넣어주고</p>\n<p>  <img src=\"/images/day0916/Untitled%203.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>PATH 에서 %JAVA_HOME%\\bin  을 추가한다</p>\n<p>  <img src=\"/images/day0916/Untitled%204.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n</li>\n<li><p>cmd창을 열어서 “javac -version” 을 입력해서 버전을 확인한다.</p>\n<p>  <img src=\"/images/day0916/Untitled%205.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>java version 도 입력해서 자바 버전을 확인하자.</p>\n<p>  <img src=\"/images/day0916/Untitled%206.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>이클립스 &#x3D; JAVA IDE 의 대표주자</p>\n</li>\n<li><p>이클립스에 스프링전용 플러그인을 설치하면 이클립스로 스프링 개발을 할 수 있다.</p>\n</li>\n<li><p>STS는 아예 스프링전용으로 만들어진 이클립스</p>\n</li>\n<li></li>\n</ul>\n<h3 id=\"STS3-다운받기\"><a href=\"#STS3-다운받기\" class=\"headerlink\" title=\"STS3 다운받기\"></a>STS3 다운받기</h3><ul>\n<li><p>구글에 STS3 를 친다.</p>\n<p>  <img src=\"/images/day0916/Untitled%207.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>STS3 는 STS위키에 들어가서 다운받아야한다</p>\n<p>  <img src=\"/images/day0916/Untitled%208.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/day0916/Untitled%209.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>자기 운영체제에 맞는 버전을 다운받는다</p>\n<p>  <img src=\"/images/day0916/Untitled%2010.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<h2 id=\"알집으로-안-풀리기-때문에-구글에서-7zip-을-다운받아서-7zip으로-압축풀어야-한다\"><a href=\"#알집으로-안-풀리기-때문에-구글에서-7zip-을-다운받아서-7zip으로-압축풀어야-한다\" class=\"headerlink\" title=\"알집으로 안 풀리기 때문에 구글에서 7zip 을 다운받아서 7zip으로 압축풀어야 한다!!\"></a>알집으로 안 풀리기 때문에 구글에서 7zip 을 다운받아서 7zip으로 압축풀어야 한다!!</h2><ul>\n<li><p>sts 압축파일 안에 sts-버전명 폴더(이하 sts 폴더)만 압축풀기 한다.</p>\n<p>  <img src=\"/images/day0916/Untitled%2011.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>sts 폴더 안에 STS.exe 파일 실행</p>\n<p>  <img src=\"/images/day0916/Untitled%2012.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>Workspace 설치 경로를 sts 폴더와 같은 경로에 JavaWorkspace 폴더를 만든 후에 설치경로로 잡아준다(체크표시는 덤)</p>\n</li>\n</ul>\n<p><img src=\"/images/day0916/Untitled%2013.png\" alt=\"Untitled\"></p>\n<ul>\n<li><p>설치가 끝나면 STS가 실행 된다.</p>\n</li>\n<li><p>다음과 같이 새 java 프로젝트를 만든다</p>\n<p>  <img src=\"/images/day0916/Untitled%2014.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>맨 밑에 체크박스는 해제하고 만든다.</p>\n<p>  <img src=\"/images/day0916/Untitled%2015.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/day0916/Untitled%2016.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<h3 id=\"새-java-파일-만드는-방법\"><a href=\"#새-java-파일-만드는-방법\" class=\"headerlink\" title=\"새 java 파일 만드는 방법\"></a>새 java 파일 만드는 방법</h3><hr>\n<ul>\n<li><p>firstJavaproject 폴더 우클릭 → New → Class 클릭</p>\n<p>  <img src=\"/images/day0916/Untitled%2017.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>이름 작성 후 체크박스 체크 하고 만든다.</p>\n</li>\n</ul>\n<p><img src=\"/images/day0916/Untitled%2018.png\" alt=\"Untitled\"></p>\n<ul>\n<li><p>System.out.println(”Hello World!”);  치고 f11을 누르면 실행한다(테마를 바꿨음)</p>\n<p>  <img src=\"/images/day0916/Untitled%2019.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>설정(Window  —&gt; Preferences) 들어가서 encoding 검색</p>\n<p>  <img src=\"/images/day0916/Untitled%2020.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>General ⇒ Content Types ⇒ Text 찍고 Default encoding 을 utf-8 로 바꾼다음 Update 해주고 저장한다.</p>\n<p>  <img src=\"/images/day0916/Untitled%2021.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>Text 안에 Java Properties File 도 utf-8로 변환하고 Update 해준다.</p>\n<p>  <img src=\"/images/day0916/Untitled%2022.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>Workspace 에서도 UTF-8 로 입력 해준 뒤 저장한다.</p>\n<p>  <img src=\"/images/day0916/Untitled%2023.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n<h3 id=\"이클립스-단축키\"><a href=\"#이클립스-단축키\" class=\"headerlink\" title=\"이클립스 단축키\"></a>이클립스 단축키</h3><ul>\n<li>“syso” + ctrl키 + 스페이스바</li>\n<li>“F11” 은 실행단축키</li>\n</ul>\n"},{"title":"Java 문법","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","clearReading":true,"metaAlignment":"center","date":"2022-09-18T04:13:19.000Z","_content":"\n\n### day0918\n<!-- excerpt -->\n\n- 기본 자료형 8개\n    - 논리형 - boolean\n    - 문자형 - char\n    - 정수형 - byte, short, int, long\n    - 실수형 - float, double\n\n- println() 에서 ln은 line의 줄임말이다. 자기혼자 한 줄 차지하는문법. (html의 <div>와 같다)\n- printf()나 print()로 출력하면 옆으로 붙어서 나오는데 \\n (원화표시+n) 을 붙이면 줄바꿈이 된다.\n- println() = printf(”블라블라%d대충 욕\\n”)\n\n- 객체\n    - 우리가 프로그래밍으로 구현할 대상.\n    - 프로그램을 구성하는 로직을 변수화, 함수화로 구분 하여서 서로 연관된 행위나 속성들을 그룹화 하는 것\n    - 이런 데이터들을 서로 연결해서 객체라는 껍데기에 응집시키는 것\n\n- 접근제한자\n    - private : 해당 클래스에서만 접근 가능(같은 패키지여도 접근불가)\n    - public : 어떤 클래스에서도 접근 가능\n    - default\n    - protected\n\n- class\n    - String 과 같은 참조형 데이터타입이다.\n    - class는 설계도와 같다.\n    - 인스턴스화(생성) 해야 비로소 물리적인 구현으로 쓰여진다.\n\n- 생성자\n    - 접근제한자 class명(데이터타입 인풋명, 데이터타입 인풋명){ 본문 }\n    - 객체를 인스턴스화(생성)하는 역할\n    - 같은 클래스에는 적어도 하나 이상의 생성자가 있어야 하며, 자바에서는 생성자가 한개도 없으면 디폴트 생성자를 만든다.\n    - 생성자가 하나라도 있으면 디폴트 생성자를 만들지 않는다.\n    - 함수처럼 보이지만 리턴타입이 없고, 이름이 클래스명과 같다.","source":"_posts/Java 문법.md","raw":"---\ntitle: \"Java 문법\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: Java\nclearReading: true\nmetaAlignment: center\ndate: '2022-09-18 13:13:19'\n---\n\n\n### day0918\n<!-- excerpt -->\n\n- 기본 자료형 8개\n    - 논리형 - boolean\n    - 문자형 - char\n    - 정수형 - byte, short, int, long\n    - 실수형 - float, double\n\n- println() 에서 ln은 line의 줄임말이다. 자기혼자 한 줄 차지하는문법. (html의 <div>와 같다)\n- printf()나 print()로 출력하면 옆으로 붙어서 나오는데 \\n (원화표시+n) 을 붙이면 줄바꿈이 된다.\n- println() = printf(”블라블라%d대충 욕\\n”)\n\n- 객체\n    - 우리가 프로그래밍으로 구현할 대상.\n    - 프로그램을 구성하는 로직을 변수화, 함수화로 구분 하여서 서로 연관된 행위나 속성들을 그룹화 하는 것\n    - 이런 데이터들을 서로 연결해서 객체라는 껍데기에 응집시키는 것\n\n- 접근제한자\n    - private : 해당 클래스에서만 접근 가능(같은 패키지여도 접근불가)\n    - public : 어떤 클래스에서도 접근 가능\n    - default\n    - protected\n\n- class\n    - String 과 같은 참조형 데이터타입이다.\n    - class는 설계도와 같다.\n    - 인스턴스화(생성) 해야 비로소 물리적인 구현으로 쓰여진다.\n\n- 생성자\n    - 접근제한자 class명(데이터타입 인풋명, 데이터타입 인풋명){ 본문 }\n    - 객체를 인스턴스화(생성)하는 역할\n    - 같은 클래스에는 적어도 하나 이상의 생성자가 있어야 하며, 자바에서는 생성자가 한개도 없으면 디폴트 생성자를 만든다.\n    - 생성자가 하나라도 있으면 디폴트 생성자를 만들지 않는다.\n    - 함수처럼 보이지만 리턴타입이 없고, 이름이 클래스명과 같다.","slug":"Java 문법","published":1,"updated":"2022-10-11T14:44:42.516Z","_id":"cl86tsavz0000v0u0chx72zhz","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n<ul>\n<li><p>기본 자료형 8개</p>\n<ul>\n<li>논리형 - boolean</li>\n<li>문자형 - char</li>\n<li>정수형 - byte, short, int, long</li>\n<li>실수형 - float, double</li>\n</ul>\n</li>\n<li><p>println() 에서 ln은 line의 줄임말이다. 자기혼자 한 줄 차지하는문법. (html의 <div>와 같다)</p>\n</li>\n<li><p>printf()나 print()로 출력하면 옆으로 붙어서 나오는데 \\n (원화표시+n) 을 붙이면 줄바꿈이 된다.</p>\n</li>\n<li><p>println() &#x3D; printf(”블라블라%d대충 욕\\n”)</p>\n</li>\n<li><p>객체</p>\n<ul>\n<li>우리가 프로그래밍으로 구현할 대상.</li>\n<li>프로그램을 구성하는 로직을 변수화, 함수화로 구분 하여서 서로 연관된 행위나 속성들을 그룹화 하는 것</li>\n<li>이런 데이터들을 서로 연결해서 객체라는 껍데기에 응집시키는 것</li>\n</ul>\n</li>\n<li><p>접근제한자</p>\n<ul>\n<li>private : 해당 클래스에서만 접근 가능(같은 패키지여도 접근불가)</li>\n<li>public : 어떤 클래스에서도 접근 가능</li>\n<li>default</li>\n<li>protected</li>\n</ul>\n</li>\n<li><p>class</p>\n<ul>\n<li>String 과 같은 참조형 데이터타입이다.</li>\n<li>class는 설계도와 같다.</li>\n<li>인스턴스화(생성) 해야 비로소 물리적인 구현으로 쓰여진다.</li>\n</ul>\n</li>\n<li><p>생성자</p>\n<ul>\n<li>접근제한자 class명(데이터타입 인풋명, 데이터타입 인풋명){ 본문 }</li>\n<li>객체를 인스턴스화(생성)하는 역할</li>\n<li>같은 클래스에는 적어도 하나 이상의 생성자가 있어야 하며, 자바에서는 생성자가 한개도 없으면 디폴트 생성자를 만든다.</li>\n<li>생성자가 하나라도 있으면 디폴트 생성자를 만들지 않는다.</li>\n<li>함수처럼 보이지만 리턴타입이 없고, 이름이 클래스명과 같다.</li>\n</ul>\n</li>\n</ul>","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"<h3 id=\"day0918\"><a href=\"#day0918\" class=\"headerlink\" title=\"day0918\"></a>day0918</h3>","more":"<h3 id=\"day0918\"><a href=\"#day0918\" class=\"headerlink\" title=\"day0918\"></a>day0918</h3><!-- excerpt -->\n\n<ul>\n<li><p>기본 자료형 8개</p>\n<ul>\n<li>논리형 - boolean</li>\n<li>문자형 - char</li>\n<li>정수형 - byte, short, int, long</li>\n<li>실수형 - float, double</li>\n</ul>\n</li>\n<li><p>println() 에서 ln은 line의 줄임말이다. 자기혼자 한 줄 차지하는문법. (html의 <div>와 같다)</p>\n</li>\n<li><p>printf()나 print()로 출력하면 옆으로 붙어서 나오는데 \\n (원화표시+n) 을 붙이면 줄바꿈이 된다.</p>\n</li>\n<li><p>println() &#x3D; printf(”블라블라%d대충 욕\\n”)</p>\n</li>\n<li><p>객체</p>\n<ul>\n<li>우리가 프로그래밍으로 구현할 대상.</li>\n<li>프로그램을 구성하는 로직을 변수화, 함수화로 구분 하여서 서로 연관된 행위나 속성들을 그룹화 하는 것</li>\n<li>이런 데이터들을 서로 연결해서 객체라는 껍데기에 응집시키는 것</li>\n</ul>\n</li>\n<li><p>접근제한자</p>\n<ul>\n<li>private : 해당 클래스에서만 접근 가능(같은 패키지여도 접근불가)</li>\n<li>public : 어떤 클래스에서도 접근 가능</li>\n<li>default</li>\n<li>protected</li>\n</ul>\n</li>\n<li><p>class</p>\n<ul>\n<li>String 과 같은 참조형 데이터타입이다.</li>\n<li>class는 설계도와 같다.</li>\n<li>인스턴스화(생성) 해야 비로소 물리적인 구현으로 쓰여진다.</li>\n</ul>\n</li>\n<li><p>생성자</p>\n<ul>\n<li>접근제한자 class명(데이터타입 인풋명, 데이터타입 인풋명){ 본문 }</li>\n<li>객체를 인스턴스화(생성)하는 역할</li>\n<li>같은 클래스에는 적어도 하나 이상의 생성자가 있어야 하며, 자바에서는 생성자가 한개도 없으면 디폴트 생성자를 만든다.</li>\n<li>생성자가 하나라도 있으면 디폴트 생성자를 만들지 않는다.</li>\n<li>함수처럼 보이지만 리턴타입이 없고, 이름이 클래스명과 같다.</li>\n</ul>\n</li>\n</ul>\n"},{"title":"STS3 이클립스 GitHub 설정","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","metaAlignment":"center","date":"2022-10-16T13:10:20.000Z","_content":"\n### STS와 GitHub를 연동해보자.\n<!-- excerpt -->\n\n- 계정 → Settings → 맨 밑에 Developer Settings → Personal access tokens → Generate new tokens → Expiration(제한기간) No Expiration 으로 변경 → 모든 권한 체크 후 이름적고 만들기 → **무슨 코드 나오는데 이 코드 꼭!! 기억해놓기**\n    \n    ![Untitled](/images/STS3_Github/Untitled.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%201.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%202.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%203.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%204.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%205.png)\n    \n- 새 리포지터리 만들기 → Add .gitignore : 무시할 파일 즉, GitHub에 올라가면 안되는 것들 여기서는 JAVA 설정. → Choose License : 공짜로 라이센스를 쓸 경우 출처를 나타내야 하는데 이때 쓰는 것 → 만들기\n    \n    ![Untitled](/images/STS3_Github/Untitled%206.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%207.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%208.png)\n    \n\n- 새 레포지토리 주소 복사 → SourceTree 앱 실행 → 새 탭에서 Clone → 맨 위의 탐색 옆에 주소붙여넣고 탐색 누르기 → 두 번째 탐색으로 저장할 경로 지정 → 연습용 폴더 만들고 폴더 선택 하고 클론\n    \n    ![Untitled](/images/STS3_Github/Untitled%209.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%2010.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%2011.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%2012.png)\n    \n- 새 파일 아무거나 하나 만들고 커밋(밑에 “origin/main에 바뀐 내용 즉시 푸시” 를 체크하면 푸시까지 자동으로 됨) → 커밋만 했을 경우 푸시도 하라고 Push알림에 1이 떠있음\n    \n    ![Untitled](/images/STS3_Github/Untitled%2013.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%2014.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%2015.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%2016.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%2017.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%2018.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%2019.png)\n    \n- 이렇게 경로가 나뉘었을때 Push 하려고 하면 에러가 나온다.\n    - 왜? → 현재는 ‘첫번째 커밋’ 이 올라가있는데 ‘체크 풀고 커밋’ 을 등록하려고 하면 충돌이 생기기 때문에\n- ‘체크 풀고 커밋’ 에 체크아웃(해당시점으로 이동) 한 후에 병합을 진행하면 다음처럼 병합된다.\n    \n    ![Untitled](/images/STS3_Github/Untitled%2020.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%2021.png)\n    \n- 우리는 Clone 을 했기 때문에 자동으로 Push 에 링크가 들어가있다. → 만약 다른 사람꺼 받은 상태에서 Push 하려면 Push 탭 가서 링크 복붙\n    \n    ![Untitled](/images/STS3_Github/Untitled%2022.png)\n    \n\n- Public : GitHub 주소만 알면 누구나 소스를 볼 수 있다.\n    - 누구나 Clone 은 할 수 있지만\n    - 누구나 Push할 수 있는 권한이 있는 건 아니다.\n    - 만든사람이 해당 레포짓의 Settings / Collaborators 에서 Add People 누르고 GitHub 계정을 추가하면 된다.\n        \n        ![Untitled](/images/STS3_Github/Untitled%2023.png)\n        \n    \n\n---\n\n## STS 에서 바로 깃헙으로 올리기\n\n- STS 에서 Git의 관점으로 보기 위해서 Window → Perspective → Open Perspective → Other 에서 Git 클릭\n    \n    ![Untitled](/images/STS3_Github/Untitled%2024.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%2025.png)\n    \n- … 3개표시(더보기) 클릭 → Create Repository → 내가 올릴 폴더로 선택 → Branch name 바꿔서 Create 클릭\n    \n    ![Untitled](/images/STS3_Github/Untitled%2026.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%2027.png)\n    \n\n- 우리가 만든 레포는 로컬에만 있고 Java에는 연동이 안 되어 있기 때문에 우클릭 → Import로 Java와 연동을 시켜준다\n    \n    ![Untitled](/images/STS3_Github/Untitled%2028.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%2029.png)\n    \n- 다시 오른쪽위에 JAVA 관점으로 돌아와서 → 내가 올리려고 했던 폴더에 우클릭\n    \n    ![Untitled](/images/STS3_Github/Untitled%2030.png)\n    \n\n- Team → Add to Index\n    \n    ![Untitled](/images/STS3_Github/Untitled%2031.png)\n    \n\n- 다시 Team → Comit 을 누르면 오른쪽에 Commit Message 작성\n    \n    ![Untitled](/images/STS3_Github/Untitled%2032.png)\n    \n- Commit and Push 클릭\n    \n    ![Untitled](/images/STS3_Github/Untitled%2033.png)\n    \n\n- URI 에 내가 올릴 GitHub Repository 주소 복붙\n    \n    ![Untitled](/images/STS3_Github/Untitled%2034.png)\n    \n\n- Authentication 에는 User 에 아이디 적고\n    \n    Password 에는 아까 맨위에서 중요하다고 한 token 코드를 복붙 \n    \n    ![Untitled](/images/STS3_Github/Untitled%2035.png)\n    \n\n- 다음 → Push → 하면GitHub에 내가 만든 패키지 올라감\n    \n    ![Untitled](/images/STS3_Github/Untitled%2036.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%2037.png)\n    \n- 이렇게 하면 “First_Remote_Practice” 폴더의 내용이 “Practice1” GitHub 레포에 올라가게 된다. 즉, 폴더의 이름과 깃허브 레포의 이름이 달라도 상관없다\n    \n    \n\n---\n\n### 겪은 에러\n\n- 만약 Push 과정에서 ‘Rejected non fast forward’ 에러가 뜬다면\n    \n    공통분모가 없어서 아예 관련이 없는 두 저장소를 병합한다는 뜻이므로\n    \n    Pull 로 기존의 레포와 합친 후 수정해서 Push 하면 해결된다.","source":"_posts/STS3 이클립스 GitHub 설정.md","raw":"---\ntitle: \"STS3 이클립스 GitHub 설정\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: Java\nmetaAlignment: center\ndate: '2022-10-16 22:10:20'\n---\n\n### STS와 GitHub를 연동해보자.\n<!-- excerpt -->\n\n- 계정 → Settings → 맨 밑에 Developer Settings → Personal access tokens → Generate new tokens → Expiration(제한기간) No Expiration 으로 변경 → 모든 권한 체크 후 이름적고 만들기 → **무슨 코드 나오는데 이 코드 꼭!! 기억해놓기**\n    \n    ![Untitled](/images/STS3_Github/Untitled.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%201.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%202.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%203.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%204.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%205.png)\n    \n- 새 리포지터리 만들기 → Add .gitignore : 무시할 파일 즉, GitHub에 올라가면 안되는 것들 여기서는 JAVA 설정. → Choose License : 공짜로 라이센스를 쓸 경우 출처를 나타내야 하는데 이때 쓰는 것 → 만들기\n    \n    ![Untitled](/images/STS3_Github/Untitled%206.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%207.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%208.png)\n    \n\n- 새 레포지토리 주소 복사 → SourceTree 앱 실행 → 새 탭에서 Clone → 맨 위의 탐색 옆에 주소붙여넣고 탐색 누르기 → 두 번째 탐색으로 저장할 경로 지정 → 연습용 폴더 만들고 폴더 선택 하고 클론\n    \n    ![Untitled](/images/STS3_Github/Untitled%209.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%2010.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%2011.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%2012.png)\n    \n- 새 파일 아무거나 하나 만들고 커밋(밑에 “origin/main에 바뀐 내용 즉시 푸시” 를 체크하면 푸시까지 자동으로 됨) → 커밋만 했을 경우 푸시도 하라고 Push알림에 1이 떠있음\n    \n    ![Untitled](/images/STS3_Github/Untitled%2013.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%2014.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%2015.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%2016.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%2017.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%2018.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%2019.png)\n    \n- 이렇게 경로가 나뉘었을때 Push 하려고 하면 에러가 나온다.\n    - 왜? → 현재는 ‘첫번째 커밋’ 이 올라가있는데 ‘체크 풀고 커밋’ 을 등록하려고 하면 충돌이 생기기 때문에\n- ‘체크 풀고 커밋’ 에 체크아웃(해당시점으로 이동) 한 후에 병합을 진행하면 다음처럼 병합된다.\n    \n    ![Untitled](/images/STS3_Github/Untitled%2020.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%2021.png)\n    \n- 우리는 Clone 을 했기 때문에 자동으로 Push 에 링크가 들어가있다. → 만약 다른 사람꺼 받은 상태에서 Push 하려면 Push 탭 가서 링크 복붙\n    \n    ![Untitled](/images/STS3_Github/Untitled%2022.png)\n    \n\n- Public : GitHub 주소만 알면 누구나 소스를 볼 수 있다.\n    - 누구나 Clone 은 할 수 있지만\n    - 누구나 Push할 수 있는 권한이 있는 건 아니다.\n    - 만든사람이 해당 레포짓의 Settings / Collaborators 에서 Add People 누르고 GitHub 계정을 추가하면 된다.\n        \n        ![Untitled](/images/STS3_Github/Untitled%2023.png)\n        \n    \n\n---\n\n## STS 에서 바로 깃헙으로 올리기\n\n- STS 에서 Git의 관점으로 보기 위해서 Window → Perspective → Open Perspective → Other 에서 Git 클릭\n    \n    ![Untitled](/images/STS3_Github/Untitled%2024.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%2025.png)\n    \n- … 3개표시(더보기) 클릭 → Create Repository → 내가 올릴 폴더로 선택 → Branch name 바꿔서 Create 클릭\n    \n    ![Untitled](/images/STS3_Github/Untitled%2026.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%2027.png)\n    \n\n- 우리가 만든 레포는 로컬에만 있고 Java에는 연동이 안 되어 있기 때문에 우클릭 → Import로 Java와 연동을 시켜준다\n    \n    ![Untitled](/images/STS3_Github/Untitled%2028.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%2029.png)\n    \n- 다시 오른쪽위에 JAVA 관점으로 돌아와서 → 내가 올리려고 했던 폴더에 우클릭\n    \n    ![Untitled](/images/STS3_Github/Untitled%2030.png)\n    \n\n- Team → Add to Index\n    \n    ![Untitled](/images/STS3_Github/Untitled%2031.png)\n    \n\n- 다시 Team → Comit 을 누르면 오른쪽에 Commit Message 작성\n    \n    ![Untitled](/images/STS3_Github/Untitled%2032.png)\n    \n- Commit and Push 클릭\n    \n    ![Untitled](/images/STS3_Github/Untitled%2033.png)\n    \n\n- URI 에 내가 올릴 GitHub Repository 주소 복붙\n    \n    ![Untitled](/images/STS3_Github/Untitled%2034.png)\n    \n\n- Authentication 에는 User 에 아이디 적고\n    \n    Password 에는 아까 맨위에서 중요하다고 한 token 코드를 복붙 \n    \n    ![Untitled](/images/STS3_Github/Untitled%2035.png)\n    \n\n- 다음 → Push → 하면GitHub에 내가 만든 패키지 올라감\n    \n    ![Untitled](/images/STS3_Github/Untitled%2036.png)\n    \n    ![Untitled](/images/STS3_Github/Untitled%2037.png)\n    \n- 이렇게 하면 “First_Remote_Practice” 폴더의 내용이 “Practice1” GitHub 레포에 올라가게 된다. 즉, 폴더의 이름과 깃허브 레포의 이름이 달라도 상관없다\n    \n    \n\n---\n\n### 겪은 에러\n\n- 만약 Push 과정에서 ‘Rejected non fast forward’ 에러가 뜬다면\n    \n    공통분모가 없어서 아예 관련이 없는 두 저장소를 병합한다는 뜻이므로\n    \n    Pull 로 기존의 레포와 합친 후 수정해서 Push 하면 해결된다.","slug":"STS3 이클립스 GitHub 설정","published":1,"updated":"2022-10-17T13:36:04.691Z","_id":"cl9bdbx5s0000ccu0cpnag4m7","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n<ul>\n<li><p>계정 → Settings → 맨 밑에 Developer Settings → Personal access tokens → Generate new tokens → Expiration(제한기간) No Expiration 으로 변경 → 모든 권한 체크 후 이름적고 만들기 → <strong>무슨 코드 나오는데 이 코드 꼭!! 기억해놓기</strong></p>\n<p>  <img src=\"/images/STS3_Github/Untitled.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%201.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%202.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%203.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%204.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%205.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>새 리포지터리 만들기 → Add .gitignore : 무시할 파일 즉, GitHub에 올라가면 안되는 것들 여기서는 JAVA 설정. → Choose License : 공짜로 라이센스를 쓸 경우 출처를 나타내야 하는데 이때 쓰는 것 → 만들기</p>\n<p>  <img src=\"/images/STS3_Github/Untitled%206.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%207.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%208.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>새 레포지토리 주소 복사 → SourceTree 앱 실행 → 새 탭에서 Clone → 맨 위의 탐색 옆에 주소붙여넣고 탐색 누르기 → 두 번째 탐색으로 저장할 경로 지정 → 연습용 폴더 만들고 폴더 선택 하고 클론</p>\n<p>  <img src=\"/images/STS3_Github/Untitled%209.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2010.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2011.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2012.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>새 파일 아무거나 하나 만들고 커밋(밑에 “origin&#x2F;main에 바뀐 내용 즉시 푸시” 를 체크하면 푸시까지 자동으로 됨) → 커밋만 했을 경우 푸시도 하라고 Push알림에 1이 떠있음</p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2013.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2014.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2015.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2016.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2017.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2018.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2019.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>이렇게 경로가 나뉘었을때 Push 하려고 하면 에러가 나온다.</p>\n<ul>\n<li>왜? → 현재는 ‘첫번째 커밋’ 이 올라가있는데 ‘체크 풀고 커밋’ 을 등록하려고 하면 충돌이 생기기 때문에</li>\n</ul>\n</li>\n<li><p>‘체크 풀고 커밋’ 에 체크아웃(해당시점으로 이동) 한 후에 병합을 진행하면 다음처럼 병합된다.</p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2020.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2021.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>우리는 Clone 을 했기 때문에 자동으로 Push 에 링크가 들어가있다. → 만약 다른 사람꺼 받은 상태에서 Push 하려면 Push 탭 가서 링크 복붙</p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2022.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>Public : GitHub 주소만 알면 누구나 소스를 볼 수 있다.</p>\n<ul>\n<li><p>누구나 Clone 은 할 수 있지만</p>\n</li>\n<li><p>누구나 Push할 수 있는 권한이 있는 건 아니다.</p>\n</li>\n<li><p>만든사람이 해당 레포짓의 Settings &#x2F; Collaborators 에서 Add People 누르고 GitHub 계정을 추가하면 된다.</p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2023.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"STS-에서-바로-깃헙으로-올리기\"><a href=\"#STS-에서-바로-깃헙으로-올리기\" class=\"headerlink\" title=\"STS 에서 바로 깃헙으로 올리기\"></a>STS 에서 바로 깃헙으로 올리기</h2><ul>\n<li><p>STS 에서 Git의 관점으로 보기 위해서 Window → Perspective → Open Perspective → Other 에서 Git 클릭</p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2024.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2025.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>… 3개표시(더보기) 클릭 → Create Repository → 내가 올릴 폴더로 선택 → Branch name 바꿔서 Create 클릭</p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2026.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2027.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>우리가 만든 레포는 로컬에만 있고 Java에는 연동이 안 되어 있기 때문에 우클릭 → Import로 Java와 연동을 시켜준다</p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2028.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2029.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>다시 오른쪽위에 JAVA 관점으로 돌아와서 → 내가 올리려고 했던 폴더에 우클릭</p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2030.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>Team → Add to Index</p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2031.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>다시 Team → Comit 을 누르면 오른쪽에 Commit Message 작성</p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2032.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>Commit and Push 클릭</p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2033.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>URI 에 내가 올릴 GitHub Repository 주소 복붙</p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2034.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>Authentication 에는 User 에 아이디 적고</p>\n<p>  Password 에는 아까 맨위에서 중요하다고 한 token 코드를 복붙 </p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2035.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>다음 → Push → 하면GitHub에 내가 만든 패키지 올라감</p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2036.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2037.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>이렇게 하면 “First_Remote_Practice” 폴더의 내용이 “Practice1” GitHub 레포에 올라가게 된다. 즉, 폴더의 이름과 깃허브 레포의 이름이 달라도 상관없다</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"겪은-에러\"><a href=\"#겪은-에러\" class=\"headerlink\" title=\"겪은 에러\"></a>겪은 에러</h3><ul>\n<li><p>만약 Push 과정에서 ‘Rejected non fast forward’ 에러가 뜬다면</p>\n<p>  공통분모가 없어서 아예 관련이 없는 두 저장소를 병합한다는 뜻이므로</p>\n<p>  Pull 로 기존의 레포와 합친 후 수정해서 Push 하면 해결된다.</p>\n</li>\n</ul>","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"<h3 id=\"STS와-GitHub를-연동해보자\"><a href=\"#STS와-GitHub를-연동해보자\" class=\"headerlink\" title=\"STS와 GitHub를 연동해보자.\"></a>STS와 GitHub를 연동해보자.</h3>","more":"<h3 id=\"STS와-GitHub를-연동해보자\"><a href=\"#STS와-GitHub를-연동해보자\" class=\"headerlink\" title=\"STS와 GitHub를 연동해보자.\"></a>STS와 GitHub를 연동해보자.</h3><!-- excerpt -->\n\n<ul>\n<li><p>계정 → Settings → 맨 밑에 Developer Settings → Personal access tokens → Generate new tokens → Expiration(제한기간) No Expiration 으로 변경 → 모든 권한 체크 후 이름적고 만들기 → <strong>무슨 코드 나오는데 이 코드 꼭!! 기억해놓기</strong></p>\n<p>  <img src=\"/images/STS3_Github/Untitled.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%201.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%202.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%203.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%204.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%205.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>새 리포지터리 만들기 → Add .gitignore : 무시할 파일 즉, GitHub에 올라가면 안되는 것들 여기서는 JAVA 설정. → Choose License : 공짜로 라이센스를 쓸 경우 출처를 나타내야 하는데 이때 쓰는 것 → 만들기</p>\n<p>  <img src=\"/images/STS3_Github/Untitled%206.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%207.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%208.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>새 레포지토리 주소 복사 → SourceTree 앱 실행 → 새 탭에서 Clone → 맨 위의 탐색 옆에 주소붙여넣고 탐색 누르기 → 두 번째 탐색으로 저장할 경로 지정 → 연습용 폴더 만들고 폴더 선택 하고 클론</p>\n<p>  <img src=\"/images/STS3_Github/Untitled%209.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2010.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2011.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2012.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>새 파일 아무거나 하나 만들고 커밋(밑에 “origin&#x2F;main에 바뀐 내용 즉시 푸시” 를 체크하면 푸시까지 자동으로 됨) → 커밋만 했을 경우 푸시도 하라고 Push알림에 1이 떠있음</p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2013.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2014.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2015.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2016.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2017.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2018.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2019.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>이렇게 경로가 나뉘었을때 Push 하려고 하면 에러가 나온다.</p>\n<ul>\n<li>왜? → 현재는 ‘첫번째 커밋’ 이 올라가있는데 ‘체크 풀고 커밋’ 을 등록하려고 하면 충돌이 생기기 때문에</li>\n</ul>\n</li>\n<li><p>‘체크 풀고 커밋’ 에 체크아웃(해당시점으로 이동) 한 후에 병합을 진행하면 다음처럼 병합된다.</p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2020.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2021.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>우리는 Clone 을 했기 때문에 자동으로 Push 에 링크가 들어가있다. → 만약 다른 사람꺼 받은 상태에서 Push 하려면 Push 탭 가서 링크 복붙</p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2022.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>Public : GitHub 주소만 알면 누구나 소스를 볼 수 있다.</p>\n<ul>\n<li><p>누구나 Clone 은 할 수 있지만</p>\n</li>\n<li><p>누구나 Push할 수 있는 권한이 있는 건 아니다.</p>\n</li>\n<li><p>만든사람이 해당 레포짓의 Settings &#x2F; Collaborators 에서 Add People 누르고 GitHub 계정을 추가하면 된다.</p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2023.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"STS-에서-바로-깃헙으로-올리기\"><a href=\"#STS-에서-바로-깃헙으로-올리기\" class=\"headerlink\" title=\"STS 에서 바로 깃헙으로 올리기\"></a>STS 에서 바로 깃헙으로 올리기</h2><ul>\n<li><p>STS 에서 Git의 관점으로 보기 위해서 Window → Perspective → Open Perspective → Other 에서 Git 클릭</p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2024.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2025.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>… 3개표시(더보기) 클릭 → Create Repository → 내가 올릴 폴더로 선택 → Branch name 바꿔서 Create 클릭</p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2026.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2027.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>우리가 만든 레포는 로컬에만 있고 Java에는 연동이 안 되어 있기 때문에 우클릭 → Import로 Java와 연동을 시켜준다</p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2028.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2029.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>다시 오른쪽위에 JAVA 관점으로 돌아와서 → 내가 올리려고 했던 폴더에 우클릭</p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2030.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>Team → Add to Index</p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2031.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>다시 Team → Comit 을 누르면 오른쪽에 Commit Message 작성</p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2032.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>Commit and Push 클릭</p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2033.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>URI 에 내가 올릴 GitHub Repository 주소 복붙</p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2034.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>Authentication 에는 User 에 아이디 적고</p>\n<p>  Password 에는 아까 맨위에서 중요하다고 한 token 코드를 복붙 </p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2035.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>다음 → Push → 하면GitHub에 내가 만든 패키지 올라감</p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2036.png\" alt=\"Untitled\"></p>\n<p>  <img src=\"/images/STS3_Github/Untitled%2037.png\" alt=\"Untitled\"></p>\n</li>\n<li><p>이렇게 하면 “First_Remote_Practice” 폴더의 내용이 “Practice1” GitHub 레포에 올라가게 된다. 즉, 폴더의 이름과 깃허브 레포의 이름이 달라도 상관없다</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"겪은-에러\"><a href=\"#겪은-에러\" class=\"headerlink\" title=\"겪은 에러\"></a>겪은 에러</h3><ul>\n<li><p>만약 Push 과정에서 ‘Rejected non fast forward’ 에러가 뜬다면</p>\n<p>  공통분모가 없어서 아예 관련이 없는 두 저장소를 병합한다는 뜻이므로</p>\n<p>  Pull 로 기존의 레포와 합친 후 수정해서 Push 하면 해결된다.</p>\n</li>\n</ul>\n"},{"title":"STS 테마 다운로드 에러 해결","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","metaAlignment":"center","date":"2022-10-17T13:34:20.000Z","_content":"\n- STS3 에서 dark theme 를 다운받으려고 하는데 에러가 났을 때 해결방법이다.\n<!-- excerpt -->\n\n\n- Window 탭 → Preferences → Install/Update → 맨 밑의 Verify provisioning 체크 해제\n\n  ![Untitled](/images/1017/Untitled.png)","source":"_posts/STS 테마 다운로드 에러 해결.md","raw":"---\ntitle: \"STS 테마 다운로드 에러 해결\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: Java\nmetaAlignment: center\ndate: '2022-10-17 22:34:20'\n---\n\n- STS3 에서 dark theme 를 다운받으려고 하는데 에러가 났을 때 해결방법이다.\n<!-- excerpt -->\n\n\n- Window 탭 → Preferences → Install/Update → 맨 밑의 Verify provisioning 체크 해제\n\n  ![Untitled](/images/1017/Untitled.png)","slug":"STS 테마 다운로드 에러 해결","published":1,"updated":"2022-10-17T13:40:31.896Z","_id":"cl9ctkhzb000054u08eve85wp","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n</li>\n<li><p>Window 탭 → Preferences → Install&#x2F;Update → 맨 밑의 Verify provisioning 체크 해제</p>\n<p><img src=\"/images/1017/Untitled.png\" alt=\"Untitled\"></p>\n</li>\n</ul>","site":{"data":{}},"thumbnailImageUrl":null,"excerpt":"<ul>\n<li><p>STS3 에서 dark theme 를 다운받으려고 하는데 에러가 났을 때 해결방법이다.</p>","more":"<ul>\n<li><p>STS3 에서 dark theme 를 다운받으려고 하는데 에러가 났을 때 해결방법이다.</p>\n<!-- excerpt -->\n\n</li>\n<li><p>Window 탭 → Preferences → Install&#x2F;Update → 맨 밑의 Verify provisioning 체크 해제</p>\n<p><img src=\"/images/1017/Untitled.png\" alt=\"Untitled\"></p>\n</li>\n</ul>\n"},{"title":"Java 공부","output":{"html_document":{"keep_md":true}},"disqusIdentifier":"fdsF34ff34","metaAlignment":"center","thumbnailImage":"Java.png","thumbnailImagePosition":"left","autoThumbnailImage":"yes","clearReading":true,"coverImage":"wallpaper1.png","coverMeta":"out","coverSize":"full","date":"2022-10-11T15:19:21.000Z","_content":"\n오버로딩 / 오버라이딩 차이점은? \n<!-- excerpt -->\n\n오버라이딩 : 부모와 자식의 요소가 공통적이라면 자식의 요소를 불러온다.\n오버로딩 : 함수명이 같은데 변수형태가 다르면 그 변수형태에 맞는 함수를 불러온다.\n인터페이스 : class 와 비슷하지만 interface 안에는 필수요소를 집어넣는다.\n예) 동물에 이름/나이/몸무게 를 넣고 싶은데 이름/나이는 필수, 몸무게는 선택요소일 경우\n이름/나이는 interface 에 지정하고 몸무게는 class에 지정\n\n제네럴 : 자바는 데이터타입을 인스턴스로 만들때 결정 해줘야하지만,\n임의로 데이터타입을 지정해서 만들 수 있다.\n\nHashSet : 집합과 구조가 같음 / 정렬 안됨 /\nTreeSet : 집합과 구조가 같고 / 자동 정렬됨\nMap : 키와 값의 쌍\nforEach / Iterator : Map 함수로 만든 객체들을 사용해서 객체들의 값을 뽑아오는 함수.\n(지금은 눈에 안들어오지만 이런것들이 있다 정도 익혀두기. 구글링하다보면\n발견하게 되는데, 그때 사용할 수 있어야 함)\nkeySet : 위의 forEach / Iterator 와 똑같지만, 문법적으로 제일쉬워보이는 것","source":"_posts/Java 공부.md","raw":"---\ntitle: \"Java 공부\"\noutput:\n  html_document:\n    keep_md: true\ndisqusIdentifier: fdsF34ff34\ncategories: Java\nmetaAlignment: center\nthumbnailImage: Java.png\nthumbnailImagePosition: left\nautoThumbnailImage: yes\nclearReading: true\ncoverImage: wallpaper1.png\ncoverMeta: out\ncoverSize: full\ndate: '2022-10-12 00:19:21'\n---\n\n오버로딩 / 오버라이딩 차이점은? \n<!-- excerpt -->\n\n오버라이딩 : 부모와 자식의 요소가 공통적이라면 자식의 요소를 불러온다.\n오버로딩 : 함수명이 같은데 변수형태가 다르면 그 변수형태에 맞는 함수를 불러온다.\n인터페이스 : class 와 비슷하지만 interface 안에는 필수요소를 집어넣는다.\n예) 동물에 이름/나이/몸무게 를 넣고 싶은데 이름/나이는 필수, 몸무게는 선택요소일 경우\n이름/나이는 interface 에 지정하고 몸무게는 class에 지정\n\n제네럴 : 자바는 데이터타입을 인스턴스로 만들때 결정 해줘야하지만,\n임의로 데이터타입을 지정해서 만들 수 있다.\n\nHashSet : 집합과 구조가 같음 / 정렬 안됨 /\nTreeSet : 집합과 구조가 같고 / 자동 정렬됨\nMap : 키와 값의 쌍\nforEach / Iterator : Map 함수로 만든 객체들을 사용해서 객체들의 값을 뽑아오는 함수.\n(지금은 눈에 안들어오지만 이런것들이 있다 정도 익혀두기. 구글링하다보면\n발견하게 되는데, 그때 사용할 수 있어야 함)\nkeySet : 위의 forEach / Iterator 와 똑같지만, 문법적으로 제일쉬워보이는 것","slug":"Java 공부","published":1,"updated":"2023-04-15T21:12:07.098Z","_id":"clgig6eva0000x8u0fgi8gtui","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- excerpt -->\n\n<p>오버라이딩 : 부모와 자식의 요소가 공통적이라면 자식의 요소를 불러온다.<br>오버로딩 : 함수명이 같은데 변수형태가 다르면 그 변수형태에 맞는 함수를 불러온다.<br>인터페이스 : class 와 비슷하지만 interface 안에는 필수요소를 집어넣는다.<br>예) 동물에 이름&#x2F;나이&#x2F;몸무게 를 넣고 싶은데 이름&#x2F;나이는 필수, 몸무게는 선택요소일 경우<br>이름&#x2F;나이는 interface 에 지정하고 몸무게는 class에 지정</p>\n<p>제네럴 : 자바는 데이터타입을 인스턴스로 만들때 결정 해줘야하지만,<br>임의로 데이터타입을 지정해서 만들 수 있다.</p>\n<p>HashSet : 집합과 구조가 같음 &#x2F; 정렬 안됨 &#x2F;<br>TreeSet : 집합과 구조가 같고 &#x2F; 자동 정렬됨<br>Map : 키와 값의 쌍<br>forEach &#x2F; Iterator : Map 함수로 만든 객체들을 사용해서 객체들의 값을 뽑아오는 함수.<br>(지금은 눈에 안들어오지만 이런것들이 있다 정도 익혀두기. 구글링하다보면<br>발견하게 되는데, 그때 사용할 수 있어야 함)<br>keySet : 위의 forEach &#x2F; Iterator 와 똑같지만, 문법적으로 제일쉬워보이는 것</p>","site":{"data":{}},"thumbnailImageUrl":"https://neewlife.github.io/2022/10/12/Java%20%EA%B3%B5%EB%B6%80/Java.png","excerpt":"<p>오버로딩 &#x2F; 오버라이딩 차이점은? </p>","more":"<p>오버로딩 &#x2F; 오버라이딩 차이점은? </p>\n<!-- excerpt -->\n\n<p>오버라이딩 : 부모와 자식의 요소가 공통적이라면 자식의 요소를 불러온다.<br>오버로딩 : 함수명이 같은데 변수형태가 다르면 그 변수형태에 맞는 함수를 불러온다.<br>인터페이스 : class 와 비슷하지만 interface 안에는 필수요소를 집어넣는다.<br>예) 동물에 이름&#x2F;나이&#x2F;몸무게 를 넣고 싶은데 이름&#x2F;나이는 필수, 몸무게는 선택요소일 경우<br>이름&#x2F;나이는 interface 에 지정하고 몸무게는 class에 지정</p>\n<p>제네럴 : 자바는 데이터타입을 인스턴스로 만들때 결정 해줘야하지만,<br>임의로 데이터타입을 지정해서 만들 수 있다.</p>\n<p>HashSet : 집합과 구조가 같음 &#x2F; 정렬 안됨 &#x2F;<br>TreeSet : 집합과 구조가 같고 &#x2F; 자동 정렬됨<br>Map : 키와 값의 쌍<br>forEach &#x2F; Iterator : Map 함수로 만든 객체들을 사용해서 객체들의 값을 뽑아오는 함수.<br>(지금은 눈에 안들어오지만 이런것들이 있다 정도 익혀두기. 구글링하다보면<br>발견하게 되는데, 그때 사용할 수 있어야 함)<br>keySet : 위의 forEach &#x2F; Iterator 와 똑같지만, 문법적으로 제일쉬워보이는 것</p>\n"}],"PostAsset":[{"_id":"source/_posts/0617/05.png","slug":"05.png","post":"cl5fh3s3j0000ywu06x0060ai","modified":0,"renderable":0},{"_id":"source/_posts/0620/R_logo.jpg","slug":"R_logo.jpg","post":"cl5fcok7f0001jku03841ftlr","modified":0,"renderable":0},{"_id":"source/_posts/PyCaret_Sample (1)/pycaret.png","slug":"pycaret.png","post":"cl5fcok7o000djku08w3t3vtw","modified":0,"renderable":0},{"_id":"source/_posts/PyQt5 Tutorial Basics/PyQt-Logo.wine.png","slug":"PyQt-Logo.wine.png","post":"cl5ny0rny00002gu0eloy50p7","modified":0,"renderable":0},{"_id":"source/_posts/Python 가상환경 설정방법/image.png","slug":"image.png","post":"cl5qdqk860001b4uo4ser5vp8","modified":0,"renderable":0},{"_id":"source/_posts/XGBoost_&_LightGBM/image.png","slug":"image.png","post":"cl5fcok7l0008jku0h7yu2j4v","modified":0,"renderable":0},{"_id":"source/_posts/curriculum/night.jpg","slug":"night.jpg","post":"cl5fcok7m000ajku023r4gfv0","modified":0,"renderable":0},{"_id":"source/_posts/day0617/R_logo.jpg","slug":"R_logo.jpg","post":"cl5fcok7m0009jku08i7ia4ml","modified":0,"renderable":0},{"_id":"source/_posts/day0620/R_logo.jpg","slug":"R_logo.jpg","post":"cl5fcok7q000hjku076p5fj3e","modified":0,"renderable":0},{"_id":"source/_posts/day0621/R_logo.jpg","slug":"R_logo.jpg","post":"cl5fcok7n000cjku04wh0fug7","modified":0,"renderable":0},{"_id":"source/_posts/day0621_dplyr/R_logo.jpg","slug":"R_logo.jpg","post":"cl5fcok7p000fjku0caw496ro","modified":0,"renderable":0},{"_id":"source/_posts/day0622/R_logo.jpg","slug":"R_logo.jpg","post":"cl5fcok7q000jjku0axef2d9u","modified":0,"renderable":0},{"_id":"source/_posts/day0622_1/R_logo.jpg","slug":"R_logo.jpg","post":"cl5fcok7r000kjku02wix373c","modified":0,"renderable":0},{"_id":"source/_posts/day0623/R_logo.jpg","slug":"R_logo.jpg","post":"cl5fcok7r000ljku09mjo32ra","modified":0,"renderable":0},{"_id":"source/_posts/day0706_1/image.png","slug":"image.png","post":"cl5fcok7y0013jku09s1gcyvr","modified":0,"renderable":0},{"_id":"source/_posts/day0719/oracle.png","slug":"oracle.png","post":"cl5rw18dx0000usuodtmtaq3k","modified":0,"renderable":0},{"_id":"source/_posts/lecture-in-humanedu/kaggle-logo.png","slug":"kaggle-logo.png","post":"cl5fdf8ou0000uou044ivbcoo","modified":0,"renderable":0},{"_id":"source/_posts/mental/R_logo.jpg","slug":"R_logo.jpg","post":"cl5fcok7y0015jku0coloh732","modified":0,"renderable":0},{"_id":"source/_posts/블로그 설정/seoul.jpg","slug":"seoul.jpg","post":"cl5fcok82001djku0bw0e0c9f","modified":0,"renderable":0},{"_id":"source/_posts/day0721/oracle.png","slug":"oracle.png","post":"cl5v09ms40002xwu06hpq2nti","modified":0,"renderable":0},{"_id":"source/_posts/1장_파이썬_프로그래밍의_기초_자료형/image.png","slug":"image.png","post":"cl5fcok7i0003jku04cnu3bym","modified":0,"renderable":0},{"_id":"source/_posts/day0627/python.png","slug":"python.png","post":"cl5fcok7r000mjku0829pdfnw","modified":0,"renderable":0},{"_id":"source/_posts/day0628/python.png","slug":"python.png","post":"cl5fcok7s000ojku0d6rsdkmv","modified":0,"renderable":0},{"_id":"source/_posts/day0629_ml/python.png","slug":"python.png","post":"cl5fcok7t000qjku0cu9x2s66","modified":0,"renderable":0},{"_id":"source/_posts/day0630_ch3/python.png","slug":"python.png","post":"cl5fcok7t000sjku0brpabwsw","modified":0,"renderable":0},{"_id":"source/_posts/day0629/python.png","slug":"python.png","post":"cl5fcok7u000ujku0hesoczfz","modified":0,"renderable":0},{"_id":"source/_posts/day0630_ml/python.png","slug":"python.png","post":"cl5fcok7u000vjku014vsgp0r","modified":0,"renderable":0},{"_id":"source/_posts/day0701_ch04/python.png","slug":"python.png","post":"cl5fcok7x000zjku0emsvfzsx","modified":0,"renderable":0},{"_id":"source/_posts/day0701_ch03/python.png","slug":"python.png","post":"cl5fcok7v000xjku0d6p71vpd","modified":0,"renderable":0},{"_id":"source/_posts/day0704/python.png","slug":"python.png","post":"cl5fcok7x0011jku0esw65bx9","modified":0,"renderable":0},{"_id":"source/_posts/day0720/oracle.png","slug":"oracle.png","post":"cl5v09ms20000xwu0axf07flc","modified":0,"renderable":0},{"_id":"source/_posts/Linux 설치/Linux.png","slug":"Linux.png","post":"cl63b8xi80000m8uo3ps23ji7","modified":0,"renderable":0},{"_id":"source/_posts/day0728/Linux.png","slug":"Linux.png","post":"cl661jpag0003ukuo0i40guby","modified":0,"renderable":0},{"_id":"source/_posts/day0729/Linux.png","slug":"Linux.png","post":"cl6a7l31j0000rguo524pd6dp","modified":0,"renderable":0},{"_id":"source/_posts/day0731_Spark/Linux.png","slug":"Linux.png","post":"cl6a7l31n0001rguoa6vtgc01","modified":0,"renderable":0},{"_id":"source/_posts/Crawling_Practice/Linux.png","slug":"Linux.png","post":"cl661jpab0000ukuo8la8go4g","modified":0,"renderable":0},{"_id":"source/_posts/day0801Heroku/python.png","slug":"python.png","post":"cl6afr8xx000040uoe43wc8um","modified":0,"renderable":0},{"_id":"source/_posts/머신러닝 해보기/python.png","slug":"python.png","post":"cl6fpo6qy0000jguociqd6hjb","modified":0,"renderable":0},{"_id":"source/_posts/day0805/python.png","slug":"python.png","post":"cl6hwujn10000zcu0bmdw9t59","modified":0,"renderable":0},{"_id":"source/_posts/day0806 Git 잔디심기 오류해결/Github.png","slug":"Github.png","post":"cl6iue5er0000cou0hvsxer4o","modified":0,"renderable":0},{"_id":"source/_posts/day0628_1/python.png","slug":"python.png","post":"cl7a2g8lq0001t8uo5jpj707o","modified":0,"renderable":0},{"_id":"source/_posts/대시보드/python.png","slug":"python.png","post":"cl7a2g8m20005t8uo4bjf477r","modified":0,"renderable":0},{"_id":"source/_posts/day0903/heroku.png","slug":"heroku.png","post":"cl7rh8gwp0001c0u0f1j3197h","modified":0,"renderable":0},{"_id":"source/_posts/Java 공부/Java.png","slug":"Java.png","post":"clgig6eva0000x8u0fgi8gtui","modified":0,"renderable":0},{"_id":"source/_posts/Java 공부/wallpaper1.png","slug":"wallpaper1.png","post":"clgig6eva0000x8u0fgi8gtui","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cl5fcok7i0003jku04cnu3bym","category_id":"cl5fcok7k0006jku0hos04gdq","_id":"cl5fcok7p000ejku0dtw6fur2"},{"post_id":"cl5fcok7l0008jku0h7yu2j4v","category_id":"cl5fcok7n000bjku04u5gdwzo","_id":"cl5fcok7q000ijku0alnd0y8o"},{"post_id":"cl5fcok7o000djku08w3t3vtw","category_id":"cl5fcok7p000gjku0g9su8wpp","_id":"cl5fcok7s000njku01qv9153c"},{"post_id":"cl5fcok7s000ojku0d6rsdkmv","category_id":"cl5fcok7p000gjku0g9su8wpp","_id":"cl5fcok7t000tjku0c1ibgzc5"},{"post_id":"cl5fcok7t000sjku0brpabwsw","category_id":"cl5fcok7p000gjku0g9su8wpp","_id":"cl5fcok7x000yjku0gscb2jxz"},{"post_id":"cl5fcok7u000ujku0hesoczfz","category_id":"cl5fcok7p000gjku0g9su8wpp","_id":"cl5fcok7x0010jku084m93qx6"},{"post_id":"cl5fcok7u000vjku014vsgp0r","category_id":"cl5fcok7p000gjku0g9su8wpp","_id":"cl5fcok7y0014jku00oje8uyv"},{"post_id":"cl5fcok7v000xjku0d6p71vpd","category_id":"cl5fcok7p000gjku0g9su8wpp","_id":"cl5fcok7z0016jku093ynd7i2"},{"post_id":"cl5fcok7t000qjku0cu9x2s66","category_id":"cl5fcok7t000rjku01hlb3qq5","_id":"cl5fcok7z0018jku09f73ceb6"},{"post_id":"cl5fcok7x000zjku0emsvfzsx","category_id":"cl5fcok7p000gjku0g9su8wpp","_id":"cl5fcok7z001ajku0c1mx6jxl"},{"post_id":"cl5fcok7x0011jku0esw65bx9","category_id":"cl5fcok7p000gjku0g9su8wpp","_id":"cl5fcok80001bjku0fgewdwn8"},{"post_id":"cl5fcok7y0013jku09s1gcyvr","category_id":"cl5fcok7p000gjku0g9su8wpp","_id":"cl5fcok80001cjku0g5dm6cu6"},{"post_id":"cl5fcok82001djku0bw0e0c9f","category_id":"cl5fcok83001ejku0039lcl8e","_id":"cl5fcok83001fjku0fe4qg6jn"},{"post_id":"cl5fdf8ou0000uou044ivbcoo","category_id":"cl5fcok7p000gjku0g9su8wpp","_id":"cl5fdf8ow0001uou06awr052e"},{"post_id":"cl5fcok7r000mjku0829pdfnw","category_id":"cl5fcok7p000gjku0g9su8wpp","_id":"cl5fgdunr0000d8u0gjahgjlh"},{"post_id":"cl5fcok7m000ajku023r4gfv0","category_id":"cl5fcok7p000gjku0g9su8wpp","_id":"cl5fh3s3u0005ywu03rxg86yc"},{"post_id":"cl5fcok7p000fjku0caw496ro","category_id":"cl5fh3s3r0002ywu09ouh5a3m","_id":"cl5fh3s3v0006ywu0dnh8fefp"},{"post_id":"cl5fcok7f0001jku03841ftlr","category_id":"cl5fh3s3r0002ywu09ouh5a3m","_id":"cl5fh3s3v0007ywu0h2fhbnqy"},{"post_id":"cl5fcok7n000cjku04wh0fug7","category_id":"cl5fh3s3r0002ywu09ouh5a3m","_id":"cl5fh3s3w0008ywu05dgb2grt"},{"post_id":"cl5fcok7q000jjku0axef2d9u","category_id":"cl5fh3s3r0002ywu09ouh5a3m","_id":"cl5fh3s3w0009ywu05g98aaev"},{"post_id":"cl5fcok7m0009jku08i7ia4ml","category_id":"cl5fh3s3r0002ywu09ouh5a3m","_id":"cl5fh3s3x000aywu0efi7a1a5"},{"post_id":"cl5fcok7q000hjku076p5fj3e","category_id":"cl5fh3s3r0002ywu09ouh5a3m","_id":"cl5fh3s3x000bywu0elvs7s9h"},{"post_id":"cl5fcok7r000kjku02wix373c","category_id":"cl5fh3s3r0002ywu09ouh5a3m","_id":"cl5fh3s3x000cywu0di7p70a2"},{"post_id":"cl5fcok7r000ljku09mjo32ra","category_id":"cl5fh3s3r0002ywu09ouh5a3m","_id":"cl5fh3s3y000dywu06225dbxm"},{"post_id":"cl5fh3s3j0000ywu06x0060ai","category_id":"cl5fcok83001ejku0039lcl8e","_id":"cl5fhh3710001t8u05v5p88bw"},{"post_id":"cl5fcok7y0015jku0coloh732","category_id":"cl5fh3s3r0002ywu09ouh5a3m","_id":"cl5fhvt8u0000j0u078a71byw"},{"post_id":"cl5ny0rny00002gu0eloy50p7","category_id":"cl5ny0ro200012gu0feeacb96","_id":"cl5ny0ro600022gu0dkk89mt4"},{"post_id":"cl5qdqk860001b4uo4ser5vp8","category_id":"cl5fcok7p000gjku0g9su8wpp","_id":"cl5qdqk870002b4uo73jf7uss"},{"post_id":"cl5qdqk8a0003b4uo1hikflk9","category_id":"cl5fcok83001ejku0039lcl8e","_id":"cl5qdqk8c0004b4uohn5qekw4"},{"post_id":"cl5rw18dx0000usuodtmtaq3k","category_id":"cl5rw18e30001usuo3xx19l33","_id":"cl5rw18ea0002usuoamn46q3f"},{"post_id":"cl5v09ms20000xwu0axf07flc","category_id":"cl5rw18e30001usuo3xx19l33","_id":"cl5v09ms30001xwu0fgc283cn"},{"post_id":"cl5v09ms40002xwu06hpq2nti","category_id":"cl5rw18e30001usuo3xx19l33","_id":"cl5v09ms60003xwu00qcs4g13"},{"post_id":"cl63b8xi80000m8uo3ps23ji7","category_id":"cl63b8xid0001m8uocjel4dri","_id":"cl63b8xir0002m8uo64vf75c7"},{"post_id":"cl661jpag0003ukuo0i40guby","category_id":"cl63b8xid0001m8uocjel4dri","_id":"cl661jpah0004ukuohom5hno8"},{"post_id":"cl661jpab0000ukuo8la8go4g","category_id":"cl63b8xid0001m8uocjel4dri","_id":"cl6a7l31p0002rguoaz4n096c"},{"post_id":"cl6a7l31j0000rguo524pd6dp","category_id":"cl63b8xid0001m8uocjel4dri","_id":"cl6a7l31p0003rguo0l4kafpm"},{"post_id":"cl6a7l31n0001rguoa6vtgc01","category_id":"cl63b8xid0001m8uocjel4dri","_id":"cl6a7l31q0004rguo4q7c9sxh"},{"post_id":"cl6afr8xx000040uoe43wc8um","category_id":"cl5fcok7p000gjku0g9su8wpp","_id":"cl6afr8y2000140uoh83n61hn"},{"post_id":"cl6fpo6qy0000jguociqd6hjb","category_id":"cl5fcok7p000gjku0g9su8wpp","_id":"cl6fpo6qz0001jguo2o0p2dxr"},{"post_id":"cl6hwujn10000zcu0bmdw9t59","category_id":"cl5fcok7p000gjku0g9su8wpp","_id":"cl6hwvapl0001zcu0aacv5sh9"},{"post_id":"cl6iue5er0000cou0hvsxer4o","category_id":"cl5fh3s3m0001ywu0d7670xe0","_id":"cl6iufbpl0002cou08zbc6tp4"},{"post_id":"cl6kt2lde0000nou06z7t9tqy","category_id":"cl6kt2ldf0001nou07uj24x3y","_id":"cl6kt2ldl0002nou0ecq5ffn4"},{"post_id":"cl7a2g8lq0001t8uo5jpj707o","category_id":"cl5fcok7t000rjku01hlb3qq5","_id":"cl7a2g8lt0002t8uo9k00d0xg"},{"post_id":"cl7a2g8lx0003t8uo4lf9gxmk","category_id":"cl6kt2ldf0001nou07uj24x3y","_id":"cl7a2g8ly0004t8uoa0pv2c0o"},{"post_id":"cl7a2g8m20005t8uo4bjf477r","category_id":"cl6kt2ldf0001nou07uj24x3y","_id":"cl7a2g8m30006t8uo0m897560"},{"post_id":"cl7rh8gwp0001c0u0f1j3197h","category_id":"cl6kt2ldf0001nou07uj24x3y","_id":"cl7rh8gwu0003c0u06p1mai92"},{"post_id":"cl7ujpuz60000n0u09dq22vux","category_id":"cl5fh3s3m0001ywu0d7670xe0","_id":"cl7ujpuz80001n0u02ewpf66c"},{"post_id":"cl7rh8gwo0000c0u0erorfcyt","category_id":"cl809s1xv0000agu02nuxdul4","_id":"cl809s1y20001agu09losgpge"},{"post_id":"cl809s1y20002agu05ds27sqe","category_id":"cl809s1xv0000agu02nuxdul4","_id":"cl809s1y30003agu00ro88vhq"},{"post_id":"cl8330ae10000wcu0681lhm0e","category_id":"cl809s1xv0000agu02nuxdul4","_id":"cl8330ae40001wcu08bvxcgt7"},{"post_id":"cl86tsavz0000v0u0chx72zhz","category_id":"cl7rh8gwq0002c0u06x0mde30","_id":"cl86tsaw20001v0u05rpy53wc"},{"post_id":"cl84jghkj00007ou0gnsif89u","category_id":"cl7rh8gwq0002c0u06x0mde30","_id":"cl86tsaw20002v0u0e62k9z8n"},{"post_id":"cl9bdbx5s0000ccu0cpnag4m7","category_id":"cl7rh8gwq0002c0u06x0mde30","_id":"cl9bdbx5v0001ccu0cwfo196k"},{"post_id":"cl9ctkhzb000054u08eve85wp","category_id":"cl7rh8gwq0002c0u06x0mde30","_id":"cl9ctkhzf000154u0avmf827j"},{"post_id":"clgig6eva0000x8u0fgi8gtui","category_id":"cl7rh8gwq0002c0u06x0mde30","_id":"clgig6evc0001x8u007kpbh4d"}],"PostTag":[],"Tag":[]}}